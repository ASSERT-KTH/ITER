bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  10.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  10.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));	  return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  *  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  10.0  *  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	compilable	  [FE]  AssertionFailedError  	143	6	replace
3	[BUG]  [BUGGY]  return  10.0  *  distribution.cumulativeProbability(chiSquare(expected,  observed));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  *  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  10.0  *  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	compilable	  [FE]  AssertionFailedError  	143	6	replace
4	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  [CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);	  return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])	143	None	replace
5	[BUG]  [BUGGY]  if(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
6	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  no  suitable  method  found  for  chiSquare(int,long)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  no  suitable  method  found  for  chiSquare(int,long)	113	None	replace
7	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  no  suitable  method  found  for  chiSquare(int,long)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[0]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  no  suitable  method  found  for  chiSquare(int,long)	113	None	replace
8	[BUG]  [BUGGY]  if(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[1]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[1]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[1]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
9	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	62	None	replace
10	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	62	None	replace
11	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(x,  observed.length);  [CE]  cannot  find  symbol  x  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(x,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(x,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed.length);    	non-compiled	[CE]  cannot  find  symbol  x	62	None	replace
12	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  x.length);  [CE]  cannot  find  symbol  x  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  x.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  x.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed.length);    	non-compiled	[CE]  cannot  find  symbol  x	62	None	replace
13	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  x,  observed).doubleValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  x,  observed).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution),  x,  observed).doubleValue();	  ((    ChiSquaredDistributionImpl)distribution),    x).doubleValue();    	non-compiled	[CE]  not  a  statement	138	None	replace
14	[BUG]  [BUGGY]  if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  1.0;  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    1.0;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	37	None	replace
15	[BUG]  [BUGGY]  if(observed)  {  if(expected[1]  ==  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[1]  ==  null)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[1]  ==  null)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]!=  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[0]!=  null)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]!=  null)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
17	[BUG]  [BUGGY]  if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	131	None	replace
18	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	131	None	replace
19	[BUG]  [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  not  a  statement  [FE]              MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  not  a  statement	71	None	replace
20	[BUG]  [BUGGY]  (CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  not  a  statement  [FE]                MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  not  a  statement	71	None	replace
21	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [CE]  missing  return  statement  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  missing  return  statement	71	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	98	6	add
23	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	98	6	add
24	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0	  	non-compiled	[CE]  ')'  expected	98	None	add
25	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length	  	non-compiled	[CE]  ')'  expected	98	None	add
26	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
27	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  2];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  2];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  2];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    /    2];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	95	None	replace
28	[BUG]  [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  observed.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    observed.cumulativeProbability(chiSquareTest(expected,    distribution));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
29	[BUG]  [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  observed),  distribution);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  observed),  distribution);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  observed),  distribution);	  return    1.0    -    observed.cumulativeProbability(chiSquareTest(expected,    distribution));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
30	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	94	None	replace
31	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	94	None	replace
32	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	94	None	replace
33	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  	non-compiled	[CE]  unreachable  statement	151	None	add
34	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  double[]  observed  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  double[]  observed  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    double[]  observed  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	151	None	add
35	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  long[]  observed  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]        StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  long[]  observed  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    long[]  observed  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	151	None	add
36	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
37	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
38	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  ')'  expected	167	None	replace
39	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  /  1.0);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  /  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  ')'  expected	167	None	replace
40	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl),  observed).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl),  observed).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl),  observed).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  ')'  expected	167	None	replace
41	[BUG]  [BUGGY]  if(observed!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
42	[BUG]  [BUGGY]  if(observed  ==  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  ==  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  ==  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
43	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  [CE]  inconvertible  types  [FE]                MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  inconvertible  types	72	None	replace
44	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  ditribution  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  ditribution	72	None	replace
45	[BUG]  [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  not  a  statement	30	None	replace
46	[BUG]  [BUGGY]  (CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  not  a  statement	30	None	replace
47	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1);  [CE]  cannot  find  symbol  [FE]        MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
48	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]          MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
49	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length  -  1);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length  -  1);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	64	None	replace
50	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  +  1);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  +  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  +  1);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1);    	non-compiled	[CE]  missing  return  statement	64	None	replace
51	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.numulativeProbability()  ];	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	40	None	replace
52	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.numulativeProbability()  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.numulativeProbability()  ];  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.numulativeProbability()  ];	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	40	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  2.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  2.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    ];    	compilable	  [FE]  AssertionFailedError  	40	6	replace
54	[BUG]  [BUGGY]  return  2.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  2.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  2.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    ];    	compilable	  [FE]  AssertionFailedError  	40	6	replace
55	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected    <    =    0.0)    {    return    1.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])	85	None	replace
56	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected    <    =    0.0)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
57	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected    <    =    0.0)    {    return    1.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])	85	None	replace
58	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  expected.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])  [FE]                  StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  expected.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  expected.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected    <    =    0.0)    {    return    1.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])	85	None	replace
59	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
60	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
61	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  0.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
62	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	136	None	replace
63	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	136	None	replace
64	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	136	None	replace
65	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  missing  return  statement	120	None	replace
66	[BUG]  [BUGGY]  if(observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  incompatible  types  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  incompatible  types	120	None	replace
67	[BUG]  [BUGGY]  return  1.0  /  reported.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  reported  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  reported.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  reported.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    observed.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  reported	21	None	replace
68	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
69	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])	41	None	replace
70	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
71	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
72	[BUG]  [BUGGY]  if(observed)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[1]  ==  observed)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
73	[BUG]  [BUGGY]  luate(distribution,  observed));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  luate(distribution,  observed));  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	luate(distribution,  observed));	  if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
74	[BUG]  [BUGGY]  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  incomparable  types:  double  and  long[]  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected[0]  ==  observed)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  incomparable  types:  double  and  long[]	109	None	replace
75	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  [CE]  missing  return  statement  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  missing  return  statement	66	None	replace
76	[BUG]  [BUGGY]  =(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  =(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	=(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    =(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
77	[BUG]  [BUGGY]  =(CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  =(CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	=(CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    =(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
79	[BUG]  [BUGGY]  if(observed.length  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed.length  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed.length  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
80	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed.length  -  1);	  this.distribution.setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  missing  return  statement	51	None	replace
81	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(),  observed);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  distribution.getDegreesOfFreedom(),  observed);	  long[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  ';'  expected	5	None	replace
82	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(null);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(null);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  distribution.getDegreesOfFreedom(null);	  long[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
83	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom()  /  2;  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom()  /  2;  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  distribution.getDegreesOfFreedom()  /  2;	  long[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
84	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
85	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  missing  return  statement	160	None	replace
86	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed))  *  1.0;  }  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed))  *  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed))  *  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  missing  return  statement	160	None	replace
87	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  /  observed);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  /  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  /  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0    -    observed);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	106	None	replace
88	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed,  observed);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0    -    observed);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	106	None	replace
89	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2  +  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2  +  1];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2  +  1];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    *    2];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	96	None	replace
90	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  4];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  4];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  4];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    *    2];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	96	None	replace
91	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  int  cannot  be  dereferenced	146	None	replace
92	[BUG]  [BUGGY]  while(observed!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  while(observed!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	while(observed!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
93	[BUG]  [BUGGY]  while(observed!=  null)  {  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  while(observed!=  null)  {  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	while(observed!=  null)  {  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
94	[BUG]  [BUGGY]  while(observed!=  null  &&  observed.length  >  0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  while(observed!=  null  &&  observed.length  >  0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	while(observed!=  null  &&  observed.length  >  0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
95	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue()  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue()  +  1;  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).doubleValue()  +  1;	  ((    ChiSquaredDistributionImpl)expected).doubleValue();    	non-compiled	[CE]  not  a  statement	80	None	replace
96	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue()  /  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue()  /  2;  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).doubleValue()  /  2;	  ((    ChiSquaredDistributionImpl)expected).doubleValue();    	non-compiled	[CE]  not  a  statement	80	None	replace
97	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue().doubleValue();  [CE]  inconvertible  types  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue().doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).doubleValue().doubleValue();	  ((    ChiSquaredDistributionImpl)expected).doubleValue();    	non-compiled	[CE]  inconvertible  types	80	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  1.0  /  this.distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    this.distribution.cumulativeProbability(chiSquare(expected,    observed));    	compilable	  [FE]  AssertionFailedError  	39	6	replace
99	[BUG]  [BUGGY]  return  1.0  /  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  this.distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    this.distribution.cumulativeProbability(chiSquare(expected,    observed));    	compilable	  [FE]  AssertionFailedError  	39	6	replace
100	[BUG]  [BUGGY]  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    this.distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  missing  return  statement	39	None	replace
101	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);	  double[]    observed    =    new    double[distribution.length    -    1].doubleValue();    distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	147	None	replace
102	[BUG]  [BUGGY]  long  observed  =  new  long[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long  observed  =  new  long[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long  observed  =  new  long[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);	  double[]    observed    =    new    double[distribution.length    -    1].doubleValue();    distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	147	None	replace
103	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.length  -  1].doubleValue();  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.length  -  1].doubleValue();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.length  -  1].doubleValue();	  double[]    observed    =    new    double[distribution.length    -    1].doubleValue();    distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	147	None	replace
104	[BUG]  [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length);  [CE]  package  This  does  not  exist  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	This.distribution.setDegreesOfFreedom(expected.length);	          this.distribution.setDegreesOfFreedom(expected.length);    This.distribution.setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  package  This  does  not  exist	48	None	replace
105	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  MaxIterationsExceededException  	65	6	add
106	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  MaxIterationsExceededException  	65	6	add
107	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	65	6	add
108	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	65	6	add
109	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [CE]  ')'  expected  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0	  	non-compiled	[CE]  ')'  expected	65	None	add
110	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  MaxIterationsExceededException  	65	6	add
111	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  MaxIterationsExceededException  	65	6	add
112	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	65	6	add
113	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	65	6	add
114	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
115	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x    *    observed;    }    	non-compiled	[CE]  missing  return  statement	157	None	replace
116	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  +  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  +  1];  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.numulativeProbability()  +  1];	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    +    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	43	None	replace
117	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  /  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  /  1];  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.numulativeProbability()  /  1];	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    +    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	43	None	replace
118	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed!=  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed!=  null)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(expected  ==  null)  {  if(observed!=  null)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
119	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed  ==  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed  ==  null)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(expected  ==  null)  {  if(observed  ==  null)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
120	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed  >=  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed  >=  null)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(expected  ==  null)  {  if(observed  >=  null)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
121	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed!=  null)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected  ==  null)  {  if(observed!=  null)  {  return  0.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(expected  ==  null)  {  if(observed!=  null)  {  return  0.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
122	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
123	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	76	None	replace
124	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	76	None	replace
125	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  x);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	76	None	replace
126	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1.0  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1.0  ];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1.0  ];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1.0    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	110	None	replace
127	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1.0  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1.0  ];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1.0  ];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1.0    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	110	None	replace
128	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1.0  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1.0  ];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1.0  ];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1.0    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	110	None	replace
129	[BUG]  [BUGGY]  return  1.0  -  expected.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  expected.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  expected.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distributed.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
130	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);  [CE]  missing  return  statement  [FE]          MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);    	non-compiled	[CE]  missing  return  statement	125	None	replace
131	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unobserved,  observed);  [CE]  cannot  find  symbol  unobserved  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unobserved,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unobserved,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  unobserved	55	None	replace
132	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed);  [CE]  cannot  find  symbol  normalized  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  normalized	55	None	replace
133	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  int  cannot  be  dereferenced	148	None	replace
134	[BUG]  [BUGGY]  while(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  while(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	while(observed!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
135	[BUG]  [BUGGY]  while(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  while(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	while(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
136	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  /  1.0);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed.length  /  1.0);	  this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	12	None	replace
137	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  *  1.0);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed.length  *  1.0);	  this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	12	None	replace
138	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length  *  2.0);	  this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  missing  return  statement	170	None	replace
139	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  /  2.0);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed.length  /  2.0);	  this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  missing  return  statement	170	None	replace
140	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	99	None	replace
141	[BUG]  [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  not  a  statement	17	None	replace
142	[BUG]  [BUGGY]  (CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(CiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  not  a  statement	17	None	replace
143	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  expected)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[0]  ==  expected)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  expected)  {  return  1.0;  }	  if(distribution    ==    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
144	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
145	[BUG]  [BUGGY]  if(observed)  {  if(expected[1]  ==  null)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[1]  ==  null)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[1]  ==  null)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
146	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(observed.length);  [CE]  inconvertible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  inconvertible  types	29	None	replace
147	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);  [CE]  cannot  find  symbol  ditribution  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  cannot  find  symbol  ditribution	29	None	replace
148	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(observed.length);  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  inconvertible  types	29	None	replace
149	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  inconvertible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  inconvertible  types	100	None	replace
150	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  ditribution  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  ditribution	100	None	replace
151	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(distribution.length  -  1.0);  [CE]  cannot  find  symbol  length  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(distribution.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(distribution.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	100	None	replace
152	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
153	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  <  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  missing  return  statement  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  <  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  <  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  missing  return  statement	162	None	replace
154	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [CE]  no  suitable  constructor  found  for  ChiSquareTestImpl(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareTestImpl.add(new    ChiSquareTestImpl(x),    observed);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquareTestImpl(int)	112	None	replace
155	[BUG]  [BUGGY]  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  [CE]  cannot  find  symbol  x  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareTestImpl.add(new    ChiSquareTestImpl(x),    observed);    }    	non-compiled	[CE]  cannot  find  symbol  x	112	None	replace
156	[BUG]  [BUGGY]  chiSquareTestImpl.add(new  ChiSquareTestImpl(expected,  observed));  [CE]  no  suitable  constructor  found  for  ChiSquareTestImpl(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  chiSquareTestImpl.add(new  ChiSquareTestImpl(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	chiSquareTestImpl.add(new  ChiSquareTestImpl(expected,  observed));	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareTestImpl.add(new    ChiSquareTestImpl(x),    observed);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquareTestImpl(double[],long[])	112	None	replace
157	[BUG]  [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed);  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  ')'  expected	44	None	replace
158	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed,  observed));  [CE]  no  suitable  method  found  for  chiSquare(double[],long[],long[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  no  suitable  method  found  for  chiSquare(double[],long[],long[])	44	None	replace
159	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(normalized.length  -  1);  [CE]  cannot  find  symbol  normalized  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(normalized.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(normalized.length  -  1);	  this.distribution.setDegreesOfFreedom(expected.length    -    1);    	non-compiled	[CE]  cannot  find  symbol  normalized	53	None	replace
160	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	166	None	replace
161	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0,  observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	166	None	replace
162	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
163	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
164	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
165	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
166	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
167	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
168	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
169	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
170	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
171	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);	  	compilable	  [FE]  AssertionFailedError  	101	6	add
173	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);	  	compilable	  [FE]  AssertionFailedError  	101	6	add
174	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0	  	non-compiled	[CE]  ')'  expected	101	None	add
175	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);	  	compilable	  [FE]  AssertionFailedError  	101	6	add
177	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);	  	compilable	  [FE]  AssertionFailedError  	101	6	add
178	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0,    observed);    	non-compiled	[CE]  ']'  expected	78	None	replace
179	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0,    observed);    	non-compiled	[CE]  ']'  expected	78	None	replace
180	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  missing  return  statement	91	None	replace
181	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	91	None	replace
182	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  0.0  ||  observed  >  1.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  0.0  ||  observed  >  1.0)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  0.0  ||  observed  >  1.0)  {  return  1.0;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected    <    =    0.0    ||    observed    >    1.0)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
183	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  =  0.0  ||  observed  >  1.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  =  0.0  ||  observed  >  1.0)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  =  0.0  ||  observed  >  1.0)  {  return  1.0;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected    <    =    0.0    ||    observed    >    1.0)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
184	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).doubleValue();  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).doubleValue();	  ((    ChiSquaredDistributionImpl)declaration).doubleValue();    	non-compiled	[CE]  inconvertible  types	164	None	replace
185	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	59	None	replace
186	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	61	None	replace
187	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed.length);  [CE]  cannot  find  symbol  x  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  cannot  find  symbol  x	61	None	replace
188	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  missing  return  statement	61	None	replace
189	[BUG]  [BUGGY]  if(observed!=  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed!=  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
190	[BUG]  [BUGGY]  if(observed  ==  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  ==  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  ==  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
191	[BUG]  [BUGGY]  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setSquaresOfFreedom(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setSquaresOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
192	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  false);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  false);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  false);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	133	None	replace
193	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  false);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  false);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  false);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	133	None	replace
194	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	54	None	replace
195	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	54	None	replace
196	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  x);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	54	None	replace
197	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    >=    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
198	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    >=    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
199	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	90	None	replace
200	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed.length  -  1.0);  [CE]  cannot  find  symbol  x  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  x	90	None	replace
201	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	90	None	replace
202	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	90	None	replace
203	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	58	None	replace
204	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  null);  [CE]  cannot  find  symbol  observe  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  observe	58	None	replace
205	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	58	None	replace
206	[BUG]  [BUGGY]  this.distribution.setDistribution(expected.length);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDistribution(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDistribution(expected.length);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDistribution(expected.length);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	  	compilable	  [FE]  AssertionFailedError  	27	6	add
208	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	  	compilable	  [FE]  AssertionFailedError  	27	6	add
209	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length	  	non-compiled	[CE]  ')'  expected	27	None	add
210	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed	  	non-compiled	[CE]  ')'  expected	27	None	add
211	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed  }  );  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    observed    }    );    	non-compiled	[CE]  incompatible  types	104	None	replace
212	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  expected  }  );  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  expected  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  expected  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    observed    }    );    	non-compiled	[CE]  incompatible  types	104	None	replace
213	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  x);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  x);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    observed    }    );    	non-compiled	[CE]  incompatible  types	104	None	replace
214	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  expected,  observed  }  );  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  expected,  observed  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  expected,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    observed    }    );    	non-compiled	[CE]  incompatible  types	104	None	replace
215	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
216	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
217	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
218	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
219	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  not  a  statement	15	None	add
220	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
221	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
222	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
223	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
224	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
225	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
227	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
228	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
229	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
230	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0	  	non-compiled	[CE]  ')'  expected	13	None	add
231	[BUG]  [BUGGY]  this.distribution.setSquaredDistribution(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setSquaredDistribution(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setSquaredDistribution(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
232	[BUG]  [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [CE]  package  This  does  not  exist  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	This.distribution.setDegreesOfFreedom(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    This.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  package  This  does  not  exist	33	None	replace
233	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected,  observed.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    This.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	33	None	replace
234	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
235	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
236	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
237	[BUG]  [BUGGY]  if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  }  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0));    	non-compiled	[CE]  ']'  expected	130	None	replace
238	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  /  2];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  /  2];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  /  2];	  long[]    observed    =    new    long[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	93	None	replace
239	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  *  2];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  *  2];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  *  2];	  long[]    observed    =    new    long[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	93	None	replace
240	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
241	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
242	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(0.0,  observed);  [CE]  inconvertible  types  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(0.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(0.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  inconvertible  types	8	None	replace
243	[BUG]  [BUGGY]  return  1.0  -  expected.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  expected.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  expected.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    -    distributed.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
244	[BUG]  [BUGGY]  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
245	[BUG]  [BUGGY]  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);	  if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
246	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe.length);  [CE]  cannot  find  symbol  observe  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized.length);    	non-compiled	[CE]  cannot  find  symbol  observe	137	None	replace
247	[BUG]  [BUGGY]  result  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  result  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  result  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	result  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol  result	154	None	replace
248	[BUG]  [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	154	None	replace
249	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed),  observed);  [CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed),  observed);	  return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])	2	None	replace
250	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  10.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	2	6	replace
251	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  10.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	2	6	replace
252	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  -  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  -  1];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  -  1];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    -    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	111	None	replace
253	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
254	[BUG]  [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
255	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    <    =    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
256	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    <    =    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
257	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    <    =    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
258	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0;  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0;  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0;	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0;    	non-compiled	[CE]  ')'  expected	139	None	replace
259	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(declaration.length);  [CE]  cannot  find  symbol  declaration  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(declaration.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(declaration.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(    observationed.length);    	non-compiled	[CE]  cannot  find  symbol  declaration	122	None	replace
260	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	73	None	replace
261	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	73	None	replace
262	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  true);  [CE]  cannot  find  symbol  normalized  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  normalized	73	None	replace
263	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  true);  [CE]  cannot  find  symbol  observe  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  observe	73	None	replace
264	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
265	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
266	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
267	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
268	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
269	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
270	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.3);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.3);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
271	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.3);  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.3);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.3);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
272	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
273	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  MaxIterationsExceededException  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	67	6	add
274	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected,  observed);	  this.distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	153	None	replace
275	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(x,  observed);  [CE]  cannot  find  symbol  x  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(x,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(x,  observed);	  this.distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  cannot  find  symbol  x	153	None	replace
276	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed,  observed);	  this.distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	153	None	replace
277	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed,  expected);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(observed,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed,  expected);	  this.distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	153	None	replace
278	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    	non-compiled	[CE]  missing  return  statement	19	None	replace
279	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	88	None	replace
280	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	88	None	replace
281	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]            MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  x);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	88	None	replace
282	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(1.0,  observed);  [CE]  inconvertible  types  [FE]              MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(1.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  inconvertible  types	88	None	replace
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                this.distribution.setDegreesOfFreedom(expected.length        -        1.0);        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	31	6	add
284	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length        -        1.0);        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	31	6	add
285	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDistribution(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDistribution(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length        -        1.0);        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDistribution(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
286	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	105	None	replace
287	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed  }  );  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  incompatible  types	105	None	replace
288	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  0,  observed  }  );  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  0,  observed  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  0,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  incompatible  types	105	None	replace
289	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    this.distribution.cumulativeProbability(chiSquare(expected,  observed));	  	non-compiled	[CE]  unreachable  statement	142	None	add
290	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]  observed  =  new  double[distribution.numulativeProbability()  ];	  	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	142	None	add
291	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  long[]  observed  =  observed.length  -  10.0;  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  long[]  observed  =  observed.length  -  10.0;  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    long[]  observed  =  observed.length  -  10.0;	  	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	142	None	add
292	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  +  10.0);  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  +  10.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]  observed  =  new  double[distribution.numulativeProbability()  +  10.0);	  	non-compiled	[CE]  ']'  expected	142	None	add
293	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  -  10.0);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  -  10.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]  observed  =  new  double[distribution.numulativeProbability()  -  10.0);	  	non-compiled	[CE]  ']'  expected	142	None	add
294	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  expected.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  expected.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	92	None	replace
295	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	92	None	replace
296	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	92	None	replace
297	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[0]);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected[0]);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected[length]);    	non-compiled	[CE]  missing  return  statement	168	None	replace
298	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length]);  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected[length]);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected[length]);    	non-compiled	[CE]  cannot  find  symbol  length	168	None	replace
299	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[1]);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[1]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected[1]);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected[length]);    	non-compiled	[CE]  missing  return  statement	168	None	replace
300	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[size]);  [CE]  cannot  find  symbol  size  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[size]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected[size]);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected[length]);    	non-compiled	[CE]  cannot  find  symbol  size	168	None	replace
301	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  1.0  /  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	152	6	replace
302	[BUG]  [BUGGY]  return  1.0  /  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	152	6	replace
303	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed),  observed);  [CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed),  observed);	  return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])	152	None	replace
304	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de).doubleValue();  [CE]  cannot  find  symbol  de  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)de).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)de).doubleValue();	  ((    ChiSquaredDistributionImpl)de    distribution).doubleValue();    	non-compiled	[CE]  cannot  find  symbol  de	82	None	replace
305	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de.cloneTest()).doubleValue();  [CE]  cannot  find  symbol  de  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)de.cloneTest()).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)de.cloneTest()).doubleValue();	  ((    ChiSquaredDistributionImpl)de    distribution).doubleValue();    	non-compiled	[CE]  cannot  find  symbol  de	82	None	replace
306	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0),  observed);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0),  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0),  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0),    observed);    	non-compiled	[CE]  ']'  expected	144	None	replace
307	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	63	None	replace
308	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected.length,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	63	None	replace
309	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed[0],  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed[0],  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed[0],  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	63	None	replace
310	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(x,  observed.length,  observed.length);  [CE]  cannot  find  symbol  x  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(x,  observed.length,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(x,  observed.length,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  cannot  find  symbol  x	63	None	replace
311	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  [CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])	22	None	replace
312	[BUG]  [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed),  observed);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed),  observed);	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
313	[BUG]  [BUGGY]  return  1.0  -  distributed.cumulativeProbability(chiSquare(expected,  observed),  observed);  [CE]  cannot  find  symbol  distributed  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  distributed.cumulativeProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distributed.cumulativeProbability(chiSquare(expected,  observed),  observed);	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  cannot  find  symbol  distributed	22	None	replace
314	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [CE]  ')'  expected  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed);    }    	non-compiled	[CE]  ')'  expected	163	None	replace
315	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [CE]  ')'  expected  [FE]                  StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed);    }    	non-compiled	[CE]  ')'  expected	163	None	replace
316	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  <  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [CE]  ')'  expected  [FE]                    StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  <  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  <  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed);    }    	non-compiled	[CE]  ')'  expected	163	None	replace
317	[BUG]  [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  ')'  expected	123	None	replace
318	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquareDistribution  =  new  double[  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquareDistribution  =  new  double[  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquareDistribution  =  new  double[	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareDistribution    =    new    double[x    *    observed.length];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
319	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true,  observed);  [CE]  cannot  find  symbol  x  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	75	None	replace
320	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected),  observed).doubleValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected),  observed).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected),  observed).doubleValue();	  ((    ChiSquaredDistributionImpl)distribution),    observed).doubleValue();    	non-compiled	[CE]  not  a  statement	81	None	replace
321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                this.distribution.setDegreesOfFreedom(expected.length);        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);	  	compilable	  [FE]  AssertionFailedError  	46	6	add
322	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length);        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);	  	compilable	  [FE]  AssertionFailedError  	46	6	add
323	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length);        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setSquaresOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
324	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDistribution(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDistribution(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length);        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDistribution(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
325	[BUG]  [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed),  distribution);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed),  distribution);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed),  distribution);	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    observed),    distribution);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
326	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
327	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
328	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
329	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
330	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
331	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
332	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
333	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
334	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
335	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	69	6	add
336	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;  [CE]  ')'  expected  [FE]        MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;    	non-compiled	[CE]  ')'  expected	124	None	replace
337	[BUG]  [BUGGY]  if(observed  ==  null)  {  if(expected[0]  ==  expected)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  ==  null)  {  if(expected[0]  ==  expected)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  ==  null)  {  if(expected[0]  ==  expected)  {  return  1.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    expected)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
338	[BUG]  [BUGGY]  if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    0.0;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	118	None	replace
339	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]  [CE]  ')'  expected  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    0.0;    }    	non-compiled	[CE]  ')'  expected	118	None	replace
340	[BUG]  [BUGGY]  if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])  [CE]  ')'  expected  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    0.0;    }    	non-compiled	[CE]  ')'  expected	118	None	replace
341	[BUG]  [BUGGY]  double[]  observed  =  this.distribution.getDegreesOfFreedom();  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  this.distribution.getDegreesOfFreedom();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  this.distribution.getDegreesOfFreedom();	  double[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	6	None	replace
342	[BUG]  [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom(),  observed);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom(),  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.getDegreesOfFreedom(),  observed);	  double[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  ';'  expected	6	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [CE]  no  suitable  method  found  for  chiSquare(int,long)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }	  if(distribution.getDegreesOfFreedom()    >    observed)    {    for(int    i    =    0;    i    <    observed.length;    i++)    {    chiSquare(i,    observed[i]);    }    	non-compiled	[CE]  no  suitable  method  found  for  chiSquare(int,long)	7	None	replace
344	[BUG]  [BUGGY]  luate(distribution.getDegreesOfFreedom(),  observed))  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  luate(distribution.getDegreesOfFreedom(),  observed))  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	luate(distribution.getDegreesOfFreedom(),  observed))  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }	  if(distribution.getDegreesOfFreedom()    >    observed)    {    for(int    i    =    0;    i    <    observed.length;    i++)    {    chiSquare(i,    observed[i]);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
345	[BUG]  [BUGGY]  annually(distribution.getDegreesOfFreedom()  >  observed)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  annually(distribution.getDegreesOfFreedom()  >  observed)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	annually(distribution.getDegreesOfFreedom()  >  observed)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }	  if(distribution.getDegreesOfFreedom()    >    observed)    {    for(int    i    =    0;    i    <    observed.length;    i++)    {    chiSquare(i,    observed[i]);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
346	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  +  1.0));  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  +  1.0));  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  +  1.0));	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0));    	non-compiled	[CE]  ']'  expected	79	None	replace
347	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
348	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
349	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	140	None	replace
350	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(observed.length);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(observed.length);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setSquaresOfFreedom(expected.length);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
351	[BUG]  [BUGGY]  this.distribution.setSquaresOfFreedom(expected.length);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setSquaresOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setSquaresOfFreedom(expected.length);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setSquaresOfFreedom(expected.length);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
352	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0]);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0]);    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
353	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  /  1.0]);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  /  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  /  1.0]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0]);    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
354	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  distribution)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[0]  ==  distribution)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  distribution)  {  return  0.0;  }	  if(distribution    ==    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
355	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1.0);  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  1.0);	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1.0);    	non-compiled	[CE]  ']'  expected	169	None	replace
356	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1.0);  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  1.0);	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1.0);    	non-compiled	[CE]  ']'  expected	169	None	replace
357	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1.0);  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  1.0);	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1.0);    	non-compiled	[CE]  ']'  expected	169	None	replace
358	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	56	None	replace
359	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed);  [CE]  inconvertible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  inconvertible  types	56	None	replace
360	[BUG]  [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  ')'  expected	103	None	replace
361	[BUG]  [BUGGY]  (1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
362	[BUG]  [BUGGY]  if(observed.length  >  0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed.length  >  0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed.length  >  0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    1.0;    }    	non-compiled	[CE]  missing  return  statement	117	None	replace
363	[BUG]  [BUGGY]  if(observed.length  ==  0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  missing  return  statement  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed.length  ==  0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed.length  ==  0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    1.0;    }    	non-compiled	[CE]  missing  return  statement	117	None	replace
364	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	74	None	replace
365	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  true);  [CE]  cannot  find  symbol  x  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  cannot  find  symbol  x	74	None	replace
366	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  true  }  );  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  true  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  true  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  incompatible  types	74	None	replace
367	[BUG]  [BUGGY]  this.distribution.setDistribution(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDistribution(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDistribution(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDistribution(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
368	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	60	None	replace
369	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	60	None	replace
370	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	60	None	replace
371	[BUG]  [BUGGY]  if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	127	None	replace
372	[BUG]  [BUGGY]  result  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  result  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	result  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  result	127	None	replace
373	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    	non-compiled	[CE]  missing  return  statement	9	None	replace
374	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    expected);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	57	None	replace
375	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed),  observed);  [CE]  no  suitable  constructor  found  for  Long(double[],long[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed),  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed),  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    Long(expected,    observed));    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(double[],long[])	150	None	replace
376	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(new  Long(expected,  observed));  [CE]  no  suitable  constructor  found  for  Long(double[],long[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(new  Long(expected,  observed));  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(new  Long(expected,  observed));	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    Long(expected,    observed));    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(double[],long[])	150	None	replace
377	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed,  observed));  [CE]  no  suitable  constructor  found  for  Long(double[],long[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed,  observed));  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed,  observed));	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    Long(expected,    observed));    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(double[],long[],long[])	150	None	replace
378	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(observed,  expected));  [CE]  no  suitable  constructor  found  for  Long(long[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(observed,  expected));  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(observed,  expected));	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    Long(expected,    observed));    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(long[],double[])	150	None	replace
379	[BUG]  [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
380	[BUG]  [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
381	[BUG]  [BUGGY]  x  =  observed.nextDouble();  [CE]  cannot  find  symbol  x  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  x  =  observed.nextDouble();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	x  =  observed.nextDouble();	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    x    =    x.nextDouble();    	non-compiled	[CE]  cannot  find  symbol  x	161	None	replace
382	[BUG]  [BUGGY]  double  x  =  x.nextDouble();  [CE]  double  cannot  be  dereferenced  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double  x  =  x.nextDouble();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double  x  =  x.nextDouble();	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    x    =    x.nextDouble();    	non-compiled	[CE]  double  cannot  be  dereferenced	161	None	replace
383	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  x  =  observed.nextDouble();  [CE]  cannot  find  symbol  x  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  x  =  observed.nextDouble();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  x  =  observed.nextDouble();	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    x    =    x.nextDouble();    	non-compiled	[CE]  cannot  find  symbol  x	161	None	replace
384	[BUG]  [BUGGY]  if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]  [CE]  ')'  expected  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    -1;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
385	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    	non-compiled	[CE]  missing  return  statement	102	None	replace
386	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  1.0);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    	non-compiled	[CE]  missing  return  statement	102	None	replace
387	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0],  observed);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0],  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0],  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0],    observed);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
388	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  int[expected.length  -  1.0],  observed);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  int[expected.length  -  1.0],  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  int[expected.length  -  1.0],  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0],    observed);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
389	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  y).doubleValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  y).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution),  y).doubleValue();	  ((    ChiSquaredDistributionImpl)distribution),    x).doubleValue();    	non-compiled	[CE]  not  a  statement	138	None	replace
390	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(expected.length  -  1.0);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  distribution.getDegreesOfFreedom(expected.length  -  1.0);	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	148	None	replace
391	[BUG]  [BUGGY]  nested.add(new  ChiSquaredDistributionImpl(expected,  observed));  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl(double[],long[])  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  nested.add(new  ChiSquaredDistributionImpl(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	nested.add(new  ChiSquaredDistributionImpl(expected,  observed));	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl(double[],long[])	148	None	replace
392	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0),  observed);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0),  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0),  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0),    observed);    	non-compiled	[CE]  ']'  expected	144	None	replace
393	[BUG]  [BUGGY]  Return  1.0  -  distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  Return  1.0  -  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	Return  1.0  -  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    -    distributed.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  not  a  statement	89	None	replace
394	[BUG]  [BUGGY]  (CircularDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (CircularDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(CircularDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  not  a  statement	17	None	replace
395	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	63	None	replace
396	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length,  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	63	None	replace
397	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(x);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom(x);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  distribution.getDegreesOfFreedom(x);	  long[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
398	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom()  +  1;  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom()  +  1;  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  distribution.getDegreesOfFreedom()  +  1;	  long[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
399	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  null);  [CE]  cannot  find  symbol  x  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  cannot  find  symbol  x	60	None	replace
400	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(observed.length);  [CE]  cannot  find  symbol  dividual  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  cannot  find  symbol  dividual	29	None	replace
401	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0	  	non-compiled	[CE]  ')'  expected	69	None	add
402	[BUG]  [BUGGY]  if(result  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(result  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(result  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  if(distribution    ==    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
403	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	90	None	replace
404	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  parameters.length  -  1.0);  [CE]  cannot  find  symbol  parameters  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  parameters.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  parameters.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  parameters	90	None	replace
405	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed.length  -  1.0);  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  x	90	None	replace
406	[BUG]  [BUGGY]  if(expected  ==  null  ||  observed!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected  ==  null  ||  observed!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected  ==  null  ||  observed!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  if(observed    ==    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
407	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	74	None	replace
408	[BUG]  [BUGGY]  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  incomparable  types:  double  and  long[]  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected[0]  ==  observed)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  incomparable  types:  double  and  long[]	149	None	replace
409	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  	non-compiled	[CE]  unreachable  statement	1	None	add
410	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected!=  null)  {  if(observed  ==  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(expected!=  null)  {  if(observed  ==  null)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(expected!=  null)  {  if(observed  ==  null)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
411	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected  >  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected  >  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  if(expected  >  observed)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
412	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  if(expected  <  =  0.0)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
413	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  observed);  [CE]  cannot  find  symbol  x  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	59	None	replace
414	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	59	None	replace
415	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	59	None	replace
416	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  x  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  x  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  x  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    x  =  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  	non-compiled	[CE]  cannot  find  symbol  x	151	None	add
417	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(this.distribution!=  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(this.distribution!=  null)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  if(this.distribution!=  null)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
418	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability())  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability())  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability())  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
419	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(this.distribution!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(this.distribution!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  if(this.distribution!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
420	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(new  double[]  {  expected  }  );  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(new  double[]  {  expected  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(new  double[]  {  expected  }  );	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  incompatible  types	47	None	replace
421	[BUG]  [BUGGY]  if(expected  ==  null)  {  if(observed[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected  ==  null)  {  if(observed[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected  ==  null)  {  if(observed[0]  ==  observed)  {  return  1.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
422	[BUG]  [BUGGY]  if(expected!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
423	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0));  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0));  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0));	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0));    	non-compiled	[CE]  ']'  expected	79	None	replace
424	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
425	[BUG]  [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x    *    observed;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
426	[BUG]  [BUGGY]  (1(ChistedDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1(ChistedDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1(ChistedDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  ')'  expected	103	None	replace
427	[BUG]  [BUGGY]  (1(ChittleDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1(ChittleDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1(ChittleDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  ')'  expected	103	None	replace
428	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  >=  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  >=  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  >=  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    >=    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
429	[BUG]  [BUGGY]  if(expected!=  null)  {  if(observed  ==  null)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected!=  null)  {  if(observed  ==  null)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected!=  null)  {  if(observed  ==  null)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
430	[BUG]  [BUGGY]  if(expected!=  null)  {  if(observed[0]  ==  null)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected!=  null)  {  if(observed[0]  ==  null)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected!=  null)  {  if(observed[0]  ==  null)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
431	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unexpected,  true);  [CE]  cannot  find  symbol  unexpected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unexpected,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unexpected,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  unexpected	73	None	replace
432	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  dividual  [FE]                MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  dividual	72	None	replace
433	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  dest  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  dest	72	None	replace
434	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	105	None	replace
435	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  distribution);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  distribution);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  distribution);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	105	None	replace
436	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)dist).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  dist  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)dist).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)dist).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  dist	100	None	replace
437	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  -  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.numulativeProbability()  -  1];  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.numulativeProbability()  -  1];	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    +    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	43	None	replace
438	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0,  observed);  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0,    observed);    	non-compiled	[CE]  ']'  expected	78	None	replace
439	[BUG]  [BUGGY]  =(ChittleDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  =(ChittleDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	=(ChittleDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    =(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
440	[BUG]  [BUGGY]  =(ChistedDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  =(ChistedDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	=(ChistedDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    =(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
441	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0]);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  *  1.0]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0]);    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
442	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed);  [CE]  cannot  find  symbol  x  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	56	None	replace
443	[BUG]  [BUGGY]  if(result  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(result  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(result  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	  if(distribution    ==    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
444	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected.length,  observed.length  -  1.0);  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected.length,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected.length,  observed.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,    observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  x	92	None	replace
445	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
446	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
447	[BUG]  [BUGGY]  if(distribution  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
448	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
449	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);	  	compilable	  [FE]  IllegalArgumentException  	15	6	add
450	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0	  	non-compiled	[CE]  ')'  expected	15	None	add
451	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  expected);  [CE]  cannot  find  symbol  x  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    expected);    	non-compiled	[CE]  cannot  find  symbol  x	57	None	replace
452	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2  +  1.0);  [CE]  ']'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2  +  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2  +  1.0);	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    *    2];    	non-compiled	[CE]  ']'  expected	96	None	replace
453	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  +  1.0);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  +  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed.length  +  1.0);	  this.distribution.setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  missing  return  statement	51	None	replace
454	[BUG]  [BUGGY]  (1(ChistedDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1(ChistedDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1(ChistedDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  ')'  expected	123	None	replace
455	[BUG]  [BUGGY]  (1(ChittleDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1(ChittleDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1(ChittleDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  ')'  expected	123	None	replace
456	[BUG]  [BUGGY]  (ChistedDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (ChistedDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(ChistedDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  not  a  statement	30	None	replace
457	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(this.distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    this.distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ')'  expected	39	None	replace
458	[BUG]  [BUGGY]  if(distribution!=  null)  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  }	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	167	None	replace
459	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
460	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  1.0  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  1.0  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  1.0	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    1.0;    }    	non-compiled	[CE]  ';'  expected	117	None	replace
461	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
462	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue(0);  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue(0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).doubleValue(0);	  ((    ChiSquaredDistributionImpl)expected).doubleValue();    	non-compiled	[CE]  inconvertible  types	80	None	replace
463	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
464	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  <  =  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  <  =  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[1]  <  =  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    <    =    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
465	[BUG]  [BUGGY]  Return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  Return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	Return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distributed.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  not  a  statement	45	None	replace
466	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length	  	non-compiled	[CE]  ')'  expected	101	None	add
467	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(    observationed.length);    	non-compiled	[CE]  missing  return  statement	122	None	replace
468	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observation.length);  [CE]  cannot  find  symbol  observation  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observation.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observation.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(    observationed.length);    	non-compiled	[CE]  cannot  find  symbol  observation	122	None	replace
469	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed),  x);  [CE]  no  suitable  constructor  found  for  Long(double[],long[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed),  x);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed),  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    Long(expected,    observed));    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(double[],long[])	150	None	replace
470	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setDegreesOfFreedom(new  Long(expected,  observed));  [CE]  no  suitable  constructor  found  for  Long(double[],long[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setDegreesOfFreedom(new  Long(expected,  observed));  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observe).setDegreesOfFreedom(new  Long(expected,  observed));	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    Long(expected,    observed));    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(double[],long[])	150	None	replace
471	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unwrapped,  null);  [CE]  cannot  find  symbol  unwrapped  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unwrapped,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unwrapped,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	58	None	replace
472	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.length  -  1.0].doubleValue();  distribution.setDegreesOfFreedom(observed);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.length  -  1.0].doubleValue();  distribution.setDegreesOfFreedom(observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.length  -  1.0].doubleValue();  distribution.setDegreesOfFreedom(observed);	  double[]    observed    =    new    double[distribution.length    -    1].doubleValue();    distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	147	None	replace
473	[BUG]  [BUGGY]  double[]  observed  =  new  double[expected.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[expected.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[expected.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);	  double[]    observed    =    new    double[distribution.length    -    1].doubleValue();    distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	147	None	replace
474	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  0.0  ||  observed  >  1.0)  {  return  1.0  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  0.0  ||  observed  >  1.0)  {  return  1.0  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  0.0  ||  observed  >  1.0)  {  return  1.0	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected    <    =    0.0    ||    observed    >    1.0)    {    return    1.0;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
475	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(new  long[]  {  observed  }  );  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(new  long[]  {  observed  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(new  long[]  {  observed  }  );	  this.distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  incompatible  types	153	None	replace
476	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(distribution.length,  observed);  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(distribution.length,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(distribution.length,  observed);	  this.distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  cannot  find  symbol  length	153	None	replace
477	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
478	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
479	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected)>  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected)>  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected)>  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
480	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed)  [CE]  ')'  expected  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed)  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed)	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    }    	non-compiled	[CE]  ')'  expected	159	None	replace
481	[BUG]  [BUGGY]  if(expected[0]  ==  null)  {  return  1.0;  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected[0]  ==  null)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected[0]  ==  null)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    1.0;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	37	None	replace
482	[BUG]  [BUGGY]  if(expected  ==  null)  {  if(observed  ==  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected  ==  null)  {  if(observed  ==  null)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected  ==  null)  {  if(observed  ==  null)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
483	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)reference).doubleValue();  [CE]  cannot  find  symbol  reference  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)reference).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)reference).doubleValue();	  ((    ChiSquaredDistributionImpl)declaration).doubleValue();    	non-compiled	[CE]  cannot  find  symbol  reference	164	None	replace
484	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  x);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	8	None	replace
485	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
486	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
487	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  false,  observed);  [CE]  cannot  find  symbol  x  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  false,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  false,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	76	None	replace
488	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setDegreesOfFreedom(false,  observed);  [CE]  cannot  find  symbol  observe  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setDegreesOfFreedom(false,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)observe).setDegreesOfFreedom(false,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  cannot  find  symbol  observe	76	None	replace
489	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1);    	non-compiled	[CE]  missing  return  statement	64	None	replace
490	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1);    	non-compiled	[CE]  missing  return  statement	64	None	replace
491	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
492	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
493	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
494	[BUG]  [BUGGY]  double[]  expected  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  expected  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  expected  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
495	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
496	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
497	[BUG]  [BUGGY]  double[]  expected  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  expected  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  expected  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
498	[BUG]  [BUGGY]  x  =  x.nextDouble();  [CE]  cannot  find  symbol  x  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  x  =  x.nextDouble();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	x  =  x.nextDouble();	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    x    =    x.nextDouble();    	non-compiled	[CE]  cannot  find  symbol  x	161	None	replace
499	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  this.x  =  x.nextDouble();  [CE]  cannot  find  symbol  x  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  this.x  =  x.nextDouble();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  this.x  =  x.nextDouble();	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    x    =    x.nextDouble();    	non-compiled	[CE]  cannot  find  symbol  x	161	None	replace
500	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	136	None	replace
501	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
502	[BUG]  [BUGGY]  double  expected  =  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double  expected  =  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double  expected  =  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
503	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed,  null);  [CE]  no  suitable  method  found  for  cumulativeProbability(double,long[],<null>)  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed,  null);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed,  null);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double,long[],<null>)	44	None	replace
504	[BUG]  [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  [CE]  package  This  does  not  exist  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	This.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setSquaresOfFreedom(expected.length);    	non-compiled	[CE]  package  This  does  not  exist	50	None	replace
505	[BUG]  [BUGGY]  if(observed)  {  if(expected[1]  ==  expected)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  if(expected[1]  ==  expected)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[1]  ==  expected)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    expected)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
506	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	88	None	replace
507	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	88	None	replace
508	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2  +  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2  +  1];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2  +  1];	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    /    2];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	95	None	replace
509	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
510	[BUG]  [BUGGY]  double[]  expected  =  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  expected  =  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  expected  =  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
511	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  reportedNull);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  reportedNull);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  reportedNull);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareTestImpl.add(new    ChiSquareTestImpl(x),    observed);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
512	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed.length);  [CE]  missing  return  statement  [FE]        MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0    -    observed);    	non-compiled	[CE]  missing  return  statement	106	None	replace
513	[BUG]  [BUGGY]  return  10.0  /  distributed.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  distributed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distributed.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  10.0  /  distributed.cumulativeProbability(chiSquare(expected,  observed));	  return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  distributed	143	None	replace
514	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  expected);  [CE]  cannot  find  symbol  normalized  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    observed);    	non-compiled	[CE]  cannot  find  symbol  normalized	54	None	replace
515	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected    <    =    0.0)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
516	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected    <    =    0.0)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
517	[BUG]  [BUGGY]  if(expected  ==  null)  {  if(observed[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected  ==  null)  {  if(observed[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected  ==  null)  {  if(observed[0]  ==  observed)  {  return  0.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
518	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  missing  return  statement	129	None	replace
519	[BUG]  [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	129	None	replace
520	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
521	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
522	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
523	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  -1;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  return  -1;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
524	[BUG]  [BUGGY]  if(distribution.getDegreesOfFreedom()  >  expected)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.getDegreesOfFreedom()  >  expected)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.getDegreesOfFreedom()  >  expected)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }	  if(distribution.getDegreesOfFreedom()    >    observed)    {    for(int    i    =    0;    i    <    observed.length;    i++)    {    chiSquare(i,    observed[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
525	[BUG]  [BUGGY]  luate(distribution.getDegreesOfFreedom(),  observed))  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  luate(distribution.getDegreesOfFreedom(),  observed))  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	luate(distribution.getDegreesOfFreedom(),  observed))  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]	  if(distribution.getDegreesOfFreedom()    >    observed)    {    for(int    i    =    0;    i    <    observed.length;    i++)    {    chiSquare(i,    observed[i]);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
526	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  unreachable  statement	142	None	add
527	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));	  	non-compiled	[CE]  cannot  find  symbol	142	None	add
528	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  unreachable  statement	142	None	add
529	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(-10.0);  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(-10.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(-10.0);	  	non-compiled	[CE]  unreachable  statement	142	None	add
530	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  unreachable  statement	142	None	add
531	[BUG]  [BUGGY]  return  1.0  /  distributed.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  distributed  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distributed.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distributed.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  distributed	2	None	replace
532	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  2.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  2.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	2	6	replace
533	[BUG]  [BUGGY]  return  2.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  2.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  2.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	2	6	replace
534	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(double,  observed);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(double,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(double,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,    observed);    	non-compiled	[CE]  '.class'  expected	75	None	replace
535	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(result.length  -  1);  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(result.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(result.length  -  1);	  this.distribution.setDegreesOfFreedom(expected.length    -    1);    	non-compiled	[CE]  cannot  find  symbol  result	53	None	replace
536	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  ')'  expected	65	None	add
537	[BUG]  [BUGGY]  (CircularDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  not  a  statement  [FE]              MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (CircularDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(CircularDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  not  a  statement	71	None	replace
538	[BUG]  [BUGGY]  if(result!=  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(result!=  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(result!=  null)  {  if(expected[1]  ==  observed)  {  return  0.0;  }	  if(result!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
539	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unique.length);  [CE]  cannot  find  symbol  unique  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unique.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unique.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  cannot  find  symbol  unique	28	None	replace
540	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  missing  return  statement	127	None	replace
541	[BUG]  [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	127	None	replace
542	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0  [CE]  ';'  expected  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  ';'  expected	83	None	replace
543	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[y]  =  x.doubleValue();  }  [CE]  cannot  find  symbol  y  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[y]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[y]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol  y	146	None	replace
544	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
545	[BUG]  [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
546	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length        -        1.0);        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
547	[BUG]  [BUGGY]  if(distribution.numulativeProbability()!=  expected)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.numulativeProbability()!=  expected)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.numulativeProbability()!=  expected)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    ];    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
548	[BUG]  [BUGGY]  if(distribution.numulativeProbability()!=  expected)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  long[]  observed  =  new  double[distribution.numulativeProbability()  ];  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.numulativeProbability()!=  expected)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  long[]  observed  =  new  double[distribution.numulativeProbability()  ];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.numulativeProbability()!=  expected)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  long[]  observed  =  new  double[distribution.numulativeProbability()  ];  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    ];    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
549	[BUG]  [BUGGY]  if(distribution.getDegreesOfFreedom()  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  incomparable  types:  double  and  <null>  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.getDegreesOfFreedom()  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.getDegreesOfFreedom()  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	163	None	replace
550	[BUG]  [BUGGY]  if(distribution.equals(expected))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  missing  return  statement  [FE]                  StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.equals(expected))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.equals(expected))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed);    }    	non-compiled	[CE]  missing  return  statement	163	None	replace
551	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed  [CE]  ')'  expected  [FE]                    StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed);    }    	non-compiled	[CE]  ')'  expected	163	None	replace
552	[BUG]  [BUGGY]  if(distribution  instanceof  ChiSquaredDistributionImpl)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  }  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution  instanceof  ChiSquaredDistributionImpl)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution  instanceof  ChiSquaredDistributionImpl)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	131	None	replace
553	[BUG]  [BUGGY]  chiSquareTest.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  [CE]  cannot  find  symbol  chiSquareTest  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  chiSquareTest.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	chiSquareTest.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  cannot  find  symbol  chiSquareTest	131	None	replace
554	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  distribution);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  distribution);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  distribution);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    observed    }    );    	non-compiled	[CE]  incompatible  types	104	None	replace
555	[BUG]  [BUGGY]  if(result!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(result!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(result!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  if(result!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
556	[BUG]  [BUGGY]  return  1.0  -  distributionImpl.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  distributionImpl  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  distributionImpl.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distributionImpl.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distributed.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  distributionImpl	135	None	replace
557	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]        MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
558	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]          MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
559	[BUG]  [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double  observed  =  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0));    	non-compiled	[CE]  ']'  expected	130	None	replace
560	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  }  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0));    	non-compiled	[CE]  ']'  expected	130	None	replace
561	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
562	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  ')'  expected	166	None	replace
563	[BUG]  [BUGGY]  this.distribution.setDegreesInFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesInFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesInFreedom(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
564	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  ';'  expected	87	None	replace
565	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareDistribution    =    new    double[x    *    observed.length];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
566	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[x  *  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[x  *  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[x  *	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareDistribution    =    new    double[x    *    observed.length];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
567	[BUG]  [BUGGY]  if(distribution  ==  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution  ==  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution  ==  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  if(distribution!=    null)    {    if(expected[1]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
568	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
569	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
570	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
571	[BUG]  [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom(x);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom(x);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.getDegreesOfFreedom(x);	  double[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	6	None	replace
572	[BUG]  [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom()  +  1;  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom()  +  1;  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.getDegreesOfFreedom()  +  1;	  double[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	6	None	replace
573	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(denominated.length);  [CE]  cannot  find  symbol  denominated  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(denominated.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(denominated.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized.length);    	non-compiled	[CE]  cannot  find  symbol  denominated	137	None	replace
574	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[0]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
575	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[1]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[1]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
576	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[1]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquare(x,  observed[1]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
577	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  0.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  0.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	152	6	replace
578	[BUG]  [BUGGY]  return  0.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  0.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  0.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	152	6	replace
579	[BUG]  [BUGGY]  return  1.0  /  diffusion.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  diffusion  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  diffusion.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  diffusion.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distributed.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  diffusion	45	None	replace
580	[BUG]  [BUGGY]  if(observedistribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observedistribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observedistribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	  if(result!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
581	[BUG]  [BUGGY]  if(observedistribution!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observedistribution!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observedistribution!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	  if(result!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
582	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
583	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                this.distribution.setDegreesOfFreedom(expected.length);        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(  observed.length);	  	compilable	  [FE]  AssertionFailedError  	46	6	add
584	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(  observed.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length);        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(  observed.length);	  	compilable	  [FE]  AssertionFailedError  	46	6	add
585	[BUG]  [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDistribution(expected);  this.distribution.setDegreesOfFreedom(expected.length);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDistribution(expected);  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                this.distribution.setDegreesOfFreedom(expected.length);        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDistribution(expected);  this.distribution.setDegreesOfFreedom(expected.length);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
586	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x];  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
587	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unspecified,  observed);  [CE]  cannot  find  symbol  unspecified  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unspecified,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unspecified,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  unspecified	55	None	replace
588	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(middle,  observed);  [CE]  cannot  find  symbol  middle  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(middle,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(middle,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  middle	55	None	replace
589	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  observed);  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  mapping	55	None	replace
590	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  >=  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    >=    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
591	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  >=  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  >=  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  >=  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    >=    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
592	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(data.length);  [CE]  cannot  find  symbol  data  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(data.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(data.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  cannot  find  symbol  data	28	None	replace
593	[BUG]  [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
594	[BUG]  [BUGGY]  (1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
595	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	140	None	replace
596	[BUG]  [BUGGY]  if(distribution  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution  ==  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  missing  return  statement	120	None	replace
597	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)declaration),  observed).doubleValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)declaration),  observed).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)declaration),  observed).doubleValue();	  ((    ChiSquaredDistributionImpl)distribution),    observed).doubleValue();    	non-compiled	[CE]  not  a  statement	81	None	replace
598	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  null);  [CE]  cannot  find  symbol  mapping  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  mapping	58	None	replace
599	[BUG]  [BUGGY]  if(distribution!=  null)  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	167	None	replace
600	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [CE]  missing  return  statement  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    	non-compiled	[CE]  missing  return  statement	68	None	replace
601	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [CE]  missing  return  statement  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    	non-compiled	[CE]  missing  return  statement	68	None	replace
602	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  cannot  find  symbol  chiSquareTest  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest,  observed))  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    }    	non-compiled	[CE]  cannot  find  symbol  chiSquareTest	159	None	replace
603	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x  *  observed;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
604	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
605	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  <  =  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    <    =    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
606	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  <  =  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  <  =  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  <  =  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    <    =    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
607	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareTestImpl.add(new    ChiSquareTestImpl(x),    observed);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
608	[BUG]  [BUGGY]  luate(distribution))  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  luate(distribution))  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	luate(distribution))  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareTestImpl.add(new    ChiSquareTestImpl(x),    observed);    }    	non-compiled	[CE]  ';'  expected	112	None	replace
609	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected,  observed.length);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected,  observed.length);	          this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDistribution(expected.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	49	None	replace
610	[BUG]  [BUGGY]  if(observed)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
611	[BUG]  [BUGGY]  if(observed  =  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  =  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  =  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
612	[BUG]  [BUGGY]  if(result!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(result!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(result!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquare(x,    observed[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
613	[BUG]  [BUGGY]  if(observedividual)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observedividual)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observedividual)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
614	[BUG]  [BUGGY]  if(observed)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
615	[BUG]  [BUGGY]  if(observed)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    observed.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
616	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
617	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  System.arraycopy(expected,  observed,  0,  observed,  0,  observed.length);  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  variable  expected  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  System.arraycopy(expected,  observed,  0,  observed,  0,  observed.length);  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  System.arraycopy(expected,  observed,  0,  observed,  0,  observed.length);  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  	non-compiled	[CE]  variable  expected  is  already  defined  in  method  chiSquareTest(double[],long[])	1	None	add
618	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  System.arraycopy(expected,  0,  observed,  0,  observed.length);  }  else  {  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  variable  expected  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]        StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  System.arraycopy(expected,  0,  observed,  0,  observed.length);  }  else  {  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  System.arraycopy(expected,  0,  observed,  0,  observed.length);  }  else  {  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  	non-compiled	[CE]  variable  expected  is  already  defined  in  method  chiSquareTest(double[],long[])	1	None	add
619	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
620	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  for(int  i  =  0;  i  <  observed.length;  ++i)  {  observed[i]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  for(int  i  =  0;  i  <  observed.length;  ++i)  {  observed[i]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  double[]  expected  =  new  double[expected.length];  for(int  i  =  0;  i  <  observed.length;  ++i)  {  observed[i]  =  x.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
621	[BUG]  [BUGGY]  x  =  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  x  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  x  =  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	x  =  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  x	117	None	replace
622	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])  [CE]  ')'  expected  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  else  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    1.0;    }    	non-compiled	[CE]  ')'  expected	117	None	replace
623	[BUG]  [BUGGY]  =(CircularDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  =(CircularDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	=(CircularDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    =(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
624	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x.doubleValue();  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
625	[BUG]  [BUGGY]  long[]  observed  =  this.distribution.getDegreesOfFreedom();  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  this.distribution.getDegreesOfFreedom();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  this.distribution.getDegreesOfFreedom();	  long[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
626	[BUG]  [BUGGY]  long[]  observed  =  x.getDegreesOfFreedom();  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  x.getDegreesOfFreedom();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  x.getDegreesOfFreedom();	  long[]    observed    =    distribution.getDegreesOfFreedom();    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
627	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x  *  observed;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x  *  observed;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x    *    observed;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
628	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  delegate  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  delegate	100	None	replace
629	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	136	None	replace
630	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length,  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	63	None	replace
631	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	63	None	replace
632	[BUG]  [BUGGY]  if(observed  >  0)  {  if(expected[0]  ==  null)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  0)  {  if(expected[0]  ==  null)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  0)  {  if(expected[0]  ==  null)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
633	[BUG]  [BUGGY]  if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  0.0;  }  [CE]  incomparable  types:  double  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected[0]  ==  null  ||  observed[1]  ==  null)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    0.0;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	25	None	replace
634	[BUG]  [BUGGY]  if(expected[0]  ==  null)  {  return  0.0;  }  [CE]  incomparable  types:  double  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected[0]  ==  null)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected[0]  ==  null)  {  return  0.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    0.0;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	25	None	replace
635	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareDistribution,  expected,  observed));  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareDistribution,  expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distribution.cumulativeProbability(chiSquareDistribution,  expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    chiSquareDistribution    =    new    double[x    *    observed.length];    }    	non-compiled	[CE]  ';'  expected	121	None	replace
636	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de  Distribution).doubleValue();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)de  Distribution).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)de  Distribution).doubleValue();	  ((    ChiSquaredDistributionImpl)de    distribution).doubleValue();    	non-compiled	[CE]  ')'  expected	82	None	replace
637	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.length  -  1].doubleValue();  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.length  -  1].doubleValue();  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.length  -  1].doubleValue();	  double[]    observed    =    new    double[distribution.length    -    1].doubleValue();    distribution.setDegreesOfFreedom(observed);    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	147	None	replace
638	[BUG]  [BUGGY]  this.distribution.setStandardDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setStandardDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setStandardDegreesOfFreedom(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
639	[BUG]  [BUGGY]  this.distribution.setPosition(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setPosition(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setPosition(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
640	[BUG]  [BUGGY]  this.distribution.setStandardDegrees(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setStandardDegrees(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setStandardDegrees(expected.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
641	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  0.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  0.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  0.0)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])	87	None	replace
642	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]  [CE]  ')'  expected  [FE]            StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    -1;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
643	[BUG]  [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])  [CE]  ')'  expected  [FE]              StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x])	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    if(!x.equals(expected[x]))    {    return    -1;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
644	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
645	[BUG]  [BUGGY]  if(observed  >  0)  {  if(expected[0]  ==  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >  0)  {  if(expected[0]  ==  null)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >  0)  {  if(expected[0]  ==  null)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    null)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
646	[BUG]  [BUGGY]  return  1.0  -  this.chiSquareTest.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  chiSquareTest  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.chiSquareTest.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  this.chiSquareTest.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distributed.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  chiSquareTest	135	None	replace
647	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  1.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected    <    =    0.0    ||    observed    >    1.0)    {    return    1.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])	42	None	replace
648	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  0.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed)>  0.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed)>  0.0)  {  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected    <    =    0.0    ||    observed    >    1.0)    {    return    1.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[],long[])	42	None	replace
649	[BUG]  [BUGGY]  if(observed  =  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  =  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  =  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	  if(distribution!=    null)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed[x]    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
650	[BUG]  [BUGGY]  if(distribution.getDegreesOfFreedom()  >  observed.length)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.getDegreesOfFreedom()  >  observed.length)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.getDegreesOfFreedom()  >  observed.length)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }	  if(distribution.getDegreesOfFreedom()    >    observed)    {    for(int    i    =    0;    i    <    observed.length;    i++)    {    chiSquare(i,    observed[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
651	[BUG]  [BUGGY]  if(distribution.getDegreesOfFreedom()  >  observed[i])  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.getDegreesOfFreedom()  >  observed[i])  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.getDegreesOfFreedom()  >  observed[i])  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }	  if(distribution.getDegreesOfFreedom()    >    observed)    {    for(int    i    =    0;    i    <    observed.length;    i++)    {    chiSquare(i,    observed[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
652	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length  -  1);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length  -  1);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	64	None	replace
653	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	131	None	replace
654	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])	131	None	replace
655	[BUG]  [BUGGY]  return  1.0  -  this.chiSquareTestImpl.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  chiSquareTestImpl  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.chiSquareTestImpl.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  this.chiSquareTestImpl.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    -    distributed.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  chiSquareTestImpl	89	None	replace
656	[BUG]  [BUGGY]  if(observedistribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observedistribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observedistribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  if(result!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
657	[BUG]  [BUGGY]  if(signature!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(signature!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(signature!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  if(result!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
658	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
659	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	13	6	add
660	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability(chiSquareTest(expected,  observed)))  {  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
661	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability())  {  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability())  {  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    this.distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(this.distribution!=  null)  {  if(!this.distribution.cumulativeProbability())  {  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
662	[BUG]  [BUGGY]  (CircularDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (CircularDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(CircularDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  not  a  statement	30	None	replace
663	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  this.x).doubleValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  this.x).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution),  this.x).doubleValue();	  ((    ChiSquaredDistributionImpl)distribution),    x).doubleValue();    	non-compiled	[CE]  not  a  statement	138	None	replace
664	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  x);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	56	None	replace
665	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2.0);  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2.0);	  double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    +    1.0);    	non-compiled	[CE]  ']'  expected	169	None	replace
666	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  observed);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  },  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    observed    }    );    	non-compiled	[CE]  incompatible  types	104	None	replace
667	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0],  observed,  observed);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0],  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0],  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0],    observed);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
668	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0],  observed,  observed);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0],  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[expected.length  -  1.0],  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0],    observed);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
669	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  true);  [CE]  cannot  find  symbol  mapping  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  mapping	73	None	replace
670	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mutator,  true);  [CE]  cannot  find  symbol  mutator  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mutator,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mutator,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  mutator	73	None	replace
671	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue()  -  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue()  -  1;  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).doubleValue()  -  1;	  ((    ChiSquaredDistributionImpl)expected).doubleValue();    	non-compiled	[CE]  not  a  statement	80	None	replace
672	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x.doubleValue();  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
673	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  [CE]  <identifier>  expected  [FE]          MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
674	[BUG]  [BUGGY]  if(expected[0]  ==  observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(expected[0]  ==  observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(expected[0]  ==  observed)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  if(distribution!=    null)    {    if(expected[1]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
675	[BUG]  [BUGGY]  if(observed  ||  expected[0]  ==  observed)  {  return  1.0;  }  [CE]  incomparable  types:  double  and  long[]  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  ||  expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  ||  expected[0]  ==  observed)  {  return  1.0;  }	  if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  incomparable  types:  double  and  long[]	149	None	replace
676	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
677	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(observed.length);  [CE]  cannot  find  symbol  delegate  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  cannot  find  symbol  delegate	29	None	replace
678	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)dist).setDegreesOfFreedom(observed.length);  [CE]  cannot  find  symbol  dist  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)dist).setDegreesOfFreedom(observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)dist).setDegreesOfFreedom(observed.length);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  cannot  find  symbol  dist	29	None	replace
679	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  x.length  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  x.length  ];  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  +  x.length  ];	  long[]    observed    =    new    long[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	93	None	replace
680	[BUG]  [BUGGY]  if(observed!=  null)  {  if(expected[1]  ==  expected)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed!=  null)  {  if(expected[1]  ==  expected)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  if(expected[1]  ==  expected)  {  return  1.0;  }	  if(observed!=    null)    {    if(expected[0]    ==    expected)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
681	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x];  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x];    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
682	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1.0,  observed.length  -  1.0);	          this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    This.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	33	None	replace
683	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed);  [CE]  '}'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  '}'  expected	105	None	replace
684	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed);  [CE]  '}'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  '}'  expected	105	None	replace
685	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  expected.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length,  expected.length  -  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,    observed.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	92	None	replace
686	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  delegate  [FE]                MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  delegate	72	None	replace
687	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)diff).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  diff  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)diff).setDegreesOfFreedom(1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)diff).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  diff	72	None	replace
688	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)disposition).doubleValue();  [CE]  cannot  find  symbol  disposition  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)disposition).doubleValue();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)disposition).doubleValue();	  ((    ChiSquaredDistributionImpl)declaration).doubleValue();    	non-compiled	[CE]  cannot  find  symbol  disposition	164	None	replace
689	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  /  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  /  1];  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  /  1];	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]    observed    =    new    double[distribution.numulativeProbability()    +    1];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	43	None	replace
690	[BUG]  [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
691	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
692	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
693	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);	  	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	142	None	add
694	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  <  =  0.0)  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  }  else  {  return  10.0  /  distribution.cumulativeProbability(chiSquare(	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
695	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  0.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
696	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
697	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  IllegalArgumentException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
698	[BUG]  [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
699	[BUG]  [BUGGY]  (1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  (1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	(1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
700	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed.length);  [CE]  cannot  find  symbol  normalized  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized.length);    	non-compiled	[CE]  cannot  find  symbol  normalized	137	None	replace
701	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
702	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  if(distribution  instanceof  ChiSquareDistributionImpl)  {  ((  ChiSquareDistributionImpl)distribution).setDegre  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  if(distribution  instanceof  ChiSquareDistributionImpl)  {  ((  ChiSquareDistributionImpl)distribution).setDegre  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  if(distribution  instanceof  ChiSquareDistributionImpl)  {  ((  ChiSquareDistributionImpl)distribution).setDegre	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  not  a  statement	165	None	replace
703	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	60	None	replace
704	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  long[]  expected  =  observed.length;  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [CE]  ')'  expected  [FE]                StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  long[]  expected  =  observed.length;  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  long[]  expected  =  observed.length;  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,    observed))    >    1.0)    {    for(long[]    expected    :    observed)    {    return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed);    }    	non-compiled	[CE]  ')'  expected	163	None	replace
705	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed  =  x[x].doubleValue();  }	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,    observed))    >    1.0)    {    for(int    x    =    0;    x    <    expected.length;    ++x)    {    observed    =    x[x].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
706	[BUG]  [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.cumulativeProbability(expected,  observed))  {  if(expected[1]  ==  observed)  {  return  1.0;  }	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
707	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    	non-compiled	[CE]  missing  return  statement	19	None	replace
708	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  true);  [CE]  cannot  find  symbol  x  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  true);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  cannot  find  symbol  x	74	None	replace
709	[BUG]  [BUGGY]  if(observed  >=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  if(observed    ==    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
710	[BUG]  [BUGGY]  if(observed  >=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  if(observed  >=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  >=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	  if(observed    ==    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
711	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)declaration).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  ((  ChiSquaredDistributionImpl)declaration).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)declaration).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0,    observed);    	non-compiled	[CE]  ']'  expected	78	None	replace
712	[BUG]  [BUGGY]  return  10.0  *  observed.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);      [BUGGY]  return  10.0  *  observed.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]      chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  10.0  *  observed.cumulativeProbability(chiSquare(expected,  observed));	  return    10.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
