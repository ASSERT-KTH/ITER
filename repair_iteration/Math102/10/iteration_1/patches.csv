bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	13	6	replace
2	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	13	6	replace
3	[BUG]  [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  distribution));  [CE]  no  suitable  method  found  for  chiSquareTest(double[],ChiSquaredDistribution)  [FE]      StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  distribution));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  distribution));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  chiSquareTest(double[],ChiSquaredDistribution)	13	None	replace
4	[BUG]  [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  expected));  [CE]  no  suitable  method  found  for  chiSquareTest(double[],double[])  [FE]        StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  expected));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  expected));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  chiSquareTest(double[],double[])	13	None	replace
5	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom();  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  long[]  observed  =  distribution.getDegreesOfFreedom();  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  distribution.getDegreesOfFreedom();	      	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
6	[BUG]  [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom();  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  distribution.getDegreesOfFreedom();  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  distribution.getDegreesOfFreedom();	      	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
7	[BUG]  [BUGGY]  if(distribution.getDegreesOfFreedom()  >  observed)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution.getDegreesOfFreedom()  >  observed)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution.getDegreesOfFreedom()  >  observed)  {  for(int  i  =  0;  i  <  observed.length;  i++)  {  chiSquare(i,  observed[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	20	None	replace
9	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [CE]  missing  return  statement  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  missing  return  statement	20	None	replace
10	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	      this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	24	None	replace
11	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	      this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	24	None	replace
12	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	      this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	24	None	replace
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	19	6	add
14	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	19	6	add
15	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	19	6	add
16	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	19	6	add
17	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  not  a  statement	19	None	add
18	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	19	6	add
19	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	19	6	add
20	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  =(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  =(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    =(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
21	[BUG]  [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  observed.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    distribution));    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
22	[BUG]  [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquare(expected,  observed),  observed);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquare(expected,  observed),  observed);  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  observed.cumulativeProbability(chiSquare(expected,  observed),  observed);	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    distribution));    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
23	[BUG]  [BUGGY]  if(observed!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
24	[BUG]  [BUGGY]  if(observed  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
25	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  null)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed)  {  if(expected[0]  ==  null)  {  return  0.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  null)  {  return  0.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
26	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  expected)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed)  {  if(expected[0]  ==  expected)  {  return  0.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  expected)  {  return  0.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	  	compilable	  [FE]  AssertionFailedError  	10	6	add
28	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	  	compilable	  [FE]  AssertionFailedError  	10	6	add
29	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);  [CE]  cannot  find  symbol  ditribution  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(observed.length);	  	non-compiled	[CE]  cannot  find  symbol  ditribution	10	None	add
30	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	  	non-compiled	[CE]  not  a  statement	10	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
32	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
33	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  This.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [CE]  package  This  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  This.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    This.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  package  This  does  not  exist	23	None	add
34	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDistribution(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDistribution(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setDistribution(expected.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
35	[BUG]  [BUGGY]  if(observed!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
36	[BUG]  [BUGGY]  if(observed  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
37	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  null)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed)  {  if(expected[0]  ==  null)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  null)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
38	[BUG]  [BUGGY]  if(observed!=  null)  {  if(expected[0]  ==  expected)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed!=  null)  {  if(expected[0]  ==  expected)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed!=  null)  {  if(expected[0]  ==  expected)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
39	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  this.distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    this.distribution.cumulativeProbability(chiSquare(expected,  observed));	  	non-compiled	[CE]  unreachable  statement	2	None	add
40	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  ];  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]  observed  =  new  double[distribution.numulativeProbability()  ];	  	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	2	None	add
41	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
42	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  =  0.0  ||  observed  >  1.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(observed)  {  if(expected  <  =  0.0  ||  observed  >  1.0)  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(observed)  {  if(expected  <  =  0.0  ||  observed  >  1.0)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
43	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  +  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  double[]  observed  =  new  double[distribution.numulativeProbability()  +  1];  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    double[]  observed  =  new  double[distribution.numulativeProbability()  +  1];	  	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	2	None	add
44	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  [CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed),  observed);	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double,long[])	3	None	replace
45	[BUG]  [BUGGY]  return  1.0  /  distributed.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  distributed  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distributed.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  /  distributed.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  distributed	3	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);	  	compilable	  [FE]  AssertionFailedError  	25	6	add
47	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected.length);	  	compilable	  [FE]  AssertionFailedError  	25	6	add
48	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  This.distribution.setDegreesOfFreedom(expected.length);  [CE]  package  This  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  This.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length);    This.distribution.setDegreesOfFreedom(expected.length);	  	non-compiled	[CE]  package  This  does  not  exist	25	None	add
49	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDistribution(expected.length);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDistribution(expected.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDistribution(expected.length);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
50	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setSquaresOfFreedom(expected.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setSquaresOfFreedom(expected.length);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
51	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed.length);	      this.distribution.setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  missing  return  statement	26	None	replace
52	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  +  1.0);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  +  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length  +  1.0);	      this.distribution.setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  missing  return  statement	26	None	replace
53	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1);  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1);	      this.distribution.setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  missing  return  statement	26	None	replace
54	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
55	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed);  [CE]  cannot  find  symbol  x  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);    	non-compiled	[CE]  cannot  find  symbol  x	8	None	replace
56	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
57	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
58	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null);  [CE]  cannot  find  symbol  x  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  cannot  find  symbol  x	9	None	replace
59	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	9	None	replace
60	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	9	None	replace
61	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  missing  return  statement	11	None	replace
62	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed.length);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	11	None	replace
63	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length,  observed.length);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	11	None	replace
64	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1);  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  missing  return  statement	11	None	replace
65	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  MaxIterationsExceededException  	14	6	add
66	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  MaxIterationsExceededException  	14	6	add
67	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	14	6	add
68	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  MaxIterationsExceededException  	14	6	add
69	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	14	6	add
70	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	14	6	add
71	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  not  a  statement  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  not  a  statement	14	None	add
72	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  ditribution  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  cannot  find  symbol  ditribution	14	None	add
73	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true);  [CE]  cannot  find  symbol  x  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  cannot  find  symbol  x	7	None	replace
74	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  true);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  true);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	7	None	replace
75	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	7	None	replace
76	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	7	None	replace
77	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0]);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0]);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0]);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0);    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
78	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [CE]  ']'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0);    	non-compiled	[CE]  ']'  expected	18	None	replace
79	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  [CE]  ']'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0);    	non-compiled	[CE]  ']'  expected	18	None	replace
80	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue();  [CE]  inconvertible  types  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)expected).doubleValue();  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)expected).doubleValue();	      ((    ChiSquaredDistributionImpl)distribution).doubleValue();    	non-compiled	[CE]  inconvertible  types	6	None	replace
81	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  observed).doubleValue();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  observed).doubleValue();  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution),  observed).doubleValue();	      ((    ChiSquaredDistributionImpl)distribution).doubleValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
82	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).doubleValue();  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).doubleValue();  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)de  distribution).doubleValue();	      ((    ChiSquaredDistributionImpl)distribution).doubleValue();    	non-compiled	[CE]  ')'  expected	6	None	replace
83	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
84	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)  {  if(expected[0]  >=  observed)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
85	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)  {  if(expected  <  =  0.0)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
86	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)  {  if(expected[0]  <  =  observed)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
87	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
88	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	15	None	replace
89	[BUG]  [BUGGY]  return  1.0  -  distributed.cumulativeProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  distributed  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distributed.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distributed.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  distributed	21	None	replace
90	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  1.0);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	17	None	replace
91	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	17	None	replace
92	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  observed.length  -  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  observed.length  -  1.0);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	17	None	replace
93	[BUG]  [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  ];  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	long[]  observed  =  new  long[distribution.getDegreesOfFreedom()  ];	      double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	28	None	replace
94	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1];  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1];	      double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	28	None	replace
95	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2];  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  /  2];	      double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	28	None	replace
96	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2];  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  *  2];	      double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	28	None	replace
97	[BUG]  [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquare(expected,  observed),  distribution);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquare(expected,  observed),  distribution);  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  observed.cumulativeProbability(chiSquare(expected,  observed),  distribution);	  return    1.0    -    observed.cumulativeProbability(chiSquare(expected,    expected));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	16	6	add
99	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	16	6	add
100	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  ditribution  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  ditribution	16	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);	  	compilable	  [FE]  AssertionFailedError  	16	6	add
102	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.0);	  	compilable	  [FE]  AssertionFailedError  	16	6	add
103	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  ')'  expected	16	None	add
104	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  }  );  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  }  );  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  }  );	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);    	non-compiled	[CE]  incompatible  types	8	None	replace
105	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  }  );  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  }  );  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  }  );	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
106	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  -  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	15	None	replace
107	[BUG]  [BUGGY]  if(distribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
108	[BUG]  [BUGGY]  if(result!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(result!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(result!=  null)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  observed)  {  return  0.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
110	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1.0  ];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1.0  ];  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1.0  ];	      double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	28	None	replace
111	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  -  1];  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  -  1];  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  -  1];	      double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	28	None	replace
112	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareTestImpl.add(new  ChiSquareTestImpl(x),  observed);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquare(x,  observed[0]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
114	[BUG]  [BUGGY]  if(distribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution  ==  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
115	[BUG]  [BUGGY]  if(result!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(result!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(result!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
116	[BUG]  [BUGGY]  if(distribution!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  if(expected[1]  ==  observed)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
117	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
118	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  0.0;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  0.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  0.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
119	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  -1;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  if(!x.equals(expected[x]))  {  return  -1;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
120	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
121	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[x  *  observed.length];  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[x  *  observed.length];  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  chiSquareDistribution  =  new  double[x  *  observed.length];  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
122	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(  observationed.length);  [CE]  cannot  find  symbol  observationed  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(  observationed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(  observationed.length);	  	non-compiled	[CE]  cannot  find  symbol  observationed	10	None	add
123	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);	  	non-compiled	[CE]  ')'  expected	10	None	add
124	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;  [CE]  ')'  expected  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0;	  	non-compiled	[CE]  ')'  expected	14	None	add
125	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  [CE]  <identifier>  expected  [FE]      MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
126	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(normalized.length);  [CE]  cannot  find  symbol  normalized  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(normalized.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(normalized.length);	      this.distribution.setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  cannot  find  symbol  normalized	26	None	replace
127	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  unreachable  statement	2	None	add
128	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
129	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  unreachable  statement	2	None	add
130	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0));	  	non-compiled	[CE]  ']'  expected	2	None	add
131	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);	  	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	2	None	add
132	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0],  observed);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0],  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0],  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0);    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
133	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	7	None	replace
134	[BUG]  [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  observed.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
135	[BUG]  [BUGGY]  return  1.0  -  distributed.cumulativeProbability(chiSquareTest(expected,  observed));  [CE]  cannot  find  symbol  distributed  [FE]      StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distributed.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  distributed.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  distributed	13	None	replace
136	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  missing  return  statement	11	None	replace
137	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized.length);  [CE]  cannot  find  symbol  normalized  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized.length);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length);    	non-compiled	[CE]  cannot  find  symbol  normalized	11	None	replace
138	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  x).doubleValue();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution),  x).doubleValue();  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution),  x).doubleValue();	      ((    ChiSquaredDistributionImpl)distribution).doubleValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
139	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0;  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0;	  	non-compiled	[CE]  ')'  expected	16	None	add
140	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	17	None	replace
141	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setSquaresOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    this.distribution.setSquaresOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	compilable	  [FE]  AssertionFailedError  	3	6	replace
143	[BUG]  [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  10.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));	  return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    	compilable	  [FE]  AssertionFailedError  	3	6	replace
144	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0),  observed);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0),  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[expected.length  -  1.0),  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[expected.length    -    1.0);    	non-compiled	[CE]  ']'  expected	18	None	replace
145	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
146	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  observed.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
147	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  new  double[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.length  -  1].doubleValue();  distribution.setDegreesOfFreedom(observed);	      	non-compiled	[CE]  variable  observed  is  already  defined  in  method  chiSquareTest(double[],long[])	5	None	replace
148	[BUG]  [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(distribution!=  null)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x.doubleValue();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
149	[BUG]  [BUGGY]  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	if(observed)  {  if(expected[0]  ==  observed)  {  return  1.0;  }	      if(distribution!=    null)    {    if(expected[0]    ==    observed)    {    return    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
150	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed));  [CE]  no  suitable  constructor  found  for  Long(double[],long[])  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed));  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  Long(expected,  observed));	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed);    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(double[],long[])	8	None	replace
151	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	add	return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	13	6	replace
152	[BUG]  [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return  1.0  -  this.distribution.cumulativeProbability(chiSquareTest(expected,  observed));	  return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    	compilable	  [FE]  StackOverflowError  	13	6	replace
153	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(observed);	      this.distribution.setDegreesOfFreedom(expected.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	26	None	replace
154	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
155	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x].doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
156	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
157	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x  *  observed;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
158	[BUG]  [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  /  distribution.cumulativeProbability(chiSquare(expected,  observed));  if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    /    distribution.cumulativeProbability(chiSquare(expected,    observed));    if(distribution.cumulativeProbability(chiSquare(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed[x]  =  x  *  observed;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
159	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
160	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
161	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  x  =  x.nextDouble();  [CE]  cannot  find  symbol  x  [FE]        StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  x  =  x.nextDouble();  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    x  =  x.nextDouble();	  	non-compiled	[CE]  cannot  find  symbol  x	12	None	add
162	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(int  x  =  0;  x  <  expected.length;  ++x)  {  observed  =  x[x];  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
163	[BUG]  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [CE]  ')'  expected  [FE]            StackOverflowError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed));  if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }  [BUGGY]    chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	return    1.0    -    distribution.cumulativeProbability(chiSquareTest(expected,    observed));    if(distribution.cumulativeProbability(chiSquareTest(expected,  observed))  >  1.0)  {  for(long[]  expected  :  observed)  {  return  1.0  -  distribution.cumulativeProbability(chiSquareTest(expected,  observed);  }	  	non-compiled	[CE]  ')'  expected	12	None	add
164	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)declaration).doubleValue();  [CE]  cannot  find  symbol  declaration  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  ((  ChiSquaredDistributionImpl)declaration).doubleValue();  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	((  ChiSquaredDistributionImpl)declaration).doubleValue();	      ((    ChiSquaredDistributionImpl)distribution).doubleValue();    	non-compiled	[CE]  cannot  find  symbol  declaration	6	None	replace
165	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
166	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
167	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    1.0);    ((  ChiSquaredDistributionImpl),distribution).setDegreesOfFreedom(expected.length  -  1.0);	  	non-compiled	[CE]  ')'  expected	16	None	add
168	[BUG]  [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected[length]);  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]      this.distribution.setDegreesOfFreedom(expected.length);  this.distribution.setDegreesOfFreedom(expected[length]);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	        this.distribution.setDegreesOfFreedom(expected.length);    this.distribution.setDegreesOfFreedom(expected[length]);	  	non-compiled	[CE]  cannot  find  symbol  length	25	None	add
169	[BUG]  [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1.0);  [CE]  ']'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	double[]  observed  =  new  double[distribution.getDegreesOfFreedom()  +  1.0);	      double[]    observed    =    new    double[distribution.getDegreesOfFreedom()    ];    	non-compiled	[CE]  ']'  expected	28	None	replace
170	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  distribution.setDegreesOfFreedom(expected.length  -  1.0);    [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(    chiSquare(expected,  observed));  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	98	99	6	replace	this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	      this.distribution.setDegreesOfFreedom(expected.length    -    1.0);    	non-compiled	[CE]  missing  return  statement	24	None	replace
