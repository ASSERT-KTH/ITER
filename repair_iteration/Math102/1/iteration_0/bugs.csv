bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if ((expected.length < 2) || (expected.length != observed.length)) { [FE] AssertionFailedError [CONTEXT] public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException { [BUGGY] if ((expected.length < 2) || (expected.length != observed.length)) { [BUGGY] throw new IllegalArgumentException( "observed, expected array lengths incorrect"); } if (!isPositive(expected) || !isNonNegative(observed)) { throw new IllegalArgumentException( "observed counts must be non-negative and expected counts must be postive"); } double sumSq = 0.0d; double dev = 0.0d; for (int i = 0; i < observed.length; i++) { [CLASS] ChiSquareTestImpl [METHOD] chiSquare [RETURN_TYPE] double  double[] expected long[] observed [VARIABLES] ChiSquaredDistribution distribution x boolean double[] expected long[] observed double dev sumSq int i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException { [BUGGY] [BUGGY] if ((expected.length < 2) || (expected.length != observed.length)) { throw new IllegalArgumentException( "observed, expected array lengths incorrect"); } if (!isPositive(expected) || !isNonNegative(observed)) { throw new IllegalArgumentException( "observed counts must be non-negative and expected counts must be postive"); } double sumSq = 0.0d; double dev = 0.0d; for (int i = 0; i < observed.length; i++) { [CLASS] ChiSquareTestImpl [METHOD] chiSquare [RETURN_TYPE] double  double[] expected long[] observed [VARIABLES] ChiSquaredDistribution distribution x boolean double[] expected long[] observed double dev sumSq int i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	
