bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
2	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    if(expected.length!=  0  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
3	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  >=  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  >=  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  >=  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
4	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
5	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
6	[BUG]  [BUGGY]  int  expected  =  observed.length  /  2  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expected  =  observed.length  /  2  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  /  2  +  1;	  int    expected    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
7	[BUG]  [BUGGY]  double  expected  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expected  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expected  =  observed.length  /  2;	  int    expected    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
8	[BUG]  [BUGGY]  int  expected  =  observed.length  /  4;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expected  =  observed.length  /  4;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  /  4;	  int    expected    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
9	[BUG]  [BUGGY]  long[]  observed  =  distribution.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  distribution.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.clone();	  long[]    observed    =    getDistribution().clone();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
10	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().clone(),  observed);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution().clone(),  observed);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().clone(),  observed);	  long[]    observed    =    getDistribution().clone();    	non-compiled	[CE]  ';'  expected	145	None	replace
11	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().chiSquare();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution().chiSquare();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().chiSquare();	  long[]    observed    =    getDistribution().clone();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
12	[BUG]  [BUGGY]  if((  expected[0]  <  =  0)||(expected.length  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  =  0)||(expected.length  >=  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  =  0)||(expected.length  >=  0))  {	  if((    expected[0]    <    0)||(expected.length    >=    0))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
13	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >>  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >>  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  0)||(expected.length  >>  0))  {	  if((    expected[0]    <    0)||(expected.length    >=    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	157	None	replace
14	[BUG]  [BUGGY]  Int  expectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Int  expectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Int  expectedLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    Int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
15	[BUG]  [BUGGY]  ((  expected  <  2)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  2)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  2)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");	  ((    expected    <    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    length    incorrect   ");    	non-compiled	[CE]  not  a  statement	174	None	replace
16	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");	  ((    expected    <    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    length    incorrect   ");    	non-compiled	[CE]  not  a  statement	174	None	replace
17	[BUG]  [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedSq        =        observed.length;        int    expectSq    =    observed.length;    int  expectedSq  =  observed.length;  int  expectSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	105	None	add
18	[BUG]  [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  long  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  long  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedSq        =        observed.length;        int    expectSq    =    observed.length;    long  expectedSq  =  observed.length;  int  expectSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	105	None	add
19	[BUG]  [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectSq  =  observed.length;  int  expectSq  =  observed.length;  [CE]  variable  expectSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedSq        =        observed.length;        int    expectSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectSq  =  observed.length;	  	non-compiled	[CE]  variable  expectSq  is  already  defined  in  method  chiSquare(double[],long[])	105	None	add
20	[BUG]  [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  double  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  double  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedSq        =        observed.length;        int    expectSq    =    observed.length;    double  expectedSq  =  observed.length;  int  expectSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	105	None	add
21	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  /  2  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  /  2  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  /  2  +  1;	  int    expectedLengths    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
22	[BUG]  [BUGGY]  double  expectedLengths  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLengths  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLengths  =  observed.length  /  2;	  int    expectedLengths    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
23	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  *  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  *  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  *  2;	  int    expectedLengths    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
24	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  observed);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  observed);	  ((    ChiSquareTestImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
25	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  false);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  false);	  ((    ChiSquareTestImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
26	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  observed.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  observed.length);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  observed.length);	  ((    ChiSquareTestImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
27	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
28	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  0  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
29	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
30	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  ==  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  0  ||  (expected.length  ==  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
31	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  [Delete]  observed.length))  {  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  [Delete]  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  0  ||  (expected.length  [Delete]  observed.length))  {	  	non-compiled	[CE]  ')'  expected	118	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0)  {	  if(expected.length    ==    2)    {    	compilable	  [FE]  AssertionFailedError  	137	6	replace
33	[BUG]  [BUGGY]  if(expected.length  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0)  {	  if(expected.length    ==    2)    {    	compilable	  [FE]  AssertionFailedError  	137	6	replace
34	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0)  {	  if(expected.length    ==    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	137	6	replace
35	[BUG]  [BUGGY]  if(expected.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0)  {	  if(expected.length    ==    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	137	6	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length  ==  0)  {	  if(expected.length    ==    2)    {    	compilable	  [FE]  AssertionFailedError  	137	6	replace
37	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length  ==  0)  {	  if(expected.length    ==    2)    {    	compilable	  [FE]  AssertionFailedError  	137	6	replace
38	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");	  ((    expected    <    0)||(expected.length    >=    observed.length)))    {    throw    new    IllegalArgumentException(   ",       ");    	non-compiled	[CE]  not  a  statement	24	None	replace
39	[BUG]  [BUGGY]  if(expected.length  ==  observed.length)  {  if(expected.length  ==  observed.length)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  observed.length)  {  if(expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    observed.length)    {    if(expected.length  ==  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
40	[BUG]  [BUGGY]  if(expected.length  ==  observed.length)  {  if(expected.length!=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  observed.length)  {  if(expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    observed.length)    {    if(expected.length!=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
41	[BUG]  [BUGGY]  if(expected.length  ==  observed.length)  {  if(expected.length  >=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  observed.length)  {  if(expected.length  >=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    observed.length)    {    if(expected.length  >=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
42	[BUG]  [BUGGY]  if(expected.length  ==  observed.length)  {  If(expected.length  ==  observed.length)  {  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  observed.length)  {  If(expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    observed.length)    {    If(expected.length  ==  observed.length)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
43	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    if(expected.length  <  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	171	None	add
44	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	171	None	add
45	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    if(expected.length  <  2  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	171	None	add
46	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  ==  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    if(expected.length  <  2  ||  (expected.length  ==  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	171	None	add
47	[BUG]  [BUGGY]  long  expectedSq  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedSq  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedSq  =  observed.length  -  1;	  long    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
48	[BUG]  [BUGGY]  long  expectedSq  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedSq  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedSq  =  observed.length  -  2;	  long    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
49	[BUG]  [BUGGY]  long  expectedSq  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedSq  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedSq  =  observed.length  /  2;	  long    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
50	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    observed.length!=    0)    {    if(expected.length!=  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
51	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    observed.length!=    0)    {    if(expected.length!=  0  ||  observed.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
52	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length  >=  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length  >=  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    observed.length!=    0)    {    if(expected.length  >=  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
53	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    observed.length!=    0)    {    if(expected.length  ==  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
54	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    observed.length!=    0)    {    if(expected.length!=  0  ||  observed.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length!=  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	165	6	replace
56	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  expected.length)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length!=  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	165	6	replace
57	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  observed.length!=  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	165	6	replace
58	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length!=  expected.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  observed.length!=  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	165	6	replace
59	[BUG]  [BUGGY]  long[]  observed  =  this.chiSquareDistribution.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.chiSquareDistribution.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.chiSquareDistribution.clone();	  long[]    observed    =    this.chiSquareTestImpl.clone();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
60	[BUG]  [BUGGY]  long[]  observed  =  this.chiSquareTestImpl.clone(),  observed);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.chiSquareTestImpl.clone(),  observed);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.chiSquareTestImpl.clone(),  observed);	  long[]    observed    =    this.chiSquareTestImpl.clone();    	non-compiled	[CE]  ';'  expected	140	None	replace
61	[BUG]  [BUGGY]  Long[]  observed  =  this.chiSquareTestImpl.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Long[]  observed  =  this.chiSquareTestImpl.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Long[]  observed  =  this.chiSquareTestImpl.clone();	  long[]    observed    =    this.chiSquareTestImpl.clone();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
62	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    if((  expected.length  <  1)||(expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
63	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    if((  expected.length  <  1)||(expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
64	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    if((  expected.length  <  1)||(expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
65	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  ==  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    if((  expected.length  <  1)||(expected.length  ==  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
66	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  [Delete]  observed.length))  {  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  <  1)||(expected.length  [Delete]  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    if((  expected.length  <  1)||(expected.length  [Delete]  observed.length))  {	  	non-compiled	[CE]  ')'  expected	97	None	add
67	[BUG]  [BUGGY]  double  expectedSq  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedSq  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedSq  =  observed.length  -  1;	  double    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
68	[BUG]  [BUGGY]  double  expectedSq  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedSq  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedSq  =  observed.length  /  2;	  double    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
69	[BUG]  [BUGGY]  double  expectedSq  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedSq  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedSq  =  observed.length  -  2;	  double    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
70	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  +  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  +  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (expected.length  +  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    +    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	22	None	replace
71	[BUG]  [BUGGY]  if(expected.length  <  =  1  ||  (expected.length  +  observed.length))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  1  ||  (expected.length  +  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  1  ||  (expected.length  +  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    +    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
72	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  +  observed.length  -  1))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  +  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (expected.length  +  observed.length  -  1))  {	  if(expected.length    <    =    0    ||    (expected.length    +    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
73	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  observed);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  observed);	  ((    ChiSquareDistribution)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
74	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(new  long[]  {  expected,  observed  }  );  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(new  long[]  {  expected,  observed  }  );  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(new  long[]  {  expected,  observed  }  );	  ((    ChiSquareDistribution)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
75	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(observed,  expected);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(observed,  expected);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(observed,  expected);	  ((    ChiSquareDistribution)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
76	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  /  1  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  /  1  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  /  1  +  1;	  int    expectedLength    =    observed.length    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
77	[BUG]  [BUGGY]  If(expected.length  <  2  ||  (expected.length  >  observed.length))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  If(expected.length  <  2  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	If(expected.length  <  2  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	91	None	replace
78	[BUG]  [BUGGY]  If(expected.length  <  2  ||  expected.length  >  observed.length)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  If(expected.length  <  2  ||  expected.length  >  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	If(expected.length  <  2  ||  expected.length  >  observed.length)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	91	None	replace
79	[BUG]  [BUGGY]  If(expected.length  <  1  ||  (expected.length  >  observed.length))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  If(expected.length  <  1  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	If(expected.length  <  1  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	91	None	replace
80	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  ==  0)  {	  if(expected    <    0    ||    observed.length!=    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	159	None	replace
81	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  >  0)  {	  if(expected    <    0    ||    observed.length!=    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	159	None	replace
82	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  >=  0)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  >=  0)  {	  if(expected    <    0    ||    observed.length!=    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	159	None	replace
83	[BUG]  [BUGGY]  long[]  observed  =  this.observed,  observed.clone();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.observed,  observed.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.observed,  observed.clone();	  long[]    observed    =    this.observed.clone();    	non-compiled	[CE]  ';'  expected	20	None	replace
84	[BUG]  [BUGGY]  long[]  observed  =(long[])this.observed.clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =(long[])this.observed.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =(long[])this.observed.clone();	  long[]    observed    =    this.observed.clone();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected.length  <  1)||(expected.length  >  observed.length  +  1))  {	  if((    expected.length    <    1)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	42	6	replace
86	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length  +  1))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  <  1)||(expected.length  >  observed.length  +  1))  {	  if((    expected.length    <    1)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	42	6	replace
87	[BUG]  [BUGGY]  if((  expected  <  1)||(expected.length  >  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  1)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  1)||(expected.length  >  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	42	None	replace
88	[BUG]  [BUGGY]  double  expected  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expected  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expected  =  observed.length  -  2;	  int    expected    =    observed.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
89	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  /  2;	  int    expectedLength    =    observed.length    /    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
90	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  /  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length  /  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  /  1;	  int    expectedLength    =    observed.length    /    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
91	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length  /  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  /  1;	  int    expectedLength    =    observed.length    /    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
92	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  *  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  *  1;	  int    expectedLength    =    observed.length    /    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
93	[BUG]  [BUGGY]  long  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    int    unexpectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
94	[BUG]  [BUGGY]  long  expectedLengths  =  observed.length;  unexpectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLengths  =  observed.length;  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLengths  =  observed.length;  unexpectedLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    int    unexpectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
95	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length  -  1;	          int    expectedLengths    =    observed.length;    int    unexpectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
96	[BUG]  [BUGGY]  int[]  observed  =  new  int[size()  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  observed  =  new  int[size()  -  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  observed  =  new  int[size()  -  1];	  long[]    observed    =    new    long[size()    -    1];    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
97	[BUG]  [BUGGY]  short[]  observed  =  new  long[size()];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  short[]  observed  =  new  long[size()];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	short[]  observed  =  new  long[size()];	  long[]    observed    =    new    long[size()    -    1];    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
98	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length  >=  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected[0]    <    0)||(expected.length    >=    0))    {    if((  expected[0]  <  0)||(expected.length  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
99	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length  >>  0))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length  >>  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected[0]    <    0)||(expected.length    >=    0))    {    if((  expected[0]  <  0)||(expected.length  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
100	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length!=  0))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length!=  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected[0]    <    0)||(expected.length    >=    0))    {    if((  expected[0]  <  0)||(expected.length!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
101	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length  ==  0))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  <  0)||(expected.length  ==  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected[0]    <    0)||(expected.length    >=    0))    {    if((  expected[0]  <  0)||(expected.length  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  observed.length  >  expected.length)  {	  if(expected.length    <    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	167	6	replace
103	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  >  expected.length)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  observed.length  >  expected.length)  {	  if(expected.length    <    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	167	6	replace
104	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length  >=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length  >=  2)  {	  if(expected.length    <    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	167	6	replace
105	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length  >=  2)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length  >=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length  >=  2)  {	  if(expected.length    <    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	167	6	replace
106	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length!=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length!=  2)  {	  if(expected.length    <    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	167	6	replace
107	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length!=  2)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length!=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length!=  2  ||  expected.length!=  2)  {	  if(expected.length    <    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	167	6	replace
108	[BUG]  [BUGGY]  int  len  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  len  =  observed.length  -  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  len  =  observed.length  -  1;	  int    len    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
109	[BUG]  [BUGGY]  double  len  =  observed.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  len  =  observed.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  len  =  observed.length;	  int    len    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
110	[BUG]  [BUGGY]  long  len  =  observed.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  len  =  observed.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  len  =  observed.length;	  int    len    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
111	[BUG]  [BUGGY]  int  len  =  expected.length;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  len  =  expected.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  len  =  expected.length;	  int    len    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
112	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length!=    observed.length))    {    if(expected.length!=  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
113	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length  >=  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length  >=  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length!=    observed.length))    {    if(expected.length  >=  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
114	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length!=    observed.length))    {    if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
115	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length!=    observed.length))    {    if(expected.length!=  0  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
116	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    0    ||    (expected.length!=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
117	[BUG]  [BUGGY]  if(expected.length  <  =  2)  {  If(expected.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  2)  {  If(expected.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  2)  {  If(expected.length  <  2)  {	  if(expected.length    <    2)    {    If(expected.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
118	[BUG]  [BUGGY]  if(expected.length  <  1)  {  If(expected.length  <  2)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1)  {  If(expected.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1)  {  If(expected.length  <  2)  {	  if(expected.length    <    2)    {    If(expected.length    <    2)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
119	[BUG]  [BUGGY]  if(expected.length  <  0)  {  If(expected.length  <  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0)  {  If(expected.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0)  {  If(expected.length  <  0)  {	  if(expected.length    <    2)    {    If(expected.length    <    2)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
120	[BUG]  [BUGGY]  double  expected  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expected  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expected  =  observed.length  -  1;	  int    expected    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
121	[BUG]  [BUGGY]  int  expected  =  observed.length  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expected  =  observed.length  /  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  /  1;	  int    expected    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
122	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDistribution(),  observed);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  distribution.getDistribution(),  observed);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.getDistribution(),  observed);	  long[]    observed    =    distribution.getDistribution();    	non-compiled	[CE]  ';'  expected	183	None	replace
123	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDistribution(),  observed;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  distribution.getDistribution(),  observed;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.getDistribution(),  observed;	  long[]    observed    =    distribution.getDistribution();    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
124	[BUG]  [BUGGY]  long[]  observed  =  this.distribution.getDistribution();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.distribution.getDistribution();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.distribution.getDistribution();	  long[]    observed    =    distribution.getDistribution();    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
125	[BUG]  [BUGGY]  int[]  expected  =  new  int[0];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  expected  =  new  int[0];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  expected  =  new  int[0];	  long[]    expected    =    new    long[0];    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
126	[BUG]  [BUGGY]  if(expected.length  ==  2)  {  if(expected.length  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2)  {  if(expected.length  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2)    {    if(expected.length  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
127	[BUG]  [BUGGY]  if(expected.length  ==  2)  {  if(expected.length!=  2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2)  {  if(expected.length!=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2)    {    if(expected.length!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
128	[BUG]  [BUGGY]  if(expected.length  ==  2)  {  if(expected.length  >=  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2)  {  if(expected.length  >=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2)    {    if(expected.length  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
129	[BUG]  [BUGGY]  if(expected.length  ==  2)  {  If(expected.length  ==  2)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2)  {  If(expected.length  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2)    {    If(expected.length  ==  2)  {	  	non-compiled	[CE]  ';'  expected	136	None	add
130	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  *  distribution;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution()  *  distribution;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  *  distribution;	  long[]    observed    =    getDistribution()    /    distribution;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
131	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  /  distribution.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution()  /  distribution.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  /  distribution.length;	  long[]    observed    =    getDistribution()    /    distribution;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
132	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().length  /  distribution;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution().length  /  distribution;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().length  /  distribution;	  long[]    observed    =    getDistribution()    /    distribution;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
133	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  2;	          int    expectedLength    =    observed.length    -    1;    int    expectedLength    =    observed.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
134	[BUG]  [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  >=  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  >=  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    >=    0    ||    observed.length!=    0)    {    if(expected.length  >=  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
135	[BUG]  [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    >=    0    ||    observed.length!=    0)    {    if(expected.length!=  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
136	[BUG]  [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  >=  0  ||  observed.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  >=  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    >=    0    ||    observed.length!=    0)    {    if(expected.length  >=  0  ||  observed.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
137	[BUG]  [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    >=    0    ||    observed.length!=    0)    {    if(expected.length  ==  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
138	[BUG]  [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  >>  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  if(expected.length  >>  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    >=    0    ||    observed.length!=    0)    {    if(expected.length  >>  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
139	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution().doubleValue()  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().doubleValue()  +  1;	  long[]    observed    =    getDistribution().doubleValue();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
140	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().longValue();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution().longValue();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().longValue();	  long[]    observed    =    getDistribution().doubleValue();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
141	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().doubleValue()  /  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution().doubleValue()  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().doubleValue()  /  2;	  long[]    observed    =    getDistribution().doubleValue();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  >  expected.length)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	90	6	replace
143	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  >  expected.length)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  >  expected.length)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	90	6	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	90	6	replace
145	[BUG]  [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	90	6	replace
146	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    0)    {    if(expected.length  <  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
147	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    0)    {    if(expected.length  <  0  ||  observed.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
148	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    0)    {    if(expected.length  <  0  ||  observed.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
149	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  if(expected.length  <  0  ||  observed.length  >>  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    0)    {    if(expected.length  <  0  ||  observed.length  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
150	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;	          int    expectedLength    =    observed.length    -    1;    int    expectLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
151	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  -  2;  int  expectLength  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  -  2;  int  expectLength  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  -  2;  int  expectLength  =  observed.length  -  2;	          int    expectedLength    =    observed.length    -    1;    int    expectLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
152	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;	          int    expectedLength    =    observed.length    -    1;    int    expectLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
153	[BUG]  [BUGGY]  Integer  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Integer  expectedSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Integer  expectedSq  =  observed.length;	          int    expectedSq    =    observed.length;    Int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
154	[BUG]  [BUGGY]  long  expectedSq  =  observed.length;  Int  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedSq  =  observed.length;  Int  expectedSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedSq  =  observed.length;  Int  expectedSq  =  observed.length;	          int    expectedSq    =    observed.length;    Int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
155	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  ==  expected.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  ==  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  ==  expected.length)  {	  if(expected    <    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	158	None	replace
156	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  >=  expected.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  >=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  >=  expected.length)  {	  if(expected    <    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	158	None	replace
157	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  2  ||  (expected.length  ==  observed.length))  {	  if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	17	6	replace
158	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length  ==  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2  ||  (expected.length  ==  observed.length))  {	  if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	17	6	replace
159	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {	  if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	17	6	replace
160	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {	  if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	17	6	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  &&  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  2  &&  (expected.length!=  observed.length))  {	  if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	17	6	replace
162	[BUG]  [BUGGY]  if(expected.length!=  2  &&  (expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  &&  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2  &&  (expected.length!=  observed.length))  {	  if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	17	6	replace
163	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected!=  null  ||  expected.length!=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected!=  null  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=    null    ||    expected.length!=    observed.length)    {    if(expected!=  null  ||  expected.length!=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
164	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected  ==  null  ||  expected.length!=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected  ==  null  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=    null    ||    expected.length!=    observed.length)    {    if(expected  ==  null  ||  expected.length!=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
165	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected!=  null  ||  expected.length  >=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected!=  null  ||  expected.length  >=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=    null    ||    expected.length!=    observed.length)    {    if(expected!=  null  ||  expected.length  >=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
166	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected  >=  null  ||  expected.length!=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected  >=  null  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=    null    ||    expected.length!=    observed.length)    {    if(expected  >=  null  ||  expected.length!=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
167	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected!=  null  ||  expected.length  ==  observed.length)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  if(expected!=  null  ||  expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=    null    ||    expected.length!=    observed.length)    {    if(expected!=  null  ||  expected.length  ==  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
168	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	  ((    expected    <    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
169	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  observed.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  observed.length  <  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
170	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  observed.length  >  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	180	6	replace
171	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  >  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  observed.length  >  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	180	6	replace
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  observed.length  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1  ||  observed.length  <  1)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  AssertionFailedError  	180	6	replace
173	[BUG]  [BUGGY]  if(expected.length  <  1  ||  observed.length  <  1)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  observed.length  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1  ||  observed.length  <  1)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  AssertionFailedError  	180	6	replace
174	[BUG]  [BUGGY]  double  expectedLengths  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLengths  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLengths  =  observed.length  -  1;	  double    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
175	[BUG]  [BUGGY]  double  expectedLengths  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLengths  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLengths  =  observed.length  -  2;	  double    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
176	[BUG]  [BUGGY]  if(expected.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0)  {	  if(expected.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
177	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  >=  0)  {	  if(expected.length    <    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	139	6	replace
178	[BUG]  [BUGGY]  if(expected.length  >=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  >=  0)  {	  if(expected.length    <    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	139	6	replace
179	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  >=  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
180	[BUG]  [BUGGY]  if(expected.length  >=  observed.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  >=  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
181	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  observed.length  ||  observed.length!=  0)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
182	[BUG]  [BUGGY]  if(expected.length!=  observed.length  ||  observed.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  observed.length  ||  observed.length!=  0)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
183	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  null,  observed);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  null,  observed);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  null,  observed);	  long[]    observed    =    getDistribution(),    null);    	non-compiled	[CE]  <identifier>  expected	184	None	replace
184	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  distribution);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  distribution);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  distribution);	  long[]    observed    =    getDistribution(),    null);    	non-compiled	[CE]  ';'  expected	184	None	replace
185	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  this);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  this);	  long[]    observed    =    getDistribution(),    null);    	non-compiled	[CE]  <identifier>  expected	184	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  2)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  observed.length  <  2)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	83	6	replace
187	[BUG]  [BUGGY]  if((  observed.length  <  2)||(expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  2)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed.length  <  2)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	83	6	replace
188	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	83	None	replace
189	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  >  expected.length))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  >  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (observed.length  >  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
190	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (observed.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  AssertionFailedError  	11	6	replace
192	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (observed.length!=  expected.length))  {  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  AssertionFailedError  	11	6	replace
193	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  -  2;	  long    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
194	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  observed  }  );  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  observed  }  );  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  observed  }  );	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
195	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  null);  [CE]  '}'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  null);	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  '}'  expected	160	None	replace
196	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  observed);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  observed);	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
197	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  observed.length  ==  0)  {	  if(expected.length    ==    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	110	6	replace
198	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length  ==  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  observed.length  ==  0)  {	  if(expected.length    ==    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	110	6	replace
199	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length  >=  0)  {	  if(expected.length    ==    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	110	6	replace
200	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length  >=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length  >=  0)  {	  if(expected.length    ==    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	110	6	replace
201	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  >  observed.length  -  1))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (expected.length  >  observed.length  -  1))  {	  if(expected.length    <    =    0    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  expected.length  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  expected.length  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	10	6	replace
203	[BUG]  [BUGGY]  if(expected.length  <  expected.length  ||  (expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  expected.length  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  expected.length  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	10	6	replace
204	[BUG]  [BUGGY]  if((  expected[0]  <  =  0)||(expected.length  >  0))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  =  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  =  0)||(expected.length  >  0))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
205	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  0)||(expected.length  >  1))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
206	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  0)||(expected.length  >  1))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
207	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  >=  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  >=  0)||(expected.length  >  0))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
208	[BUG]  [BUGGY]  if((  expected[0]  >=  0)||(expected.length  >  0))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  >=  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  >=  0)||(expected.length  >  0))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
209	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  /  2  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[size()  /  2  +  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  /  2  +  1];	  long[]    observed    =    new    long[size()    /    2];    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
210	[BUG]  [BUGGY]  ((  expected  <  1)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  1)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  1)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	  ((    expected    <    1)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
211	[BUG]  [BUGGY]  ((  expected  <  1)||(expected.length  >>  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  1)||(expected.length  >>  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  1)||(expected.length  >>  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	  ((    expected    <    1)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
212	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  >  2)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
213	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  >  2)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  >  2)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  observed.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1  ||  observed.length  <  2)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	29	6	replace
215	[BUG]  [BUGGY]  if(expected.length  <  1  ||  observed.length  <  2)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  observed.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1  ||  observed.length  <  2)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	29	6	replace
216	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  >  1)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
217	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  >  1)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  >  1)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
218	[BUG]  [BUGGY]  if(expected.length  <  =  2  ||  observed.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  2  ||  observed.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  2  ||  observed.length  <  2)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
219	[BUG]  [BUGGY]  int  expectedSq  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedSq  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  observed.length  /  2;	  int    expectedSq    =    observed.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
220	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected);	  ((    ChiSquareTestImpl)this).chiSquare();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
221	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(null,  observed);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(null,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(null,  observed);	  ((    ChiSquareTestImpl)this).chiSquare();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
222	[BUG]  [BUGGY]  long  expected  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expected  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expected  =  observed.length  -  1;	  long    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
223	[BUG]  [BUGGY]  long  expected  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expected  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expected  =  observed.length  -  2;	  long    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
224	[BUG]  [BUGGY]  float  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  float  expectedSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	float  expectedSq  =  observed.length;	          int    expectedSq    =    observed.length;    long    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
225	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  /  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  /  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  /  1;	  int    expectedLengths    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
226	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  if(expected.length  <  0  ||  observed.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  if(expected.length  <  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length    <    0)    {    if(expected.length  <  0  ||  observed.length  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
227	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  If(expected.length  <  0  ||  observed.length  <  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  If(expected.length  <  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length    <    0)    {    If(expected.length  <  0  ||  observed.length  <  0)  {	  	non-compiled	[CE]  ';'  expected	179	None	add
228	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  if(expected.length  <  0  ||  observed.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  if(expected.length  <  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length    <    0)    {    if(expected.length  <  0  ||  observed.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
229	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  estimated.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  estimated.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  observed.length  >  estimated.length)  {	  if(expected.length    <    =    0    ||    observed.length    >    expected.length)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
230	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  arrayLength)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  arrayLength)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  observed.length  >  arrayLength)  {	  if(expected.length    <    =    0    ||    observed.length    >    expected.length)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
231	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  -  1;  Int  expectedLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length  -  1;  Int  expectedLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  -  1;  Int  expectedLength  =  observed.length  -  1;	          int    expectedLength    =    observed.length    -    1;    Int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
232	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  /  1;  Int  expectedLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  /  1;  Int  expectedLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  /  1;  Int  expectedLength  =  observed.length  -  1;	          int    expectedLength    =    observed.length    -    1;    Int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
233	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  >>  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  >>  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  >>  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	  ((    expected    <    =    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	147	None	replace
234	[BUG]  [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >  observed.length  -  1))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  2  ||  (expected.length  >  observed.length  -  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
235	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1  ||  (expected.length  >  observed.length  -  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	54	6	replace
236	[BUG]  [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length  -  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1  ||  (expected.length  >  observed.length  -  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	54	6	replace
237	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  expected.length  >  observed.length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  expected.length  >  observed.length  -  1)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	54	6	replace
238	[BUG]  [BUGGY]  if(expected.length  <  2  ||  expected.length  >  observed.length  -  1)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  expected.length  >  observed.length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  expected.length  >  observed.length  -  1)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	54	6	replace
239	[BUG]  [BUGGY]  if(expected.length  <  0)  {  if(expected.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0)  {  if(expected.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0)    {    if(expected.length  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	138	None	add
240	[BUG]  [BUGGY]  if(expected.length  <  0)  {  if(expected.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0)  {  if(expected.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0)    {    if(expected.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	138	None	add
241	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length!=    observed.length))    {    if(expected.length  <  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
242	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length!=    observed.length))    {    if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
243	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length!=    observed.length))    {    if(expected.length  <  0  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
244	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  ==  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  if(expected.length  <  0  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length!=    observed.length))    {    if(expected.length  <  0  ||  (expected.length  ==  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
245	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
246	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
247	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
248	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  [Delete]  observed.length))  {  [CE]  ')'  expected  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  [Delete]  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length    >=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length  [Delete]  observed.length))  {	  	non-compiled	[CE]  ')'  expected	120	None	add
249	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    observed.length!=    0)    {    if(expected.length  ==  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
250	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    observed.length!=    0)    {    if(expected.length  ==  0  ||  observed.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
251	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length!=  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    observed.length!=    0)    {    if(expected.length!=  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
252	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  if(expected.length  ==  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    observed.length!=    0)    {    if(expected.length  ==  0  ||  observed.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
253	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (expected.length  >>  observed.length))  {	  if(expected.length    <    0    ||    (expected.length    >=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  2  ||  (expected.length  >  observed.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	13	6	replace
255	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  2  ||  (expected.length  >  observed.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	13	6	replace
256	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	13	6	replace
257	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	13	6	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  2  ||  (observed.length!=  expected.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	13	6	replace
259	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (observed.length!=  expected.length))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  2  ||  (observed.length!=  expected.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	13	6	replace
260	[BUG]  [BUGGY]  long  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedSq  =  observed.length;  int  expectSq  =  observed.length;	          int    expectedSq    =    observed.length;    int    expectSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
261	[BUG]  [BUGGY]  double  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedSq  =  observed.length;  int  expectSq  =  observed.length;	          int    expectedSq    =    observed.length;    int    expectSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
262	[BUG]  [BUGGY]  int  expectedSq  =  observed.length  -  1;  int  expectSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedSq  =  observed.length  -  1;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  observed.length  -  1;  int  expectSq  =  observed.length;	          int    expectedSq    =    observed.length;    int    expectSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
263	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  observed);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  observed);	  ((    ChiSquareDistributionImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
264	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  null);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  null);	  ((    ChiSquareDistributionImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
265	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  false);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  false);	  ((    ChiSquareDistributionImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
266	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().length  /  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution().length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().length  /  2;	  long[]    observed    =    getDistribution()    /    2;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
267	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  *  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution()  *  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  *  2;	  long[]    observed    =    getDistribution()    /    2;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
268	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  /  2L;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution()  /  2L;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  /  2L;	  long[]    observed    =    getDistribution()    /    2;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  ==  null  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected  ==  null  ||  observed.length!=  expected.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	169	6	replace
270	[BUG]  [BUGGY]  if(expected  ==  null  ||  observed.length!=  expected.length)  {  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  ==  null  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  ==  null  ||  observed.length!=  expected.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	169	6	replace
271	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected!=  null  ||  observed.length!=  expected.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	169	6	replace
272	[BUG]  [BUGGY]  if(expected!=  null  ||  observed.length!=  expected.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=  null  ||  observed.length!=  expected.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	169	6	replace
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  ==  null  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected  ==  null  ||  expected.length!=  observed.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	169	6	replace
274	[BUG]  [BUGGY]  if(expected  ==  null  ||  expected.length!=  observed.length)  {  [FE]  AssertionFailedError  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  ==  null  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  ==  null  ||  expected.length!=  observed.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	169	6	replace
275	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  expected.length)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
276	[BUG]  [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  expected.length)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
277	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  2)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected.length  <  2)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
278	[BUG]  [BUGGY]  if((  expected.length  <  2)||(expected.length  >  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  2)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  <  2)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
279	[BUG]  [BUGGY]  if((  expected  <  1)||(expected.length  >  1))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  1)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	176	None	replace
280	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
281	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  If(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  If(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    If(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {	  	non-compiled	[CE]  ';'  expected	55	None	add
282	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  if(expected.length  >=  2  ||  (expected.length  >  observed.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  if(expected.length  >=  2  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    if(expected.length  >=  2  ||  (expected.length  >  observed.length  +  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
283	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  if(expected.length  <  2  ||  observed.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  if(expected.length  <  2  ||  observed.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    observed.length    <    2)    {    if(expected.length  <  2  ||  observed.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
284	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  If(expected.length  <  2  ||  observed.length  <  2)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  If(expected.length  <  2  ||  observed.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    observed.length    <    2)    {    If(expected.length  <  2  ||  observed.length  <  2)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
285	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  if(expected.length  >=  2  ||  observed.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  if(expected.length  >=  2  ||  observed.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    observed.length    <    2)    {    if(expected.length  >=  2  ||  observed.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
286	[BUG]  [BUGGY]  if(expected!=  0  ||  observed.length!=  expected.length)  {  [CE]  incomparable  types:  double[]  and  int  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=  0  ||  observed.length!=  expected.length)  {	  if(expected    ==    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  incomparable  types:  double[]  and  int	60	None	replace
287	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
288	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
289	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  0  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    if(expected.length  ==  0  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
290	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    if(expected.length!=  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
291	[BUG]  [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length;        int    expectLength    =    observed.length;    int  expectedLength  =  observed.length;  int  expectLength  =  observed.length;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	86	None	add
292	[BUG]  [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  expectLength  =  observed.length;  int  expectLength  =  observed.length;  [CE]  variable  expectLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  expectLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length;        int    expectLength    =    observed.length;    int  expectLength  =  observed.length;  int  expectLength  =  observed.length;	  	non-compiled	[CE]  variable  expectLength  is  already  defined  in  method  chiSquare(double[],long[])	86	None	add
293	[BUG]  [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  long  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  long  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length;        int    expectLength    =    observed.length;    long  expectedLength  =  observed.length;  int  expectLength  =  observed.length;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	86	None	add
294	[BUG]  [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  unexpectedLength  =  observed.length;  int  expectLength  =  observed.length;  [CE]  variable  expectLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  unexpectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length;        int    expectLength    =    observed.length;    int  unexpectedLength  =  observed.length;  int  expectLength  =  observed.length;	  	non-compiled	[CE]  variable  expectLength  is  already  defined  in  method  chiSquare(double[],long[])	86	None	add
295	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length  >  0)  {	  if(expected.length    <    =    0    ||    observed.length    >    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	115	6	replace
296	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length  >  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length  >  0)  {	  if(expected.length    <    =    0    ||    observed.length    >    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	115	6	replace
297	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  observed.length  >  0)  {	  if(expected.length    <    =    0    ||    observed.length    >    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	115	6	replace
298	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length  >  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  observed.length  >  0)  {	  if(expected.length    <    =    0    ||    observed.length    >    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	115	6	replace
299	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length!=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    observed.length)    {    if(expected.length!=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
300	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length  >=  observed.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length  >=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    observed.length)    {    if(expected.length  >=  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
301	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length  ==  observed.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    observed.length)    {    if(expected.length  ==  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
302	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length  >>  observed.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length)  {  if(expected.length  >>  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    observed.length)    {    if(expected.length  >>  observed.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
303	[BUG]  [BUGGY]  int[]  observed  =  expected.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  observed  =  expected.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  observed  =  expected.clone();	  long[]    observed    =    expected.clone();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
304	[BUG]  [BUGGY]  long[]  observed  =  this.expected.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.expected.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.expected.clone();	  long[]    observed    =    expected.clone();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
305	[BUG]  [BUGGY]  if(expected.length  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  1)  {	  if(expected.length    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  1)  {	  if(expected.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	27	6	replace
307	[BUG]  [BUGGY]  if(expected.length  ==  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  1)  {	  if(expected.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	27	6	replace
308	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  1)  {	  if(expected.length    <    1)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	27	6	replace
309	[BUG]  [BUGGY]  if(expected.length!=  1)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  1)  {	  if(expected.length    <    1)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	27	6	replace
310	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  observed.length  <  =  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  observed.length  <  =  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  2  ||  observed.length  <  =  2)  {	  if(expected.length    <    =    2)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
311	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    expected.length)    {    if(expected.length  <  0  ||  observed.length!=  expected.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
312	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length  >=  expected.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length  >=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    expected.length)    {    if(expected.length  <  0  ||  observed.length  >=  expected.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
313	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length  ==  expected.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length  ==  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    expected.length)    {    if(expected.length  <  0  ||  observed.length  ==  expected.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
314	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length  >>  expected.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  if(expected.length  <  0  ||  observed.length  >>  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    expected.length)    {    if(expected.length  <  0  ||  observed.length  >>  expected.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
315	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  >  0)  {	  if(expected.length    <    2)    {    if(expected.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	80	6	replace
316	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  >  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  >  0)  {	  if(expected.length    <    2)    {    if(expected.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	80	6	replace
317	[BUG]  [BUGGY]  long  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length;  int  expectLength  =  observed.length;	          int    expectedLength    =    observed.length;    int    expectLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
318	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length;	          int    expectedLength    =    observed.length;    int    expectLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
319	[BUG]  [BUGGY]  double  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length;  int  expectLength  =  observed.length;	          int    expectedLength    =    observed.length;    int    expectLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
320	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  +  observed.length))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  +  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (observed.length  +  observed.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
321	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  /  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[size()  /  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  /  1];	  long[]    observed    =    new    long[size()    +    1];    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
322	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  *  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[size()  *  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  *  1];	  long[]    observed    =    new    long[size()    +    1];    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
323	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
324	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectLengths  =  observed.length;  int  expectLengths  =  observed.length;  [CE]  variable  expectLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectLengths  =  observed.length;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
325	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [CE]  variable  expectLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  expectLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
326	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  expectLengths  =  observed[length];  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  expectLengths  =  observed[length];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  expectedLengths  =  observed.length;  int  expectLengths  =  observed[length];	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
327	[BUG]  [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length        -        1;        int    expectLength    =    observed.length    -    1;    int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	35	None	add
328	[BUG]  [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [CE]  variable  expectLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length        -        1;        int    expectLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;	  	non-compiled	[CE]  variable  expectLength  is  already  defined  in  method  chiSquare(double[],long[])	35	None	add
329	[BUG]  [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  2;  int  expectLength  =  observed.length  -  1;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  2;  int  expectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length        -        1;        int    expectLength    =    observed.length    -    1;    int  expectedLength  =  observed.length  -  2;  int  expectLength  =  observed.length  -  1;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	35	None	add
330	[BUG]  [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  long  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  long  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length        -        1;        int    expectLength    =    observed.length    -    1;    long  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	35	None	add
331	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  +  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  +  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  <  1)||(expected.length  +  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	98	None	replace
332	[BUG]  [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  2  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
333	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  +  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  +  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  (expected.length  +  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
334	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
335	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    if(expected.length  ==  2  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
336	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  2  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  if(expected.length  ==  2  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    if(expected.length  ==  2  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
337	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  If(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  If(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    If(expected.length  ==  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  ';'  expected	12	None	add
338	[BUG]  [BUGGY]  int[]  expected  =  new  int[2];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  expected  =  new  int[2];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  expected  =  new  int[2];	  int[]    expected    =    new    int[1];    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
339	[BUG]  [BUGGY]  double[]  expected  =  new  double[1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double[]  expected  =  new  double[1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double[]  expected  =  new  double[1];	  int[]    expected    =    new    int[1];    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
340	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
341	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  If(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  If(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    If(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {	  	non-compiled	[CE]  ';'  expected	53	None	add
342	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  if(expected.length  >=  2  ||  (expected.length  >  observed.length  -  1))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  if(expected.length  >=  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    if(expected.length  >=  2  ||  (expected.length  >  observed.length  -  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
343	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  if((  expected.length  <  1)||(expected.length  >  1))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  if((  expected.length  <  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >    1))    {    if((  expected.length  <  1)||(expected.length  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
344	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  if((  expected.length  <  2)||(expected.length  >  1))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  if((  expected.length  <  2)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >    1))    {    if((  expected.length  <  2)||(expected.length  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
345	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  if((  expected.length  >=  1)||(expected.length  >  1))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  if((  expected.length  >=  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >    1))    {    if((  expected.length  >=  1)||(expected.length  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
346	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  -  2];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[size()  -  2];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  -  2];	  long[]    observed    =    new    long[size()    *    2];    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
347	[BUG]  [BUGGY]  int[]  observed  =  new  int[size()  /  2];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  observed  =  new  int[size()  /  2];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  observed  =  new  int[size()  /  2];	  long[]    observed    =    new    long[size()    *    2];    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
348	[BUG]  [BUGGY]  long[]  observed  =  new  long[length()  +  1];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[length()  +  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[length()  +  1];	  long[]    observed    =    new    long[length()    ];    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
349	[BUG]  [BUGGY]  long[]  observed  =  new  long[length()  *  2];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[length()  *  2];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[length()  *  2];	  long[]    observed    =    new    long[length()    ];    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
350	[BUG]  [BUGGY]  long[]  observed  =  new  long[length()  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[length()  -  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[length()  -  1];	  long[]    observed    =    new    long[length()    ];    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
351	[BUG]  [BUGGY]  int  i  =  expected.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  expected.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  i  =  expected.length;	  int    i    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
352	[BUG]  [BUGGY]  int  i  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  observed.length  -  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  i  =  observed.length  -  1;	  int    i    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
353	[BUG]  [BUGGY]  int  i  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  observed.length  -  2;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  i  =  observed.length  -  2;	  int    i    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
354	[BUG]  [BUGGY]  int  i  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  observed.length  +  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  i  =  observed.length  +  1;	  int    i    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
355	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
356	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  2  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
357	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
358	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  ==  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  2  ||  (expected.length  ==  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
359	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  [Delete]  observed.length))  {  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  if(expected.length  <  2  ||  (expected.length  [Delete]  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    if(expected.length  <  2  ||  (expected.length  [Delete]  observed.length))  {	  	non-compiled	[CE]  ')'  expected	14	None	add
360	[BUG]  [BUGGY]  if((  observed  <  null)||(expected.length  >  expected.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed  <  null)||(expected.length  >  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed  <  null)||(expected.length  >  expected.length))  {	  if((    expected    <    null)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	177	None	replace
361	[BUG]  [BUGGY]  if((  expected  <  null)&&(expected.length  >  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  null)&&(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  null)&&(expected.length  >  observed.length))  {	  if((    expected    <    null)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	177	None	replace
362	[BUG]  [BUGGY]  if((  expected  <  null)||(observed.length  >  expected.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  null)||(observed.length  >  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  null)||(observed.length  >  expected.length))  {	  if((    expected    <    null)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	177	None	replace
363	[BUG]  [BUGGY]  long[]  expected  =  observed!=  null?  null  :  observed.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  expected  =  observed!=  null?  null  :  observed.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  observed!=  null?  null  :  observed.clone();	  long[]    expected    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
364	[BUG]  [BUGGY]  long[]  expected  =  observed  ==  null?  null  :  observed.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  expected  =  observed  ==  null?  null  :  observed.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  observed  ==  null?  null  :  observed.clone();	  long[]    expected    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
365	[BUG]  [BUGGY]  int[]  expected  =  observed.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  expected  =  observed.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  expected  =  observed.clone();	  long[]    expected    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
366	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  -  2;	  double    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
367	[BUG]  [BUGGY]  long[]  observed  =  observed.length();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  observed.length();  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  observed.length();	  long[]    observed    =    observed.lengths();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
368	[BUG]  [BUGGY]  long[]  observed  =  observed.length()  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  observed.length()  -  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  observed.length()  -  1;	  long[]    observed    =    observed.lengths();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
369	[BUG]  [BUGGY]  long[]  observed  =  observed.length()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  observed.length()  +  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  observed.length()  +  1;	  long[]    observed    =    observed.lengths();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
370	[BUG]  [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >  observed.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  2  ||  (expected.length  >  observed.length  +  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1  ||  (expected.length  >  observed.length  +  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    	compilable	  [FE]  AssertionFailedError  	56	6	replace
372	[BUG]  [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length  +  1))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1  ||  (expected.length  >  observed.length  +  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    	compilable	  [FE]  AssertionFailedError  	56	6	replace
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  expected.length  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  >  expected.length  +  1)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    	compilable	  [FE]  AssertionFailedError  	56	6	replace
374	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  >  expected.length  +  1)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  expected.length  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  >  expected.length  +  1)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    	compilable	  [FE]  AssertionFailedError  	56	6	replace
375	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >    observed.length))    {    if((  expected.length  <  1)||(expected.length  >  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
376	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  if((  expected.length  >=  1)||(expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  if((  expected.length  >=  1)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >    observed.length))    {    if((  expected.length  >=  1)||(expected.length  >  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
377	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  If((  expected.length  <  1)||(expected.length  >  observed.length))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  If((  expected.length  <  1)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >    observed.length))    {    If((  expected.length  <  1)||(expected.length  >  observed.length))  {	  	non-compiled	[CE]  ';'  expected	41	None	add
378	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >=  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >=  observed.length))  {	  if((    expected    <    =    0)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	99	None	replace
379	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length!=  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length!=  observed.length))  {	  if((    expected    <    =    0)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	99	None	replace
380	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >>  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >>  observed.length))  {	  if((    expected    <    =    0)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	99	None	replace
381	[BUG]  [BUGGY]  If  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  If  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	If  ((  expected.length  <  2)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    If    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	84	None	replace
382	[BUG]  [BUGGY]  long[]  observed  =  this.dataset.clone(),  observed);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.dataset.clone(),  observed);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.dataset.clone(),  observed);	  long[]    observed    =    this.dataset.clone();    	non-compiled	[CE]  ';'  expected	142	None	replace
383	[BUG]  [BUGGY]  int[]  observed  =  this.dataset.clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  observed  =  this.dataset.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  observed  =  this.dataset.clone();	  long[]    observed    =    this.dataset.clone();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
384	[BUG]  [BUGGY]  long[]  observed  =  dataset.clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  dataset.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  dataset.clone();	  long[]    observed    =    this.dataset.clone();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
385	[BUG]  [BUGGY]  if(expected  ==  0  ||  observed.length!=  observed.length)  {  [CE]  incomparable  types:  double[]  and  int  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  ==  0  ||  observed.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  ==  0  ||  observed.length!=  observed.length)  {	  if(expected    ==    0    ||    observed.length!=    expected.length)    {    	non-compiled	[CE]  incomparable  types:  double[]  and  int	59	None	replace
386	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	126	6	replace
387	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	126	6	replace
388	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    if(expected.length!=  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
389	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length  >=  2  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length  >=  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    if(expected.length  >=  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
390	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    if(expected.length!=  2  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
391	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length  >>  2  ||  (expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length  >>  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    if(expected.length  >>  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
392	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length!=  2  ||  (expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  if(expected.length!=  2  ||  (expected.length  >>  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    2    ||    (expected.length!=    observed.length))    {    if(expected.length!=  2  ||  (expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
393	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    unexpectedLengths    =    observed.length;    int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	50	None	add
394	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [CE]  variable  unexpectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    unexpectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  unexpectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	50	None	add
395	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [CE]  variable  unexpectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    unexpectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  unexpectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	50	None	add
396	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  long  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  long  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    unexpectedLengths    =    observed.length;    long  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	50	None	add
397	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  *  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  *  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  *  1;	  int    expectedLengths    =    observed.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
398	[BUG]  [BUGGY]  double  expectedLengths  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLengths  =  observed.length  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLengths  =  observed.length  +  1;	  int    expectedLengths    =    observed.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
399	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {	  if(expected.length!=    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	128	6	replace
400	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (expected.length  ==  observed.length))  {	  if(expected.length!=    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	128	6	replace
401	[BUG]  [BUGGY]  if(expected  >=  0  ||  observed.length!=  expected.length)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  >=  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  >=  0  ||  observed.length!=  expected.length)  {	  if(expected    <    =    0    ||    observed.length!=    expected.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	58	None	replace
402	[BUG]  [BUGGY]  long  expectedLength  =  observed.length;  Int  expectedLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length;  Int  expectedLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length;  Int  expectedLength  =  observed.length;	          int    expectedLength    =    observed.length;    Int    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
403	[BUG]  [BUGGY]  Int  expectedLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Int  expectedLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Int  expectedLength  =  observed.length;	          int    expectedLength    =    observed.length;    Int    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
404	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  (expected.length  >  observed.length))  {	  if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	123	6	replace
405	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  >  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (expected.length  >  observed.length))  {	  if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	123	6	replace
406	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  <  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  (expected.length  <  observed.length))  {	  if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	123	6	replace
407	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  <  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  <  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (expected.length  <  observed.length))  {	  if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	123	6	replace
408	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >  1))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >  1))  {	  if((    expected    <    0)||(expected.length    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	132	None	replace
409	[BUG]  [BUGGY]  if((  expected  <  0)||(observed.length  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(observed.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(observed.length  >  0))  {	  if((    expected    <    0)||(expected.length    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	132	None	replace
410	[BUG]  [BUGGY]  if((  expected  <  0)&&(expected.length  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)&&(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)&&(expected.length  >  0))  {	  if((    expected    <    0)||(expected.length    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	132	None	replace
411	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  +  1;	  int    expectedLength    =    observed.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
412	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  +  1;	  int    expectedLength    =    observed.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
413	[BUG]  [BUGGY]  long[]  observed  =  this.chiSquare.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.chiSquare.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.chiSquare.clone();	  long[]    observed    =    chiSquare.clone();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	172	6	replace
415	[BUG]  [BUGGY]  if(expected.length  <  1  ||  (expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	172	6	replace
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	172	6	replace
417	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (observed.length!=  expected.length))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	172	6	replace
418	[BUG]  [BUGGY]  long  expectedLengths  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLengths  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLengths  =  observed.length  -  1;	  long    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
419	[BUG]  [BUGGY]  long  expectedLengths  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLengths  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLengths  =  observed.length  -  2;	  long    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
420	[BUG]  [BUGGY]  long  expectedLengths  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLengths  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLengths  =  observed.length  /  2;	  long    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
421	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length!=  observed.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length!=  observed.length)  {	  if(expected    <    0    ||    observed.length!=    expected.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	57	None	replace
422	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  ==  observed.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  ==  observed.length)  {	  if(expected    <    0    ||    observed.length!=    expected.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	57	None	replace
423	[BUG]  [BUGGY]  long[]  observed  =  observed  ==  null?  null  :  observed.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  observed  ==  null?  null  :  observed.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  observed  ==  null?  null  :  observed.clone();	  long[]    observed    =    observed!=    null?    null    :    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  observed.length  ||  observed.length  ==  0)  {	  if(expected.length    ==    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	9	6	replace
425	[BUG]  [BUGGY]  if(expected.length!=  observed.length  ||  observed.length  ==  0)  {  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  observed.length  ||  observed.length  ==  0)  {	  if(expected.length    ==    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	9	6	replace
426	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length  /  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  /  2;	  double    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
427	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  observed,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  observed,  null);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  observed,  null);	  long[]    observed    =    getDistribution(),    observed);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
428	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  observed,  distribution);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  observed,  distribution);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  observed,  distribution);	  long[]    observed    =    getDistribution(),    observed);    	non-compiled	[CE]  ';'  expected	73	None	replace
429	[BUG]  [BUGGY]  double  expected  =  expected.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expected  =  expected.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expected  =  expected.length;	  int    expected    =    expected.length;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
430	[BUG]  [BUGGY]  long  expected  =  expected.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expected  =  expected.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expected  =  expected.length;	  int    expected    =    expected.length;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
431	[BUG]  [BUGGY]  float  expected  =  expected.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  float  expected  =  expected.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	float  expected  =  expected.length;	  int    expected    =    expected.length;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
432	[BUG]  [BUGGY]  if((  observed  <  null)||(expected.length  >=  expected.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed  <  null)||(expected.length  >=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed  <  null)||(expected.length  >=  expected.length))  {	  if((    expected    <    null)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	182	None	replace
433	[BUG]  [BUGGY]  if((  expected  <  null)||(expected.length!=  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  null)||(expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  null)||(expected.length!=  observed.length))  {	  if((    expected    <    null)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	182	None	replace
434	[BUG]  [BUGGY]  int  arrayLengths  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  arrayLengths  =  observed.length  -  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  arrayLengths  =  observed.length  -  1;	  int    arrayLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
435	[BUG]  [BUGGY]  long  arrayLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  arrayLengths  =  observed.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  arrayLengths  =  observed.length;	  int    arrayLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
436	[BUG]  [BUGGY]  double  arrayLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  arrayLengths  =  observed.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  arrayLengths  =  observed.length;	  int    arrayLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
437	[BUG]  [BUGGY]  int  arrayLengths  =  expected.length;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  arrayLengths  =  expected.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  arrayLengths  =  expected.length;	  int    arrayLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
438	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  0))  {  if((  expected[0]  <  0)||(expected.length  >  0))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  0))  {  if((  expected[0]  <  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected[0]    <    0)||(expected.length    >    0))    {    if((  expected[0]  <  0)||(expected.length  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
439	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  0))  {  if((  expected[0]  >=  0)||(expected.length  >  0))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  0))  {  if((  expected[0]  >=  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected[0]    <    0)||(expected.length    >    0))    {    if((  expected[0]  >=  0)||(expected.length  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
440	[BUG]  [BUGGY]  if(expected.length  <  1)  {  if(expected.length  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1)  {  if(expected.length  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    1)    {    if(expected.length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
441	[BUG]  [BUGGY]  if(expected.length  <  1)  {  If(expected.length  <  1)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1)  {  If(expected.length  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    1)    {    If(expected.length  <  1)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
442	[BUG]  [BUGGY]  if(expected.length  <  1)  {  if(expected.length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1)  {  if(expected.length  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    1)    {    if(expected.length  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
443	[BUG]  [BUGGY]  if((  expected  <  =  0)&&(expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  =  0)&&(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  =  0)&&(expected.length  >  observed.length))  {	  if((    expected    <    =    0)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
444	[BUG]  [BUGGY]  if((  observed  <  =  0)||(expected.length  >  expected.length))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed  <  =  0)||(expected.length  >  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed  <  =  0)||(expected.length  >  expected.length))  {	  if((    expected    <    =    0)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
445	[BUG]  [BUGGY]  long  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    int    expectLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
446	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  -  1;  int  expectLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  -  1;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  -  1;  int  expectLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    int    expectLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
447	[BUG]  [BUGGY]  double  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    int    expectLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
448	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  observed);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  observed);	  ((    ChiSquareDistributionImpl)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
449	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  null);	  ((    ChiSquareDistributionImpl)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
450	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)observed).chiSquare(expected,  observed);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)observed).chiSquare(expected,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)observed).chiSquare(expected,  observed);	  ((    ChiSquareDistributionImpl)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
451	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  expected.length)||(expected.length  >  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	42	6	replace
452	[BUG]  [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  expected.length)||(expected.length  >  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	42	6	replace
453	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  1)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  1)||(expected.length  >  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	42	6	replace
454	[BUG]  [BUGGY]  if((  expected[0]  <  1)||(expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  1)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  1)||(expected.length  >  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	42	6	replace
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	10	6	replace
456	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	10	6	replace
457	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  >  expected.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  >  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length    >    expected.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	23	None	replace
458	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length  >  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length    >    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	23	6	replace
459	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length  >  expected.length)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length  >  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length    >    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	23	6	replace
460	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  If(expected.length  <  0  ||  observed.length!=  0)  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  If(expected.length  <  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    0)    {    If(expected.length  <  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
461	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  sumSq);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  sumSq);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  sumSq);	  ((    ChiSquareDistributionImpl)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
462	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(new  long[]  {  },  observed);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(new  long[]  {  },  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)distribution).chiSquare(new  long[]  {  },  observed);	  ((    ChiSquareDistributionImpl)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
463	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  x);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  x);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed,  x);	  ((    ChiSquareDistributionImpl)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
464	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  >=  1)||(expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  if((  expected.length  >=  1)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    if((  expected.length  >=  1)||(expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
465	[BUG]  [BUGGY]  ((  expected  <  =  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  =  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  =  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");	  ((    expected    <    0)||(expected.length    >=    observed.length)))    {    throw    new    IllegalArgumentException(   ",       ");    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
466	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  >  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  >  0)||(expected.length  >  0))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
467	[BUG]  [BUGGY]  if((  expected[0]  >  0)||(expected.length  >  0))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  >  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  >  0)||(expected.length  >  0))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
468	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  /  distribution.doubleValue();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution()  /  distribution.doubleValue();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  /  distribution.doubleValue();	  long[]    observed    =    getDistribution()    /    distribution;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
469	[BUG]  [BUGGY]  Long[]  observed  =  getDistribution()  *  distribution;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Long[]  observed  =  getDistribution()  *  distribution;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Long[]  observed  =  getDistribution()  *  distribution;	  long[]    observed    =    getDistribution()    /    distribution;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
470	[BUG]  [BUGGY]  if(expected.length  <  =  0)  {  If(expected.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0)  {  If(expected.length  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0)  {  If(expected.length  <  =  0)  {	  if(expected.length    <    2)    {    If(expected.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
471	[BUG]  [BUGGY]  if(expected.length  ==  0)  {  If(expected.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0)  {  If(expected.length  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0)  {  If(expected.length  <  =  0)  {	  if(expected.length    <    2)    {    If(expected.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
472	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  If(expected.length!=  observed.length)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length)  {  If(expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=    observed.length)    {    If(expected.length!=  observed.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
473	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  1];  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[size()  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  1];	  long[]    observed    =    new    long[size()    -    1];    	non-compiled	[CE]  ']'  expected	93	None	replace
474	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  *  2  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[size()  *  2  +  1];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  *  2  +  1];	  long[]    observed    =    new    long[size()    *    2];    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
475	[BUG]  [BUGGY]  long[]  observed  =  new  long[length()  /  2];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  new  long[length()  /  2];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[length()  /  2];	  long[]    observed    =    new    long[size()    *    2];    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
476	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  2  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	52	6	replace
477	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length  >  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	52	6	replace
478	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length  -  1  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  -  1  +  1;	  double    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
479	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  >=  0)||(expected.length  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  if((  expected[0]  >=  0)||(expected.length  >=  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected[0]    <    0)||(expected.length    >=    0))    {    if((  expected[0]  >=  0)||(expected.length  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
480	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >=  0))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >=  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >=  0))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    ==    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	4	None	replace
481	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  expected.length)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    ==    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	4	6	replace
482	[BUG]  [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  expected.length)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    ==    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	4	6	replace
483	[BUG]  [BUGGY]  long[]  observed  =  this.observed.toArray(new  long[this.observed.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.observed.toArray(new  long[this.observed.size()  ]);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.observed.toArray(new  long[this.observed.size()  ]);	  long[]    observed    =    this.observed.clone();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
484	[BUG]  [BUGGY]  Long[]  observed  =  this.observed.clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Long[]  observed  =  this.observed.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Long[]  observed  =  this.observed.clone();	  long[]    observed    =    this.observed.clone();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
485	[BUG]  [BUGGY]  long[]  observed  =  expected.lengths();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  expected.lengths();  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  expected.lengths();	  long[]    observed    =    observed.lengths();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
486	[BUG]  [BUGGY]  long[]  observed  =  this.chiSquare.lengths();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.chiSquare.lengths();  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.chiSquare.lengths();	  long[]    observed    =    observed.lengths();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
487	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  +  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  +  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (expected.length  +  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    +    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	22	None	replace
488	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  +  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (expected.length  +  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (expected.length  +  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    +    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	22	None	replace
489	[BUG]  [BUGGY]  ((  expected  <  1)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  1)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  1)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");	  ((    expected    <    1)||(expected.length    >=    observed.length)))    {    throw    new    IllegalArgumentException(   ",       ");    	non-compiled	[CE]  not  a  statement	150	None	replace
490	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  /  2  +  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  /  2  +  4;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  /  2  +  4;	  int    expectedLengths    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
491	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	11	6	replace
492	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (observed.length!=  expected.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	11	6	replace
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  AssertionFailedError  	11	6	replace
494	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (observed.length!=  expected.length))  {  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (observed.length!=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  AssertionFailedError  	11	6	replace
495	[BUG]  [BUGGY]  long[]  expected  =  chiSquare.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  expected  =  chiSquare.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  chiSquare.clone();	  long[]    expected    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
496	[BUG]  [BUGGY]  int  expectedLength  =  expected.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  expected.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  expected.length;	          int    expectedLength    =    observed.length;    long    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
497	[BUG]  [BUGGY]  Long[]  observed  =  getDistribution().clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Long[]  observed  =  getDistribution().clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Long[]  observed  =  getDistribution().clone();	  long[]    observed    =    getDistribution().clone();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
498	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length!=  1  &&  observed.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1  ||  (expected.length!=  1  &&  observed.length  >  0))  {	  if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	172	6	replace
499	[BUG]  [BUGGY]  if(expected.length  <  1  ||  (expected.length!=  1  &&  observed.length  >  0))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  1  ||  (expected.length!=  1  &&  observed.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1  ||  (expected.length!=  1  &&  observed.length  >  0))  {	  if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	172	6	replace
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length  <  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  AssertionFailedError  	180	6	replace
501	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length  <  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  AssertionFailedError  	180	6	replace
502	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  observed.length  <  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	180	6	replace
503	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length  <  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  observed.length  <  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	180	6	replace
504	[BUG]  [BUGGY]  long[]  observed  =  this.chiSquareDistributionImpl.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.chiSquareDistributionImpl.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.chiSquareDistributionImpl.clone();	  long[]    observed    =    this.chiSquareTestImpl.clone();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
505	[BUG]  [BUGGY]  double  expectedSq  =  expected.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedSq  =  expected.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedSq  =  expected.length;	  double    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
506	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  If(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  If(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length!=    observed.length))    {    If(expected.length  <  2  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  ';'  expected	171	None	add
507	[BUG]  [BUGGY]  Long[]  observed  =  this.dataset.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Long[]  observed  =  this.dataset.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Long[]  observed  =  this.dataset.clone();	  long[]    observed    =    this.dataset.clone();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
508	[BUG]  [BUGGY]  int  expectedLength  =  expected.length;  Int  expectedLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  expected.length;  Int  expectedLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  expected.length;  Int  expectedLength  =  observed.length;	          int    expectedLength    =    observed.length;    Int    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
509	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  -  2  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  -  2  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  -  2  +  1;	  int    expectedLength    =    observed.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
510	[BUG]  [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  observed.length;  int  expectedSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  observed.length;  int  expectedSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedSq        =        observed.length;        int    expectSq    =    observed.length;    int  expectedSq  =  observed.length;  int  expectedSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	105	None	add
511	[BUG]  [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  observed.length;  int  ExpectedLength  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  observed.length;  int  ExpectedLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedSq        =        observed.length;        int    expectSq    =    observed.length;    int  expectedSq  =  observed.length;  int  ExpectedLength  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	105	None	add
512	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (observed.length  >=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  (observed.length  >=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
513	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (observed.length  >=  expected.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (observed.length  >=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (observed.length  >=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
514	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (observed.length  >=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  (observed.length  >=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
515	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (observed.length  >=  expected.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  ||  (observed.length  >=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (observed.length  >=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
516	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (observed.length  >=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  (observed.length  >=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
517	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (observed.length  >=  expected.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (observed.length  >=  expected.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (observed.length  >=  expected.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
518	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  >=  1)  {	  if(expected.length    <    1)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	27	6	replace
519	[BUG]  [BUGGY]  if(expected.length  >=  1)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  >=  1)  {	  if(expected.length    <    1)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	27	6	replace
520	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  sumSq);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  sumSq);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  sumSq);	  ((    ChiSquareDistributionImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
521	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  x);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  x);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed,  x);	  ((    ChiSquareDistributionImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
522	[BUG]  [BUGGY]  if((  observed  <  null)||(expected.length  >  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed  <  null)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed  <  null)||(expected.length  >  observed.length))  {	  if((    expected    <    null)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	177	None	replace
523	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).setSquare(expected,  observed);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).setSquare(expected,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).setSquare(expected,  observed);	  ((    ChiSquareTestImpl)this).chiSquare();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
524	[BUG]  [BUGGY]  int  expectedSq  =  expected.length;  int  expectSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedSq  =  expected.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  expected.length;  int  expectSq  =  observed.length;	          int    expectedSq    =    observed.length;    int    expectSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
525	[BUG]  [BUGGY]  long[]  observed  =  distribution.chiSquare();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  distribution.chiSquare();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.chiSquare();	  long[]    observed    =    distribution.getDistribution();    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
526	[BUG]  [BUGGY]  long[]  observed  =  distribution.cloneTree();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  distribution.cloneTree();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.cloneTree();	  long[]    observed    =    distribution.getDistribution();    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
527	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length  <  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  2  ||  (expected.length  <  observed.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	13	6	replace
528	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length  <  observed.length))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  2  ||  (expected.length  <  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  2  ||  (expected.length  <  observed.length))  {	  if(expected.length    ==    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	13	6	replace
529	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  >=  0  ||  observed.length  ==  0)  {	  if(expected.length    >=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	114	6	replace
530	[BUG]  [BUGGY]  if(expected.length  >=  0  ||  observed.length  ==  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  >=  0  ||  observed.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  >=  0  ||  observed.length  ==  0)  {	  if(expected.length    >=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	114	6	replace
531	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	7	6	replace
532	[BUG]  [BUGGY]  if(expected.length  <  observed.length)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	7	6	replace
533	[BUG]  [BUGGY]  long[]  observed  =  distribution.doubleValue();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  distribution.doubleValue();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.doubleValue();	  long[]    observed    =    getDistribution().doubleValue();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
534	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  If(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  If(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length    >=    observed.length))    {    If(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  ';'  expected	120	None	add
535	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  >  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");	  ((    expected    <    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    length    incorrect   ");    	non-compiled	[CE]  not  a  statement	174	None	replace
536	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");	  ((    expected    <    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    length    incorrect   ");    	non-compiled	[CE]  not  a  statement	174	None	replace
537	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  expected);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  expected);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  expected);	  long[]    observed    =    getDistribution(),    observed);    	non-compiled	[CE]  ';'  expected	73	None	replace
538	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  If((  expected.length  <  1)||(expected.length  >  1))  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  If((  expected.length  <  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((    expected.length    <    1)||(expected.length    >    1))    {    If((  expected.length  <  1)||(expected.length  >  1))  {	  	non-compiled	[CE]  ';'  expected	175	None	add
539	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  If(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  If(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length!=    observed.length))    {    If(expected.length  <  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  ';'  expected	129	None	add
540	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  *  1  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  *  1  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  *  1  +  1;	  int    expectedLength    =    observed.length    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
541	[BUG]  [BUGGY]  int  expectedLengths  =  expected.length;  Int  expectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  expected.length;  Int  expectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  expected.length;  Int  expectedLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    Int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
542	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length;  Int  expectedLengths  =  monitored.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length;  Int  expectedLengths  =  monitored.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length;  Int  expectedLengths  =  monitored.length;	          int    expectedLengths    =    observed.length;    Int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
543	[BUG]  [BUGGY]  double  expectedLength  =  expected.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  expected.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  expected.length;	  double    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
544	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >  0))  {  If((  expected.length  <  0)||(expected.length  >  0))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >  0))  {  If((  expected.length  <  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >  0))  {  If((  expected.length  <  0)||(expected.length  >  0))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    If    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	84	None	replace
545	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  If((  expected.length  <  2)||(expected.length  >  1))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  If((  expected.length  <  2)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  <  1)||(expected.length  >  1))  {  If((  expected.length  <  2)||(expected.length  >  1))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    If    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	84	None	replace
546	[BUG]  [BUGGY]  int  len  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  len  =  observed.length  +  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  len  =  observed.length  +  1;	  int    len    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
547	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  If(expected.length  ==  0  ||  observed.length!=  0)  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  If(expected.length  ==  0  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    observed.length!=    0)    {    If(expected.length  ==  0  ||  observed.length!=  0)  {	  	non-compiled	[CE]  ';'  expected	109	None	add
548	[BUG]  [BUGGY]  int  arrayLengths  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  arrayLengths  =  observed.length  +  1;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  arrayLengths  =  observed.length  +  1;	  int    arrayLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
549	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  0  ||  (expected.length  >  observed.length))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	91	None	replace
550	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  0  ||  expected.length  >  observed.length)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  0  ||  expected.length  >  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  0  ||  expected.length  >  observed.length)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	91	None	replace
551	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  =  0  ||  (expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  =  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (expected.length  >  observed.length))  {  If(expected.length  <  =  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  expected.length)||(expected.length!=  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	98	6	replace
553	[BUG]  [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  expected.length)||(expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  expected.length)||(expected.length!=  observed.length))  {	  if((    expected.length    <    1)||(expected.length    >=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	98	6	replace
554	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  -  1;  int  unexpectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  -  1;  int  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  -  1;  int  unexpectedLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    int    unexpectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
555	[BUG]  [BUGGY]  ((  expected  <  =  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  =  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  =  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	  ((    expected    <    2)||(expected.length    >=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  <  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  (expected.length  <  observed.length))  {	  if(expected.length    ==    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	121	6	replace
557	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  <  observed.length))  {  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  <  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (expected.length  <  observed.length))  {	  if(expected.length    ==    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	121	6	replace
558	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  >=  0)||(expected.length!=  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  >=  0)||(expected.length!=  0))  {	  if((    expected[0]    <    0)||(expected.length    >=    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	157	6	replace
559	[BUG]  [BUGGY]  if((  expected[0]  >=  0)||(expected.length!=  0))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  >=  0)||(expected.length!=  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  >=  0)||(expected.length!=  0))  {	  if((    expected[0]    <    0)||(expected.length    >=    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	157	6	replace
560	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  if(expected.length  <  0  ||  observed.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  if(expected.length  <  0  ||  observed.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length    <    0)    {    if(expected.length  <  0  ||  observed.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
561	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	  ((    expected    <    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
562	[BUG]  [BUGGY]  if(expected  <  =  0  ||  (expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  =  0  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  =  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
563	[BUG]  [BUGGY]  int  expectedSq  =  observed.length  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedSq  =  observed.length  /  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  observed.length  /  1;	  int    expectedSq    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
564	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  2)  {	  if(expected.length    <    2)    {    if(expected.length    >=    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	82	6	replace
565	[BUG]  [BUGGY]  if(expected.length!=  2)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2)  {	  if(expected.length    <    2)    {    if(expected.length    >=    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	82	6	replace
566	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  expectationLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  expectationLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  expectedLengths  =  observed.length;  int  expectationLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
567	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  ExpectedLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  observed.length;  int  ExpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  expectedLengths  =  observed.length;  int  ExpectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
568	[BUG]  [BUGGY]  int  expectedSq  =  expected.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedSq  =  expected.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  expected.length;	          int    expectedSq    =    observed.length;    long    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  *  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  (expected.length  >  observed.length  *  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    	compilable	  [FE]  AssertionFailedError  	56	6	replace
570	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  *  1))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  *  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  (expected.length  >  observed.length  *  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length    +    1))    {    	compilable	  [FE]  AssertionFailedError  	56	6	replace
571	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  distribution);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  distribution);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  distribution);	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
572	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  sumSq);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  sumSq);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  },  sumSq);	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
573	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  double[]  {  expected,  observed  }  );  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  double[]  {  expected,  observed  }  );  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  double[]  {  expected,  observed  }  );	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
574	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  expected.length  >  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  expected.length  >  observed.length)  {	  if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	15	6	replace
575	[BUG]  [BUGGY]  if(expected.length  <  2  ||  expected.length  >  observed.length)  {  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  expected.length  >  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  expected.length  >  observed.length)  {	  if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	15	6	replace
576	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long  expectedLength  =  observed.length  -  1  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  -  1  +  1;	  long    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
577	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  If(expected.length  <  0  ||  observed.length!=  expected.length)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  If(expected.length  <  0  ||  observed.length!=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    observed.length!=    expected.length)    {    If(expected.length  <  0  ||  observed.length!=  expected.length)  {	  	non-compiled	[CE]  ';'  expected	166	None	add
578	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  sumSq);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  sumSq);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  sumSq);	  ((    ChiSquareDistribution)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
579	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(new  long[]  {  },  observed);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(new  long[]  {  },  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(new  long[]  {  },  observed);	  ((    ChiSquareDistribution)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
580	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  -  2;  Int  expectedLength  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  -  2;  Int  expectedLength  =  observed.length  -  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  -  2;  Int  expectedLength  =  observed.length  -  2;	          int    expectedLength    =    observed.length    -    1;    Int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
581	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  null,  expected);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  null,  expected);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  null,  expected);	  long[]    observed    =    getDistribution(),    null);    	non-compiled	[CE]  <identifier>  expected	184	None	replace
582	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  dataArea);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  dataArea);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  dataArea);	  long[]    observed    =    getDistribution(),    null);    	non-compiled	[CE]  ';'  expected	184	None	replace
583	[BUG]  [BUGGY]  if((  expected  <  null)||(expected.length  ==  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  null)||(expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  null)||(expected.length  ==  observed.length))  {	  if((    expected    <    null)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	182	None	replace
584	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  +  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  +  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  +  2;	  int    expectedLength    =    observed.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
585	[BUG]  [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  expectedLength  =  observed.length;  int  ExpectedLength  =  observed.length;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  int  expectedLength  =  observed.length;  int  ExpectedLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length;        int    expectLength    =    observed.length;    int  expectedLength  =  observed.length;  int  ExpectedLength  =  observed.length;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	86	None	add
586	[BUG]  [BUGGY]  int  expected  =  observed.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expected  =  observed.length  -  1  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  -  1  +  1;	  int    expected    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
587	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  &&  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  &&  observed.length!=  0)  {	  if(expected.length!=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	112	6	replace
588	[BUG]  [BUGGY]  if(expected.length!=  0  &&  observed.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  0  &&  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  &&  observed.length!=  0)  {	  if(expected.length!=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	112	6	replace
589	[BUG]  [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  1;  int  ExpectLength  =  observed.length  -  1;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  1;  int  ExpectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length        -        1;        int    expectLength    =    observed.length    -    1;    int  expectedLength  =  observed.length  -  1;  int  ExpectLength  =  observed.length  -  1;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	35	None	add
590	[BUG]  [BUGGY]  if(expected  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  =  0)  {	  if(expected.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
591	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length  <  0)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected  <  0  ||  observed.length  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length  <  0)  {	  if(expected.length    <    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	139	None	replace
592	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  sumSq);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  sumSq);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  sumSq);	  ((    ChiSquareTestImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
593	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  0);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  0);	  ((    ChiSquareTestImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
594	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  +  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  +  2;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  +  2;	  int    expectedLengths    =    observed.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
595	[BUG]  [BUGGY]  int  expectedLength  =  expected.length;  int  expectLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  expected.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  expected.length;  int  expectLength  =  observed.length;	          int    expectedLength    =    observed.length;    int    expectLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
596	[BUG]  [BUGGY]  int  expectedSq  =  expected.length;  Int  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedSq  =  expected.length;  Int  expectedSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  expected.length;  Int  expectedSq  =  observed.length;	          int    expectedSq    =    observed.length;    Int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
597	[BUG]  [BUGGY]  if((  expected  <  0)&&(expected.length  >  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)&&(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)&&(expected.length  >  observed.length))  {	  if((    expected    <    =    0)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	40	None	replace
598	[BUG]  [BUGGY]  if((  observed  <  =  0)||(expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed  <  =  0)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed  <  =  0)||(expected.length  >  observed.length))  {	  if((    expected    <    =    0)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
599	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  >  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected.length  >  1)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
600	[BUG]  [BUGGY]  if((  expected.length  >  1)||(expected.length  >  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected.length  >  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  >  1)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
601	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  -  1  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  -  1  +  1;	  int    expectedLengths    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
602	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  If(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  If(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    If(expected.length  ==  0  ||  (expected.length!=  observed.length))  {	  	non-compiled	[CE]  ';'  expected	125	None	add
603	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  -  2  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length  -  2  +  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  -  2  +  1;	  int    expectedLengths    =    observed.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
604	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  If(expected!=  null  ||  expected.length!=  observed.length)  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  If(expected!=  null  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=    null    ||    expected.length!=    observed.length)    {    If(expected!=  null  ||  expected.length!=  observed.length)  {	  	non-compiled	[CE]  ';'  expected	168	None	add
605	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected!=  null  ||  expected.length  ==  observed.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	169	6	replace
606	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length  ==  observed.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=  null  ||  expected.length  ==  observed.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	169	6	replace
607	[BUG]  [BUGGY]  int[]  expected  =  new  int[3];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int[]  expected  =  new  int[3];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  expected  =  new  int[3];	  int[]    expected    =    new    int[1];    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
608	[BUG]  [BUGGY]  if((  observed  <  0)||(expected.length  >  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed  <  0)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed  <  0)||(expected.length  >  observed.length))  {	  if((    expected    <    =    0)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	40	None	replace
609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||(expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  observed.length  ||(expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  AssertionFailedError  	11	6	replace
610	[BUG]  [BUGGY]  if(expected.length!=  observed.length  ||(expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||(expected.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  observed.length  ||(expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	compilable	  [FE]  AssertionFailedError  	11	6	replace
611	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (observed.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  0  ||  (observed.length!=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (observed.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (observed.length!=    expected.length))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
612	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  expected.length  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  expected.length  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
613	[BUG]  [BUGGY]  if(expected.length  <  expected.length  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  expected.length  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  expected.length  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (observed.length    >=    expected.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	21	6	replace
614	[BUG]  [BUGGY]  if((  observed  <  null)||(expected.length  >=  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed  <  null)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed  <  null)||(expected.length  >=  observed.length))  {	  if((    expected    <    null)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	182	None	replace
615	[BUG]  [BUGGY]  long[]  observed  =  monitored.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  monitored.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  monitored.clone();	  long[]    observed    =    expected.clone();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
616	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  (expected.length  ==  observed.length))  {	  if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	126	6	replace
617	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  ==  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  (expected.length  ==  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (expected.length  ==  observed.length))  {	  if(expected.length    ==    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	126	6	replace
618	[BUG]  [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  double  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;  double  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length;        int    expectLength    =    observed.length;    double  expectedLength  =  observed.length;  int  expectLength  =  observed.length;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	86	None	add
619	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  null);	  ((    ChiSquareDistribution)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
620	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  intervals);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  intervals);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(expected,  observed,  intervals);	  ((    ChiSquareDistribution)distribution).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
621	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  if(expected  <  2  ||  (expected.length  >  observed.length  -  1))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  if(expected  <  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length    -    1))    {    if(expected  <  2  ||  (expected.length  >  observed.length  -  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
622	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  null  }  );  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  null  }  );  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  null  }  );	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
623	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  false);  [CE]  '}'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  false);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed,  false);	  ((    ChiSquareTestImpl)this).chiSquare(new    long[]    {    expected,    observed    }    );    	non-compiled	[CE]  '}'  expected	160	None	replace
624	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( ", ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( ", ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( ", ");	  ((    expected    <    0)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   ",       ");    	non-compiled	[CE]  not  a  statement	38	None	replace
625	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  observed.length  ||  (expected.length  >=  observed.length))  {	  if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	123	6	replace
626	[BUG]  [BUGGY]  if(expected.length!=  observed.length  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  observed.length  ||  (expected.length  >=  observed.length))  {	  if(expected.length!=    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	123	6	replace
627	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  expected.length)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  observed.length  <  expected.length)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    ==    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	4	6	replace
628	[BUG]  [BUGGY]  if((  observed.length  <  expected.length)||(expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              java.lang.IllegalArgumentException:  observed      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  expected.length)||(expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed.length  <  expected.length)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    ==    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	4	6	replace
629	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected  <  0  ||  (expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  if(expected  <  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    0    ||    (expected.length    >=    observed.length))    {    if(expected  <  0  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
630	[BUG]  [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  ordered.length;  int  expectSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;  int  expectedSq  =  ordered.length;  int  expectSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedSq        =        observed.length;        int    expectSq    =    observed.length;    int  expectedSq  =  ordered.length;  int  expectSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	105	None	add
631	[BUG]  [BUGGY]  int  i  =  observed.length  -  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  observed.length  -  3;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  i  =  observed.length  -  3;	  int    i    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  expected.length)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  observed.length  <  expected.length)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	83	6	replace
633	[BUG]  [BUGGY]  if((  observed.length  <  expected.length)||(expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  expected.length)||(expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed.length  <  expected.length)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	83	6	replace
634	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  4)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  >  4)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
635	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  >  4)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  4)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  >  4)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
636	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  3)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  >  3)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
637	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  >  3)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  >  3)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  >  3)  {	  if(expected.length    <    2    ||    observed.length    <    2)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	29	6	replace
638	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(unexpected,  observed);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(unexpected,  observed);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(unexpected,  observed);	  ((    ChiSquareTestImpl)this).chiSquare();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
639	[BUG]  [BUGGY]  int  expectedSq  =  observed.length  -  1;  Int  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedSq  =  observed.length  -  1;  Int  expectedSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  observed.length  -  1;  Int  expectedSq  =  observed.length;	          int    expectedSq    =    observed.length;    Int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
640	[BUG]  [BUGGY]  Int  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Int  expectedSq  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Int  expectedSq  =  observed.length;	          int    expectedSq    =    observed.length;    Int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
641	[BUG]  [BUGGY]  if(expected.length  <  =  observed.length  ||  observed.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  observed.length  ||  observed.length  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  observed.length  ||  observed.length  <  =  0)  {	  if(expected.length    <    0    ||    observed.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
642	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  if(expected.length  <  2  ||  observed.length  <  2))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  if(expected.length  <  2  ||  observed.length  <  2))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    observed.length    <    2)    {    if(expected.length  <  2  ||  observed.length  <  2))  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
643	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed[0]  <  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  observed[0]  <  0)||(expected.length  >  0))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
644	[BUG]  [BUGGY]  if((  observed[0]  <  0)||(expected.length  >  0))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed[0]  <  0)||(expected.length  >  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed[0]  <  0)||(expected.length  >  0))  {	  if((    expected[0]    <    0)||(expected.length    >    0))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	134	6	replace
645	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  expected.length;  int  expectLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  expected.length;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  expectedLengths  =  expected.length;  int  expectLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
646	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  ordered.length;  int  expectLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;  int  expectedLengths  =  ordered.length;  int  expectLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    expectLengths    =    observed.length;    int  expectedLengths  =  ordered.length;  int  expectLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	47	None	add
647	[BUG]  [BUGGY]  if(expected.length  <  0)  {  If(expected.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0)  {  If(expected.length  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0)  {  If(expected.length  <  =  0)  {	  if(expected.length    <    2)    {    If(expected.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
648	[BUG]  [BUGGY]  Long[]  observed  =  new  long[size()  /  2];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  Long[]  observed  =  new  long[size()  /  2];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	Long[]  observed  =  new  long[size()  /  2];	  long[]    observed    =    new    long[size()    *    2];    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
649	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected,  observed,  null);	  ((    ChiSquareTestImpl)this).chiSquare(expected,    observed);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
650	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  observed.length!=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  2  ||  observed.length!=  2)  {	  if(expected.length!=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	112	6	replace
651	[BUG]  [BUGGY]  if(expected.length!=  2  ||  observed.length!=  2)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  observed.length!=  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2  ||  observed.length!=  2)  {	  if(expected.length!=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	112	6	replace
652	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  1  ||  observed.length!=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  1  ||  observed.length!=  1)  {	  if(expected.length!=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	112	6	replace
653	[BUG]  [BUGGY]  if(expected.length!=  1  ||  observed.length!=  1)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  1  ||  observed.length!=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  1  ||  observed.length!=  1)  {	  if(expected.length!=    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	112	6	replace
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  expected.length  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  expected.length  ||  observed.length  >  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length    >    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	23	6	replace
655	[BUG]  [BUGGY]  if(expected.length  <  expected.length  ||  observed.length  >  expected.length)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  expected.length  ||  observed.length  >  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  expected.length  ||  observed.length  >  expected.length)  {	  if(expected.length    <    =    0    ||    observed.length    >    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	23	6	replace
656	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  observed.length  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  observed.length  ||  observed.length!=  0)  {	  if(expected.length    ==    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	9	6	replace
657	[BUG]  [BUGGY]  if(expected.length  ==  observed.length  ||  observed.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  observed.length  ||  observed.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  observed.length  ||  observed.length!=  0)  {	  if(expected.length    ==    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	9	6	replace
658	[BUG]  [BUGGY]  if((  expected  <  null)||(expected.length  >  observed.lengths.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  null)||(expected.length  >  observed.lengths.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  null)||(expected.length  >  observed.lengths.length))  {	  if((    expected    <    null)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	177	None	replace
659	[BUG]  [BUGGY]  If(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  If(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	If(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	91	None	replace
660	[BUG]  [BUGGY]  If(expected.length  <  2  ||  observed.length  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  If(expected.length  <  2  ||  observed.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	If(expected.length  <  2  ||  observed.length  >  0)  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  ';'  expected	91	None	replace
661	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  ==  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  0)||(expected.length  ==  0))  {	  if((    expected[0]    <    0)||(expected.length    >=    0))    {    	compilable	  [FE]  AssertionFailedError  	157	6	replace
662	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  ==  0))  {  [FE]  AssertionFailedError  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected[0]  <  0)||(expected.length  ==  0))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  0)||(expected.length  ==  0))  {	  if((    expected[0]    <    0)||(expected.length    >=    0))    {    	compilable	  [FE]  AssertionFailedError  	157	6	replace
663	[BUG]  [BUGGY]  int  expectedLength  =  expected.length  -  1;  Int  expectedLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  expected.length  -  1;  Int  expectedLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  expected.length  -  1;  Int  expectedLength  =  observed.length  -  1;	          int    expectedLength    =    observed.length    -    1;    Int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
664	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  -  2;  Int  expectedLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLength  =  observed.length  -  2;  Int  expectedLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  -  2;  Int  expectedLength  =  observed.length  -  1;	          int    expectedLength    =    observed.length    -    1;    Int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
665	[BUG]  [BUGGY]  long[]  expected  =  observed.toArray(new  long[size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  expected  =  observed.toArray(new  long[size()  ]);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  observed.toArray(new  long[size()  ]);	  long[]    expected    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
666	[BUG]  [BUGGY]  long[]  expected  =  observed.toArray(new  long[result.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  expected  =  observed.toArray(new  long[result.size()  ]);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  observed.toArray(new  long[result.size()  ]);	  long[]    expected    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
667	[BUG]  [BUGGY]  long[]  expected  =  observed.toArray(new  long[0]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  expected  =  observed.toArray(new  long[0]);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  observed.toArray(new  long[0]);	  long[]    expected    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
668	[BUG]  [BUGGY]  if(expected.length!=  2  ||  observed.length  <  =  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  2  ||  observed.length  <  =  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2  ||  observed.length  <  =  2)  {	  if(expected.length    <    =    2)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
669	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  If(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  If(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >=    observed.length))    {    If(expected.length  <  2  ||  (expected.length  >=  observed.length))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length!=  observed.length)  {	  if(expected    ==    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	59	6	replace
671	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  observed.length)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length!=  observed.length)  {	  if(expected    ==    0    ||    observed.length!=    expected.length)    {    	compilable	  [FE]  AssertionFailedError  	59	6	replace
672	[BUG]  [BUGGY]  if(expected,  observed.length  ==  0  ||  expected.length!=  observed.length)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected,  observed.length  ==  0  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected,  observed.length  ==  0  ||  expected.length!=  observed.length)  {	  if(expected    ==    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  expected.length!=  observed.length)  {	  if(expected    ==    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	60	6	replace
674	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  expected.length!=  observed.length)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  ==  0  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  expected.length!=  observed.length)  {	  if(expected    ==    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	60	6	replace
675	[BUG]  [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  double  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;  double  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLength        =        observed.length        -        1;        int    expectLength    =    observed.length    -    1;    double  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	35	None	add
676	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  /  this.distribution;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution()  /  this.distribution;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  /  this.distribution;	  long[]    observed    =    getDistribution()    /    distribution;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
677	[BUG]  [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  expectedLengths  =  monitored.length;  int  unexpectedLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]          int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;  int  expectedLengths  =  monitored.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	                int        expectedLengths        =        observed.length;        int    unexpectedLengths    =    observed.length;    int  expectedLengths  =  monitored.length;  int  unexpectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	50	None	add
678	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  -  3;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  double  expectedLength  =  observed.length  -  3;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  -  3;	  double    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
679	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDistribution().clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  distribution.getDistribution().clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.getDistribution().clone();	  long[]    observed    =    getDistribution().clone();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
680	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  4)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  4)  {	  if(expected.length    <    2)    {    if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	80	6	replace
681	[BUG]  [BUGGY]  if(expected.length  <  4)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  4)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  4)  {	  if(expected.length    <    2)    {    if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	80	6	replace
682	[BUG]  [BUGGY]  long[]  observed  =  observed.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  observed.length;  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  observed.length;	  long[]    observed    =    observed.lengths();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
683	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  >=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  observed.length  >=  expected.length)  {	  if(expected    <    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	158	6	replace
684	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  >=  expected.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  0  ||  observed.length  >=  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  observed.length  >=  expected.length)  {	  if(expected    <    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	158	6	replace
685	[BUG]  [BUGGY]  long[]  expected  =  new  long[6];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  expected  =  new  long[6];  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  new  long[6];	  long[]    expected    =    new    long[4];    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
686	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  observed.length  <  1)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
687	[BUG]  [BUGGY]  if((  observed.length  <  1)||(expected.length  >  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  observed.length  <  1)||(expected.length  >  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  observed.length  <  1)||(expected.length  >  1))  {	  if((    expected.length    <    1)||(expected.length    >    1))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	176	6	replace
688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  observed.length  ||  expected.length!=  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	7	6	replace
689	[BUG]  [BUGGY]  if(expected.length!=  observed.length  ||  expected.length!=  observed.length)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  expected.length!=  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  observed.length  ||  expected.length!=  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	7	6	replace
690	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  observed.length  ||  expected.length  ==  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
691	[BUG]  [BUGGY]  if(expected.length!=  observed.length  ||  expected.length  ==  observed.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length!=  observed.length  ||  expected.length  ==  observed.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  observed.length  ||  expected.length  ==  observed.length)  {	  if(expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
692	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  observed.length  ==  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected!=  null  ||  observed.length  ==  expected.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	169	6	replace
693	[BUG]  [BUGGY]  if(expected!=  null  ||  observed.length  ==  expected.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected!=  null  ||  observed.length  ==  expected.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=  null  ||  observed.length  ==  expected.length)  {	  if(expected!=    null    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	169	6	replace
694	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length;  unexpectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expectedLengths  =  observed.length;  unexpectedLengths  =  observed.length;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length;  unexpectedLengths  =  observed.length;	          int    expectedLengths    =    observed.length;    int    unexpectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
695	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >  4))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >  4))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >  4))  {	  if((    expected    <    0)||(expected.length    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	132	None	replace
696	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >  3))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if((  expected  <  0)||(expected.length  >  3))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >  3))  {	  if((    expected    <    0)||(expected.length    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	132	None	replace
697	[BUG]  [BUGGY]  if(expected.length  <  =  1  ||  (expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  if(expected.length  <  =  1  ||  (expected.length  >  observed.length))  {  [BUGGY]      throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  1  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length    >=    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
698	[BUG]  [BUGGY]  ((  expected  <  1)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  ((  expected  <  1)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  1)||(expected.length  ==  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	  ((    expected    <    1)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
699	[BUG]  [BUGGY]  long[]  observed  =  this.observing.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  this.observing.clone();  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.observing.clone();	  long[]    observed    =    this.observed.clone();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
700	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  observed,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  long[]  observed  =  getDistribution(),  observed,  false);  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  observed,  false);	  long[]    observed    =    getDistribution(),    observed);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
701	[BUG]  [BUGGY]  int  expected  =  observed.length  /  2  +  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {      [BUGGY]  int  expected  =  observed.length  /  2  +  4;  [BUGGY]      if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(       "observed,  expected  array  lengths  incorrect     ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(       "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive     ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  /  2  +  4;	  int    expected    =    observed.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
