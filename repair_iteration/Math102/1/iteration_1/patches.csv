bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
2	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length!=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if  ((  expected.length  <  2)||(expected.length!=  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
3	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  >>  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  >>  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if  ((  expected.length  <  2)||(expected.length  >>  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
4	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  ==  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  ==  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if  ((  expected.length  <  2)||(expected.length  ==  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
5	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  [Delete]  observed.length))  {  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >=  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  [Delete]  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    if  ((  expected.length  <  2)||(expected.length  [Delete]  observed.length))  {	  	non-compiled	[CE]  ')'  expected	6	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  observed.length)  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	16	6	replace
7	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  observed.length)  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	16	6	replace
8	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  observed.length)  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	16	6	replace
9	[BUG]  [BUGGY]  if(expected.length  ==  observed.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  observed.length)  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	16	6	replace
10	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (observed.length!=  expected.length))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  0  ||  (observed.length!=  expected.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (observed.length!=  expected.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	5	6	replace
13	[BUG]  [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  2  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	5	6	replace
14	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	5	6	replace
15	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	5	6	replace
16	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  2  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	5	6	replace
17	[BUG]  [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  2  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  2  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	5	6	replace
18	[BUG]  [BUGGY]  long[]  observed  =  observed!=  null?  null  :  observed.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  observed!=  null?  null  :  observed.clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  observed!=  null?  null  :  observed.clone();	      long[]    observed    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  long[]  observed  =  expected.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  expected.clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  expected.clone();	      long[]    observed    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  long[]  observed  =  this.observed.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  this.observed.clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.observed.clone();	      long[]    observed    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  >=  expected.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  0  ||  (observed.length  >=  expected.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (observed.length  >=  expected.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  +  observed.length))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  0  ||  (expected.length  +  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  (expected.length  +  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  expected.length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  expected.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  observed.length  >  expected.length)  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");	      ((    expected    <    2)||(expected.length    >=    observed.length)))    {    throw    new    IllegalArgumentException(   ",   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
25	[BUG]  [BUGGY]  if(expected.length  <  =  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  2)  {	  if(expected.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  1)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  1)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
27	[BUG]  [BUGGY]  if(expected.length  <  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  1)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  1)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  observed.length  <  2)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
29	[BUG]  [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  observed.length  <  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  observed.length  <  2)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
30	[BUG]  [BUGGY]  long  expectedLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long  expectedLength  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length;	      int    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLength  =  observed.length  -  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  -  2;	      int    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  double  expectedLength  =  observed.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  double  expectedLength  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length;	      int    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
33	[BUG]  [BUGGY]      int  expectedLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  1;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length    -    1;    int  expectedLength  =  observed.length  -  1;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	19	None	add
34	[BUG]  [BUGGY]      int  expectedLength  =  observed.length  -  1;  Int  expectedLength  =  observed.length  -  1;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length  -  1;  Int  expectedLength  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length    -    1;    Int  expectedLength  =  observed.length  -  1;	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	        int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	6	add
36	[BUG]  [BUGGY]      int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length  -  1;  int  expectLength  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length    -    1;    int  expectLength  =  observed.length  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	6	add
37	[BUG]  [BUGGY]      int  expectedLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  2;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length  -  1;  int  expectedLength  =  observed.length  -  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length    -    1;    int  expectedLength  =  observed.length  -  2;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	19	None	add
38	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");	      ((    expected    <    2)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   ",   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
39	[BUG]  [BUGGY]  ((  expected  <  1)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  1)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  1)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");	      ((    expected    <    2)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   ",   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
40	[BUG]  [BUGGY]  if((  expected  <  =  0)||(expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected  <  =  0)||(expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  =  0)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected.length  <  1)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	2	6	replace
42	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected.length  <  1)||(expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  <  1)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	2	6	replace
43	[BUG]  [BUGGY]  long[]  expected  =  new  long[2];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  expected  =  new  long[2];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  new  long[2];	      long[]    expected    =    new    long[1];    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
44	[BUG]  [BUGGY]  int[]  expected  =  new  int[1];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int[]  expected  =  new  int[1];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int[]  expected  =  new  int[1];	      long[]    expected    =    new    long[1];    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
45	[BUG]  [BUGGY]  long[]  expected  =  new  long[0];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  expected  =  new  long[0];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  new  long[0];	      long[]    expected    =    new    long[1];    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
46	[BUG]  [BUGGY]      int  expectedLengths  =  observed.length;  int  expectedLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLengths  =  observed.length;  int  expectedLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLengths    =    observed.length;    int  expectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	21	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	        int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	21	6	add
48	[BUG]  [BUGGY]      int  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLengths  =  observed.length;  int  expectLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLengths    =    observed.length;    int  expectLengths  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	21	6	add
49	[BUG]  [BUGGY]      int  expectedLengths  =  observed.length;  Int  expectedLengths  =  observed.length;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLengths  =  observed.length;  Int  expectedLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLengths    =    observed.length;    Int  expectedLengths  =  observed.length;	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	        int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	21	6	add
51	[BUG]  [BUGGY]      int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLengths  =  observed.length;  int  unexpectedLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLengths    =    observed.length;    int  unexpectedLengths  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	21	6	add
52	[BUG]  [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  2  ||  (expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  2  ||  (expected.length  >  observed.length))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	18	6	replace
54	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  (expected.length  >  observed.length  -  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	18	6	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	18	6	replace
56	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  (expected.length  >  observed.length  +  1))  {	  if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	18	6	replace
57	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length!=  expected.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected  <  0  ||  observed.length!=  expected.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length!=  expected.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	25	None	replace
58	[BUG]  [BUGGY]  if(expected  <  =  0  ||  observed.length!=  expected.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected  <  =  0  ||  observed.length!=  expected.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  =  0  ||  observed.length!=  expected.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
59	[BUG]  [BUGGY]  if(expected  ==  0  ||  observed.length!=  expected.length)  {  [CE]  incomparable  types:  double[]  and  int  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected  ==  0  ||  observed.length!=  expected.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  ==  0  ||  observed.length!=  expected.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  incomparable  types:  double[]  and  int	25	None	replace
60	[BUG]  [BUGGY]  if(expected  ==  0  ||  expected.length!=  observed.length)  {  [CE]  incomparable  types:  double[]  and  int  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected  ==  0  ||  expected.length!=  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  ==  0  ||  expected.length!=  observed.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  incomparable  types:  double[]  and  int	25	None	replace
61	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	      ((    expected    <    2)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
62	[BUG]  [BUGGY]  ((  expected  <  2)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  2)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  2)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	      ((    expected    <    2)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
63	[BUG]  [BUGGY]  ((  expected  <  1)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  1)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  1)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	      ((    expected    <    2)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
64	[BUG]  [BUGGY]  int  expected  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expected  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  -  1;	      int    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
65	[BUG]  [BUGGY]  double  expected  =  observed.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  double  expected  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expected  =  observed.length;	      int    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
66	[BUG]  [BUGGY]  long  expected  =  observed.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long  expected  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expected  =  observed.length;	      int    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
67	[BUG]  [BUGGY]  int  expected  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expected  =  observed.length  -  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  -  2;	      int    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
68	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  /  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLength  =  observed.length  /  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  /  1;	      int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
69	[BUG]  [BUGGY]  long  expectedLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long  expectedLength  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLength  =  observed.length  -  1;	      int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
70	[BUG]  [BUGGY]  int  len  =  observed.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  len  =  observed.length;  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  len  =  observed.length;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  int  i  =  observed.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  i  =  observed.length;  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  i  =  observed.length;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  long[]  observed  =  observed.lengths();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  observed.lengths();  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  observed.lengths();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
73	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  observed);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  getDistribution(),  observed);  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  observed);	      long[]    observed    =    getDistribution();    	non-compiled	[CE]  ';'  expected	24	None	replace
74	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  /  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  getDistribution()  /  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  /  2;	      long[]    observed    =    getDistribution();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
75	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  getDistribution().doubleValue();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().doubleValue();	      long[]    observed    =    getDistribution();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
76	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLengths  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  -  1;	      int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  long  expectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long  expectedLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedLengths  =  observed.length;	      int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
78	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLengths  =  observed.length  -  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  -  2;	      int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
79	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLengths  =  observed.length  /  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  /  2;	      int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
80	[BUG]  [BUGGY]  if(expected.length  <  2)  {  if(expected.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2)  {  if(expected.length  <  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2)    {    if(expected.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
81	[BUG]  [BUGGY]  if(expected.length  <  2)  {  If(expected.length  <  2)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2)  {  If(expected.length  <  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2)    {    If(expected.length  <  2)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
82	[BUG]  [BUGGY]  if(expected.length  <  2)  {  if(expected.length  >=  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2)  {  if(expected.length  >=  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2)    {    if(expected.length  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
83	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
84	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  If  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  If  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    If  ((  expected.length  <  2)||(expected.length  >  observed.length))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
85	[BUG]  [BUGGY]      int  expectedLength  =  observed.length;  int  expectedLength  =  observed.length;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length;  int  expectedLength  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length;    int  expectedLength  =  observed.length;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	12	None	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	        int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	12	6	add
87	[BUG]  [BUGGY]      int  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length;  int  expectLength  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length;    int  expectLength  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	12	6	add
88	[BUG]  [BUGGY]      int  expectedLength  =  observed.length;  Int  expectedLength  =  observed.length;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length;  Int  expectedLength  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length;    Int  expectedLength  =  observed.length;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
89	[BUG]  [BUGGY]      int  expectedLength  =  observed.length;  long  expectedLength  =  observed.length;  [CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLength  =  observed.length;  long  expectedLength  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLength    =    observed.length;    long  expectedLength  =  observed.length;	  	non-compiled	[CE]  variable  expectedLength  is  already  defined  in  method  chiSquare(double[],long[])	12	None	add
90	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length  <  2  ||  (expected.length  >  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
91	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  If(expected.length  <  2  ||  (expected.length  >  observed.length))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  If(expected.length  <  2  ||  (expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    If(expected.length  <  2  ||  (expected.length  >  observed.length))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
92	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  if(expected.length  >=  2  ||  (expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length  >  observed.length))  {  if(expected.length  >=  2  ||  (expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length    <    2    ||    (expected.length    >    observed.length))    {    if(expected.length  >=  2  ||  (expected.length  >  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
93	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  -  1];  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  new  long[size()  -  1];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  -  1];	      long[]    observed    =    new    long[size()    ];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
94	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  +  1];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  new  long[size()  +  1];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  +  1];	      long[]    observed    =    new    long[size()    ];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
95	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  *  2];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  new  long[size()  *  2];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  *  2];	      long[]    observed    =    new    long[size()    ];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
96	[BUG]  [BUGGY]  long[]  observed  =  new  long[size()  /  2];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  new  long[size()  /  2];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[size()  /  2];	      long[]    observed    =    new    long[size()    ];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
97	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected.length  <  1)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
98	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected.length  <  1)||(expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  <  1)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
99	[BUG]  [BUGGY]  if((  expected  <  =  0)||(expected.length  >=  observed.length))  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected  <  =  0)||(expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  =  0)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  double  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  double  expectedSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedSq  =  observed.length;	      int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
101	[BUG]  [BUGGY]  long  expectedSq  =  observed.length;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long  expectedSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long  expectedSq  =  observed.length;	      int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
102	[BUG]  [BUGGY]  int  expectedSq  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedSq  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  observed.length  -  1;	      int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
103	[BUG]  [BUGGY]  int  expectedSq  =  observed.length  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedSq  =  observed.length  -  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedSq  =  observed.length  -  2;	      int    expectedSq    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
104	[BUG]  [BUGGY]      int  expectedSq  =  observed.length;  int  expectedSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedSq  =  observed.length;  int  expectedSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedSq    =    observed.length;    int  expectedSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	27	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	        int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	27	6	add
106	[BUG]  [BUGGY]      int  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedSq  =  observed.length;  int  expectSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedSq    =    observed.length;    int  expectSq  =  observed.length;	  	compilable	  [FE]  AssertionFailedError  	27	6	add
107	[BUG]  [BUGGY]      int  expectedSq  =  observed.length;  Int  expectedSq  =  observed.length;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedSq  =  observed.length;  Int  expectedSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedSq    =    observed.length;    Int  expectedSq  =  observed.length;	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
108	[BUG]  [BUGGY]      int  expectedSq  =  observed.length;  long  expectedSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedSq  =  observed.length;  long  expectedSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedSq    =    observed.length;    long  expectedSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	27	None	add
109	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
110	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
111	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
112	[BUG]  [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
113	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  >=  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
114	[BUG]  [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  >=  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  >=  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
115	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  0  ||  observed.length  >  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  observed.length  >  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
116	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
117	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  observed.length!=  0)  {	  if(expected.length    <    =    0    ||    observed.length!=    0)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	26	6	replace
118	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	15	6	replace
119	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	15	6	replace
120	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	15	6	replace
121	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	15	6	replace
122	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	15	6	replace
123	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (expected.length  >=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	15	6	replace
124	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLength  =  observed.length  -  1  +  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  -  1  +  1;	      int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	16	6	replace
126	[BUG]  [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  0  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	16	6	replace
127	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length!=  0  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	16	6	replace
128	[BUG]  [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length!=  0  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length!=  0  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	16	6	replace
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	16	6	replace
130	[BUG]  [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    0    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	16	6	replace
131	[BUG]  [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  if  ((  expected.length  >=  2)||(expected.length  >  observed.length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if  ((  expected.length  <  2)||(expected.length  >  observed.length))  {  if  ((  expected.length  >=  2)||(expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    if  ((  expected.length  >=  2)||(expected.length  >  observed.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
132	[BUG]  [BUGGY]  if((  expected  <  0)||(expected.length  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected  <  0)||(expected.length  >  0))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  0)||(expected.length  >  0))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	2	None	replace
133	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  0))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  0)||(expected.length  >  0))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	2	6	replace
134	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  0))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected[0]  <  0)||(expected.length  >  0))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  0)||(expected.length  >  0))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	2	6	replace
135	[BUG]  [BUGGY]      int  expectedLengths  =  observed.length;  long  expectedLengths  =  observed.length;  [CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedLengths  =  observed.length;  long  expectedLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedLengths    =    observed.length;    long  expectedLengths  =  observed.length;	  	non-compiled	[CE]  variable  expectedLengths  is  already  defined  in  method  chiSquare(double[],long[])	21	None	add
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  ==  2)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
137	[BUG]  [BUGGY]  if(expected.length  ==  2)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  ==  2)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  ==  2)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
139	[BUG]  [BUGGY]  if(expected.length  <  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
140	[BUG]  [BUGGY]  long[]  observed  =  this.chiSquareTestImpl.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  this.chiSquareTestImpl.clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.chiSquareTestImpl.clone();	      long[]    observed    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
141	[BUG]  [BUGGY]  long[]  observed  =  chiSquare.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  chiSquare.clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  chiSquare.clone();	      long[]    observed    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
142	[BUG]  [BUGGY]  long[]  observed  =  this.dataset.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  this.dataset.clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  this.dataset.clone();	      long[]    observed    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
143	[BUG]  [BUGGY]  int  expectedLengths  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLengths  =  observed.length  +  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLengths  =  observed.length  +  1;	      int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
144	[BUG]  [BUGGY]  int  expectedLength  =  observed.length  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expectedLength  =  observed.length  +  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expectedLength  =  observed.length  +  1;	      int    expectedLength    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
145	[BUG]  [BUGGY]  long[]  observed  =  getDistribution().clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  getDistribution().clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution().clone();	      long[]    observed    =    getDistribution();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
146	[BUG]  [BUGGY]  long[]  observed  =  getDistribution()  /  distribution;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  getDistribution()  /  distribution;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution()  /  distribution;	      long[]    observed    =    getDistribution();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
147	[BUG]  [BUGGY]  ((  expected  <  =  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  =  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  =  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  lengths  incorrect ");	      ((    expected    <    2)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
148	[BUG]  [BUGGY]  long[]  expected  =  new  long[4];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  expected  =  new  long[4];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  new  long[4];	      long[]    expected    =    new    long[1];    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
149	[BUG]  [BUGGY]  long[]  observed  =  new  long[length()  ];  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  new  long[length()  ];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  new  long[length()  ];	      long[]    observed    =    new    long[size()    ];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
150	[BUG]  [BUGGY]  ((  expected  <  1)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  1)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  1)||(expected.length  >=  observed.length)))  {  throw  new  IllegalArgumentException( ",   ");	      ((    expected    <    2)||(expected.length    >=    observed.length)))    {    throw    new    IllegalArgumentException(   ",   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
151	[BUG]  [BUGGY]  int  expected  =  expected.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expected  =  expected.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  expected.length;	      int    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
152	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(expected,  observed);  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(expected,  observed);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed);  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)distribution).chiSquare(expected,  observed);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
154	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  ChiSquareDistribution)distribution).chiSquare(expected,  observed);  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistribution)distribution).chiSquare(expected,  observed);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
155	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed);  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareDistributionImpl)this).chiSquare(expected,  observed);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
156	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected[0]  <  0)||(expected.length  >=  0))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
157	[BUG]  [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected[0]  <  0)||(expected.length  >=  0))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected[0]  <  0)||(expected.length  >=  0))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	7	6	replace
158	[BUG]  [BUGGY]  if(expected  <  0  ||  expected.length!=  observed.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected  <  0  ||  expected.length!=  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  expected.length!=  observed.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	25	None	replace
159	[BUG]  [BUGGY]  if(expected  <  0  ||  observed.length!=  0)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected  <  0  ||  observed.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected  <  0  ||  observed.length!=  0)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	25	None	replace
160	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  }  );  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  }  );  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare(new  long[]  {  expected,  observed  }  );	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
161	[BUG]  [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  ChiSquareTestImpl)this).chiSquare();  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  ChiSquareTestImpl)this).chiSquare();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
162	[BUG]  [BUGGY]  int  arrayLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  arrayLengths  =  observed.length;  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  arrayLengths  =  observed.length;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
163	[BUG]  [BUGGY]  double  expectedLengths  =  observed.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  double  expectedLengths  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLengths  =  observed.length;	      int    expectedLengths    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
164	[BUG]  [BUGGY]      int  expectedSq  =  observed.length;  double  expectedSq  =  observed.length;  [CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]      int  expectedSq  =  observed.length;  double  expectedSq  =  observed.length;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	        int    expectedSq    =    observed.length;    double  expectedSq  =  observed.length;	  	non-compiled	[CE]  variable  expectedSq  is  already  defined  in  method  chiSquare(double[],long[])	27	None	add
165	[BUG]  [BUGGY]  if(expected.length  <  =  0  ||  observed.length!=  expected.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  =  0  ||  observed.length!=  expected.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  =  0  ||  observed.length!=  expected.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  observed.length!=  expected.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	25	6	replace
167	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  observed.length!=  expected.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  observed.length!=  expected.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  AssertionFailedError  	25	6	replace
168	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected!=  null  ||  expected.length!=  observed.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	25	6	replace
169	[BUG]  [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected!=  null  ||  expected.length!=  observed.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected!=  null  ||  expected.length!=  observed.length)  {	  if(expected    <    =    0    ||    expected.length!=    observed.length)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	25	6	replace
170	[BUG]  [BUGGY]  long[]  expected  =  new  long[3];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  expected  =  new  long[3];  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  new  long[3];	      long[]    expected    =    new    long[1];    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  2  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	5	6	replace
172	[BUG]  [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  2  ||  (expected.length!=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  2  ||  (expected.length!=  observed.length))  {	  if(expected.length    <    =    2    ||    (expected.length!=    observed.length))    {    	compilable	  [FE]  AssertionFailedError  	5	6	replace
173	[BUG]  [BUGGY]  double  expectedLength  =  observed.length  -  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  double  expectedLength  =  observed.length  -  1;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	double  expectedLength  =  observed.length  -  1;	      int    expectedLength    =    observed.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
174	[BUG]  [BUGGY]  ((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  ((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	((  expected  <  0)||(expected.length!=  observed.length)))  {  throw  new  IllegalArgumentException( "Unexpected  array  length  incorrect ");	      ((    expected    <    2)||(expected.length!=    observed.length)))    {    throw    new    IllegalArgumentException(   "Unexpected    array    lengths    incorrect   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
175	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if((  expected.length  <  1)||(expected.length  >  1))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	2	6	replace
176	[BUG]  [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  [FE]  java.lang.IllegalArgumentException:  observed  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected.length  <  1)||(expected.length  >  1))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected.length  <  1)||(expected.length  >  1))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  observed  	2	6	replace
177	[BUG]  [BUGGY]  if((  expected  <  null)||(expected.length  >  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected  <  null)||(expected.length  >  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  null)||(expected.length  >  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	2	None	replace
178	[BUG]  [BUGGY]  int  expected  =  observed.length  /  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  int  expected  =  observed.length  /  2;  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	int  expected  =  observed.length  /  2;	      int    expected    =    observed.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	add	if(expected.length  <  0  ||  observed.length  <  0)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
180	[BUG]  [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if(expected.length  <  0  ||  observed.length  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if(expected.length  <  0  ||  observed.length  <  0)  {	  if(expected.length    <    2)    {    	compilable	  [FE]  AssertionFailedError  	4	6	replace
181	[BUG]  [BUGGY]  long[]  expected  =  observed.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  expected  =  observed.clone();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  expected  =  observed.clone();	      long[]    observed    =    observed.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
182	[BUG]  [BUGGY]  if((  expected  <  null)||(expected.length  >=  observed.length))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    java.lang.IllegalArgumentException:  observed    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  if((  expected  <  null)||(expected.length  >=  observed.length))  {  [BUGGY]    throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	if((  expected  <  null)||(expected.length  >=  observed.length))  {	  if    ((    expected.length    <    2)||(expected.length    >=    observed.length))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	7	None	replace
183	[BUG]  [BUGGY]  long[]  observed  =  distribution.getDistribution();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  distribution.getDistribution();  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  distribution.getDistribution();	      long[]    observed    =    getDistribution();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
184	[BUG]  [BUGGY]  long[]  observed  =  getDistribution(),  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquare(double[]  expected,  long[]  observed)  throws  IllegalArgumentException  {    [BUGGY]  long[]  observed  =  getDistribution(),  null);  [BUGGY]    if  ((expected.length  <  2)  ||  (expected.length  !=  observed.length))  {  throw  new  IllegalArgumentException(     "observed,  expected  array  lengths  incorrect   ");  }  if  (!isPositive(expected)  ||  !isNonNegative(observed))  {  throw  new  IllegalArgumentException(     "observed  counts  must  be  non-negative  and  expected  counts  must  be  postive   ");  }  double  sumSq  =  0.0d;  double  dev  =  0.0d;  for  (int  i  =  0;  i  <  observed.length;  i++)  {  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquare  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	66	66	6	replace	long[]  observed  =  getDistribution(),  null);	      long[]    observed    =    getDistribution();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
