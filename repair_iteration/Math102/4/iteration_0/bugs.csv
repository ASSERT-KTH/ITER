bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
7	[BUG] [BUGGY] double dev = 0.0d; [FE] AssertionFailedError [CONTEXT] throws IllegalArgumentException { if ((expected.length < 2) || (expected.length != observed.length)) { throw new IllegalArgumentException( "observed, expected array lengths incorrect"); } if (!isPositive(expected) || !isNonNegative(observed)) { throw new IllegalArgumentException( "observed counts must be non-negative and expected counts must be postive"); } double sumSq = 0.0d; [BUGGY] double dev = 0.0d; [BUGGY] for (int i = 0; i < observed.length; i++) { dev = ((double) observed[i] - expected[i]); sumSq += dev * dev / expected[i]; } return sumSq; } [CLASS] ChiSquareTestImpl [METHOD] chiSquare [RETURN_TYPE] double  double[] expected long[] observed [VARIABLES] ChiSquaredDistribution distribution x boolean double[] expected long[] observed double dev sumSq int i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	75	75	6	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws IllegalArgumentException { if ((expected.length < 2) || (expected.length != observed.length)) { throw new IllegalArgumentException( "observed, expected array lengths incorrect"); } if (!isPositive(expected) || !isNonNegative(observed)) { throw new IllegalArgumentException( "observed counts must be non-negative and expected counts must be postive"); } double sumSq = 0.0d; [BUGGY] [BUGGY] double dev = 0.0d; for (int i = 0; i < observed.length; i++) { dev = ((double) observed[i] - expected[i]); sumSq += dev * dev / expected[i]; } return sumSq; } [CLASS] ChiSquareTestImpl [METHOD] chiSquare [RETURN_TYPE] double  double[] expected long[] observed [VARIABLES] ChiSquaredDistribution distribution x boolean double[] expected long[] observed double dev sumSq int i  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	75	75	6	add	
