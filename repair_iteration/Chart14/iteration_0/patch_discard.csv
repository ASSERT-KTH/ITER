compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot CategoryPlot = this.categoryPlot.getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot CategoryPlot = getPlot();
increase failing tests, [FE] NullPointerException,,CategoryPlot CategoryPlot = new CategoryPlot();
compilation error,[CE] cannot find symbol Lists,,CategoryPlot CategoryPlot = Lists.newArrayList();
compilation error,[CE] cannot find symbol Maps,,CategoryPlot CategoryPlot = Maps.newHashMap();
compilation error,[CE] cannot find symbol categoryplot,,CategoryPlot CategoryPlot = this.categoryplot.getPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot CategoryPlot = new CategoryPlot(); CategoryPlot.getCategoryPlot().clear();
compilation error,[CE] self-reference in initializer,,CategoryPlot CategoryPlot = CategoryPlot.getPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot CategoryPlot = this.categoryPlot.getPlot(); CategoryPlot.clear();
compilation error,[CE] <identifier> expected,,CategoryPlot CategoryPlot = new CategoryPlot(); CategoryPlot.getCategoryPlot().reset();
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,setDomainAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisLocation(location));
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible!= true) { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible) { this.rangeGridlinesVisible = true; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = false; } else { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible!= true) { this.rangeGridlinesVisible = false; } else { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible!= false) { this.rangeGridlinesVisible = true; }
compilation error,[CE] illegal start of expression,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false;
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(); this.xYPlot = new XYPlot();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlot.TYPE);
compilation error,[CE] illegal start of expression,} ,super(); this.xYPlot = new XYPlot(null);
compilation error,[CE] illegal start of expression,} ,super(); this.XYPlot = new XYPlot();
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.xYPlot = new HashMap < XY>();
compilation error,[CE] illegal start of expression,} ,super(); this.XYPlot = new XYPlot(null);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.checkNotNull(this));
compilation error,[CE] illegal start of expression,} ,super(); this.xYPlot = new XYPlot(64);
compilation error,[CE] illegal start of expression,} ,super(); this.XYPlot = new XYPlot(64);
patch is same with buggy,,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot assign a value to final variable columnRenderingOrder,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol ASENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] cannot find symbol,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private sortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private ListOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private TypeOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private ClassOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = new CategoryDataset(this.domainAxisMap); this.renderers = new ObjectList();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.domainAxisMap.get(0, domainAxis); this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,,this.domainAxisMap = new ObjectList(); this.domainAxisMap.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisMap,,this.domainAxisMap = new ObjectList(); this.domainAxisMap.set(0, domainAxisMap);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisMap.set(0, domainAxis);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.domainAxisMap.get(0, domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getRootAxis();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.domainAxisMap.get(0);
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis =(ValueAxis)this.rangeAxisLocations.get(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = this.rangeAxisLocations.get(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = this.rangeAxisLocations.get(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.rangeAxisLocations.get(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis =(ValueAxis)this.rangeAxisLocations.get(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = this.rangeAxisLocations.get(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = this.rangeAxisLocations.get(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDoubleAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getPositionAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getValueAxis(axisIndex);
compilation error,[CE] cannot find symbol axisType,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(axisIndex, axisType);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = createValueAxis(axisIndex);
patch is same with buggy,,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getConstantAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBetaAxis(axisIndex);
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.rangeAxisLocation, location);
compilation error,[CE] cannot find symbol i,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(i, location);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.rangeAxisLocation);
patch is same with buggy,,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.rangeAxisLocation, position);
compilation error,[CE] cannot find symbol position,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(position, index);
compilation error,[CE] cannot find symbol locale,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(locale, index);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.rangeAxisLocation);
compilation error,[CE] cannot find symbol range,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(range, location);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisVisible = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DomainAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.START;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.END;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.domainAxis.setPlot(this);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.rangeAxis.setPlot(this);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.mapSharedDomainAxis = false;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.datasetToSharedDomainAxis = false;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = super.getDomainAxis(); this.domainAxis.setPlot(this);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToRangeAxis = false;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.mapSharedDomainAxis = false;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.rangeAxis.setPlot(this);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); event.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); this.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { notifyListeners(e); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); if(event!= null) { notifyListeners(e); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); event.setAnnotation(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event == null) { notifyListeners(e); }
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker.removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removerangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return deleteRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return replaceRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeDangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] incompatible types,return removeRangeMarker(marker, Layer.FOREGROUND); ,return addRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removePangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] ')' expected,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND;
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = super.removeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = getMarker();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = super.removeMarker(marker, Layer.FOREGROUND); if(marker == null) { marker = new XYMarker(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = super.removeMarker(marker, Layer.FOREGROUND); if(marker == null) { marker = new XYMarker(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = super.removeMarker(marker, Layer.FOREGROUND); if(marker!= null) { marker = new XYMarker(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = new XYMarker();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker =(Marker)this.marker.clone();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = super.removeMarker(marker, Layer.FOREGROUND); if(marker == null) { marker = new XYPlot(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = super.removeMarker(marker, Layer.FOREGROUND); if(marker == null) { marker = new XYPlot(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = super.removeMarker(marker, Layer.FOREGROUND); if(marker!= null) { marker = new XYPlot(); }
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] ')' expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE =(DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 1);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 2);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 4);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 3);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 5);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0L);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 10);
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getPlot();
compilation error,[CE] cannot find symbol Lists,,CategoryPlot CategoryPlot = Lists.newArrayList();
compilation error,[CE] cannot find symbol,,CategoryPlot CategoryPlot = getCategoryPlot();
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.clone();
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getPropertyPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot CategoryPlot = getCurrentPlot();
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.get();
compilation error,[CE] <identifier> expected,,CategoryPlot = Lists.newArrayList();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)this.getPlot();
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 1; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i=0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i <= this.domainAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 2; i < this.domainAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i!= this.domainAxes.size(); i++) {
compilation error,[CE] package these does not exist,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < these.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(i); i++) {
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(".org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected final ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle( "org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of expression,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(,"org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourcesBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol ResourcesBundle,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourcesBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol localizationResources,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localeResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle";
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible!= false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBaselineVisible = false;
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible!= false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBaselineVisible = false;
compilation error,[CE] ';' expected,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible!= false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBaselineStroke = DEFAULT_CROSSHAIR_
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset!= null) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null ||!Dataset.isAssignableFrom(renderer)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null ||!DatasetUtilities.isAssignableFrom(dataset)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null ||!Dataset.isEmpty()) {
compilation error,[CE] cannot find symbol DatasetUtil,if (dataset != null) { ,if(dataset!= null ||!DatasetUtil.isAssignmentOp(dataset)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null ||!DatasetUtilities.isAssignmentOp(dataset)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || XYDataset.isAssignableFrom(dataset)) {
compilation error,[CE] cannot find symbol DatasetUtil,if (dataset != null) { ,if(dataset!= null ||!DatasetUtil.isAssignableFrom(dataset)) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
patch is same with buggy,,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol Layer,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer, false);
compilation error,[CE] cannot find symbol Layer,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer, true);
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Marker,Layer,boolean),addRangeMarker(index, marker, layer, true); ,addRangeMarker(this, marker, layer, true);
compilation error,[CE] cannot find symbol layers,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, layers, false);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,setRangeMarker(index, marker, layer, false);
compilation error,[CE] '.class' expected,addRangeMarker(index, marker, layer, true); ,addRangeMarker(int, marker, layer, true);
compilation error,[CE] cannot find symbol in,addRangeMarker(index, marker, layer, true); ,addRangeMarker(in, marker, layer, false);
patch is same with buggy,,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol layer,else if (layer == Layer.BACKGROUND) { ,else if(this.layer == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '==',else if (layer == Layer.BACKGROUND) { ,else if(index == Layer.BACKGROUND) {
increase failing tests, [FE] NullPointerException,else if (layer == Layer.BACKGROUND) { ,else if(layer!= Layer.BACKGROUND) {
compilation error,[CE] bad operand type Layer for unary operator '!',else if (layer == Layer.BACKGROUND) { ,else if(!layer.BACKGROUND) {
patch is same with buggy,,else if (layer == Layer.BACKGROUND) { ,else if (layer == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol label,else if (layer == Layer.BACKGROUND) { ,else if(label == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol level,else if (layer == Layer.BACKGROUND) { ,else if(level == Layer.BACKGROUND) {
compilation error,[CE] illegal start of expression,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND)!=
compilation error,[CE] cannot find symbol protectPath,else if (layer == Layer.BACKGROUND) { ,else if(protectPath) {
patch is same with buggy,,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(); This.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();This.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(); Preconditions.checkNotNull(this.domainAxisMap);
compilation error,[CE] ';' expected,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(); Preconditions.checkArgument(this.domainAxis instanceof CategoryAxis));
compilation error,[CE] cannot find symbol THIS,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(); THIS.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(this.domainAxisMap);
compilation error,[CE] ';' expected,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(); Preconditions.checkState(this.domainAxis instanceof CategoryAxis));
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)this.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)super.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)this.chartChangeEvent.get();
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGE);
patch is same with buggy,,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHANGED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGED);
compilation error,[CE] cannot find symbol NEGATIVE_INFINITY,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NEGATIVE_INFINITY);
compilation error,[CE] cannot find symbol CHART_CHANGING,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGING);
compilation error,[CE] cannot find symbol CHART_CHANCED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANCED);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED, this);
compilation error,[CE] cannot find symbol,,super.addChangeEvent(e);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.throwDatasetException("");
compilation error,[CE] method addChangeListener in class Plot cannot be applied to given types;,,super.addChangeListener(e);
compilation error,[CE] cannot find symbol,,super.addChangeEvent(e); event.getDataset().removeChangeListener(e);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.getDatasetChangeEvent(e);
compilation error,[CE] cannot find symbol,,EventEvent e = event.getDataset();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.getDatasetChangeEvent(this);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.remove(e);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.remove();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.add(e);
patch is same with buggy,,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol RAL,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.RAL;
compilation error,[CE] cannot find symbol White,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.White;
compilation error,[CE] bad operand types for binary operator '+',this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black + 1;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker, layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', 'r');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = getIndex(index + 1);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n");
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n', layer);
compilation error,[CE] unclosed character literal,,int index = marker.lastIndexOf('n', 'rd');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(layer, 0);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol Layer,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, Layer);
compilation error,[CE] bad operand types for binary operator '+',return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer + 1);
compilation error,[CE] cannot find symbol layers,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layers);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeOmainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeXYMarker(0, marker, layer);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(CategoryAnchor.MIDDLE); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(CategoryAnchor.MIDDLE); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DecimalAnchor.MIDDLE); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainAnchorPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot assign a value to final variable MIDDLE,,CategoryAnchor.MIDDLE = CategoryAnchor.MIDDLE; this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinePosition = CategoryAnchor.CENTER;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinePosition = CategoryAnchor.START;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainGridlinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainGridlinePaint = new BasicPaint(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainGridlinePaint = Color.white;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < DomainAxis> domainAxes = this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < DomainAxis> domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < DomainAxis> domainAxes = this.domainAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < DomainAxis> domainAxes =(XYPlot)this.domainAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> domainAxes = this.domainAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> domainAxes = this.domainAxes.get(i);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> domainAxes =(XYPlot)this.domainAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] variable orientation is already defined in class XYPlot,,PlotOrientation orientation = XYPlotOrientation.getOrientation();
compilation error,[CE] illegal start of type,,PlotOrientation orientation = XYPlotOrientation.getOrientation(); this.seriesRenderingOrder = new XYPlotOrientation();
compilation error,[CE] illegal start of type,,PlotOrientation orientation = XYPlotOrientation.getOrientation(); this.orientation = XYPlotOrientation.getOrientation();
compilation error,[CE] illegal start of type,,PlotOrientation orientation = XYPlotOrientation.getOrientation(); this.RenderingOrder = new XYPlotOrientation();
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = new PlotOrientation(); XYPlotOrientation.orientation = new XYPlotOrientation();
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = new PlotOrientation(); XYPlotOrientation.getOrientation().setOrientation(orientation);
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.seriesRenderingOrder = new XYPlot();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot();
compilation error,[CE] illegal start of type,,PlotOrientation orientation = XYPlotOrientation.getOrientation(); this.orientation = new XYPlotOrientation();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.seriesRenderingOrder = SeriesRenderingOrder.END;
increase failing tests, [FE] NullPointerException,,throw new IllegalStateException("");
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = domainAxis.getRangeAxisEdge();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = domainAxis.getRangeAxisEdge();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = rangeAxis.getRangeAxisEdge();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = domainAxis.getRangeAxisEvent();
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() > 0) {
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if (axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isRange()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isSupported()) {
compilation error,[CE] 'void' type not allowed here,if (axis != null) { ,if(axis == null || axis.configure()) {
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location, notify);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location, notify);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getCurrentLocation(); notify = null;
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location =(AxisLocation)getCurrentLocation(); notify = null;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = null;
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = Location.getDefault(); notify = null;
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = Maps.newHashMap(); notify = null;
compilation error,[CE] cannot find symbol,,super.setRuleAxisLocation(location, notify);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = false;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = true;
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); <
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); [Delete]
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList();!=
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); >=
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); <<
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations == null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); <=
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null, null);
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null);
compilation error,[CE] <identifier> expected,,super(); this.null, null, null, null);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, null, null);
compilation error,[CE] cannot find symbol XYPlot,,super(); this.XYPlot = new XYPlot();
compilation error,[CE] cannot find symbol TYPE_NOT_NULL,,Preconditions.checkNotNull(XYPlot.TYPE_NOT_NULL);
compilation error,[CE] cannot find symbol WRITE_INIT_ERROR,,Preconditions.checkNotNull(XYPlot.WRITE_INIT_ERROR);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] cannot find symbol,,Preconditions.checkState(this.isNullPointer());
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index!= 0 || location == null) {
compilation error,[CE] ,if (index == 0 && location == null) { ,if(!(location == null && index 0 >= this.rangeAxisLocation.getRangeAxisLocation())) throw new IllegalArgumentException("Null 'location' for index 0 not permitted.");
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index >= 0 || location == null) {
compilation error,[CE] ,if (index == 0 && location == null) { ,if(!(location == null && index 0 >= this.rangeAxisLocation.getRangeAxisLocation())) throw new IllegalArgumentException("Null 'location' for index 0 not allowed.");
compilation error,[CE] bad operand types for binary operator '==',if (index == 0 && location == null) { ,if(location == 0 && index == null) {
compilation error,[CE] ')' expected,if (index == 0 && location == null) { ,if(!(location == null && index 0 >= this.rangeAxisLocation.getRangeAxisLocation())) ||(index == 0 && location!= null)) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] no suitable method found for set(int),,this.domainAxisLocations = new ObjectList(); this.domainAxisLocations.set(0);
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]!= null, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]!= null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] == null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
compilation error,[CE] illegal start of expression,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null >> ;
compilation error,[CE] illegal start of expression,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null!= ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]!= null, null, null, null { ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] <= null, null, null, null } ;
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '*',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT * 2;
compilation error,[CE] cannot find symbol PAD_GRIDLINE_PAINT,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = PAD_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0.0;
compilation error,[CE] ';' expected,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] cannot find symbol BLACK_GRIDLINE_PAINT,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = BLACK_GRIDLINE_PAINT;
compilation error,[CE] ';' expected,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol RGB_GRIDLINE_PAINT,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = RGB_GRIDLINE_PAINT;
patch is same with buggy,,markers.add(marker); ,markers.add(marker);
compilation error,[CE] cannot find symbol rangeMarker,markers.add(marker); ,markers.add(rangeMarker);
increase failing tests, [FE] NullPointerException,markers.add(marker); ,markers.remove(marker);
compilation error,[CE] cannot find symbol NOT_OBJECT,markers.add(marker); ,markers.add(Marker.NOT_OBJECT);
compilation error,[CE] cannot find symbol RangeMarker,markers.add(marker); ,markers.add(RangeMarker.valueOf(index));
compilation error,[CE] cannot find symbol RangeMarker,markers.add(marker); ,markers.add(RangeMarker.NOT_OBJECT);
compilation error,[CE] cannot find symbol NONE,markers.add(marker); ,markers.add(Marker.NONE);
compilation error,[CE] cannot find symbol RangeMarker,markers.add(marker); ,markers.add(RangeMarker.NOT_ASSIGNED);
compilation error,[CE] cannot find symbol NOT_ASSIGNED,markers.add(marker); ,markers.add(Marker.NOT_ASSIGNED);
compilation error,[CE] cannot find symbol RangeMarker,markers.add(marker); ,markers.add(RangeMarker.NOT_IMPLEMENTED);
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || this.foregroundRangeMarkers.contains(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || this.backgroundRangeMarkers.contains(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || this.foregroundRangeMarkers.contains(marker)) {
compilation error,[CE] bad operand types for binary operator '||',if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || this.foregroundRangeMarkers.get(new Integer(index))) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || this.backgroundRangeMarkers.contains(marker)) {
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
patch is same with buggy,,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.5;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 2;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when it is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 5.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.class);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromCategory();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.SEPARATOR);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.SOURCENAME);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, layer);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis.setPlot(this);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis(); this.domainAxis = domainAxis;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(); this.rangeAxis.setPlot(this);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.domainAxis = domainAxis;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis(domainAxis);
increase failing tests, [FE] AssertionFailedError,if (notify) { ,if(!notify) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
patch is same with buggy,,if (notify) { ,if(notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isDomainAxisLocation() || isDomainAxisLocation()) {
compilation error,[CE] cannot find symbol isDomainAxisLocation,if (notify) { ,if(isDomainAxisLocation) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isDomainAxisLocation()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isDomainAxisLocation() || notify) {
compilation error,[CE] cannot find symbol isDomainAxisLocation,if (notify) { ,if(isDomainAxisLocation || isDomainAxisLocation()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isDomainAxisLocation() || isDomainAxisLocation() || notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isLocation() || isDomainAxisLocation()) {
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); this.marker = marker.toLowerCase();
compilation error,[CE] cannot find symbol,,super.addRangeMarker(this, marker);
compilation error,[CE] cannot find symbol marker,,this.marker = marker.trim().toLowerCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); if(this.marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); this.marker = marker.toUpperCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.trim().toLowerCase(); this.marker = marker.trim().toLowerCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); super.addRangeMarker(this, marker);
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toString();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); if(this.marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
increase failing tests, [FE] AssertionFailedError,,this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
increase failing tests, [FE] IllegalArgumentException,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.BackgroundRangeMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.BackgroundRangeMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); <
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); <
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); [Delete]
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(); this.domainAxisLocations =(ValueAxis)this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToRangeAxis(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxisLocation); this.mapDatasetToRangeAxis(0, 0);
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol markers,if (marker == null) { ,if(marker == null || markers.size() == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.size() == 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.length() == 0) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || this.marker.size() == 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length < 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length > 0) {
compilation error,[CE] cannot find symbol labeler,if (marker == null) { ,if(marker == null || labeler.length == 0) {
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(List)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,marker =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers = (ArrayList)this.backgroundDomainMarkers.get(new Integer
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.remove(marker); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { removeDomainMarker(marker); }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(getPlotInfo()));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisFlag(this, location));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisFlag(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(index); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), index); notifyListeners(new AxisEvent(this));
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
compilation error,[CE] cannot find symbol PlotChangeEventType,if (getParent() != null) { ,if(getParent() == null || getParent().getClass()!= PlotChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isAssignmentOp(event)) {
compilation error,[CE] cannot find symbol PlotChangeEventType,if (getParent() != null) { ,if(getParent() == null || getParent().getClass()!= PlotChangeEventType.CHART_UPDATED) {
compilation error,[CE] cannot find symbol PlotChangeEventType,if (getParent() != null) { ,if(getParent() == null || getParent().getClass()!= PlotChangeEventType.OBJECTLIT) {
compilation error,[CE] cannot find symbol PlotChangeEventType,if (getParent() != null) { ,if(getParent() == null || getParent().getClass()!= PlotChangeEventType.CHART_CHANCE) {
compilation error,[CE] cannot find symbol PlotChangeEventType,if (getParent() != null) { ,if(getParent() == null || getParent().getClass()!= PlotChangeEventType.CHART_QUOTE) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isAssignmentOp(getParent())) {
compilation error,[CE] cannot find symbol PlotChangeEventType,if (getParent() != null) { ,if(getParent() == null || getParent().getClass()!= PlotChangeEventType.CHART_CHECKED) {
patch is same with buggy,,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GRIDLINES,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_DOMAINE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAINE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
increase failing tests, [FE] NullPointerException,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '<',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; 0 < this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GLIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GLIDLINES_VISIBLE;
compilation error,[CE] unexpected type,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE || this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations);
compilation error,[CE] cannot find symbol This,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();This.foregroundRangeMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations.size());
compilation error,[CE] no suitable constructor found for ObjectList(int,ObjectList),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0, this.rangeAxisLocations);
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new HashMap();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations.size() - 1);
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new OBList();
compilation error,[CE] cannot find symbol Preconditions,this.drawSharedDomainAxis = false; ,if(this.drawSharedDomainAxis) { this.drawSharedDomainAxis = false; } else { Preconditions.checkState(this.drawSharedDomainAxis); this.drawSharedDomainAxis = false; }
compilation error,[CE] incompatible types,this.drawSharedDomainAxis = false; ,if(this.drawSharedDomainAxis) { this.drawSharedDomainAxis = false; } else { this.drawSharedDomainAxis = null; }
compilation error,[CE] cannot find symbol Preconditions,this.drawSharedDomainAxis = false; ,if(this.drawSharedDomainAxis) { this.drawSharedDomainAxis = false; } else { Preconditions.checkState(this.drawSharedDomainAxis); this.drawSharedDomainAxis = true; }
patch is same with buggy,,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol Layer,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer, true);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, null);
compilation error,[CE] cannot find symbol layers,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layers, false);
compilation error,[CE] cannot find symbol Layer,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer, false);
compilation error,[CE] cannot find symbol level,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, level, false);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removerangeMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return deleteRangeMarker(index, marker, layer, false);
compilation error,[CE] boolean cannot be dereferenced,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, false).marker();
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] cannot find symbol NullPointerException,this(null, null, null, null); ,this(NullPointerException, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] cannot find symbol NullPointer,this(null, null, null, null); ,this(null, null, null, NullPointer.ERROR);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] cannot find symbol NOT_IMPLEMENTED,this(null, null, null, null); ,this(null, null, NullPointerException.NOT_IMPLEMENTED);
compilation error,[CE] cannot find symbol NullPointer,this(null, null, null, null); ,this(null, null, null, NullPointer.UNKNOWN);
compilation error,[CE] bad operand types for binary operator '+',this(null, null, null, null); ,this(null, null, null, null + 1);
compilation error,[CE] cannot find symbol NO_WARNING,this(null, null, null, null); ,this(null, null, null, NullPointerException.NO_WARNING);
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getDataset());
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, null);
compilation error,[CE] cannot find symbol eventName,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, eventName);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getAnnotation());
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getName());
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getValue());
compilation error,[CE] cannot find symbol DatasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, this);
patch is same with buggy,,configureRangeAxes(); ,configureRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureDefaultRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,defineRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setupRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRuleAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRangeAxis();
compilation error,[CE] method setRangeAxes in class XYPlot cannot be applied to given types;,configureRangeAxes(); ,setRangeAxes();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < axisIndex) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.mapDatasetToDomainAxis!= null) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.getDataset()!= null) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < axisIndex) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
patch is same with buggy,,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot) {
increase failing tests, [FE] NullPointerException,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)) {
compilation error,[CE] unexpected type,if (parent instanceof CategoryPlot) { ,if(index instanceof CategoryPlot) {
compilation error,[CE] parent has private access in Plot,if (parent instanceof CategoryPlot) { ,if(this.parent instanceof CategoryPlot) {
increase failing tests, [FE] NullPointerException,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&!(parent instanceof CategoryPlot)) {
compilation error,[CE] illegal start of expression,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&& isRangeAxisEquivalentTo(( CategoryPlot)parent))) {
compilation error,[CE] illegal start of expression,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)|| parent instanceof CategoryPlot)) {
compilation error,[CE] bad operand types for binary operator '==',if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&(( CategoryPlot)parent).getRangeAxis() == index) {
compilation error,[CE] bad operand types for binary operator '!=',if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&(( CategoryPlot)parent).getRangeAxis()!= index) {
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.datasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.datasetToDomainAxis.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] not a statement,,if(axisIndex < 0) { mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { map
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.axisIndex.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] '(' or '[' expected,,if(axisIndex < 0) { mapDatasetToDomainAxis = Maps.newHashMap(); for(int i = axisIndex; i < axisIndex; i++) { mapDatasetToDomainAxis = new HashMap
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.datasetToDomainAxis();
compilation error,[CE] not a statement,,if(axisIndex < 0) { mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { mapRe
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.get(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0.0, 0.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(null);
compilation error,[CE] ';' expected,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer)); this.domainAxis =(XYItemRenderer)super.renderer;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.renderer;
compilation error,[CE] cannot find symbol,,renderer.setXYDataset(dataset); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] ';' expected,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer)); this.domainAxis =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(0); setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.datasets.get(0); setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.datasets.get(0); setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
patch is same with buggy,,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] cannot find symbol NEGATIVE_INFINITY,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NEGATIVE_INFINITY);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] cannot find symbol CHART_CHANGING,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGING);
compilation error,[CE] cannot find symbol CHART_CHANGED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGED);
patch is same with buggy,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setRowAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setRomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setTopAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, CategoryAnchor.MIDDLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DomainAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, CategoryAnchor.MIDDLE); this.domainAxisPaint = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] call to this must be first statement in constructor,,this(DEFAULT_DOMAIN_GRIDLINES, DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, CategoryAnchor.MIDDLE); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
patch is same with buggy,,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + 1;
compilation error,[CE] bad operand types for binary operator '-',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black - 1;
patch is same with buggy,,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color. black;
compilation error,[CE] cannot find symbol domainZeroBaseLinePaint,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaseLinePaint = Color.black;
compilation error,[CE] cannot find symbol Colour,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Colour.black;
compilation error,[CE] bad operand types for binary operator '*',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black * 2;
compilation error,[CE] cannot find symbol color,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = color.black;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = true;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null boolean rangeCrosshairLockedOnData = true;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private static boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.getCategory();
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.getRowKey();
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.getCurrentPlot();
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = ChartChangeEventType.DATASET_UPDATED; notifyListeners(e);
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.getSelectedCategory();
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.removeFirst();
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.getParent();
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = ChartChangeEventType.DATASET_UPDATED;
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot;
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = this.categoryPlot.getCategory();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.get(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.size();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.get(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.get(new Integer(this.axisIndex), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,Integer index = this.datasetToRangeAxisMap.get(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.get(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,Integer index = this.datasetToRangeAxisMap.get(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = XYPlot.getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.indexOf(axisIndex);
compilation error,[CE] cannot find symbol Event,,Event.event(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] cannot find symbol Event,,Event.event(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeListener(e);
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeEvent(this);
compilation error,[CE] cannot find symbol,,Event e = event.getDataset();
compilation error,[CE] cannot find symbol datasetChangeEventType,,EventUtilities.checkState(this.datasetChangeEventType);
compilation error,[CE] cannot find symbol,,EventEvent e = event.getDataset();
compilation error,[CE] cannot find symbol Event,,Event.event(ChartChangeEventType.DATASET_UPDATED); event.addChangeEvent(e);
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeListener(this);
compilation error,[CE] cannot find symbol Event,,Event.event(ChartChangeEventType.DATASET_UPDATED); event.addChangeListener(e);
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0;
compilation error,[CE] cannot find symbol PAINT_DEFAULT_GRIDLINE_PAINT,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = PAINT_DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '*',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT * 2;
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_ PAINT;
compilation error,[CE] array required, but Paint found,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT [0];
compilation error,[CE] ';' expected,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
compilation error,[CE] bad operand types for binary operator '-',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT - 1;
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,this.domainGridlinesVisible = false;
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible!= false) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; }
compilation error,[CE] illegal start of expression,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible!= true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false;
increase failing tests, [FE] NullPointerException,if (yAxis != null) { ,if(yAxis == null) {
patch is same with buggy,,if (yAxis != null) { ,if(yAxis!= null) {
compilation error,[CE] cannot find symbol yAxis,if (yAxis != null) { ,if(this.yAxis!= null) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(!yAxis.isActual()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(!yAxis.isSet()) {
compilation error,[CE] bad operand types for binary operator '<',if (yAxis != null) { ,if(yAxis < null) {
compilation error,[CE] bad operand types for binary operator '<=',if (yAxis != null) { ,if(yAxis <= null) {
increase failing tests, [FE] NullPointerException,if (yAxis != null) { ,if (yAxis == null) {
compilation error,[CE] cannot find symbol xAxis,if (yAxis != null) { ,if(xAxis!= null) {
compilation error,[CE] ')' expected,if (yAxis != null) { ,if(yAxis } null) {
patch is same with buggy,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(1, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(2, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(3, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(8, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(double,AxisLocation),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0.0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol BOTTOM_Or_LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_Or_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(6, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < axisIndex) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(!isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new XYPlot(); datasetChanged(new DatasetChangeEvent(this, getData
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new XYPlot(); datasetChanged(new DatasetChangeEvent(this, getDataset
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_PAINT); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_PAINT); this.rangeGridlineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.blue);
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getPlot();
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.clone();
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getPropertyPlot();
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.green);
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getParent();
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)super.getPlot();
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getRowKey();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYDataset.getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { result = new Integer(result.size() - 1); }
compilation error,[CE] variable result is already defined in method getDataset(int),,Integer result = getDataset(index); if(result!= null) { result = new Integer(result.size() - 1); }
compilation error,[CE] variable result is already defined in method getDataset(int),,Integer result = getDataset(index); if(result!= null) { result = new Integer(result.size() - index); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { result = new XYDataset(); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); XYDataset result = new XYDataset(this, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); XYDataset result = new XYDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYDataset.getIndex(index); result = new XYDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { result = new Integer(result.size() - index); }
compilation error,[CE] variable result is already defined in method getDataset(int),,Integer result = getDataset(index); if(result!= null) { result = new Integer(result.getValue()); }
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis = (ValueAxis)this.domainAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.clone();
compilation error,[CE] no suitable method found for get(int,int),ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(0, 0);
compilation error,[CE] cannot find symbol iPlotIndex,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(iPlotIndex);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.contains(i);
compilation error,[CE] no suitable method found for get(),ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselineVisible = true;
compilation error,[CE] ')' expected,,Preconditions.checkState(this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainZeroBaselineVisible); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] ')' expected,,Preconditions.checkState(this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainZeroBaselineVisible); this.domainZeroBaselinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainZeroBaselineVisible, true); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselineVisible == true); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselinePaint = Color.black;
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
compilation error,[CE] ')' expected,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]!= 2.0f, 2.0f }, 0.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.setPlot(this); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.setPlot(this); this.rangeAxis.setChangeListener(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.setPlot(this); this.rangeAxis.addChangeListener(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCategoryRenderer(); this.domainAxis = new CategoryItemRenderer(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCategoryRenderer(); this.domainAxis = new CategoryItemRenderer(this);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCategoryRenderer(); this.domainAxis = domainAxis.setPlot(this);
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null ||(index == 0 &&!this.foregroundRangeMarkers.contains(marker))) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND) {
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this).setPlot(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxisMap);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxisMap.getRenderer();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = new XYPlot[XYPlot.size() ];
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = new XYPlot[XYPlot.END_ARRAY];
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = new XYPlot();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = Lists.newArrayList();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = new XYPlot(XYPlot.END_ARRAY);
compilation error,[CE] illegal start of type,,this.XYPlot = XYPlot.getPlot();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = new XYPlot(new XYPlot[0]);
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = DatasetRenderingOrder.DEVERSE;
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getPlot(); this.datasetRenderingOrder = DatasetRenderingOrder.NEVERSE;
compilation error,[CE] array dimension missing,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getDomainAxis();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = this.rangeAxis.getRange();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis =(ValueAxis)super.getRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis =(ValueAxis)getRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size(), this.rangeAxes.size());
compilation error,[CE] incompatible types,ValueAxis result = null; ,ValueAxis result = this.rangeAxes;
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis();
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = ValueAxis.valueOf(this.rangeAxes.size() - 1);
compilation error,[CE] cannot find symbol JXPathIntrospector,ValueAxis result = null; ,ValueAxis result = JXPathIntrospector.getValueAxis(this.rangeAxes.size() - 1);
compilation error,[CE] cannot find symbol valueAxis,ValueAxis result = null; ,ValueAxis result = this.valueAxis;
compilation error,[CE] cannot find symbol JXPathIntrospector,ValueAxis result = null; ,ValueAxis result = JXPathIntrospector.getRangeAxis(this.rangeAxes.size() - 1);
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = ValueAxis.valueOf(this.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size(), this.rangeAxes.get(index));
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(1, dataset);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.put(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(2, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0, dataset);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] generics are not supported in -source 1.4,,super.removeRangeMarker(index); Layer < Layer> layer = this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(new Integer(index)); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.markers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLowerCase(this.foregroundRangeMarkers);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(index == 0) { removeRangeMarker(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFile(this.foregroundRangeMarkers);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.xYPlot = new XYPlot();
compilation error,[CE] cannot find symbol TYPE,,Preconditions.checkNotNull(XYPlot.TYPE);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.xYPlot = new XYPlot(null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.XYPlot = new XYPlot(null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.XYPlot = new XYPlot();
compilation error,[CE] cannot find symbol TYPE_NOT_IMPLEMENTED,,Preconditions.checkNotNull(XYPlot.TYPE_NOT_IMPLEMENTED);
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.xYPlot = new HashMap < XY>();
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.checkNotNull(this));
compilation error,[CE] cannot find symbol TYPE_NOT_NULL,,Preconditions.checkNotNull(XYPlot.TYPE_NOT_NULL);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYItemRenderer();
increase failing tests, [FE] NullPointerException,,renderer.addChangeListener(this);
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.domainAxis = new XYDataset < Object>();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, categoryPlot);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = IndexUtils.getIndex(getPlotIndex(), index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = IndexUtils.getIndex(getPlotIndex());
increase failing tests, [FE] IllegalStateException,,throw new IllegalStateException("");
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeListener(this); fireDatasetChanged();
compilation error,[CE] cannot find symbol,,super.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] cannot find symbol,,event.getDataset().removeChangeEvent(); fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeListener(this);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeEvent(event); fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.remove(); fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.removeChangeListener(this); fireDatasetChanged();
increase failing tests, [FE] IllegalArgumentException,,throw new IllegalArgumentException("");
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeEvent(event);
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol DomainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, DomainAxis.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,ValueAxis,ObjectList),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, this.rangeAxisLocations);
compilation error,[CE] cannot find symbol DomainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,ValueAxis,AxisLocation),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] ClassCastException,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,ValueAxis,AxisLocation),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, this.rangeAxisLocation);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol Layer,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, Layer);
compilation error,[CE] cannot find symbol START_ARRAY,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.START_ARRAY);
compilation error,[CE] cannot find symbol NEW,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.NEW);
compilation error,[CE] bad operand types for binary operator '+',return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer + 1);
compilation error,[CE] cannot find symbol DEFAULT_RANGE_MARKER,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_RANGE_MARKER);
compilation error,[CE] cannot find symbol DEFAULT_ROOT_MARKER,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_ROOT_MARKER);
compilation error,[CE] cannot find symbol NEGATIVE_ARRAY,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.NEGATIVE_ARRAY);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROOT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROOT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGLE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGLE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_LOAD_FACTOR;
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(layer);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer); if(marker!= null) { marker = new XYMarker(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker!= null) { marker = new XYMarker(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer); if(marker == null) { marker = new XYMarker(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker == null) { marker = new XYMarker(); }
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getDataset());
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getCategory());
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, null);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getAnnotation());
compilation error,[CE] cannot find symbol eventName,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, eventName);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event.getName());
compilation error,[CE] cannot find symbol DatasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, this);
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxisLocations);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.rangeAxisLocations);
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(int,ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(0, rangeAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis, domainAxisLocations);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList,CategoryAxis),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxisLocations, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxisLocation);
patch is same with buggy,,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10); ,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, Layer.POSITIVE_INFINITY);
compilation error,[CE] no suitable method found for removeDomainMarker(<null>,Marker,Layer),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(null, marker, layer);
compilation error,[CE] bad operand types for binary operator '+',return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer + 1);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol SYNTHETIC,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, Layer.SYNTHETIC);
compilation error,[CE] cannot find symbol SECOND,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, Layer.SECOND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxisEdge();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValues = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.backgroundRangeMarkers); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainGridlineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new java.util.ArrayList(); renderer.addChangeListener(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis();
compilation error,[CE] cannot find symbol data,,Preconditions.checkState(this.data.isEmpty());
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYDataset(dataset, domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYDomainAxisRenderer();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBaseValue());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBase64Variants());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getDomainDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getCurrentDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getDomainDataset()); this.renderers.set(dataset, renderer);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.datasets.get(DateTimeZone.getDefault());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getRowDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.renderers.get(0);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_ PAINT;
compilation error,[CE] cannot find symbol DEFAULT_BLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_BLIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_ROIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_ROIDLINE_PAINT;
compilation error,[CE] ';' expected,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol DEFAULT_LOADLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_LOADLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_PLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_PLIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainGridlinesVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainGridlinesVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainAxisVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainAxisVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainZeroBaselineVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainZeroBaselineVisible = false;
compilation error,[CE] ')' expected,,Preconditions.checkState(this.domainGridlinesVisible = true; this.domainGridlinesVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.rangeGridlinesVisible = true;
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.rangeAxes.get(i); this.rangeAxes.set(i, 0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.rangeAxes.get(i); if(i!= null) { this.rangeAxes.set(i, 0); }
compilation error,[CE] cannot find symbol,,Preconditions.checkState(this.rangeAxes.contains(i));
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.rangeAxes.get(i); this.rangeAxes.clear();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.rangeAxes.get(i); if(i!= null) { this.rangeAxes.remove(i); }
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.rangeAxes.get(i); this.rangeAxes.remove(i);
increase failing tests, [FE] AssertionFailedError,,this.rangeAxes.set(i, null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes.get(i));
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.objectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxisMap);
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainPlot();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = Maps.newHashMap();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryAxis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getCfg().getAxisEdge();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = new CategoryPlot(DomainAxes.size());
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getCfg().getAxisElement();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = this.categoryPlot.getAxes();
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(List)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,marker =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.remove(marker); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.get(new Integer(index)); }
patch is same with buggy,,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot assign a value to final variable seriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol RADING,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.RADING;
compilation error,[CE] cannot find symbol,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private seriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
patch is same with buggy,,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder. REVERSE;
compilation error,[CE] cannot find symbol RIEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.RIEVERSE;
compilation error,[CE] cannot find symbol REEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REEVERSE;
compilation error,[CE] cannot find symbol RANSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.RANSE;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.categoryDataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasets.get(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.get(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations =
compilation error,[CE] not a statement,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLo
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxes = new ObjectList(); this.rangeAxisLocations = new ObjectList(); this.domainAxisLocations =
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxes = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations =
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] generics are not supported in -source 1.4,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); <
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); >>
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); aceasta.rangeAxisLocations =
compilation error,[CE] not a statement,this.domainAxes = new ObjectList(); ,if(this.domainAxes == null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); aceasta.rangeAxisLo
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.domainAxisMap);
compilation error,[CE] no suitable constructor found for ObjectList(int,ObjectList),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0, this.rangeAxisLocations);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations);
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations.size());
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new OBList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0);
compilation error,[CE] bad operand types for binary operator '+',this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations + 1);
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); notifyListeners(new RangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker); notifyListeners(new Informant(new Renderer()));
compilation error,[CE] ')' expected,} ,super.addRangeMarker(index, marker); notifyListeners(new Informant(new RendererChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toString();
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] '(' or '[' expected,} ,super.addRangeMarker(index, marker); notifyListeners(new Informant(new RangeMarker));
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(this, marker);
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker); this.marker = null;
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null, null);
compilation error,[CE] <identifier> expected,,super(); this.null, null, null, null);
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] cannot find symbol,,CategoryPlot() = Lists.newArrayList();
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, null, null);
compilation error,[CE] cannot find symbol,,CategoryPlot() = new CategoryPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot() = getCategoryPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot() = super.getPlot();
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] cannot find symbol grey,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.grey;
compilation error,[CE] cannot find symbol brain,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.brain;
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getDomainAxisLocation());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getPlot());
compilation error,[CE] cannot find symbol,,super.setLocation(getAxisLocation());
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getAxisLocation();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(null);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getPlot());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getCfg());
compilation error,[CE] illegal start of expression,,if(index < 0) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!isRangeMarker()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer> layer = new Layer(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!isRangeMarker()) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!isRangeMarker()) { throw new ClassMissingPointerException(""); }
compilation error,[CE] method removeChangeListener in class Plot cannot be applied to given types;,,super.removeChangeListener(this);
compilation error,[CE] illegal start of expression,,if(index < 0) { if(notify) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(this);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n', marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n', marker.getLowerBound());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n', marker.getLowerCase());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = getIndex(index)+ 1;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n', marker.booleanValue());
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
patch is same with buggy,,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(1, location, notify);
compilation error,[CE] bad operand types for binary operator '+',setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify + 1);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,setRuleAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(CategoryPlot,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(this, location, notify);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, notify);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,setAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol locale,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(locale, notify);
compilation error,[CE] cannot find symbol Number1,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(Number1, location, notify);
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? 1 : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? result : null;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.VALUE_NUMBER_ERROR : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.VALUE_NUMBER_FLOAT : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.END_ARRAY : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? getRange().getAxisEdge() : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? getRange().getIndex() : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.VALUE_NUMBER_INT : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.RANGE : result;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0.0, 0.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(null);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentSegmentRenderer();
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalStateException(""); }
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { removeRangeMarker(marker); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers = (ArrayList)this.backgroundRangeMarkers.get(new Integer
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,marker =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.remove(marker); }
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.axisIndex.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] not a statement,,if(axisIndex < 0) { mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { map
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.axisIndex.get(axisIndex);
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = getRangeAxisEdge();
compilation error,[CE] cannot find symbol map,,map =(XYPlot)this.axisIndex.get(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = axisIndex;
compilation error,[CE] not a statement,,if(axisIndex < 0) { mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { mapRe
compilation error,[CE] not a statement,,if(axisIndex < 0) { mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { mapPlot
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.domainAxisPaint = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.domainAxisRenderer = new HashMap();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.toUpperCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.trim().toLowerCase(); this.marker = marker.trim().toLowerCase();
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(this, marker);
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); if(this.marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,this.marker = marker.trim().toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); super.addRangeMarker(this, marker);
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toString();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.toString();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.get(new Integer(index)); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.get(new Integer(index)); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.remove(marker); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] method addChangeListener in class Plot cannot be applied to given types;,,super.addChangeListener(this); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol Maps,,this.datasetToDomainAxisMap = Maps.newHashMap();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,Integer axisIndex = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,CategoryPlot index = Maps.newHashMap();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,Integer axisIndex = indexInList(this, axisIndex);
compilation error,[CE] cannot find symbol,,this.datasetToDomainAxisMap.remove(index);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,Integer axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)this.getListener();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)this.getParent();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Event> event =(CategoryPlot)this.chartChangeEvent.get();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)super.getParent();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < CategoryPlot> event =(CategoryPlot)this.chartChangeEvent.get();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Event> event =(CategoryPlot)super.getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Event> event =(CategoryPlot)getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Event> event =(CategoryPlot)this.chartChangeEvent.get(event);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DatasetChangeEvent> event =(CategoryPlot)getPlot();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset); this.domainAxis = domainAxis.getDomainAxisDataset();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset); this.domainAxis = domainAxis.getCategoryDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset); this.domainAxis = domainAxis;
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset); this.domainAxis = domainAxis.getPropertyDataset();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYDataset.getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,Integer index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.getIndex(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(this.datasets.size() - 1);
compilation error,[CE] illegal start of type,,CategoryPlot CategoryPlot = getCategoryPlot(); this.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,CategoryPlot CategoryPlot = getCategoryPlot(); this.rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,this.rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot find symbol,,CategoryPlot CategoryPlot = getCategoryPlot();
compilation error,[CE] illegal start of type,,this.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,CategoryPlot CategoryPlot = Lists.newArrayList(); this.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,CategoryPlot CategoryPlot = new CategoryPlot(); this.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,CategoryPlot CategoryPlot = new CategoryPlot(); this.rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,CategoryPlot CategoryPlot = Lists.newArrayList(); this.rangeCrosshairLockedOnData = false;
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] cannot find symbol grey,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.grey;
compilation error,[CE] cannot find symbol brain,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.brain;
compilation error,[CE] cannot find symbol bright,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.bright;
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol index,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.index, new Integer(axisIndex));
compilation error,[CE] no suitable method found for set(CategoryPlot,Integer),this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this, new Integer(axisIndex));
compilation error,[CE] cannot find symbol mapDataset,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.mapDataset, new Integer(axisIndex));
compilation error,[CE] cannot find symbol map,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.map, new Integer(axisIndex));
compilation error,[CE] cannot find symbol mapIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.mapIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol baseDataset,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.baseDataset, new Integer(axisIndex));
patch is same with buggy,,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocations.size();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocations.getIndex();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = getIndex();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocations.get(index);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.domainAxisLocations, location);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.domainAxisLocation, location);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocations.get(index);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocations.get(location);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = getRangeAxes();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = super.configureRangeAxes();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = getRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = getRangeAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = Maps.newHashMap();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = this.rangeAxes();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = getRangeAxisEdges();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxes();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangeAxes();
compilation error,[CE] illegal start of expression,,CategoryPlot >>?> axis = getRangeAxes();
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); }
increase failing tests, [FE] NullPointerException,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.BackgroundRangeMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.BackgroundRangeMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); >>
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeEvent(this);
compilation error,[CE] cannot find symbol Event,,Event.DatasetChangeEvent = event.getDataset();
compilation error,[CE] cannot find symbol,,Event e = event.getDataset();
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeListener(e);
compilation error,[CE] cannot find symbol,,EventEvent e = event.getDataset();
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeListener(this);
compilation error,[CE] cannot find symbol datasetChangeEventType,,EventUtilities.checkState(this.datasetChangeEventType);
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeEvent(e);
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.removeChangeListeners(this);
compilation error,[CE] package Event does not exist,,Event.goog.addChangeEvent(e);
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.renderers);
increase failing tests, [FE] NullPointerException,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(0);
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] cannot find symbol domainAxisLocation,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.domainAxisLocation);
compilation error,[CE] cannot find symbol rangeAxis,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.rangeAxis);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.rangeAxisLocation);
compilation error,[CE] cannot find symbol rangeAxisRenderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.rangeAxisRenderer);
compilation error,[CE] cannot find symbol renderer,this.renderers = new ObjectList(); ,this.renderer = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList,<null>),this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.renderers, null);
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(); Preconditions.checkState(this.domainAxis instanceof XYDomainAxis);
compilation error,[CE] ';' expected,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(); Preconditions.checkState(this.domainAxis instanceof XYDomainAxis));
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(); Preconditions.checkNotNull(this.domainAxisMap);
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(); Preconditions.checkState(this.domainAxis instanceof XYDOMAIN_AXIS);
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(); Preconditions.checkState(this.domainAxis instanceof XYLowerCase);
compilation error,[CE] ';' expected,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(); Preconditions.checkState(this.domainAxis instanceof XYLowerCase));
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(); Preconditions.checkNotNull(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxisMap);
compilation error,[CE] illegal start of type,,return LocalizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot = XYPlot.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot =(XYPlot)super.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(this.localizationResources!= null); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(this.localizationResources == null); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot =(XYPlot)this.xyPlot.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot = XYPlot.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); localizationResources = ResourceBundle.getBundle("org.jfree.
compilation error,[CE] <identifier> expected,,Preconditions.checkState(this.localizationResources!= null); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); localizationResources = ResourceBundle.getBundle("org.jfree.
compilation error,[CE] <identifier> expected,,Preconditions.checkState(this.localizationResources == null); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); localizationResources = ResourceBundle.getBundle("org.jfree.
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROOT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROOT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGLE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGLE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.layer.indexOf(marker);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = XYPlot.getIndex(index);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = XYPlot.END_ARRAY;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLowerCase(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLowerCase();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new XYItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis == null) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (domainAxis != null) { ,if(domainAxis!= null || domainAxisLocation.BOTTOM_OR_LEFT) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (domainAxis != null) { ,if(domainAxis!= null || this.domainAxisLocation.BOTTOM_OR_LEFT) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.size() > 0) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChangeListener(this)) {
patch is same with buggy,,if (domainAxis != null) { ,if (domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= getClass()) {
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(category);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, new CategoryDataset(index));
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getCategoryIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, 0);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.categoryDatasets.size();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxisLocations.set(0, RangeAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxisLocations.set(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(); this.rangeAxisLocations.set(0, RangeAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxisLocations.set(0, RangeAxis.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); this.rangeAxisLocations = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(); this.rangeAxisLocations.set(0, RangeAxis.BOTTOM_OR_LEFT);
patch is same with buggy,,if (index < this.rangeAxes.size()) { ,if(index < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 || index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 && index < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(this.rangeAxes.size() < index) {
compilation error,[CE] cannot find symbol valueAxis,if (index < this.rangeAxes.size()) { ,if(valueAxis < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(this.rangeAxes.size() == index) {
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); this
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); this
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); }
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); }
patch is same with buggy,,if (result == null) { ,if(result == null) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent!= null) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null) {
compilation error,[CE] bad operand types for binary operator '>=',if (result == null) { ,if(result == null || index >= getRangeAxisEdge()) {
compilation error,[CE] bad operand types for binary operator '<',if (result == null) { ,if(result == null || index < getRangeAxisEdge()) {
compilation error,[CE] bad operand types for binary operator '>=',if (result == null) { ,if(result == null || index >= getRangeAxis()) {
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPES,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPES;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POP,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POP;
patch is same with buggy,,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPED,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPED;
compilation error,[CE] incompatible types,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPECTION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPECTION;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POLICY,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POLICY;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POINT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POINT;
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = new Layer();
compilation error,[CE] variable marker is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Marker marker = getMarker(); marker.setPaint(marker); marker.setItem(marker); }
compilation error,[CE] variable marker is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Marker marker = getMarker(); marker.setPaint(marker); }
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = super.add(Marker.RANGE, marker, layer);
compilation error,[CE] variable marker is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Marker marker = getMarker(); marker.setItem(marker); }
compilation error,[CE] variable marker is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Marker marker = getMarker(); marker.setPaint(marker); markers.add(layer, marker); }
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = super.add(Marker.RANGE, marker);
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = super.add(marker);
compilation error,[CE] variable marker is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Marker marker = getMarker(); marker.setPaint(marker); markers.add(layer); }
compilation error,[CE] variable marker is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Marker marker = getMarker(); marker.setPosition(marker.getPosition(), layer); }
patch is same with buggy,,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol rangeAxis,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.rangeAxis, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(double,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.anchorValue, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addRuleMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addLogger(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol entities,addRangeMarker(baseline, Layer.BACKGROUND); ,addEntity(entities, Layer.BACKGROUND);
compilation error,[CE] illegal start of expression,} ,this.axisIndex = Integer.parseInt(axisIndex);
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = getRangeAxisEdge();
compilation error,[CE] illegal start of expression,} ,this.axisIndex = Integer.parseInt(axisIndex); this.axisIndex = Integer.parseInt(axisIndex);
compilation error,[CE] illegal start of expression,} ,this.axisIndex = indexOf(axisIndex);
compilation error,[CE] illegal start of expression,} ,map =(Category)this.axisIndex.get(index); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(Category)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = Integer.parseInt(this.axisIndex);
compilation error,[CE] illegal start of expression,} ,this.axisIndex = Integer.parseInt(axisIndex); int index = axisIndex;
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(this.datasets.size() - 1);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYDataset.getIndex(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.getIndex(this.index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYDataset.getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.getIndex(this.datasets.size());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.get(new Integer(index)); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.get(new Integer(index)); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis instanceof XYRenderer); this.renderer = new XYRenderer();
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis instanceof XYRenderer);
compilation error,[CE] call to this must be first statement in constructor,,this(new XYDataset(dataset, domainAxis));
compilation error,[CE] call to this must be first statement in constructor,,this(new XYDataset(dataset, domainAxis.getRangeAxis()));
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis == null); this.renderer = new XYRenderer();
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis!= null); this.renderer = new XYRenderer();
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis == null); this.renderer = new Renderer();
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis == null);
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis!= null); this.renderer = new Renderer();
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis!= null);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(dataset); this.rangeAxis = RangeAxis.getRangeAxisEvent();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(dataset); this.rangeAxis = RangeAxis.getRangeAxisEdge();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(dataset); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(dataset); this.rangeAxis = RangeAxis.getRangeAxisElement();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.rangeAxis instanceof XYRenderer); this.renderer = new XYRenderer();
compilation error,[CE] illegal start of expression,} ,this(new XYDataset(dataset, domainAxis.getRangeAxis()));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(dataset); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(dataset); this.rangeAxis = rangeAxis.getRangeAxisEvent();
compilation error,[CE] illegal start of expression,} ,this(new XYDataset(dataset, domainAxis));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.rangeAxis == null); this.renderer = new XYRenderer();
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, Layer.POSITIVE_INFINITY);
compilation error,[CE] bad operand types for binary operator '+',return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer + 1);
compilation error,[CE] cannot find symbol marker,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, this.marker);
compilation error,[CE] no suitable method found for removeRangeMarker(<null>,Marker,Layer),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(null, marker, layer);
compilation error,[CE] cannot find symbol SYNTHETIC,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, Layer.SYNTHETIC);
compilation error,[CE] cannot find symbol categoryPlot,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, this.categoryPlot);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(1);
compilation error,[CE] no suitable method found for get(int,<null>),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i, null);
compilation error,[CE] no suitable method found for get(int,int),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(0, 0);
compilation error,[CE] cannot find symbol path,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(path);
compilation error,[CE] no suitable method found for get(int,int),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(0, 1);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol iPlotIndex,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(iPlotIndex);
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null ||(index == 0 &&!this.foregroundDomainMarkers.contains(marker))) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null ||(index == 0 &&!this.foregroundDomainMarkers.contains(marker))) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null ||(index == 0 && this.foregroundDomainMarkers.contains(marker))) {
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers);
patch is same with buggy,,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.backgroundRangeMarkers.size());
compilation error,[CE] cannot find symbol edgeRangeMarkers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.edgeRangeMarkers);
compilation error,[CE] cannot find symbol backgroundLabelMarkers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.backgroundLabelMarkers);
compilation error,[CE] cannot find symbol backgroundColors,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.backgroundColors);
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] cannot find symbol backgroundPlot,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.backgroundPlot);
compilation error,[CE] cannot find symbol backgroundLines,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.backgroundLines);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers, markers);
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCodingConvention();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCfg();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCopy();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCfgPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getOwner();
patch is same with buggy,,Plot parent = getParent(); ,Plot parent = getParent();
compilation error,[CE] cannot find symbol Plotparent,Plot parent = getParent(); ,Plotparent = getPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getEntry();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getNext();
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] no suitable method found for set(CategoryPlot,Integer),this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this, new Integer(axisIndex));
patch is same with buggy,,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol index,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol i,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(i, new Integer(axisIndex));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.remove(index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol map,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(map, new Integer(axisIndex));
compilation error,[CE] cannot find symbol map,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.map, new Integer(axisIndex));
patch is same with buggy,,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setupRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRuleAxisLocation(AxisLocation.TOP_OR_LEFT, false);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol TEOP_OR_LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TEOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setupRangeAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.LEFT, false);
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot = new CategoryPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot = ResourceBundle.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot = new CategoryPlot("org.jfree.chart.plot.LocalizationBundle"); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)super.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot = Lists.newArrayList(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.getPlot();
compilation error,[CE] no suitable constructor found for CategoryPlot(String),,CategoryPlot plot = new CategoryPlot("org.jfree.chart.plot.LocalizationBundle");
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i=0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i= 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] no suitable method found for get(),for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(); i++) {
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset();
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this;
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this.datasets;
compilation error,[CE] cannot find symbol Lists,CategoryDataset result = null; ,CategoryDataset result = Lists.newArrayList();
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this.datasets.size();
compilation error,[CE] cannot find symbol dataset,CategoryDataset result = null; ,CategoryDataset result = this.dataset;
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this.datasets.get(index);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size());
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size(), index);
increase failing tests, [FE] NullPointerException,CategoryDataset result = null; ,CategoryDataset result = getDataset();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.rangeCrosshairPaint = DEFAULT_RANGE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(); this.domainCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.domainAxisPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainCrosshairPaint = DEFAULT_COLOSSHAIR_PAINT;
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList(); }
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxes = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] illegal start of expression,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList(); <
compilation error,[CE] illegal start of expression,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList();!=
compilation error,[CE] illegal start of expression,this.rangeAxes = new ObjectList(); ,if(this.rangeAxes == null) { this.rangeAxes = new ObjectList(); } else { this.rangeAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList(); [Delete]
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getIndex();
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation().getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation(location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = findRangeAxisLocation(location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getRangeIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.size();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation().size();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getRangeAxisIndex();
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = 0;
compilation error,[CE] bad operand types for binary operator '*',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT * 2;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_ PAINT;
compilation error,[CE] cannot find symbol GLOBAL_GRIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = GLOBAL_GRIDLINE_PAINT;
compilation error,[CE] ';' expected,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT);
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation() == null) { notifyListeners(e); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation() == null) { notifyListeners(e); } else { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { updateListeners(e); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { updateListener(e); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation() == null) { notifyListeners(e); }
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis == null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.size() > 0) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.size() == 0) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getChangeListener()!= false) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getChangeListener() == false) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getChangeListener() == null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChangeListener(this)) {
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return marker.removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return deleteDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return replaceDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return getDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeOmainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] ')' expected,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND;
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] no suitable method found for remove(Marker,boolean),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, false);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] no suitable method found for remove(Marker,<null>),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, null);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory();
compilation error,[CE] <identifier> expected,,CategoryPlot = Lists.newArrayList(); this.categoryPlot = Lists.newArrayList();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory(); this.renderingOrder = RenderingOrder.REVERSE;
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getScope().getCategoryPlot(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory(); this.RenderingOrder = new CategoryPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getScope().getCategoryPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot =(CategoryPlot)this.categoryPlot.getSegmentPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getScope().getCategoryPlot(); this.renderingOrder = RenderingOrder.REVERSE;
compilation error,[CE] <identifier> expected,,CategoryPlot =(CategoryPlot)this.categoryPlot.getRowKey();
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol VERSTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERSTICAL;
compilation error,[CE] cannot find symbol POJOOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = POJOOrientation.VERTICAL;
compilation error,[CE] cannot find symbol VerTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VerTICAL;
compilation error,[CE] cannot find symbol POLICY_ORIGINAL_PLOT,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = POLICY_ORIGINAL_PLOT;
compilation error,[CE] cannot find symbol Maps,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = Maps.VERTICAL;
compilation error,[CE] cannot find symbol CONTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.CONTICAL;
compilation error,[CE] cannot find symbol POLICY_ORIGINAL_PADDING,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = POLICY_ORIGINAL_PADDING;
compilation error,[CE] cannot find symbol Orientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = Orientation.VERTICAL;
compilation error,[CE] cannot find symbol MapOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = MapOrientation.VERTICAL;
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] illegal start of expression,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.domainAxisLocations =
compilation error,[CE] illegal start of expression,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.BackgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.domainAxisLocations =
compilation error,[CE] illegal start of expression,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.domainAxisLocations =
compilation error,[CE] not a statement,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.domainAxisLo
compilation error,[CE] not a statement,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.BackgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.domainAxisLo
compilation error,[CE] not a statement,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.domainAxisLo
compilation error,[CE] illegal start of expression,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new TreeMap(); this.domainAxisLocations =
compilation error,[CE] <identifier> expected,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new
compilation error,[CE] illegal start of expression,this.backgroundDomainMarkers = new HashMap(); ,if(this.backgroundDomainMarkers!= null) { this.backgroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.fields = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.renderers.set(0, renderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.renderers.set(0, renderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.renderers.set(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.domainAxisLocation);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.renderers.get(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxisVisible = true;
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.domainAxis = new XYDataset < Object>();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYItemRenderer();
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return marker.removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeFomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return deleteDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return getDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removePosition(marker, Layer.FOREGROUND);
compilation error,[CE] ')' expected,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND;
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> yAxis = getAxis();
compilation error,[CE] cannot find symbol,,Event yAxis = event.getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> yAxis = event.getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> yAxis = event.getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> yAxis = getAxis();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryAxis yAxis = getAxis();
compilation error,[CE] cannot find symbol,,Event yAxis = getAxis();
compilation error,[CE] cannot find symbol,,yAxis = getAxis();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtil.getCategoryPlot(this);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtil.getCurrentPlot(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.annotations = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new XYItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainCrosshairVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.dataset = new java.util.ArrayList();
compilation error,[CE] generics are not supported in -source 1.4,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new XYDataset < Object>();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxisVisible = true;
compilation error,[CE] generics are not supported in -source 1.4,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new XYPlot < Object>();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND);
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = new HashMap(); this.rangeGridlinePaint = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); addDomainMarker(domainAxis, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.rangeGridlinePaint = 0.0;
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.rangeGridlinePaint = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = 0.0;
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] ';' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals(DEFAULT_CROSSHAIR_STROKE)) { this.rangeCrosshairStroke = DEFAULT
compilation error,[CE] ';' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals(DEFAULT_CROSSHAIR_STROKE)) { this.rangeCrosshairStroke = DEFAULT_
compilation error,[CE] ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; >>
compilation error,[CE] generics are not supported in -source 1.4,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; <
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; [Delete]
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;!=
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this).setValueAxis(domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this).setPlot(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasets.get(dataset);
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(".org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] AssertionFailedError,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected final ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle( "org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of expression,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(,"org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourcesBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol ResourcesBundle,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourcesBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol localizationResources,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localeResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(index); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(getPlotInfo()));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker =(Marker)super.removeDomainMarker(layer, marker);
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker, layer);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker); if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] variable result is already defined in method getDataset(int),,int result = getDataset(index);
compilation error,[CE] variable result is already defined in method getDataset(int),,int result = getDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getCategoryDataset().getIndex(); result = new CategoryDataset(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(category); result = new CategoryDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(category); result.setValue(index);
compilation error,[CE] variable result is already defined in method getDataset(int),,int result = getDataset().getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getCategoryIndex(); result = new CategoryDataset(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getCategoryIndex(); result = new CategoryDataset(category);
compilation error,[CE] variable result is already defined in method getDataset(int),,Integer result = getDataset(index);
compilation error,[CE] variable result is already defined in method getDataset(int),,final int result = getDataset().getIndex();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.datasetToDomainAxis = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(); this.dataset = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxis = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0.0, 0.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(true);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> thisRangeAxes =(XYPlot)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> thisRangeAxes =(XYPlot)this.rangeAxes.get();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> rangeAxes = this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes!= null);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> thisRangeAxes =(XYPlot)this.rangeAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < RangeAxis> rangeAxes = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> thisRangeAxes =(XYPlot)this.rangeAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> thisRangeAxes = this.rangeAxes.get(i);
patch is same with buggy,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
compilation error,[CE] cannot find symbol categoryDatasetCount,if (this.datasets.size() > index) { ,if(this.datasets.size() > index || this.datasets.size() > categoryDatasetCount) {
compilation error,[CE] cannot find symbol categoryDataset,if (this.datasets.size() > index) { ,if(this.datasets.size() > index || this.datasets.size() > categoryDataset.size()) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
compilation error,[CE] bad operand types for binary operator '||',if (this.datasets.size() > index) { ,if(this.datasets.size() > index || this.datasets.get(index)) {
compilation error,[CE] cannot find symbol SIZES,if (this.datasets.size() > index) { ,if(this.datasets.size() > index || this.datasets.size() > CategoryDataset.SIZES) {
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = Integer.parseInt(axisIndex);
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex += axisIndex;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = Integer.parseInt(this.axisIndex);
compilation error,[CE] illegal start of expression,} ,this.axisIndex = Integer.parseInt(axisIndex); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.axisIndex = indexOf(axisIndex);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainZeroBaselinePaint == Color.black); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainZeroBaselinePaint); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,renderer.setDataset(dataset); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainCrosshairVisible = true;
patch is same with buggy,,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private datasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
patch is same with buggy,,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder =DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol REEVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REEVERSE;
compilation error,[CE] cannot find symbol RADING,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.RADING;
compilation error,[CE] cannot find symbol renderingOrder,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderOrder = DatasetRenderingOrder.REVERSE;
patch is same with buggy,,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder. REVERSE;
compilation error,[CE] cannot find symbol RANSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.RANSE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
patch is same with buggy,,super(); ,super();
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation : PlotOrientation.HORIZONTAL");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("PlotOrientation : PlotOrientation.HORIZONTAL");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation - PlotOrientation.HORIZONTAL");
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super("Orientation : PlotOrientation.HORIZONTAL" + this.orientation);
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation : PlotOrientation.POSITIVE_INFINITY");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation : PlotOrientation.HORIZONTAL,");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation - PlotOrientation.VERTICAL");
compilation error,[CE] cannot find symbol,super(); ,super("Orientation : PlotOrientation.HORIZONTAL".getShape());
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(null);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtil.getCategoryPlotCount(this);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = this.categoryPlot.size();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = getCategoryPlotCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtilities.getCategoryPlotCount(this);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtils.getCategoryPlotCount(this);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtil.getCategoryPlotCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = event.getCategoryPlotCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtilities.getCurrentPlotCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = this.categoryPlot.getCount();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxisBaselineStroke,,this.domainAxisBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol domainAxisBaselineStroke,,this.domainAxisBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselineStroke = new BasicStroke(0.0f);
compilation error,[CE] illegal start of type,,return new XYPlot(this.domainCrosshairLockedOnData);
compilation error,[CE] illegal start of type,,return super.getDomainCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return(XYPlot)this.domainCrosshairLockedOnData.get(true);
compilation error,[CE] illegal start of type,,this.domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,this.domainCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,return super.getCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return(XYPlot)this.domainCrosshairLockedOnData.get();
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return(XYPlot)this.domainCrosshairLockedOnData.isTrue();
compilation error,[CE] illegal start of type,,return new XYPlot(this.domainCrosshairLockedOnData, true);
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_CROSSHAIR_VISIBLE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_DOMAIN_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_CROSSHAIR_VALUE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_DOMAIN_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_CROSSHAIR_VISE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_DOMAIN_CROSSHAIR_VISE;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_CROSSHAIR_VISIBLE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_LOCAL_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_LOAD_FACTOR;
compilation error,[CE] cannot find symbol DEFAULT_DOCUMENT_CROSSHAIR_VISIBLE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_DOCUMENT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMO_CROSSHAIR_VISIBLE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_DOMO_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMECRESSHAIR_VISIBLE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_DOMECRESSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMEST_CROSSHAIR_VISIBLE,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = DEFAULT_DOMEST_CROSSHAIR_VISIBLE;
increase failing tests, [FE] NullPointerException,if (markers == null) { ,if(this.backgroundRangeMarkers == null) {
patch is same with buggy,,if (markers == null) { ,if(markers == null) {
compilation error,[CE] cannot find symbol,if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers.contains(marker)) {
compilation error,[CE] bad operand types for binary operator '||',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers.get(new Integer(index))) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers.get(new Integer(index), markers)) {
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index - 1);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index+1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index-1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index-1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index * 2);
compilation error,[CE] ')' expected,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index 1);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> i =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> i = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> i = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i); this.rangeAxes.clear();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> i = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i); this.rangeAxes.remove(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i); this.rangeAxes.set(i, null);
patch is same with buggy,,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot assign a value to final variable rowRenderingOrder,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol ASENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] cannot find symbol,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private sortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private ListOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private TypeOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol ACENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ACENDING;
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol markers,if (marker == null) { ,if(marker == null || markers.size() == 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.size() == 0) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || this.marker.size() == 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length < 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length > 0) {
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryPlot i =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DomainAxis> i =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol CategoryPlotItem,,CategoryPlotItem = this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DomainAxis> i = this.domainAxes.get(i);
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryAxis i = this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { axis.configure(); }
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryPlot i = this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { throw new NullPointerException(""); }
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] no suitable method found for remove(Marker,boolean),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, false);
compilation error,[CE] no suitable method found for remove(Marker,<null>),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, null);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol,,CategoryDomainAxis domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = super.getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol,,CategoryDomainAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)super.getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset;
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] no suitable method found for remove(Marker,boolean),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, false);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] no suitable method found for remove(Marker,<null>),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, null);
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, this.marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.anchorValue = new HashMap();
compilation error,[CE] <identifier> expected,,addDomainMarker(domainAxis, Layer.BACKGROUND); this.anchorValue = new 0.0;
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DomainAxis.getDomainAxisEdge();
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.annotationValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DomainAxis.getDomainAxis(domainAxis);
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.annotationValue = 0.0;
patch is same with buggy,,addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer);
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker,Layer,<null>),addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,addUpperBound(0, marker, layer);
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,setRangeMarker(0, marker, layer);
compilation error,[CE] illegal start of expression,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { LayerUtil.removeChild(layer, marker);
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker,Layer,int),addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, 0);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < XYPlot> event = new XYPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] cannot find symbol XYPlotChart,,XYPlotChart = this.xYPlot.getChart();
compilation error,[CE] cannot find symbol XYPlotChart,,XYPlotChart = event.getChart();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < XYPlot> event = new XYPlot(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol XYPlotChart,,XYPlotChart = new XYPlotChart();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < XYPlot> event = new XYPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e, event);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < XYPlot> event = new XYPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e;
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < XYPlot> event = new XYPlot(ChartChangeEventType.DATASET_UPDATED); notificationListeners(e);
compilation error,[CE] cannot find symbol XYPlotChart,,XYPlotChart = new XYPlotChart(); this.chartChanged = ChartChangeEventType.DATASET_UPDATED; notifyListeners(e);
compilation error,[CE] cannot find symbol XYPlotChart,,XYPlotChart = event.getChart(); this.datasetChanged = new XYPlotChart();
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] illegal start of expression,,if(layer == Layer.BACKGROUND) { if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), markers); }
compilation error,[CE] 'else' without 'if',,Layer layer =(Last)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] illegal start of expression,,if(layer == Layer.BACKGROUND) { if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index)); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.BACKGROUND) { if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(new Integer(index)); if(layer == Layer.BACKGROUND) { markers = new java.util.ArrayList(); marker.addChangeListener(this); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer =(Last)this.backgroundRangeMarkers.get(new Integer(index)); if(layer == Layer.BACKGROUND) { markers = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.BACKGROUND) { if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), marker); }
compilation error,[CE] 'else' without 'if',,Layer layer =(Last)this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer =(Last)this.backgroundRangeMarkers.get(new Integer(index)); if(layer == Layer.BACKGROUND) { markers = this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] illegal start of type,,this.columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.clone(); this.columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.clone(); this.columnRenderingOrder = Collections.EMPTY_ORDER;
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.clone(); this.columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.clone(); this.columnRenderingOrder = Collections.emptyList();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.RETURN; this.columnRenderingOrder = Collections.EMPTY_ORDER;
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.clone(); this.columnRenderingOrder = Collections.EMPTY_ROOT;
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.RETURN; this.columnRenderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.clone(); this.columnRenderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.columnRenderingOrder.ASCENDING; this.columnRenderingOrder = new CategoryPlot();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset();
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this.datasets;
compilation error,[CE] cannot find symbol dataset,XYDataset result = null; ,XYDataset result = this.dataset;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets.size());
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this;
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this.datasets.size();
increase failing tests, [FE] StackOverflowError,XYDataset result = null; ,XYDataset result = getDataset();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets.size(), index);
compilation error,[CE] cannot find symbol Lists,XYDataset result = null; ,XYDataset result = Lists.newArrayList();
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); <
compilation error,[CE] class or interface expected,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); } throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList();!=
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); [Delete]
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.remove(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.add(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.contains(0, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(1, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for get(int,AxisLocation),this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.get(0, AxisLocation.BOTTOM_OR_LEFT);
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set( 0, AxisLocation.BOTTOM_OR_LEFT);
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_ OR_LEFT);
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation. BOTTOM_OR_LEFT);
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxisMap);
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRange AxisMap = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.dataset ToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.rangeAxisMap = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol setToRangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.setToRangeAxisMap = new ObjectList();
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.WHITE);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new CategoryPlot();
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.BLUE);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.YEAR);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.SOURCENAME);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.BLACK);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.BOTTOM);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.SHORT);
compilation error,[CE] illegal start of type,,return new XYPlot(XY_Plot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XY_Plot.DEFAULT_CROSSHAIR_PAINT, Color.blue);
compilation error,[CE] illegal start of type,,return PlotOrientation.getPlotOrientation();
compilation error,[CE] illegal start of type,,return new XYPlot(XY_Plot.DEFAULT_CROSSHAIR_PAINT, Color.green);
compilation error,[CE] illegal start of type,,return new Color(Paint.BLOCK, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return new XYPlot(XY_Plot.DEFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] illegal start of type,,return new XYPlot(XY_Plot.DEFAULT_CROSSHAIR_PAINT, Color.black);
compilation error,[CE] illegal start of type,,return new XYPlot(XY_Plot.DEFAULT_CROSSHAIR, Color.blue);
compilation error,[CE] illegal start of type,,return XYPlot.newInstance();
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(); this.categoryPlot = new CategoryPlot();
compilation error,[CE] illegal start of expression,} ,super(); this.categoryPlot = Lists.newArrayList();
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.categoryPlot = new HashMap < Category>();
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.categoryPlot = new HashMap < CategoryPlot>();
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.categoryPlot = new HashMap < K, V>();
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.categoryPlot = new ArrayList < Category>();
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.categoryPlot = new LinkedList < Category>();
compilation error,[CE] <identifier> expected,} ,super(); this.null = null;
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.categoryPlot = new HashSet < Category>();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.domainAxis = domainAxis.setPlot(this);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis(); this.domainAxis = domainAxis.setPlot(this);
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.domainAxis = domainAxis.setPlot(this);
patch is same with buggy,,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList();
compilation error,[CE] cannot find symbol markers,markers = new java.util.ArrayList(); ,this.markers = new java.util.ArrayList();
compilation error,[CE] ')' expected,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] <identifier> expected,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); } this.backgroundRangeMarkers.put(new Integer(index), markers); marker.addChangeListener(this); }
compilation error,[CE] ')' expected,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers.size());
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers);
patch is same with buggy,,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL_CROSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_GLOBAL_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_CLOSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CLOSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '*',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT * 2;
compilation error,[CE] cannot find symbol DEFAULT_BLOSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_BLOSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_LOAD_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 2;
compilation error,[CE] cannot find symbol domainCrosshairPAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPAINT = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = new XYPlot();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.size = 0;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.size = 0.0;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.weight = 0;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkState(this.plot!= null);
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot == null);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, ValueAxis.valueOf(index));
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(category);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, cp.getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, cp.getRangeAxisIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, cp.getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker.removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removerangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return deleteRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return replaceRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return getRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] incompatible types,return removeRangeMarker(marker, Layer.FOREGROUND); ,return addRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeDangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] ')' expected,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND;
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset!= null) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(Dataset.isAssignableFrom(dataset)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || DatasetUtilities.isAssignmentOp(dataset)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || DatasetUtilities.isAssign(dataset)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || DatasetUtilities.isAssignableFrom(dataset)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || DatasetUtilities.isLocal(dataset)) {
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.get(new Integer(index)); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.get(new Integer(index)); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.layer.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.layer.indexOf(marker);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADDING); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADDING);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADDING); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.rangeAxis = rangeAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADDED); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADDING); this.rangeAxis = rangeAxis;
compilation error,[CE] no suitable method found for addRangeMarker(double,Layer),,addRangeMarker(this.anchorValue, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,,addAnchorMarker(this.anchorValue, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(double,Layer),,addRangeMarker(this.anchorValue, Layer.BACKGROUND); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol anchor,,addRangeMarker(this.anchor, Layer.BACKGROUND);
compilation error,[CE] ';' expected,,addRangeMarker(this.anchorValue, Layer.BACKGROUND); this.anchorValue = new Color(0.8f, 0.5f, 0.5f, 0.5f));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] no suitable method found for addRangeMarker(double,Layer),,addRangeMarker(this.anchorValue, Layer.BACKGROUND); this.anchorValue = new ValueMarker(0.0, new Color(1.0, 1.0, 1.0, 1.0));
compilation error,[CE] ';' expected,,addRangeMarker(this.anchorValue, Layer.BACKGROUND); this.anchorValue = new Color(0.0, 1.0, 0.5f, 0.5f, 0.5f));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
compilation error,[CE] cannot find symbol rangeAxis,this.renderers.set(0, renderer); ,this.renderers.set(0, this.rangeAxis);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
compilation error,[CE] cannot find symbol,this.renderers.set(0, renderer); ,this.renderers.remove(0, renderer);
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, Renderer.NEGATIVE_INIT_ERROR);
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer());
compilation error,[CE] cannot find symbol,this.renderers.set(0, renderer); ,this.renderers.add(0, renderer);
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, Renderer.TYPE_INHERIT_ERROR);
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer(this));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesVisible = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.START;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.END;
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
increase failing tests, [FE] AssertionFailedError,if (rangeAxis != null) { ,if(rangeAxis.getPlot()!= null) {
compilation error,[CE] ')' expected,if (rangeAxis != null) { ,if(rangeAxis.setPlot(this); rangeAxis.addChangeListener(this);
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis.getPlot() == null) {
compilation error,[CE] incompatible types,if (rangeAxis != null) { ,if(rangeAxis.getPlot()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis.getComponentCount() > 0) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis.hasChangeListener(this)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis.getItemCount() > 0) {
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); Preconditions.checkState(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol Preconditions,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); Preconditions.checkArgument(this.domainAxisLocations!= null);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol Preconditions,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); Preconditions.checkState(this.domainAxisLocations == null);
compilation error,[CE] cannot find symbol Preconditions,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); Preconditions.checkNotNull(this.domainAxisLocations);
compilation error,[CE] cannot find symbol Preconditions,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); Preconditions.checkArgument(this.domainAxisLocations == null);
compilation error,[CE] ';' expected,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); Preconditions.checkArgument(this.domainAxisLocations!= null));
compilation error,[CE] ';' expected,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); Preconditions.checkArgument(this.domainAxisLocations == null));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = DatasetUtilities.getDomainAxisLocations(this); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = DatasetUtilities.getDomainAxisLocation(this); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = getDomainAxisLocations(); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = DatasetUtilities.getDomainAxisLocations(this); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = DatasetUtilities.getDomainAxisLocation(this); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = getDomainAxisLocations(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] no suitable constructor found for ObjectList(Map),this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.datasetToDomainAxisMap);
compilation error,[CE] cannot find symbol domainAxisMap,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.domainAxisMap);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_ARRAY);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.datasets);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_NOT_OBJECT);
compilation error,[CE] cannot find symbol rangeAxisMap,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.rangeAxisMap);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_ROOT);
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.class);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
compilation error,[CE] ')' expected,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]!= 2.0f, 2.0f }, 0.0f);
compilation error,[CE] ')' expected,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYItemRenderer(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYDomainAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis.getValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYBounds();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = XYPlot.getIndex(index + 1);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(layer, 0);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf("DOMAIN_MARKER");
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = XYPlot.getIndex(index + 1, marker, layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = XYPlot.getIndex(0, index + marker.length() - 1);
patch is same with buggy,,fireChangeEvent(); ,fireChangeEvent();
compilation error,[CE] 'void' type not allowed here,fireChangeEvent(); ,addChangeEvent(fireChangeEvent());
compilation error,[CE] 'void' type not allowed here,fireChangeEvent(); ,ensurePosition(fireChangeEvent());
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,addChangeEvent(this);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,checkAlterNullPointers();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,checkAlterNullPointer();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,checkLocalFileChangeEvent();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,addChangeEvent();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,checkLocalFileChange();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,ensureOpen();
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.domainAxisLocation, location);
increase failing tests, [FE] NullPointerException,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.domainAxisLocation);
compilation error,[CE] cannot find symbol i,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(i, location);
patch is same with buggy,,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol DomainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.DomainAxisLocation);
compilation error,[CE] cannot find symbol locale,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(locale, index);
compilation error,[CE] cannot find symbol position,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(position, index);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.domainAxisLocation, position);
compilation error,[CE] cannot find symbol index,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.index, location);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol RangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, RangeAxis.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol RangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, RangeAxis.LEFT);
compilation error,[CE] cannot find symbol AxisRangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisRangeAxis.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol BOTTOM_OR_LEFT,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, Axis.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol DomainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, DomainAxis.BOTTOM_OR_LEFT);
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.BOTTOM_OR_RIGHT);
increase failing tests, [FE] ClassCastException,if (notify) { ,if(!notify) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
patch is same with buggy,,if (notify) { ,if(notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange() || isLocation(getAxisLocation())) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange() || isAxisLocation(getAxisLocation())) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange() || isLocation(location.getAxisLocation())) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange() || isLocation(getAxisLocation())? null : notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange() || isAxisLocation(location)) {
compilation error,[CE] cannot find symbol Notify,if (notify) { ,if(!Notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange()) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(index < 0 || location == null) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(index!= 0 || location == null) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(location == null && index == 0) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(location == null && index >= 0) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(index >= 0 || location == null) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(index <= 0 || location == null) {
compilation error,[CE] bad operand types for binary operator '==',if (index == 0 && location == null) { ,if(location == 0 && index == null) {
increase failing tests, [FE] ClassCastException,if (index == 0 && location == null) { ,if(location == null && index!= 0) {
compilation error,[CE] cannot find symbol position,if (index == 0 && location == null) { ,if(index == 0 || position == null) {
increase failing tests, [FE] ClassCastException,marker.addChangeListener(this); ,marker.removeChangeListener(this);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeListener(this);
patch is same with buggy,,marker.addChangeListener(this); ,marker.addChangeListener(this);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(this);
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, layer);
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener("RangeMarker");
compilation error,[CE] Marker is abstract; cannot be instantiated,marker.addChangeListener(this); ,marker.addChangeListener(new Marker(this, layer));
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addChangeListener(new RangeRangeMarker());
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, Layer.class);
compilation error,[CE] method removeChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.removeChangeListener("RangeMarker");
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex;
compilation error,[CE] ';' expected,,int index = getIndex(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = Maps.newHashMap();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = mapIndexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = findIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).getValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.size();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.get(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,Integer index = this.datasetToDomainAxisMap.get(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,Integer index = this.datasetToDomainAxisMap.get(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = XYPlot.getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.get(index);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshair = DEFAULT_DOMAIN_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshair = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); Preconditions.checkNotNull(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshair = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshair = DEFAULT_DOMAIN_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshair = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOMAIN_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOAD_FACTOR;
patch is same with buggy,,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOCAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_DOUBLE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOUBLE;
compilation error,[CE] cannot find symbol DEFAULT_DNAME_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DNAME_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_DOCUMENT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOCUMENT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOCALE_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOCALE_CROSSHAIR_VALUE;
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE =, DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker!= null) { layer.removeChild(marker); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(layer);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer); if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(layer, null);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeMarker(layer, marker); if(marker!= null) { layer.removeLast(); }
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return(XYPlot)this.rangeCrosshairLockedOnData.get(true);
compilation error,[CE] illegal start of type,,return new XYPlot(this.rangeCrosshairLockedOnData);
compilation error,[CE] illegal start of type,,return(XYPlot)this.rangeCrosshairLockedOnData.get();
compilation error,[CE] illegal start of type,,return XYPlot.getCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return XYPlot.getCrosshairLock();
compilation error,[CE] illegal start of type,,return(XYPlot)this.rangeCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return new XYPlot(this.rangeCrosshairLockedOnData());
compilation error,[CE] illegal start of type,,return XYPlot.getUpperBound();
compilation error,[CE] illegal start of type,,return(XYPlot)this.rangeCrosshairLockedOnData.get(0, true);
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[null], null, null, null, null } ;
compilation error,[CE] illegal start of type,,super();
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[], null, null, null, null } ;
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[null, null, null, null] } ;
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[0];
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[null, null, null, null, null } ;
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[null], null, null, null, null);
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[null], null, null, null, null!= ;
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[null], null, null, null, null >> ;
compilation error,[CE] illegal start of type,,super(); this.quadrantPaint = new Paint[null], null, null, null, null < ;
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if (this.datasets.size() > index) {
compilation error,[CE] bad operand types for binary operator '||',if (this.datasets.size() > index) { ,if(this.datasets.size() > index || this.datasets.get(index)) {
compilation error,[CE] cannot find symbol,,super.addChangeEvent(e);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.safeNegate(this.datasetChangeEvent); event.getDataset().removeChangeListener(e);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.safeNegate(this.datasetChangeEvent); if(e!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.safeNegate(this.datasetChangeEvent);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.safeNegate(this.datasetChangeEvent); if(e!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.safeNegate(this.datasetChangeEvent); event.removeChangeListener(e);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.safeNegate(this.datasetChangeEvent); event.addChangeEvent(e);
compilation error,[CE] cannot find symbol,,super.addChangeEvent(e); event.getDataset().removeChangeListener(e);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = EventUtilities.safeNegate(this.datasetChangeEvent); if(e!= null) { event.addChangeEvent(e); }
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.remove(e);
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i=0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] package these does not exist,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < these.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(i); i++) {
patch is same with buggy,,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol Layer,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer, true);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layer, null);
compilation error,[CE] cannot find symbol layers,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layers, false);
compilation error,[CE] cannot find symbol Layer,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer, false);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,int),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layer, 0);
compilation error,[CE] cannot find symbol layers,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layers, true);
compilation error,[CE] cannot find symbol level,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, level, false);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return deleteDomainMarker(index, marker, layer, false);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes.size() - 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromValue(this.rangeAxes, this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes.size() - 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = getIndex();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.markers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(this.markers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(this.marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers, marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(0);
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PAINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot assign a value to final variable DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = ++DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_RANGE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PRINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PRINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PLANT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PLANT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol deFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = deFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol RANGE_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = RANGE_CROSSHAIR_PAINT;
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 1; i < this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i=0; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 2; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i= 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] no suitable method found for get(),for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(); i++) {
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i = this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes.remove(i); }
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot < Object> i =(XYPlot)this.domainAxes.get(i); this.domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes.set(i, null); }
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes.set(i); }
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes.clear(); }
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i); if(this.domainAxes!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i); if(this.domainAxes!= null) { axis.configure(); }
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.backgroundRangeMarkers = (ArrayList)this.backgroundRangeMarkers.get(new Integer
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers = (ArrayList)this.backgroundRangeMarkers.get(new Integer
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { removeRangeMarker(marker); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.backgroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); if(domainAxis!= null) { this.domainAxis = domainAxis.getDomainAxis(); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); if(domainAxis!= null) { this.domainAxisMap.set(0, domainAxis); }
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getValueAxis();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.domainAxisMap.get(getItemDataset());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); if(domainAxis!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.domainAxisMap.get(0, domainAxis);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.domainAxisMap.get(0, domainAxis); this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); if(domainAxis!= null) { this.domainAxis.set(0, domainAxis); }
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 1);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 2);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 3);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 4);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapDATAsetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 10);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 5);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 8);
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)this.datasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { map
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)this.datasetToDomainAxis.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] '(' or '[' expected,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = Maps.newHashMap(); for(int i = axisIndex; i < axisIndex; i++) { mapDatasetToDomainAxis = new HashMap
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { mapRe
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = Maps.newHashMap(); for(int i = axisIndex; i < axisIndex; i++) { mapDatasetToDomainAxis = new HashMap(); }
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; >>
compilation error,[CE] generics are not supported in -source 1.4,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; <
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; [Delete]
compilation error,[CE] illegal start of expression,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; if(!this.rangeCrosshairStroke.equals("")) { this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;!=
patch is same with buggy,,this.anchorValue = 0.0; ,this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATIONS,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATIONS;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATION,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATION;
compilation error,[CE] cannot find symbol DEFAULT_ANCHAIR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANGER_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANGER_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCORD_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCORD_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VISIBLE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VISIBLE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VISIBLE;
patch is same with buggy,,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,Integer axisIndex = getAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,Integer axisIndex = getRangeAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,CategoryPlot index = Maps.newHashMap();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,Integer axisIndex = indexInList(this, axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,Integer axisIndex = getRangeAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex();
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.domainAxis);
compilation error,[CE] cannot find symbol,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, new RangeAxis(domainAxis));
compilation error,[CE] cannot find symbol numberAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, numberAxis);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis, this.domainAxis);
compilation error,[CE] cannot find symbol categoryAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, categoryAxis);
compilation error,[CE] cannot find symbol,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.add(0, rangeAxis);
compilation error,[CE] cannot find symbol,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, new RangeAxis());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = XYPlot.getIndex(index + 1);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = XYPlot.getIndex(index + 1, marker, layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(layer, 0);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = getIndex(index + 1);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = XYIndexOf(Marker.RANGE, marker, layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', 'r');
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(0.0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(itemRenderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxisEdge();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairVisible = DEFAULT_ROUND_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol Event,,Event.getParent().removeChangeEvent(event);
compilation error,[CE] package Event does not exist,,Event.goog.addChangeEvent(event);
compilation error,[CE] cannot find symbol Event,,Event.getParent().removeChangeListener(this);
compilation error,[CE] cannot find symbol Event,,Event.getGenericParent().removeChangeEvent(event);
compilation error,[CE] cannot find symbol Event,,Event.getGenericParent().removeChangeEvent(this);
compilation error,[CE] cannot find symbol rangeAxis,,Event.getEvent().setValue(this.rangeAxis);
compilation error,[CE] cannot find symbol Event,,Event.getParent().removeChangeEvent(this);
compilation error,[CE] cannot find symbol Event,,Event.getEvent().setValue(this.rangeAxes);
compilation error,[CE] cannot find symbol Event,,Event.getGenericParent().resolveChangeEvent(event);
compilation error,[CE] cannot find symbol Event,,Event.getGenericParent().resolveChangeEvent(this);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.rangeAxes.set(0, domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxes.set(0, domainAxis);
increase failing tests, [FE] NullPointerException,,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.rangeAxes.set(0, domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.domainAxises.set(0, domainAxis);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,,this.rangeAxes.set(0, domainAxis); this.mapDatasetToRangeAxis(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises.set(0, domainAxis); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.rangeAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol mapSharedDomainAxis,,this.rangeAxes.set(0, domainAxis); this.mapSharedDomainAxis = false;
patch is same with buggy,,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE + 1;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_ASSIGNED,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_ASSIGNED : DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_ASSIGNABLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_ASSIGNABLE : DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_LOAD_FACTOR;
compilation error,[CE] cannot find symbol DEFAULT_OPTIONAL_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_OPTIONAL_CROSSHAIR_VISIBLE;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : null;
compilation error,[CE] cannot find symbol DEFAULT_RANGE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_RANGE;
compilation error,[CE] cannot find symbol DEFAULT_FLOAT_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_FLOAT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,location.setRangeAxisLocation(true); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(getPlotInfo()));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = getDomainAxis();
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.domainAxis = new XYPlot < Object>();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYItemRenderer(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxes();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)this.dataset.getValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)this.dataset.getRowAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxisMap.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this).setPlot(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(domainAxis, rangeAxis);
patch is same with buggy,,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] no suitable constructor found for BasicStroke(float,Stroke),this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Layer <?> layer = new Layer(); if(notify) { addRangeMarker(index, marker); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker); if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Layer <?> layer = new Layer(); if(notify) { addRangeMarker(layer, marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { throw new IllegalStateException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Layer <?> layer = new Layer(); if(notify) { addRangeMarker(layer); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Layer <?> layer = new Layer(); if(notify) { addRangeMarker(label); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLowerBound(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLowerBound(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLowerCase(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLowerCase();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foreground);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.layer);
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index+1);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, 0);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index -1);
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result = (CategoryDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result = (CategoryDataset)this.datasets.get(index - 1);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index * 2);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYDomainAxisMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYBounds();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(null); this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.annotationList = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol dataset,,this.dataset = new java.util.ArrayList(); renderer.addChangeListener(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); renderer.addChangeListener(this);
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRuleAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,setupDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDefaultAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,defineDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureGlobalAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.baseline = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(baseline, Layer.BACKGROUND); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(baseline, Layer.BACKGROUND); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(baseline); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(baseline); this.domainAxis = domainAxis;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(this, layer);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = getIndex();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeGridlinePaint); this.rangeGridlineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = Color.white;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = Color.red;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeGridlinePaint); this.rangeGridlinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinePaint!= null); this.rangeGridlinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinePaint == null); this.rangeGridlinePaint = Color.black;
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.rangeGridlinePaint!= 0); this.rangeGridlinePaint = Color.black;
compilation error,[CE] illegal start of type,,return new Point2D.Double(0.0, 0.0);
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getUpperBound(); this.quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,XYPlotOrientation orientation = new XYPlotOrientation(); this.quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,XYPlotOrientation orientation = new XYPlotOrientation(); this.orientation = new XYPlotOrientation();
compilation error,[CE] cannot find symbol,,XYPlotOrientation orientation = new XYPlotOrientation();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getUpperBound(); this.quadrantOrigin = new XYPlot.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,XYPlotOrientation orientation = new XYPlotOrientation(); this.transientPoint2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,XYPlotOrientation orientation = new XYPlotOrientation(); this.xYPlotOrientation = new XYPlotOrientation();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getUpperBound();
compilation error,[CE] <identifier> expected,,XYPlot = XYPlot.getUpperBound(); this.quadrantOrigin = new Point2D.Double(0.0, 0.0));
patch is same with buggy,,configureRangeAxes(); ,configureRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureLocalFileAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRuleAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureChangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setupRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,updateRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureDefaultAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRangeAxisEvents();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRangeAxesEvents();
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null ||(index == 0 &&!this.foregroundDomainMarkers.contains(marker))) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null ||(index == 0 &&!this.foregroundDomainMarkers.contains(marker))) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null ||(index == 0 &&!this.backgroundDomainMarkers.contains(marker))) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.backgroundDomainMarkers == null ||(index == 0 &&!this.backgroundDomainMarkers.contains(marker))) {
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex(), index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(category);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromCategory(getPlotIndex());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.getIndex(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n', marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = getIndex(index)+ 1;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.getIndex();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = getIndex(index).size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, this.rangeAxes.size() - 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this.rangeAxes, 0);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this.rangeAxes, getRangeAxisIndex());
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); <
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList();!=
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); [Delete]
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); >=
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); <<
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocations.size();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocations.getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getIndex();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocations.get(index);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.rangeAxisLocations, location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation().getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocations.get(index);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getIndex();
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = Integer.parseInt(axisIndex);
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = getRangeAxisEdge();
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = indexOf(axisIndex);
compilation error,[CE] cannot find symbol map,,map =(Category)this.axisIndex.get(index); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = Integer.parseInt(this.axisIndex);
compilation error,[CE] not a statement,,if(axisIndex < 0) { mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { map
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] no suitable method found for get(int,int),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(0, 0);
compilation error,[CE] no suitable method found for get(int,<null>),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i, null);
compilation error,[CE] cannot find symbol iPlotIndex,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(iPlotIndex);
compilation error,[CE] cannot find symbol iLocalEdge,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(iLocalEdge);
compilation error,[CE] cannot find symbol path,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(path);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis().getIndex();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis().getIndex(); if(result!= 0) { result = new Integer(index); }
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis().getIndex(); if(result == 0) { result = new Integer(index); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(categoryPlot.size() - 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxis(); result.setIndex(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis().getIndex(); if(result > 0) { result = new Integer(index); }
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRange().getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxis().getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(categoryPlot.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxis().getIndex(); result = new Integer(index);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if (axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() > 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isRange()) {
compilation error,[CE] 'void' type not allowed here,if (axis != null) { ,if(axis == null || axis.configure()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.size() > 0) {
patch is same with buggy,,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0L);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getDomainDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getDomainDataset()); setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = DatasetUtilities.getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getDomainDataset()); setDomainAxisLocation(domainAxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getDomainDataset()); setDomainAxisLocation(domainAxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(0);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(0); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromCategory();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers, new Integer(index));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers, Layer.class);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this, Layer.class);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, Layer.class);
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisMap);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.renderers);
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(0);
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.rangeAxisMap);
compilation error,[CE] cannot find symbol domainAxisToolTip,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisToolTip);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new OBList();
compilation error,[CE] cannot find symbol domainAxisRenderer,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisRenderer);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ObjectArrayList();
patch is same with buggy,,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_LOAD_STROKE;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_LOAD_CROSSHAIR_STROKE;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_GLOBAL_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_LOAD_FACTOR;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_GLOBAL_STROKE;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_LOAD_THRESHAIR_STROKE;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CLOSSHAIR_STROKE;
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_BLOSSHAIR_STROKE;
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_RANGE_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISABILITY,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISABILITY;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISAL,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISAL;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISSIBLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISSIBLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VIST,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VIST;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VICAL,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VICAL;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VISE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_RANGE_CROSSHAIR_VISE;
patch is same with buggy,,super(); ,super();
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation : PlotOrientation.HORIZONTAL");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation: PlotOrientation.HORIZONTAL");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("PlotOrientation : PlotOrientation.HORIZONTAL");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation =", PlotOrientation.HORIZONTAL);
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation: PlotOrientation.VERTICAL");
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("Orientation : PlotOrientation.HORIZONTAL,");
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super("Orientation : PlotOrientation.HORIZONTAL" + this.orientation);
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super("Orientation : PlotOrientation.HORIZONTAL" + getClass());
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super("Orientation: PlotOrientation.HORIZONTAL" + getClass());
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> this.rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> this.rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> rangeAxes = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> rangeAxes = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> this.rangeAxes =(CategoryPlot)this.rangeAxes.get();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> this.rangeAxes =(CategoryPlot)this.rangeAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < RangeAxis> rangeAxes =(CategoryPlot)this.rangeAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> this.rangeAxes = getRangeAxes();
patch is same with buggy,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] bad operand types for binary operator '+',private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0)+ 1;
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker.hasChildren()) { marker.removeChild(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker.hasChildren()) { marker.removeChild(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker.isEmpty()) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker.equals(this.marker)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker.isEmpty()) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker),,Marker marker =(Marker)this.marker.clone();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot(); this.dataset = new HashMap();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot(); this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = Orientation.HORIZONTAL;
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot(); this.plot = new XYPlot();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] generics are not supported in -source 1.4,,XYPlot <?> renderer = new XYPlot(); this.dataset = new ObjectList();
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.hasChildren()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(isDomainAxis() || axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isDomain()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isConstructor()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if (axis == null) {
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); this.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] cannot find symbol,,event.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { notifyListeners(e); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this, ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); if(event!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); if(event!= null) { notifyListeners(event); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); event.setAnnotation(this);
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = true;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null boolean rangeCrosshairLockedOnData = true;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private static boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol XYItemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
compilation error,[CE] cannot find symbol rangeAxis,this.renderers.set(0, renderer); ,this.renderers.set(0, this.rangeAxis);
compilation error,[CE] cannot find symbol RANGE,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer.RANGE);
compilation error,[CE] cannot find symbol WARNING,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer.WARNING);
compilation error,[CE] cannot find symbol xYItemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, xYItemRenderer);
compilation error,[CE] cannot find symbol RP,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer.RP);
compilation error,[CE] ';' expected,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer));
patch is same with buggy,,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < count; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < size; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.size; axisIndex++) {
compilation error,[CE] cannot find symbol areaCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < areaCount; axisIndex++) {
compilation error,[CE] cannot find symbol range,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < range; axisIndex++) {
compilation error,[CE] cannot find symbol count,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.count; axisIndex++) {
compilation error,[CE] cannot find symbol NUMBER_INT,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < NUMBER_INT; axisIndex++) {
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.BackgroundRangeMarkers.size() - 1);
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.BackgroundRangeMarkers);
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.backgroundRangeMarkers);
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.BackgroundRangeMarkers.size());
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.BackgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.BackgroundRangeMarkers.size() + 1);
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.BackgroundRangeMarkers.size() - 2);
increase failing tests, [FE] IllegalArgumentException,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(0, 0);
compilation error,[CE] cannot find symbol backgroundRangeAxisMap,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.backgroundRangeAxisMap);
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeListener(this); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,throw new IllegalStateException("");
compilation error,[CE] illegal start of expression,} ,super.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeListener(this);
compilation error,[CE] illegal start of expression,} ,this.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.clear(); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.removeChangeListener(this); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.remove(); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,fireDatasetChanged();
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundRangeMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker =(Marker)this.marker.clone();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = getCategoryMarker();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker =(Marker)super.removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getCategoryMarker(); if(marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker.equals(type)) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = getCategoryPlot().removeRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker.equals(this.marker)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker.equals(type)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,throw new IllegalStateException("");
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = domainAxis.getRangeAxisEdge();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = domainAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = rangeAxis.getRangeAxisEdge();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = domainAxis.getRangeAxisElement();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = rangeAxis.getDomainAxis();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = domainAxis.getRangeAxisEvent();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkState(this.rangeAxis == null); this.renderer = new RangeAxisRenderer();
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] ';' expected,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE, DEFAULT_LOAD_FACTOR;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : STROKE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : STRING;
compilation error,[CE] ';' expected,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE, DEFAULT_DOMAIN_STROKE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = 0;
compilation error,[CE] ';' expected,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE, DEFAULT_GUARDLINE_STROKE;
compilation error,[CE] ';' expected,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE, DEFAULT_DOMAIN_STROKE + 1;
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; deFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; deFAULT_GRIDLINE_STROKE = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; DeFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; deFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] illegal start of type,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; |= DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] illegal start of type,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; -= DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] illegal start of type,,final Stroke DEFAULT_CROSSHAIR_STROKE; = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; def = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; DeFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.axisIndex), new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(0, new Integer(axisIndex));
compilation error,[CE] cannot find symbol index,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.index), new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this, new Integer(axisIndex));
compilation error,[CE] '.class' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(int), new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.mapDataset, new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(index); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(getPlotInfo()));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(getPlot()));
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] bad operand types for binary operator '!=',if (rangeAxis != null) { ,if(rangeAxis.getPlot()!= DEFAULT_DOMAIN_GRIDLINES_VISIBLE) {
compilation error,[CE] ')' expected,if (rangeAxis != null) { ,if(rangeAxis.setPlot(this); rangeAxis.addChangeListener(this);
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis.getDomainPlot()!= DEFAULT_DOMAIN_GRIDLINES_VISIBLE) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis.getPlot()!= null) {
compilation error,[CE] ')' expected,if (rangeAxis != null) { ,if(rangeAxis.setPlot(this); rangeAxis.addChangeListener(this); }
compilation error,[CE] ')' expected,if (rangeAxis != null) { ,if(rangeAxis.setPlot(this); rangeAxis.setChangeListener(this);
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis.getPlot() == null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis.getDomainPlot()!= null) {
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,XYDomainAxes axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,XYAxis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,XYPlot axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,XYAxis axis = XYPlot.getAxisEdge();
compilation error,[CE] cannot find symbol,,XYDomainAxes axis = XYPlot.getAxesEdge();
compilation error,[CE] cannot find symbol,,XYDomainAxes axis = new XYPlot();
compilation error,[CE] cannot find symbol,,XYDomainAxes axis = XYPlot.getAxes();
compilation error,[CE] cannot find symbol,,XYDomainAxis axis = XYPlot.getAxisEdge();
compilation error,[CE] cannot find symbol,,XYAxis axis = XYPlot.getAxis();
patch is same with buggy,,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol Layer,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer, true);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, null);
compilation error,[CE] cannot find symbol layers,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layers, false);
compilation error,[CE] cannot find symbol Layer,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer, false);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,int),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, 0);
compilation error,[CE] cannot find symbol layers,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layers, true);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removerangeMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol level,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, level, false);
patch is same with buggy,,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol Layer,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer, true);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layer, null);
compilation error,[CE] cannot find symbol layers,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layers, false);
compilation error,[CE] cannot find symbol Layer,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer, false);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,int),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layer, 0);
compilation error,[CE] cannot find symbol level,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, level, false);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return deleteDomainMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol layers,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layers, true);
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,if(this.backgroundRangeMarkers!= null) { markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,marker =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers = (Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] cannot find symbol,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,if(this.backgroundRangeMarkers!= null) { markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)); } else { this.backgroundRangeMarkers.add(marker); }
compilation error,[CE] incompatible types,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,this.backgroundRangeMarkers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] bad operand types for binary operator '+',markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)+ 1);
compilation error,[CE] cannot find symbol defaultDomainMarkers,,this.defaultDomainMarkers = new HashMap(); this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] no suitable method found for addDomainMarker(CategoryAxis,Layer),,addDomainMarker(domainAxis, Layer.BACKGROUND); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.foregroundDomainMarkers = new HashMap(); this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol defaultDomainMarkers,,this.defaultDomainMarkers = new HashMap(); this.domainAxisRangeMarkers = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol defaultDomainMarkers,,this.defaultDomainMarkers = new HashMap(); this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(getPlotInfo()));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(index); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisFlag(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisFlag(this, location));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation());
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new XYMarker(); if(marker.getLowerBound()!= 0) { marker.removeChild(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new XYMarker(); if(marker.getLowerBound()!= 0) { marker.removeChild(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new XYMarker(); if(marker.getLowerBound()!= 0) { marker.removeChild(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker.equals(this.marker)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker.equals(this.marker)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new XYMarker(); if(marker.getLowerBound()!= 0) { marker.removeChild(marker, Layer.FOREGROUND); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker),,Marker marker = new XYMarker();
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new XYMarker(); if(marker.getLowerBound()!= 0) { marker.removeChild(marker); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = new XYPlot();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = XYPlot.NEGATIVE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HARD;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = PlotOrientation.HARD;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= null);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = XYDataset.getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(renderer);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = DatasetUtilities.getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(getBase64Variants());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = XYDataset.getDataset(renderer);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = XYDataset.getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = DatasetUtilities.getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.get(0);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex;
compilation error,[CE] ';' expected,,int index = getIndex(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = Maps.newHashMap();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex).getValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.axisIndex;
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.newInstance();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory(); Preconditions.checkNotNull(DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] <identifier> expected,,CategoryPlot = getCategoryPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory(); Preconditions.checkNotNull(Font.DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getSize();
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getCategoryPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategoryPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot = Lists.newArrayList();
compilation error,[CE] <identifier> expected,,CategoryPlot = CategoryPlot.getCategory(); Preconditions.checkState(font.isEmpty());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations.setPlot(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); domainAxis.addChangeListener(this);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location, notify);
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location, notify);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getCurrentLocation(); notify = null;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = null;
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = Location.getDefault(); notify = null;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = true;
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = Maps.newHashMap(); notify = null;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = false;
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = Maps.newHashMap();
compilation error,[CE] cannot find symbol,,super.setLocation(location, notify);
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis instanceof XYItemRenderer) {
compilation error,[CE] cannot find symbol rangeAxis,if (renderer != null) { ,if(this.rangeAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis == null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!XYItemRenderer.isAssignableFrom(domainAxis)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(domainAxis.getRangeAxis()!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!XYItemRenderer.isAssignableFrom(renderer)) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke!= null); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = DatasetUtilities.getDataset(dataset); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainGridlineStroke); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] illegal start of type,,this.rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = Collections.EMPTY_ORDER;
compilation error,[CE] clone() has protected access in Object,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = Collections.emptyList();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = Collections.EMPTY_ROOT;
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = Collections.EMPTY_LIST;
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = Collections.EMPTY_ORIGINAL_ORDER;
compilation error,[CE] illegal start of type,,CategoryPlot category =(CategoryPlot)this.rowRenderingOrder.clone(); this.rowRenderingOrder = Collections.EMPTY_OF_STRING;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.layer.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.getIndex(index);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.markers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.layer.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLowerCase(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.markers);
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(!isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < axisIndex) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < axisIndex) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
patch is same with buggy,,if (notify) { ,if(notify) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol warning,if (notify) { ,if(warning) {
compilation error,[CE] cannot find symbol Notify,if (notify) { ,if(Notify) {
compilation error,[CE] cannot find symbol Notify,if (notify) { ,if(!Notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRegistered()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRange() || notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRegistered() || notify) {
compilation error,[CE] cannot find symbol,,XYRangeAxes axis = getRangeAxes();
compilation error,[CE] cannot find symbol,,XYAxis axis = XYPlot.getAxisEdge();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getXYAxis();
compilation error,[CE] cannot find symbol,,XYRangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYRangeAxis axis = getRangeAxisEdge();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxisEdge();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getXYAxis();
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); this.marker = marker.toLowerCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.trim().toLowerCase(); this.marker = marker.trim().toLowerCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); this.marker = marker.toUpperCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.trim().toLowerCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); this.marker = marker.toLastCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); this.marker = marker.toString();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.trim().toLowerCase(); this.marker = marker.trim().toUpperCase();
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); this.marker = marker.trim().toLowerCase();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ObjectListWithCapacity(2);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ObjectListWithCapacity(0.0);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.datasets);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new TreeSet();
compilation error,[CE] no suitable constructor found for ObjectList(double),this.datasets = new ObjectList(); ,this.datasets = new ObjectList(0.0);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new StreamList();
compilation error,[CE] no suitable constructor found for ObjectList(double,double),this.datasets = new ObjectList(); ,this.datasets = new ObjectList(0.0, 0.0);
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer!= Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.domainGridlinesVisible = true;
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.domainGridlinesVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = null;
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.rangeAxisLocations = new XYItemRenderer(this);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.rangeAxisLocations = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new XYItemRenderer(this);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.rangeAxisLocations = new XYItemRenderer(this);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.rangeAxisLocations = new XYDataset(this);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.datasets = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null);
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0), domainAxis);
compilation error,[CE] cannot find symbol,this.domainAxes.set(0, domainAxis); ,this.domainAxes.add(0, domainAxis);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis + 1);
compilation error,[CE] cannot find symbol,this.domainAxes.set(0, domainAxis); ,this.domainAxes.remove(0, domainAxis);
compilation error,[CE] bad operand types for binary operator '-',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis - 1);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0), domainAxis;
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.domainAxes.set(0, domainAxis); ,this.domainAxes.clear(0, domainAxis);
compilation error,[CE] ')' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOUBLE_PADDING); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(null); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.domainAxisPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol PlotOrientation,,PlotOrientation = PlotOrientation.HORIZONTAL; this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol PlotOrientation,,PlotOrientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol PlotOrientation,,PlotOrientation = PlotOrientation.HORIZONTAL; this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.VERTICAL);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.VERTICAL); this.dataset = new ObjectList();
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setRangeAxisLocation(true); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setRangeAxisLocation(true); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAINT; }
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint == null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAINT; }
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_SPACE,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_SPACE; }
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAINT; }
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PAPACE,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAPACE; }
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PAPINT,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAPINT; }
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAINT; }
patch is same with buggy,,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.rangeAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedChangeListener(this);
compilation error,[CE] cannot find symbol rangeAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.rangeAxis, nullPointerException);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithCapacity(0);
compilation error,[CE] cannot find symbol rangeAxisPointer,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.rangeAxisPointer);
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.domainAxis, nullPointerException);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedValues();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < axisIndex) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < axisIndex) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SRC_OVER, 0);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromPlot(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SRC_OVER);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexInList(this, XYPlot.SIZES);
compilation error,[CE] variable result is already defined in method getDataset(int),,CategoryDataset result =(CategoryDataset)this.datasets.get(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(category);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(CategoryPlot.SIZES);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(CategoryPlot.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, new CategoryDataset(index));
patch is same with buggy,,setDomainAxisLocation(0, location, notify); ,setDomainAxisLocation(0, location, notify);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location, notify));
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setDomainAxisLocation(<null>,AxisLocation,boolean),setDomainAxisLocation(0, location, notify); ,setDomainAxisLocation(null, location, notify);
compilation error,[CE] AxisLocation(String) has private access in AxisLocation,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation("DomainAxisLocation"));
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setDomainAxisLocation(1, location, notify);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(location, notify));
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(getPlot(), location, notify));
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PAINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot assign a value to final variable DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = ++DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol deFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = deFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_RANGE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PLANT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PLANT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol RANGE_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = RANGE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_CSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PADDING); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PADDING); this.domainAxis = domainAxis;
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapAxisToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapToolTipsToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapDATAsetToDomainAxis(0, 0);
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result!= null? 0 : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? 1 : result;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
patch is same with buggy,,return result; ,return result;
compilation error,[CE] bad operand types for binary operator '!=',return result; ,return result!= 0? 1 : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? 0 : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? null : result;
compilation error,[CE] bad operand types for binary operator '<',return result; ,return result < 0? 1 : result;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index > 0) { throw new IllegalStateException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker, layer);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = getIndex(index + 1);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', 'r');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index > 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] cannot find symbol NullPointerException,this(null, null, null, null); ,this(NullPointerException, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] cannot find symbol NullPointer,this(null, null, null, null); ,this(null, null, null, NullPointer.ERROR);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] cannot find symbol Null,this(null, null, null, null); ,this(Null, null, null, null);
compilation error,[CE] cannot find symbol NOT_IMPLEMENTED,this(null, null, null, null); ,this(null, null, NullPointerException.NOT_IMPLEMENTED);
compilation error,[CE] bad operand types for binary operator '+',this(null, null, null, null); ,this(null, null, null, null + 1);
compilation error,[CE] cannot find symbol unknown,this(null, null, null, null); ,this(unknown, null, null, null);
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.trim().toLowerCase(); this.marker = marker.trim().toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.toUpperCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.toLastCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.trim().toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.toString();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.toLowerCase(); this.marker = marker.trim().toLowerCase();
compilation error,[CE] illegal start of expression,} ,this.marker = marker.trim().toLowerCase(); this.marker = marker.trim().toUpperCase();
patch is same with buggy,,configureRangeAxes(); ,configureRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRuleAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,defineRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureDefaultAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex;
compilation error,[CE] ';' expected,,int index = getIndex(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = Maps.newHashMap();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex).getValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = findIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.axisIndex;
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); setRangeAxisLocation(AxisLocation.RIGHT, false);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT, true);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); setRangeAxisLocation(AxisLocation.BOTTOM_OR_RIGHT, false);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT, true);
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectArrayList();
compilation error,[CE] cannot find symbol Preconditions,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(); Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol Preconditions,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(); Preconditions.checkArgument(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(); Preconditions.checkState(this.domainAxes == null);
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(); Preconditions.checkArgument(this.domainAxes == null);
compilation error,[CE] cannot find symbol This,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();This.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol This,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(); This.domainAxisLocations = new ObjectList();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf("DOMAIN_MARKER");
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf("DOMAIN_MARKER"); if(index > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf('n', marker); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = getIndex(index + 1);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', 'r');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(layer);
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result!= null? 0 : result;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] bad operand types for binary operator '<',return result; ,return result < null? 0 : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? getResult() : result;
compilation error,[CE] bad operand types for binary operator '>=',return result; ,return result >= null? 0 : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? null : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? 1 : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? result : null;
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; }
compilation error,[CE] illegal start of expression,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true;
compilation error,[CE] illegal start of expression,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol domainZeroBaseLineVisible,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaseLineVisible = false; }
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselineVisible = true; }
patch is same with buggy,,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size();
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() - 1;
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() + 1;
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() -1;
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() / 2;
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() - 2;
compilation error,[CE] ';' expected,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() 0;
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,float count = this.rangeAxes.size();
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() * 2;
increase failing tests, [FE] NullPointerException,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() -2;
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(i);
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis = (CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.clone();
increase failing tests, [FE] NullPointerException,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(1);
compilation error,[CE] no suitable method found for get(int,int),CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(0, 0);
increase failing tests, [FE] NullPointerException,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] no suitable method found for get(int,int),CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(0, 1);
increase failing tests, [FE] AssertionFailedError,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol iPlotIndex,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(iPlotIndex);
compilation error,[CE] no suitable method found for get(int,int),CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis = (CategoryAxis)this.domainAxes.get(0, 0);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DomainAxis> thisdomainAxes =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DomainAxis> domainAxes =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DomainAxis> domainAxes = this.domainAxes.get(i);
compilation error,[CE] cannot find symbol i,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DomainAxis> thisdomainAxes =(CategoryPlot)this.domainAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < DomainAxis> domainAxes =(CategoryPlot)this.domainAxes.get(0);
compilation error,[CE] no suitable method found for get(int,int),,this.domainAxes =(CategoryAxis)this.domainAxes.get(0, 0);
compilation error,[CE] cannot find symbol,,super.configureDomainAxes();
compilation error,[CE] no suitable method found for get(),,this.domainAxes =(CategoryAxis)this.domainAxes.get();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRuleAxes();
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocalFileAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,setupDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocalAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,defineRangeAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureShortAxes();
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol VERSTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERSTICAL;
compilation error,[CE] cannot find symbol POJOOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = POJOOrientation.VERTICAL;
compilation error,[CE] cannot find symbol VerTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VerTICAL;
compilation error,[CE] cannot find symbol PLOTOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PLOTOrientation.VERTICAL;
compilation error,[CE] cannot find symbol CONTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.CONTICAL;
compilation error,[CE] cannot find symbol POLICY_ORIGINAL_PLOT,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = POLICY_ORIGINAL_PLOT;
compilation error,[CE] cannot find symbol Orientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = Orientation.VERTICAL;
compilation error,[CE] cannot find symbol POLICY_ORIGINAL_PADDING,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = POLICY_ORIGINAL_PADDING;
compilation error,[CE] cannot find symbol POLICY_ORIGINAL_PLOT_VERTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = POLICY_ORIGINAL_PLOT_VERTICAL;
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker.removeChangeListener(this); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker.removeChangeListener(this); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker.removeChangeListener(this); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker.removeChangeListener(this); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { marker.setRange(this); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker.removeChangeListener(this); if(notify) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker.removeChangeListener(layer); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker.removeChangeListener(this); if(index == 0) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!isRangeMarker()) { throw new IllegalArgumentException(""); }
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation() == null) { notifyListeners(e); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation() == null) { notifyListeners(e); }
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, null);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { updateListeners(e); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getAnnotation()!= null) { notifyListeners(e); } else { updateListener(e); }
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] no suitable method found for remove(Marker,boolean),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, false);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] no suitable method found for remove(Marker,<null>),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, null);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, this.marker);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent() == null || getEventType()!= ChartChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isAssignmentOp(event)&&!ChartChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isAssignmentOp(event)) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isSet(event)&&!ChartChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isAssignmentOp(event)&& event.getChart()!= null) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isExpressionNode(event)) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isExpressionNode(event)&&!ChartChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol EventUtil,if (getParent() != null) { ,if(getParent() == null || EventUtil.isExpressionNode(getParent())) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new ObjectList();
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.put(0, dataset);
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(0);
compilation error,[CE] no suitable method found for set(int),this.datasets.set(0, dataset); ,this.datasets.set(0);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase();
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker); notifyListeners(new InformalizedChangeEvent(this));
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toLowerCase(); notifyListeners(new RangeEvent(this));
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker); notify = true;
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker); notifyListeners(new NotifyListeners(this));
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker); notifyListeners(new Informant(new Renderer()));
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toString();
compilation error,[CE] cannot find symbol,,super.addRangeMarker(this, marker);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, Color.WHITE);
compilation error,[CE] illegal start of type,,return new Color(Paint.WHITE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, Color.YEAR);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, Color.BLUE);
compilation error,[CE] illegal start of type,,return PlotOrientation.getPlotOrientation();
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, Color.DOUBLE);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, Color.BLOCK);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers); if(notify) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,this.backgroundRangeMarkers.put(new Integer(index), markers); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE); this.rangeGridlinesVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE); this.rangeGridlinePaint = Color.black;
compilation error,[CE] ')' expected,,Preconditions.checkState(this.rangeGridlinesVisible = true; this.rangeGridlinesVisible = false;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinesVisible); this.rangeGridlinesVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE); this.rangeGridlineVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE); this.rangeGridlineValue = true;
compilation error,[CE] cannot find symbol,,configureRangeAxis();
compilation error,[CE] cannot find symbol,,configureRangeAxis(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.datasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocations.setPlot(this);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocations.setPlot(this);
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAINT; }
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint == null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAINT; }
compilation error,[CE] not a statement,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; 0 } this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PAPINT,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; if(this.rangeGridlinePaint!= null) { this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAPINT; }
compilation error,[CE] bad operand types for binary operator '<',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; 0 < this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol YEAR,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.YEAR;
compilation error,[CE] cannot find symbol color,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = color.WHITE;
compilation error,[CE] cannot find symbol White,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.White;
compilation error,[CE] cannot find symbol Colour,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Colour.WHITE;
compilation error,[CE] cannot find symbol,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Painting DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex;
compilation error,[CE] ';' expected,,int index = getIndex(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = Maps.newHashMap();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = findIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).getValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).getCategory();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIntValue();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.domainAxisRenderer = new HashMap();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset); this.domainAxis = domainAxis.getDomainAxisDataset();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE;
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset); this.domainAxis = domainAxis.getCategoryDataset();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> renderer = new CategoryPlot(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL); this.plot = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL); this.dataset = new ObjectList();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> renderer = getPlot(); this.orientation = PlotOrientation.HORIZONTAL;
patch is same with buggy,,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol index,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(0, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.axisIndex), new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this, new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.mapDataset, new Integer(axisIndex));
compilation error,[CE] '.class' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(int), new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)this.axisIndex.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { map
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = getRangeAxisEdge();
compilation error,[CE] illegal start of expression,} ,this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)this.axisIndex.get(axisIndex);
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = axisIndex; for(int i = 0; i < axisIndex; i++) { mapRe
compilation error,[CE] '(' or '[' expected,} ,if(axisIndex < 0) { mapDatasetToRangeAxis = Maps.newHashMap(); for(int i = axisIndex; i < axisIndex; i++) { mapDatasetUtilities.put(axisIndex, new Integer
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)this.axisIndex.get(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex();
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex(); if(location!= null) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getRowIndex();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex(); if(local) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); this.domainAxisLocation = LocationUtil.getDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); this.domainAxisLocation = LocationUtil.getDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); this.domainAxisLocation = location;
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex(); if(!this.location.isLocation()) { fireChangeEvent(); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_PADDING); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = domainAxis;
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol YEAR,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.YEAR;
compilation error,[CE] cannot find symbol White,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.White;
compilation error,[CE] cannot find symbol color,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = color.WHITE;
compilation error,[CE] cannot find symbol Colour,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Colour.WHITE;
compilation error,[CE] cannot find symbol WWHITE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WWHITE;
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol marker,,this.marker = marker.toString();
compilation error,[CE] cannot find symbol LayerUtils,,LayerUtils.removeChangeEvent(this, marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol LayerUtil,,LayerUtil.removeChangeEvent(this, marker);
compilation error,[CE] cannot find symbol marker,,this.marker = marker.trim();
compilation error,[CE] cannot find symbol,,super.addLastAnnotation(Marker.class, marker);
compilation error,[CE] cannot find symbol LayerUtil,,LayerUtil.removeChangeListener(this, marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index);
compilation error,[CE] cannot find symbol LayerUtil,,LayerUtil.removeChangeListener(this);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(isDomainAxis() || axis!= null) {
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if (axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
compilation error,[CE] 'void' type not allowed here,if (axis != null) { ,if(axis == null || axis.configure()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isDomain()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() > 0) {
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.get(new Integer(index)); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.get(new Integer(index)); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.remove(marker); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.contains(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index < 0) { this.foregroundDomainMarkers.remove(marker); }
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
compilation error,[CE] cannot find symbol rangeAxis,if (renderer != null) { ,if(this.rangeAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis == null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis == null) {
compilation error,[CE] cannot find symbol itemRenderer,if (renderer != null) { ,if(itemRenderer!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(rangeAxis!= null) {
compilation error,[CE] cannot find symbol,,CategoryIndex axisIndex = getCategoryIndex();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axisIndex = axisIndex.getRange();
compilation error,[CE] cannot find symbol,,CategoryIndex axisIndex = getCategoryIndex(axisIndex);
compilation error,[CE] cannot find symbol,,CategoryPlotIndex axisIndex = getCategoryPlotIndex();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,Integer axisIndex = axisIndex.get(axisIndex);
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axisIndex = axisIndex.getSize();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axisIndex = axisIndex.getRowKey();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axisIndex = axisIndex.getLength();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, ValueAxis.valueOf(index));
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = ValueAxis.valueOf(this.valueAxis);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, ValueAxis.valueOf(parent));
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = ValueAxis.valueOf(getRangeAxisIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(category);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = ValueAxis.valueOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRuleAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDOMAINAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,setupDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDefaultAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxisEdge();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxisEdges();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new XYItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = new XYDomainAxisRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.categoryPlot = new CategoryPlot();
compilation error,[CE] <identifier> expected,,super(); this.null = null;
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.categoryPlot = new HashMap < Category>();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.categoryPlot = Lists.newArrayList();
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.categoryPlot = new HashMap < CategoryPlot>();
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.categoryPlot = new HashMap < K, V>();
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.categoryPlot = new ArrayList < Category>();
compilation error,[CE] generics are not supported in -source 1.4,,super(); this.categoryPlot = new LinkedList < Category>();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.cfgPrettyPrinter = null;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE;
patch is same with buggy,,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_OPTIONAL;
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_FIELD : DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINE
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_FACTOR : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_FLOAT : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES_FACTOR,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_FACTOR : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_OPTIONAL : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_FACTOR : DEFAULT_RANGE_GRIDLINES;
patch is same with buggy,,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = true;
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = true;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = null;
compilation error,[CE] illegal start of type,private boolean domainCrosshairLockedOnData = true; ,private null boolean domainCrosshairLockedOnData = true;
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol DEFAULT_BACKGROUND,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(DEFAULT_BACKGROUND);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapReferences();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap2();
compilation error,[CE] cannot find symbol DEFAULT_BACKROUND,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(DEFAULT_BACKROUND);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapper();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap2D();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedColors();
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.backgroundRangeMarkers);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithCapacity(0.0);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(CategoryPlot.SIZES);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(category);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(this.datasets);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = markers.contains(marker);
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.backgroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.foregroundDomainMarkers = new HashMap();
compilation error,[CE] bad operand types for binary operator '<',this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(); 0 < this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(); This.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol BackgroundDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.BackgroundDomainMarkers = new HashMap();
compilation error,[CE] bad operand types for binary operator '<',this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(); 0 < this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] bad operand type Map for unary operator '!',this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();!this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(); This.foregroundRangeMarkers = new HashMap();
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker); if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer, marker); if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(layer); if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYDomainAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new XYItemRenderer(this);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis.getValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = DomainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.domainAxis = domainAxis.getValueAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 5.0);
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRangeAxisLocation());
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getRangeAxisLocation();
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), false);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getPlot());
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation().getIndex();
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), index);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), location);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = Integer.parseInt(axisIndex);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = Integer.valueOf(axisIndex);
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex += axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = Integer.parseInt(this.axisIndex);
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol axisIndex,,this.axisIndex = indexOf(axisIndex);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] no suitable constructor found for RectangleInsets(double,int,double,double,double),this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(8.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 1.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 4.0);
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index+1);
compilation error,[CE] no suitable method found for get(int,int),result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, 0);
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result = (XYDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index * 2);
increase failing tests, [FE] AssertionFailedError,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index-1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index -1);
compilation error,[CE] no suitable method found for get(int,int),result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, 1);
patch is same with buggy,,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
increase failing tests, [FE] NullPointerException,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,public DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
increase failing tests, [FE] NullPointerException,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,protected DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private datasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
patch is same with buggy,,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder =DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot assign a value to final variable datasetRenderingOrder,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol RADING,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.RADING;
patch is same with buggy,,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder. REVERSE;
compilation error,[CE] cannot find symbol RANSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.RANSE;
compilation error,[CE] cannot find symbol RIEVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.RIEVERSE;
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 1; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i <= this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i= 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = null; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i!= this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 2; i < this.rangeAxes.size(); i++) {
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = new DatasetChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = new DatasetChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this.chartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = new DatasetChangeEvent(ChartChangeEventType.DATASET_UPDATED); event.setValue(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = new DatasetChangeEvent(ChartChangeEventType.DATASET_UPDATED); event.setAnnotation(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = new DatasetChangeEvent(ChartChangeEventType.UPDATED);
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectArrayList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new HashMap();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectArray();
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes = new ObjectList(); ,this.rangeAxises = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new Orientation();
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new OBList();
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol XYItemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer(renderer));
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, Renderer.XYItemRenderer);
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer());
compilation error,[CE] cannot find symbol RANGE,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer.RANGE);
compilation error,[CE] '(' or '[' expected,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer));
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer.Renderer);
compilation error,[CE] cannot find symbol rendering,this.renderers.set(0, renderer); ,this.renderers.set(0, rendering);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.hasChanged()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isRange()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isDefine()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isArray()) {
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisValue = DEFAULT_DOMAIN_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = DEFAULT_DOMAIN_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.domainAxis = DEFAULT_DOMAIN_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisValue = DEFAULT_DOMAIN_VALUE;
compilation error,[CE] cannot find symbol rangeAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.rangeAxisLocation.set(1, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.RIGHT); this.rangeAxisLocation.left = 0;
compilation error,[CE] cannot find symbol rangeAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.rangeAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.rangeAxisLocation.set(1, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.rangeAxisLocations.set(0, AxisLocation.RIGHT); this.domainAxisLocation = DEFAULT_DOMAIN_OR_LEFT;
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.rangeAxisLocation.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.RIGHT); this.domainAxisLocation = DEFAULT_DOMAIN_OR_LEFT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.domainAxisLocation.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_RIGHT); this.domainAxisLocation.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation.set(0, AxisLocation.TOP_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.domainAxisLocation.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation.set(0, AxisLocation.TOP_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.RIGHT);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] boolean cannot be dereferenced,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker).marker;
compilation error,[CE] no suitable method found for remove(Marker,boolean),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, false);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(0);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] cannot find symbol rangeMarker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(rangeMarker);
compilation error,[CE] no suitable method found for remove(Marker,int),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, index);
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected dynamic ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol ResourcesBundle,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourcesBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.newBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(".org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(index < 0) { Layer layer = getLastChange(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(layer.isEmpty()) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(layer.isEmpty()) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index == 0) { throw new IllegalArgumentException(""); }
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis == null) {
compilation error,[CE] incomparable types: Class and AxisLocation,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= AxisLocation.BOTTOM_OR_LEFT) {
compilation error,[CE] incomparable types: Class and AxisLocation,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= AxisLocation.BOTTOM_OR_RIGHT) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.setLocation(AxisLocation.TOP_OR_LEFT)) {
patch is same with buggy,,if (domainAxis != null) { ,if (domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.setLocation(AxisLocation.TOP_OR_LEFT) == null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isLocation()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.setLocation(AxisLocation.BOTTOM_OR_LEFT)) {
compilation error,[CE] incomparable types: Class and AxisLocation,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= AxisLocation.TOP_OR_LEFT) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.END;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.START;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchorPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchorPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
increase failing tests, [FE] NullPointerException,,this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, marker);
patch is same with buggy,,super(); ,super();
compilation error,[CE] cannot find symbol,super(); ,super(createNullPointer(), PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol,super(); ,super(new NullPointerExceptionItemRenderer());
compilation error,[CE] cannot find symbol,super(); ,super(createNullPointer(), PlotOrientation.VERTICAL);
compilation error,[CE] cannot find symbol,super(); ,super(createNullPointer());
compilation error,[CE] cannot find symbol,super(); ,super(createNullPointer(), null);
compilation error,[CE] cannot find symbol,super(); ,super(createNullPointer(), Plot.NONE);
compilation error,[CE] cannot find symbol,super(); ,super(createNullPointer(), PlotContext.NONE);
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(null);
compilation error,[CE] cannot find symbol,super(); ,super(createNullPointer(), Plot.NEGATIVE);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_PAPINT,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAPINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol rangeAxisPaint,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; this.rangeAxisPaint = DEFAULT_CROSSHAIR_PAPINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisPaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new HashMap(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(layer.isEmpty()) { addRangeMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(layer.isEmpty()) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new HashMap(); if(marker!= null) { marker = new HashMap(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(null); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location);
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(null); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultCategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(getPlot());
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRangeAxisRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRangeAxisLocation();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentPlot();
patch is same with buggy,,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GRIDLINES,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_DEFAULT_DOMAIN_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_DOMA_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMA_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_DOMAINE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAINE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DEFAULT_DOMAIN_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener() == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.getValueAxis() == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size()!= 0) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxislocations,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.domainAxislocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_LEFT);
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADDING;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] ';' expected,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP);
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDomainAxis); this.domainAxis = new DomainAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxisMap(); this.domainAxis = new DomainAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDomainAxis); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis, domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getDefaultAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocalAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis, rangeAxis);
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] no suitable constructor found for RectangleInsets(double,double,double),this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol WRITE_INIT_ERROR,,Preconditions.checkNotNull(XYPlot.WRITE_INIT_ERROR);
compilation error,[CE] cannot find symbol XYPlotUtils,,Preconditions.checkNotNull(XYPlotUtils.safeMultiply(this));
compilation error,[CE] cannot find symbol XYPlotUtils,,Preconditions.checkNotNull(XYPlotUtils.safeToInt(this));
compilation error,[CE] call to super must be first statement in constructor,,super(XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] cannot find symbol XYZone,,Preconditions.checkNotNull(XYZone.getDefault());
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isStatementBlock(this));
compilation error,[CE] call to super must be first statement in constructor,,super(); XYPlot = new XYPlot(null, null);
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.checkNotNull(this));
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isStatement());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxisStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxisStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(i); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i= 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = null; i < this.domainAxes.size(); i++) {
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] cannot find symbol domainAxisLocation,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.domainAxisLocation);
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new ObjectArrayList();
compilation error,[CE] cannot find symbol rangeAxis,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.rangeAxis);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.rangeAxisLocation);
compilation error,[CE] no suitable constructor found for ObjectList(RectangleInsets),this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.axisOffset);
compilation error,[CE] cannot find symbol domainAxis,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new RectangleList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis, domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = rangeAxis.getRangeAxis();
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 1; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = null; i < this.rangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i= 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] no suitable method found for get(),for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 2; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] AssertionFailedError,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol NEVER,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NEVER;
compilation error,[CE] cannot find symbol POSITIVE_INSETS,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INSETS;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] cannot find symbol DECIMAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.DECIMAL;
compilation error,[CE] cannot find symbol CENTER,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.CENTER;
compilation error,[CE] cannot find symbol NEGATIVE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NEGATIVE;
compilation error,[CE] cannot find symbol VERSTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERSTICAL;
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INFINITY;
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.peek(), false);
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.POSITIVE_INFINITY, false);
compilation error,[CE] cannot find symbol Path,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Path, false);
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot, false);
compilation error,[CE] no suitable method found for removeDomainMarker(Marker,int,Layer,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol DEFAULT,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.DEFAULT);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.peek(), true);
compilation error,[CE] cannot find symbol TOP,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.TOP, false);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker),,addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { addRangeMarker(index, marker); }
compilation error,[CE] unclosed character literal,,if(marker!= null) { Layer layer = getLastChain(); if(index < 0) { marker.append('ufffd'); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(index < 0) { marker.append('n'); }
compilation error,[CE] unclosed character literal,,if(marker!= null) { Layer layer = getLastChain(); if(index >= 0) { marker.append('ufffd'); }
compilation error,[CE] unclosed character literal,,if(marker == null) { Layer layer = getLastChain(); if(index < 0) { marker.append('ufffd'); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(index >= 0) { marker.append('n'); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { marker.append('n'); }
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDefaultAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureBaseAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdge();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureNamespaceAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdges();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureVarAxis();
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index+1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index-1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index * 2);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index -1);
compilation error,[CE] cannot find symbol,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index+1).getValue();
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result = (CategoryDataset)this.datasets.get(index);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, 1);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, location);
compilation error,[CE] cannot find symbol position,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, position);
patch is same with buggy,,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol index,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(this.index, location);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(0, location);
compilation error,[CE] cannot find symbol TYPE_INT,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, AxisLocation.TYPE_INT);
compilation error,[CE] cannot find symbol NAME,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, AxisLocation.NAME);
compilation error,[CE] cannot find symbol NOT_OBJECT,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, AxisLocation.NOT_OBJECT);
compilation error,[CE] cannot find symbol TYPE_OBJECT,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, AxisLocation.TYPE_OBJECT);
compilation error,[CE] cannot find symbol NONE,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, AxisLocation.NONE);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = layer.indexOf(marker);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.edgeRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = map.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf("n");
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = new DatasetChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); if(event!= null) { getParent().removeChangeEvent(event); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = new DatasetChangeEvent(this); if(event!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); if(event!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); if(event!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new DatasetChangeEventException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); event.setAnnotation(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(chartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); if(event!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); event.setAnnotation(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED); if(event!= null) { throw new DatasetChangeEventException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.categoryDatasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.size() - 1);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size() - 1);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index).indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets);
compilation error,[CE] <identifier> expected,,static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; deFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] <identifier> expected,,static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; deFAULT_GRIDLINE_STROKE = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] illegal start of type,,static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; if(DEFAULT_CROSSHAIR_STROKE!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of type,,static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; if(DEFAULT_CROSSHAIR_STROKE == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of type,,static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; return new NullPointerException("");
compilation error,[CE] <identifier> expected,,static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; deFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isEmpty()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isDefine()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.hasChildren()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isArray()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isLocal()) {
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,this.rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,this.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,return new CategoryPlot(this.rangeCrosshairLockedOnData);
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData!= false;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData == false;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData | false;
compilation error,[CE] '}' expected,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] {, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] cannot assign a value to final variable quadrantPaint,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private final transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] }, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
compilation error,[CE] cannot find symbol all,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { all, null, null, null } ;
compilation error,[CE] cannot find symbol boll,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { boll, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] illegal start of expression,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null >> ;
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.isEmpty()); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.isEmpty()); LocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.isEmpty()); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot =(XYPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot =(XYPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.isEnabled()); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot =(XYPlot)getPlot(); this.localizationResources = resourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.isEmpty()); LocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] illegal start of type,,XYPlot plot =(XYPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle"); localizationResources = ResourceBundle.getBundle("org.jfree
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.isEnabled()); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || index == this.marker.size()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.size() == 0) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || index == this.marker.length) {
compilation error,[CE] cannot find symbol markers,if (marker == null) { ,if(marker == null || markers.size() == 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || index == marker.length) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || index == this.marker.equals(marker)) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || index >= marker.length) {
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex = getCategoryPlot();
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex =(CategoryPlot)this.axisIndex.clone();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex = getPlotIndex(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent();
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex = getPlotIndex();
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex = getCategoryPlotIndex();
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex = getCategoryPlot(); event.setAxis(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent();
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis == null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasChangeListener()) {
compilation error,[CE] illegal start of expression,if (renderer != null) { ,if(!(renderer!= null)&& this.domainAxis!= null)) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(!(renderer!= null)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.isLocal()) {
compilation error,[CE] cannot find symbol propertyFilterItemRenderer,if (renderer != null) { ,if(propertyFilterItemRenderer!= null) {
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported("n");
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
patch is same with buggy,,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] ';' expected,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black);
compilation error,[CE] bad operand types for binary operator '+',this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black + 1;
compilation error,[CE] cannot find symbol White,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.White;
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashList();
compilation error,[CE] incompatible types,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new ObjectList();
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new hashMap();
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashArray();
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new Hashmap();
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() ;
compilation error,[CE] incompatible types,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new ArrayList();
compilation error,[CE] Map is abstract; cannot be instantiated,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new Map();
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(index));
patch is same with buggy,,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] '.class' expected,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(int, new Integer(axisIndex));
compilation error,[CE] '.class' expected,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(int index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol map,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(map, new Integer(axisIndex));
compilation error,[CE] cannot find symbol path,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(path, new Integer(axisIndex));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Validate.isTrue(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { return marker; }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker),,Marker marker = getMarker();
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker == null) { return marker; }
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectArrayList();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new OBList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0);
compilation error,[CE] no suitable constructor found for ObjectList(double),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0.0);
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectArray();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new Class();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,Validate.notNull(PlotUtil.safeMultiply(getValue(), getChronology()));
compilation error,[CE] cannot find symbol PlotType,,Validate.notNull(PlotType.UNKNOWN_TYPE);
compilation error,[CE] <identifier> expected,,super(); this.null = null;
compilation error,[CE] cannot find symbol,,Validate.notNull(PlotUtil.safeMultiply(getBase64Variants()));
compilation error,[CE] cannot find symbol PlotType,,Validate.notNull(PlotType.UNKNOWN_TYPE); this.nextToken() = new java.util.ArrayList();
compilation error,[CE] cannot find symbol PlotType,,Validate.notNull(PlotType.UNKNOWN_TYPE); this.nextToken = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,,Validate.notNull(PlotUtil.safeMultiply(getValue(), getBase()));
compilation error,[CE] cannot find symbol PlotType,,Validate.notNull(PlotType.UNKNOWN_TYPE); this.next();
compilation error,[CE] cannot find symbol,,Validate.notNull(PlotUtil.safeMultiply(getValue(), this.nextDouble()));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations == null); this.rangeAxisLocations = new ObjectList();
patch is same with buggy,,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ArrayList();
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList() + 1;
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectArray();
compilation error,[CE] no suitable constructor found for ObjectList(double),this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0.0);
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new NullPointerException();
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectArrayList();
patch is same with buggy,,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomain AxisMap = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new OBList();
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0);
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size()!= 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol length,if (dataset != null) { ,if(dataset == null || dataset.length == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol length,if (dataset != null) { ,if(dataset!= null || dataset.length == 0) {
compilation error,[CE] cannot find symbol axisAxisMap,,this.axisAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisAxisMap,,this.axisAxisMap.set(axisIndex, new Integer(axisIndex)); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndexMap,,this.axisIndexMap.set(axisIndex, new Integer(axisIndex)); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.axisMap.size();
compilation error,[CE] cannot find symbol axisIndexMap,,this.axisIndexMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisAxisMap,,this.axisAxisMap.set(axisIndex, new Integer(axisIndex)); this.mapToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisAxisMap,,this.axisAxisMap.set(axisIndex, new Integer(axisIndex)); this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.axisMap.indexOf(axisIndex);
compilation error,[CE] cannot find symbol axisAxisMap,,this.axisAxisMap.set(axisIndex, new Integer(axisIndex)); this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,final Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,super();
compilation error,[CE] illegal start of type,,new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,return super.transientPoint2D.Double(0.0, 0.0);
compilation error,[CE] cannot find symbol,,XYPlotOrientation orientation = new XYPlotOrientation();
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,final Point2D quadrantOrigin = new Point2D.Double();
compilation error,[CE] cannot find symbol,,XYPlotOrientation orientation = getOrientation();
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double();
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,this.domainAxes =(DomainAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,Validate.isTrue(this.domainAxes.containsKey(i));
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,Integer i = this.domainAxes.size();
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,int i = this.domainAxes.size();
compilation error,[CE] cannot find symbol,,super.setDomainAxes(i);
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes();
compilation error,[CE] cannot find symbol FieldUtils,,FieldUtils.checkState(this.domainAxes.size());
compilation error,[CE] cannot find symbol FieldUtils,,FieldUtils.checkArithmetic(this.domainAxes.size());
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxes.get(i));
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND || this.layer == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND || this.layer == Layer.BOTTOM) {
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxis.set(0, domainAxis);
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxiss,this.domainAxes.set(0, domainAxis); ,this.domainAxiss.set(0, domainAxis);
compilation error,[CE] no suitable method found for set(int),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0);
compilation error,[CE] bad operand types for binary operator '-',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis - 1);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis + 1);
compilation error,[CE] not a statement,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis)- 1;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_PAINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_RANGE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_ROIDLINE_PAINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_ROIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_GRIDLINE_PAINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_LOCAL_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxisStroke,,this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE; this.domainAxisPaint = DEFAULT_PLAIN_PAINT;
patch is same with buggy,,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot assign a value to final variable renderingOrder,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private datasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] bad operand types for binary operator '+',private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE + 1;
compilation error,[CE] cannot find symbol RANSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.RANSE;
compilation error,[CE] cannot find symbol NEVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.NEVERSE;
compilation error,[CE] cannot find symbol DEVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.DEVERSE;
compilation error,[CE] cannot find symbol datasetRenderingOrder,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = datasetRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE? nullPointerException : DatasetRenderingOrder.NEVERSE;
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = new HashMap();
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0.0;
compilation error,[CE] ';' expected,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = Color.blue);
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.iterator().next();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.intValue();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result.toString();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] no suitable method found for getValue(),return result; ,return result == null? 0 : result.getValue();
compilation error,[CE] cannot find symbol nullPointerException,return result; ,return(index == 0)? result : nullPointerException.getValue();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.trim();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.values();
patch is same with buggy,,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_FLOAT_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_FLOAT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_FIELD_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_FIELD_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_FROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_FROSSHAIR_VISIBLE;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : null;
compilation error,[CE] bad operand types for binary operator '-',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE - 1;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_CROSSHAIR_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_LOCAL_CROSSHAIR_VISIBLE;
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(index >= this.datasets.size()) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if (this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets == null) {
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRendererList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new TreeMap();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedHashMap();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new HashMap();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRenderingContext();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRendererItemList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYList();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = getRangeAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = getRangeAxis(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getValueAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = indexOfSupported(getRangeAxis());
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = indexOf('n');
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = valueAxis.getIndex(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = valueAxis.getIndex();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getIndex(index);
patch is same with buggy,,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOCAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_GLOBAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_BLOSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_BLOSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOMAIN_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CLOSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CLOSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOAD_FACTOR;
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.POSITIVE_INFINITY, false);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.peek(), false);
compilation error,[CE] cannot find symbol DEFAULT,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.DEFAULT);
compilation error,[CE] cannot find symbol DEFAULT,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.DEFAULT, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.POSITIVE_INFINITY, true);
compilation error,[CE] cannot find symbol Plot,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.Plot, false);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.peek(), true);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, true);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxisPaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_STROKE;
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isAssignableFrom(axis)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isEmpty()) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isDefine()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.hasChanged()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.containsKey("Domain")) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isSupported()) {
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(dataset, renderer);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = super.getRangeAxis();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToRangeAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol,,super.mapDatasetToRangeAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge()); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge());
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToRangeAxis(); this.axisIndex = index;
compilation error,[CE] cannot assign a value to final variable seriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol XYSeriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = XYSeriesRenderingOrder.REVERSE;
increase failing tests, [FE] NullPointerException,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = getSeriesRenderingOrder();
compilation error,[CE] bad operand types for binary operator '+',private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE + 1;
compilation error,[CE] constructor SeriesRenderingOrder in class SeriesRenderingOrder cannot be applied to given types;,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = new SeriesRenderingOrder();
patch is same with buggy,,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol RANGE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.RANGE;
compilation error,[CE] cannot find symbol TREVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.TREVERSE + 1;
patch is same with buggy,,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(this.axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(this.intValue(index), new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(0, new Integer(axisIndex));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(this.intEger(index), new Integer(axisIndex));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRangeAxisLocation());
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getRangeAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRange());
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); if(local) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); this.location = location;
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, true);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_RIGHT, true);
patch is same with buggy,,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setupRangeAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol TOP_OR_LeFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LeFT, true);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,<null>),setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, null);
compilation error,[CE] cannot find symbol TEOP_OR_LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TEOP_OR_LEFT, true);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_RIGHT, false);
compilation error,[CE] cannot find symbol TEP_OR_LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TEP_OR_LEFT, true);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisValue = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxisValue,,Preconditions.checkState(this.domainAxisValue == null); this.domainAxisStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxisValue,,Preconditions.checkState(this.domainAxisValue == null); this.domainAxisStroke = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxisValue,,Preconditions.checkState(this.domainAxisValue == null); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxisValue,,Preconditions.checkState(this.domainAxisValue == null); this.domainAxisStroke = DEFAULT_CLOSSHAIR_STROKE;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol,,super.mapDatasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToDomainAxis();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)this.axisIndex.getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge());
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToDomainAxis(); axisIndex++;
compilation error,[CE] no suitable method found for addRangeMarker(Integer),fireChangeEvent(); ,addRangeMarker(new Integer(index));
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker(index);
compilation error,[CE] ')' expected,fireChangeEvent(); ,addRangeMarker(new int[index] { );
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,updatePlotOrientation();
compilation error,[CE] no suitable method found for addRangeMarker(Integer),fireChangeEvent(); ,addRangeMarker(new Integer(0));
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,updateRangeMarker();
compilation error,[CE] '[' expected,fireChangeEvent(); ,addRangeMarker(new int index);
compilation error,[CE] no suitable constructor found for Integer(int,Marker),fireChangeEvent(); ,addRangeMarker(new Integer(index, marker));
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot),fireChangeEvent(); ,addRangeMarker(this);
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker),fireChangeEvent(); ,addRangeMarker(index, marker);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BaseToolTipGenerator());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BaseToolTipGenerator()); this.domainAxis = domainAxis;
increase failing tests, [FE] NullPointerException,,renderer.setBaseToolTipGenerator(DEFAULT_BADLINE_STROKE);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(valueAxis)this.rangeAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.clone();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(VeueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.contains(i);
compilation error,[CE] ')' expected,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = getValueAxis(this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,Validate.isTrue(this.rangeAxes.containsKey(i));
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol,this.renderers.set(0, renderer); ,this.renderers.set(0, getItemRenderer());
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer());
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer(renderer));
compilation error,[CE] cannot find symbol rendering,this.renderers.set(0, renderer); ,this.renderers.set(0, rendering);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(1, renderer);
compilation error,[CE] '(' or '[' expected,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer);
compilation error,[CE] '(' or '[' expected,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer));
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this.rangeAxes, 0);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, 0);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.dataset.getDataset();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)getDataset();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.clone();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = Sets.newHashSet();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = new XYDataset(this.rangeAxis);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = new XYDataset(dataset.size());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.datasets.get(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(dataset, domainAxis, rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(dataset); this.rangeAxis = rangeAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(dataset, domainAxis); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(dataset, domainAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] call to this must be first statement in constructor,,this(dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] call to super must be first statement in constructor,,super(dataset); this.rangeAxis = RangeAxis.getRange();
compilation error,[CE] call to super must be first statement in constructor,,super(dataset); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(dataset, domainAxis); this.rangeAxis = RangeAxis.getRange();
compilation error,[CE] call to this must be first statement in constructor,,this(dataset, domainAxis, rangeAxis);
compilation error,[CE] method add in interface Collection cannot be applied to given types;,markers.add(marker); ,markers.add(index);
compilation error,[CE] method add in interface Collection cannot be applied to given types;,markers.add(marker); ,markers.add(index, marker);
compilation error,[CE] method add in interface Collection cannot be applied to given types;,markers.add(marker); ,markers.add(0, marker);
patch is same with buggy,,markers.add(marker); ,markers.add(marker);
increase failing tests, [FE] NullPointerException,markers.add(marker); ,markers.add(null);
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(marker.getLocale());
compilation error,[CE] cannot find symbol RANGE_MARKER,markers.add(marker); ,markers.add(Marker.RANGE_MARKER);
increase failing tests, [FE] NullPointerException,markers.add(marker); ,markers.add("RangeMarker:");
compilation error,[CE] '.class' expected,markers.add(marker); ,markers.add(int index);
increase failing tests, [FE] NullPointerException,markers.add(marker); ,markers.add("RangeMarker:n");
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryPlot i =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryPlot i = this.domainAxes.get(i);
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryAxis i =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryPlot i = getDomainPlot();
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryPlot i = this.domainAxes.size();
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryAxis i = this.domainAxes.get(i);
compilation error,[CE] variable i is already defined in method configureDomainAxes(),,CategoryPlot i =(CategoryPlot)this.domainAxes.get(i); for(int i = 0; i < this.domainAxes.size(); ++i) { this.domainAxes.set(i); }
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { throw new NullPointerException(""); }
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes =(CategoryAxis)this.domainAxes.get(i); }
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (rangeAxis != null) { ,if(this.rangeAxisLocation == null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(domainAxis == null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (rangeAxis != null) { ,if(this.rangeAxisLocation!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis == null || domainAxis.isLocation()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis == null || rangeAxis.hasChangeListener()) {
increase failing tests, [FE] AssertionFailedError,if (rangeAxis != null) { ,if(this.rangeAxisLocations == null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null || domainAxis.getClass()!= null) {
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index+1);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index * 2);
compilation error,[CE] cannot find symbol,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index).getRange();
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index-1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index-1);
increase failing tests, [FE] NullPointerException,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, layer, false);
compilation error,[CE] '.class' expected,addRangeMarker(index, marker, layer, true); ,addRangeMarker(int, marker, layer, false);
compilation error,[CE] cannot find symbol DEFAULT,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.DEFAULT, false);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.peek(), true);
compilation error,[CE] cannot find symbol DEFAULT,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.DEFAULT);
compilation error,[CE] cannot find symbol DEFAULT,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.DEFAULT, true);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.peek(), false);
compilation error,[CE] '.class' expected,addRangeMarker(index, marker, layer, true); ,addRangeMarker(int index, marker, layer, false);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,setRangeMarker(index, marker, layer, false);
compilation error,[CE] no suitable method found for addRangeMarker(Marker,int,Layer,boolean),addRangeMarker(index, marker, layer, true); ,addRangeMarker(marker, index, layer, false);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index < 0) { addRangeMarker(this, marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index < 0) { addRangeMarker(this); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(index < 0) { marker.setAnnotation(this); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index < 0) { marker.setAnnotation(this); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = getMarker();
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { return removeRangeMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker == null) { return removeRangeMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { return marker; }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = getMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeListener(this); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,super.setChanged(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,XYPlot event = getChangeEvent(); this.datasetChanged = event.getDatasetChangeEvent(); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,super.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,XYPlot event = getChangeEvent(); this.datasetChanged = event.getDatasetChangeEvent();
compilation error,[CE] illegal start of expression,} ,XYPlotChangeEvent event = getDatasetChangeEvent(); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeEvent(this); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeListener(this);
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap();
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap() + 1;
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] no suitable constructor found for TreeMap(ValueAxis),this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(domainAxis);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new XYDataset();
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap()? this.domainAxis : null;
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap() ;
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxis, domainAxis);
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap()? this.domainAxis: new TreeMap();
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.size()) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.get(new Integer(index)) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,for(int index = 0; index < this.foregroundDomainMarkers.size(); ++index) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,marker =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.get(new Integer(index)) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
patch is same with buggy,,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] no suitable constructor found for BasicStroke(double),this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5d);
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new HashMap();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new TreeMap();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] List is abstract; cannot be instantiated,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new List();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new Class();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new XYRangeAxisLocations();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new LinkedHashMap();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectArrayList();
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker);
patch is same with buggy,,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers);
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] bad operand types for binary operator '+',this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index)+ 1, markers);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(null, new Integer(index), markers);
compilation error,[CE] no suitable constructor found for Integer(int,Marker),this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index, marker));
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.remove(new Integer(index), marker);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.peek(new Integer(index), markers);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker, this.markers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = layer.indexOf(marker);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = Layer.indexOf(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = marker.indexOf("n");
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = map.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.indexOf(marker);
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND) {
increase failing tests, [FE] NullPointerException,if (layer == Layer.FOREGROUND) { ,if(!(layer == Layer.FOREGROUND)) {
compilation error,[CE] cannot find symbol layers,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || layers.size() == 0) {
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if (layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol EXTENDS,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || layer == Layer.EXTENDS) {
compilation error,[CE] cannot find symbol BOTTOM,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND || layer == Layer.BOTTOM) {
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(1, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets = new XYDataset(dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] ';' expected,this.datasets.set(0, dataset); ,this.datasets =(XYDataset)dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0);
compilation error,[CE] void cannot be dereferenced,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset).getDatasetCount();
compilation error,[CE] bad operand types for binary operator '+',this.datasets.set(0, dataset); ,this.datasets.set(0, dataset + 1);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CLOSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CLOSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, null);
compilation error,[CE] cannot find symbol DomainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, DomainAxis);
compilation error,[CE] cannot find symbol Node,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, Node.newNumber(0));
compilation error,[CE] cannot find symbol domainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0, this.domainAxis);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] ';' expected,,super(); this.domainAxisLocation = AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] ';' expected,,this.domainAxisLocation = AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, true);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_RIGHT, false);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,boolean,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, false, notify);
patch is same with buggy,,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, false);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, notify);
compilation error,[CE] cannot find symbol locale,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(locale, false);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,boolean,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, true, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(CategoryPlot,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(this, location, notify);
compilation error,[CE] cannot find symbol locale,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(locale, false, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,<null>),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, null);
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null) {
compilation error,[CE] bad operand types for binary operator '==',if (result == null) { ,if(result == null || index == getRangeAxis()) {
compilation error,[CE] cannot find symbol WHOLE_COLLECTION,if (result == null) { ,if(result == null || index == WHOLE_COLLECTION) {
compilation error,[CE] cannot find symbol valueAxis,if (result == null) { ,if(result == null || index == valueAxis.size()) {
patch is same with buggy,,if (result == null) { ,if(result == null) {
compilation error,[CE] cannot find symbol valueAxis,if (result == null) { ,if(result == null || index == valueAxis.length) {
compilation error,[CE] cannot find symbol WHOLE_COLLECTION,if (result == null) { ,if(index == WHOLE_COLLECTION) {
compilation error,[CE] cannot find symbol,if (result == null) { ,if(result == null || index == getLength()) {
compilation error,[CE] bad operand types for binary operator '>=',if (result == null) { ,if(result == null || index >= getRangeAxis()) {
patch is same with buggy,,this.anchorValue = 0.0; ,this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_ANGER_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANGER_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ARRAY_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ARRAY_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCORDING,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCORDING;
compilation error,[CE] cannot find symbol DEFAULT_ANCROSSHAIR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATIONS,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATIONS;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VISIBLE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_ANCROSSHAIR_VISIBLE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCROSSHAIR_VISIBLE;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.size();
compilation error,[CE] unclosed character literal,,int index = marker.indexOf('marker');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.length();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf("Null'marker' argument.");
compilation error,[CE] unclosed character literal,,int index = marker.lastIndexOf('marker');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] empty character literal,,int index = marker.indexOf('');
compilation error,[CE] unclosed character literal,,int index = marker.indexOf('Marker');
compilation error,[CE] unclosed character literal,,int index = this.marker.indexOf('marker');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.size();
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] << 2.0f, 2.0f }, 0.0f);
increase failing tests, [FE] NullPointerException,if (yAxis != null) { ,if(yAxis == null) {
patch is same with buggy,,if (yAxis != null) { ,if(yAxis!= null) {
compilation error,[CE] cannot find symbol EventUtil,if (yAxis != null) { ,if(yAxis == null || EventUtil.isGet(yAxis)) {
compilation error,[CE] cannot find symbol EventUtil,if (yAxis != null) { ,if(yAxis == null || EventUtil.isControlStructure(yAxis)) {
compilation error,[CE] cannot find symbol EventUtil,if (yAxis != null) { ,if(yAxis == null || EventUtil.isExpressionNode(yAxis)) {
compilation error,[CE] cannot find symbol EventUtil,if (yAxis != null) { ,if(yAxis == null || EventUtil.isFunctionAnonymous(yAxis)) {
compilation error,[CE] cannot find symbol EventUtilities,if (yAxis != null) { ,if(yAxis == null || EventUtilities.isGet(yAxis)) {
compilation error,[CE] cannot find symbol chartChangeEventType,if (yAxis != null) { ,if(yAxis == null || event.chartChangeEventType.CAN_ADAPT) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis == null || yAxis.isLocal()) {
compilation error,[CE] cannot find symbol chartChangeEventType,if (yAxis != null) { ,if(yAxis == null || event.chartChangeEventType.CAN_ADAPTABLE) {
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(i);
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis = (CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.clone();
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis = (CategoryAxis)this.domainAxes.clone();
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.contains(i);
compilation error,[CE] no suitable method found for get(int,int),CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(0, this.domainAxes.size() - 1);
compilation error,[CE] cannot find symbol importAxis,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(importAxis);
compilation error,[CE] no suitable method found for get(int,int),CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(0, this.domainAxes.size());
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDefaultAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxisAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdge();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureBaseAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRemoteAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdges();
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] cannot find symbol,this(null, null, null, null); ,this(createNullPointerException(), null, null, null);
compilation error,[CE] cannot find symbol,this(null, null, null, null); ,this(createPlot(), null, null, null);
compilation error,[CE] incompatible types,this(null, null, null, null); ,this(null, null, null, null? null : nullPointerException.getMessage());
compilation error,[CE] cannot find symbol global,this(null, null, null, null); ,this(global, null, null, null);
compilation error,[CE] <null> cannot be dereferenced,this(null, null, null, null); ,this(null, null, null, null.getClass());
compilation error,[CE] incompatible types,this(null, null, null, null); ,this(null, null, null, null? null : nullPointerException());
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] cannot find symbol object,this(null, null, null, null); ,this(object, null, null, null);
patch is same with buggy,,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10); ,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10);
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectArrayList();
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new HashMap();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectArray();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new XYDomainAxisLocations();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new XYDomainAxis();
compilation error,[CE] cannot find symbol domainAxiss,this.domainAxes = new ObjectList(); ,this.domainAxiss = new ObjectList();
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker,Layer,<null>),addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, null);
increase failing tests, [FE] NullPointerException,addRangeMarker(0, marker, layer); ,if(marker == null) { addRangeMarker(0, marker, layer); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,setRangeMarker(0, marker, layer);
patch is same with buggy,,addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer);
increase failing tests, [FE] NullPointerException,addRangeMarker(0, marker, layer); ,if(marker == null) { addRangeMarker(0, marker, layer); }
compilation error,[CE] inconvertible types,addRangeMarker(0, marker, layer); ,if(marker instanceof CategoryPlot) { addRangeMarker(0, marker, layer); }
compilation error,[CE] inconvertible types,addRangeMarker(0, marker, layer); ,if(marker instanceof CategoryPlot) { addRangeMarker(0, marker, layer); } else { Layer.appendCompletedChunk(marker, layer); }
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { Layer.appendCompletedChunk(marker, layer); }
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex.intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.axisIndex.lastIndexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.axisIndex.intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] cannot find symbol nullPointer,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointer);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, null);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol nullPointerException,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointer());
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalFileMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNonDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNomainMarker(marker, layer);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_DOMAIN_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GLIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_DOMAIN_STRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.categoryDatasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index).indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
increase failing tests, [FE] NullPointerException,CategoryDataset result = null; ,CategoryDataset result = getDataset();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size());
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this.datasets;
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size(), index);
compilation error,[CE] cannot find symbol dataset,CategoryDataset result = null; ,CategoryDataset result = this.dataset;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets);
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.size());
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToRangeAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge()); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge());
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)this.axisIndex.getAxis());
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)this.axisIndex.getAxis()? this.axisIndex : axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)this.axisIndex.getAxis();
compilation error,[CE] cannot find symbol,,super.mapDatasetToRangeAxis();
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol chartChangeEventType,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, chartChangeEventType);
compilation error,[CE] cannot find symbol UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.UPDATED);
compilation error,[CE] cannot find symbol NEGATIVE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NEGATIVE);
compilation error,[CE] cannot find symbol NONE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol CHART,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART);
compilation error,[CE] cannot find symbol DATE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.DATE);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = this.categoryPlot.getChart();
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = getCategoryPlotChart();
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.NEGATIVE);
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.getChart();
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.UPDATED);
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = new CategoryPlotChart(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.TYPE);
compilation error,[CE] cannot find symbol CategoryPlotChart,,CategoryPlotChart = this.categoryPlot.clone();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineVisible = DEFAULT_RANGE_GRIDLINESVISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINESVISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_RANGE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineVisible = DEFAULT_RANGE_GLIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineVisible = DEFAULT_RANGE_GLIDLINESVISIBLE;
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND || this.layer == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.FOREGROUND || this.layer == Layer.BOTTOM) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol BOTTOM,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == Layer.BOTTOM) {
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,,super.setChangeEventType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] cannot find symbol NONE,,e.setChangeEventType(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol NUMBER_INT,,e.setType(ChartChangeEventType.NUMBER_INT);
compilation error,[CE] cannot find symbol NONE,,e.setType(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol NUMBER_INT,,e.setChangeEventType(ChartChangeEventType.NUMBER_INT);
compilation error,[CE] cannot find symbol nullPointer,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointer);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_MARKER,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, XYPlot.DEFAULT_LOAD_MARKER);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, null);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol nullPointerException,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointer());
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalFileMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNonDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol DEFAULT_CAPACITY,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, XYPlot.DEFAULT_CAPACITY);
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getNext();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParentPointer();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getOwner();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImplicitParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getBase();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCopy();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getConstructor();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCtor();
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { throw new NullPointerException(""); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = getLastChange();
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { addRangeMarker(index, marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = getLastChange(); if(index < 0) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(notify) { throw new IllegalStateException(""); }
patch is same with buggy,,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size();
compilation error,[CE] cannot find symbol rangeAxis,int count = this.rangeAxes.size(); ,int count = this.rangeAxis.size();
compilation error,[CE] possible loss of precision,int count = this.rangeAxes.size(); ,char count = this.rangeAxes.size();
compilation error,[CE] incompatible types,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() > 0;
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectArray();
compilation error,[CE] cannot find symbol domainAxiss,this.domainAxes = new ObjectList(); ,this.domainAxiss = new ObjectList();
compilation error,[CE] cannot find symbol domainAxislocations,this.domainAxes = new ObjectList(); ,this.domainAxislocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectArrayList();
compilation error,[CE] cannot find symbol domainAxisList,this.domainAxes = new ObjectList(); ,this.domainAxisList = new ObjectList();
compilation error,[CE] bad operand types for binary operator '+',this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList() + 1;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] no suitable constructor found for XYPlot(int),,this.rangeAxes = new XYPlot(this.rangeAxes.size());
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.rangeAxes.size() == this.rangeAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.rangeAxes.size()!= this.rangeAxes.size());
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol Maps,,this.rangeAxes = Maps.newHashMap();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this.rangeAxes);
compilation error,[CE] cannot find symbol,,this.rangeAxes = getRangeAxes();
compilation error,[CE] incompatible types,,this.rangeAxes = new XYPlot();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.domainAxis = domainAxis;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getDomainAxis(); this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.domainAxis = domainAxis;
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol Preconditions,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true; Preconditions.checkNotNull(this.rangeZeroBaselineVisible);
compilation error,[CE] cannot find symbol This,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;This.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol This,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true; This.rangeZeroBaselinePaint = Color.black;
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol This,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;This.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol Preconditions,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true; Preconditions.checkNotNull(this.rangeZeroBaselineVisible, false);
compilation error,[CE] cannot find symbol THIS,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true; THIS.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol This,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true; This.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol Preconditions,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true; Preconditions.checkNotNull(this.rangeZeroBaselinePaint);
compilation error,[CE] cannot assign a value to final variable columnRenderingOrder,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder columnRenderingOrder = SortOrder.ASCENDING;
patch is same with buggy,,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] incompatible types,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING? super.getColumnRenderingOrder() : SortOrder.ASCENDING;
compilation error,[CE] incompatible types,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING? super.getSortOrder() : SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol ASCIENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCIENDING;
compilation error,[CE] incompatible types,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING? super.getSortedOrder() : SortOrder.ASCENDING;
compilation error,[CE] incompatible types,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING? nullPointerException : SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol SCENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.SCENDING;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol baseline,,addDomainMarker(baseline, Layer.BACKGROUND); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol baseline,,addDomainMarker(baseline, Layer.BACKGROUND); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol baseline,,addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(getRange()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol location,,this.location = location.getAxisLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRange()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation());
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.CENTER_OR_LEFT);
compilation error,[CE] cannot find symbol LEFT,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.LEFT);
compilation error,[CE] <identifier> expected,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT).this.domainAxisLocation = AxisLocation.TOP_OR_LEFT;
compilation error,[CE] cannot find symbol COTTOM_OR_LEFT,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.COTTOM_OR_LEFT);
compilation error,[CE] not a statement,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT)- 1;
compilation error,[CE] <identifier> expected,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT).this.domainAxisLocation = AxisLocation.TOP_OR_LEFT);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT + 1);
compilation error,[CE] bad operand types for binary operator '-',this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT - 1);
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)getPlot();
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)super.getPlot(); this.seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)super.getPlot(); this.seriesRenderingOrder = SeriesRenderingOrder.RANGE;
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)this.getPlot();
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)getPlot(); this.seriesRenderingOrder = SeriesRenderingOrder.NEVER;
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)super.getPlot();
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)getPlot(); this.seriesRenderingOrder = SeriesRenderingOrder.FURRISE;
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)super.getPlot(); this.seriesRenderingOrder = SeriesRenderingOrder.NEVERSE;
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot = new XYPlot();
compilation error,[CE] <identifier> expected,,private final XYPlot instanceof XYPlot =(XYPlot)getPlot(); this.seriesRenderingOrder = new XYPlot[0];
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxisPaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxisPaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxisPaint = new BasicPaint(0.5f);
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol domainZeroBaseLineVisible,this.domainZeroBaselineVisible = false; ,this.domainZeroBaseLineVisible = true;
compilation error,[CE] incompatible types,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = null;
patch is same with buggy,,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = false;
compilation error,[CE] cannot find symbol real,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = real;
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible =true;
increase failing tests, [FE] AssertionFailedError,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol True,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = True;
compilation error,[CE] cannot find symbol actual,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = actual;
compilation error,[CE] cannot find symbol right,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = right;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxisPosition,,this.domainAxisPosition = CategoryAnchor.MIDDLE; this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.END;
compilation error,[CE] cannot find symbol domainAxisPosition,,this.domainAxisPosition = CategoryAnchor.MIDDLE; this.domainAxisPosition = CategoryAnchor.END;
compilation error,[CE] cannot find symbol domainAxisPosition,,this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] cannot find symbol CENTER,,this.domainGridlinePosition = CategoryAnchor.MIDDLE; this.domainGridlinePosition = CategoryAnchor.CENTER;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(getPlot());
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultCategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(getClass());
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentPlot();
compilation error,[CE] cannot find symbol axisAxisMap,,this.axisAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndexMap,,this.axisIndexMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = this.axisMap.size();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = this.axisMap.indexOf(axisIndex);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisIndex = axisIndex;
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = this.axisMap.get(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis().getIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol,,super.mapDatasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToDomainAxis();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)super.mapDatasetToDomainAxis(); this.axisIndex = index;
compilation error,[CE] generics are not supported in -source 1.4,,map =(Map < K, V>)this.axisIndex.getAxis();
compilation error,[CE] cannot find symbol,,super.mapDatasetToDomainAxis();
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Color(DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Color(Paint.DOUBLE_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Color(Paint.REDEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Color(DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new Color(DeFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new NullPointerException("");
patch is same with buggy,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainPlot();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = Maps.newHashMap();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getCfg().getAxisEdge();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = super.configureDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainPlot(); Preconditions.checkNotNull(axis);
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getCfg().getAxisEdges();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = plot.getDomainAxisEdge();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getRangeAxis();
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] no suitable method found for remove(Marker,int),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, index);
compilation error,[CE] boolean cannot be dereferenced,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker).marker;
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(0);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.detachFromParent();
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : BLACK;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : DEFAULT_OPTIONAL_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 2;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : NEW;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : PAINT;
compilation error,[CE] bad operand types for binary operator '-',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE - 1;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : new BasicStroke(1.0f);
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : FALSE;
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(getRangeAxis());
compilation error,[CE] cannot find symbol,,Int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxis.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < this.datasets.size()) { result = new XYDataset(this.datasets.size()); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= this.datasets.size()) { result = new XYDataset(this.datasets.size()); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size(); if(index < 0) { result = new XYDataset(this.datasets.size()); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < this.datasets.size()) { result =(XYDataset)this.datasets.get(index); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= this.datasets.size()) { result =(XYDataset)this.datasets.get(index); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < this.datasets.size()) { return null; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < this.datasets.size()) { result = new XYDataset(this.datasets.size() + index); }
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.size();
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,Integer index = this.rangeAxisLocation.size();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getRange();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getSize();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getRangeIndex();
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol nullPointer,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointer);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointer());
compilation error,[CE] cannot find symbol DEFAULT_CAPACITY,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_CAPACITY);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol shadow,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, shadow);
compilation error,[CE] cannot find symbol DEFAULT_LIST,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_LIST);
compilation error,[CE] cannot find symbol chartChangeEventType,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, chartChangeEventType);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.UPDATED);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol NEGATIVE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NEGATIVE);
compilation error,[CE] cannot find symbol NONE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHECKED);
patch is same with buggy,,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] cannot find symbol domainAxisStroke,,this.domainAxisStroke = new BasicStroke(1.0f); this.domainCrosshairVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxisStroke,,this.domainAxisStroke = new BasicStroke(0.5f); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxisStroke,,this.domainAxisStroke = new BasicStroke(2.0f); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxisStroke,,this.domainAxisStroke = new BasicStroke(1.0f); this.domainCrosshairVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol domainAxisStroke,,this.domainAxisStroke = new BasicStroke(1.0f); this.domainAxisPaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselinePaint = new BasicPaint(0.5f);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis = (ValueAxis)this.domainAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.clone();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.contains(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(VeueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,Validate.isTrue(this.domainAxes.containsKey(i));
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(valueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol dominAxes,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.dominAxes.get(i);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation(), index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = Color.black;
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = Color.black;
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] NullPointerException,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol POSITIVE_INIT_ERROR,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INIT_ERROR;
compilation error,[CE] cannot find symbol NEVER,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NEVER;
compilation error,[CE] cannot find symbol DECIMAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.DECIMAL;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] cannot find symbol CENTER,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.CENTER;
compilation error,[CE] cannot find symbol NEGATIVE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NEGATIVE;
compilation error,[CE] cannot find symbol VERTICAL_POLICY,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL_POLICY;
compilation error,[CE] cannot find symbol VERSTICAL,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERSTICAL;
compilation error,[CE] illegal start of type,,return new CategoryPlot(DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeclaredPlot.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.paint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] illegal start of type,,return new Color(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] illegal start of type,,return new CategoryPlot(DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeclaredPlot.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge()); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge());
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis()? this.axisIndex : Integer.toHexString(axisIndex));
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndexes.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis()? this.axisIndex : Integer.toString(axisIndex));
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis());
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis();
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] cannot find symbol White,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.White;
compilation error,[CE] cannot find symbol YEAR,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.YEAR;
compilation error,[CE] cannot find symbol START,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.START;
compilation error,[CE] cannot find symbol RAL,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.RAL;
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker =(Marker)super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new NullPointerException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = getMarker();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { return removeDomainMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { removeDomainMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { return removeDomainMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.containsKey(marker)) { return removeDomainMarker(marker); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker =(Marker)super.removeDomainMarker(marker); if(marker == null) { throw new NullPointerException(""); }
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] incompatible types,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,marker =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers = (Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,this.backgroundRangeMarkers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] bad operand types for binary operator '+',markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)+ 1);
compilation error,[CE] bad operand types for binary operator '-',markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)- 1);
compilation error,[CE] ';' expected,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)+ 1));
compilation error,[CE] not a statement,,CategoryAxis this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] not a statement,,CategoryAxis this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] not a statement,,CategoryPlot[] this.domainAxes = new CategoryPlot[this.domainAxes.size() ];
compilation error,[CE] cannot find symbol i,,CategoryAxis domainAxis =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol i,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol i,,CategoryAxis thisdomainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] not a statement,,CategoryAxis this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.intValue();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getValue();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result.toString();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getImpl();
compilation error,[CE] cannot find symbol,return result; ,return result!= null? 0 : result.getValue();
compilation error,[CE] method getItemCount in interface XYDataset cannot be applied to given types;,return result; ,return result == null? 0 : result.getItemCount();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result!= null? 0 : result;
patch is same with buggy,,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
compilation error,[CE] ')' expected,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6
patch is same with buggy,,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol This,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black;This.domainZeroBaselinePaint = Color.black;
compilation error,[CE] ';' expected,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black? Color.black : DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] incompatible types,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black? Color.black : DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + 1;
compilation error,[CE] ';' expected,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black);
compilation error,[CE] incompatible types,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black? DEFAULT_DOUBLE_PAINT : Color.black;
compilation error,[CE] incompatible types,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black? DEFAULT_DOMAIN_PAINT : Color.black;
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises.set(0, domainAxis); this.rangeAxises.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises = Collections.emptySet(); this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises.set(0, domainAxis); this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises = getDomainAxis(); this.domainAxises.set(0, domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises.set(0); this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises = null; this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,,this.rangeAxes.set(0, domainAxis); this.rangeAxis.addChangeListener(this);
compilation error,[CE] cannot find symbol rangeAxises,,this.rangeAxises.set(0, domainAxis); this.rangeAxis.addChangeListener(this);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = Collections.binarySearch(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index == 0) { throw new IllegalArgumentException(""); }
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis == null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChangeListener()) {
patch is same with buggy,,if (domainAxis != null) { ,if (domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.size() == 0) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getLocalPart() == null) {
compilation error,[CE] bad operand types for binary operator '!=',if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= false) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= getClass()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.containsKey("")) {
compilation error,[CE] illegal start of type,,super();
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.NEVERSE;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.FULL;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.FALSE;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.ERRORSE;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.EXPR_RESULT;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.EXISTING;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.FUNCTION;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.EXTENDS;
compilation error,[CE] illegal start of type,,super(); this.datasetRenderingOrder = DatasetRenderingOrder.RANGE;
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYRangeAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,XYPlotOrientation axis = getRangeOrientation();
compilation error,[CE] cannot find symbol,,XYPlotOrientation axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYPlotOrientation axis = getRangeAxisEdge();
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(null); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,location.setAxisLocation(null); notifyListeners(new AxisChangeEvent(this));
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,this.domainGridlinesVisible = false;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == false) { this.domainGridlinesVisible = true; } else { this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == false) { this.domainGridlinesVisible = true; } else { this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == false) { this.domainGridlinesVisible = true; } else { this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PA
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == false) { this.domainGridlinesVisible = true; } else { this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == false) { this.domainGridlinesVisible = true; } else { this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT); this.domainGridlinesVisible = false; }
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = getDefaultStroke(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 0;
compilation error,[CE] cannot find symbol,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = getDefaultStroke();
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = Color.black;
compilation error,[CE] unclosed string literal,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = getDefaultStroke("DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new HashMap();
compilation error,[CE] cannot find symbol,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new HashPlot(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,if(index < 0) { Layer layer = getLastChain(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,} ,if(index < 0) { Layer layer = getLastChain(); if(marker!= null) { addRangeMarker(index, marker); }
compilation error,[CE] unclosed character literal,} ,if(marker!= null) { Layer layer = getLastChain(); if(index < 0) { marker.append('ufffd'); }
compilation error,[CE] illegal start of expression,} ,addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastChain(); if(index < 0) { marker.append('n'); }
compilation error,[CE] unclosed character literal,} ,if(marker!= null) { Layer layer = getLastChain(); if(index >= 0) { marker.append('ufffd'); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { marker.append('n'); }
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,renderer.setRangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,renderer.setRangeAxisEdge(DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,renderer.setRangeAxis(domainAxis);
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GLIDLINES_VISIBLE,configureRangeAxes(); ,renderer.setRangeAxisEdge(DEFAULT_RANGE_GLIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_RANGE_GRIDLINES);
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES,configureRangeAxes(); ,renderer.setRangeAxisEdge(DEFAULT_RANGE_GRIDLINES);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new HashMap();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.clone();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private SortOrder columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.removeFirst();
compilation error,[CE] cannot find symbol,,private ListRenderingOrder columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.getDefault();
compilation error,[CE] illegal start of type,,this.columnRenderingOrder = Collections.emptyList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.getParent();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private SortOrder columnRenderingOrder = Collections.emptyList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.remove();
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(domainAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis == null || domainAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis == null || rangeAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis == null || domainAxis.isSupported()) {
compilation error,[CE] 'void' type not allowed here,if (rangeAxis != null) { ,if(rangeAxis == null || rangeAxis.setPlot(this)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis == null || rangeAxis.setLength(0)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis == null || domainAxis.isDefined()) {
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POP,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POP;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POINT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPED,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPED;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSIZE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSIZE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSICLE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSICLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSITION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSITION;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSIT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSIT;
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index >= 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index!= 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(!(index == 0 && location == null)) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index <= 0 || location == null) {
compilation error,[CE] cannot find symbol position,if (index == 0 && location == null) { ,if(index == 0 || position == null) {
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.dataset, this.rangeAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getDataset();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.dataset, null);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets);
compilation error,[CE] not a statement,,CategoryDataset int index = this.categoryDatasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.categoryDatasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index).intValue();
compilation error,[CE] not a statement,,CategoryDataset int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.categoryDataset.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNonDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeCategoryMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removePossibleMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol FOREGROUND,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, CategoryPlot.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPlots(marker, Layer.FOREGROUND);
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getValuePointer()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getPlotChangeEvent()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext()!= null) {
compilation error,[CE] cannot find symbol getPlotChangeEventType,if (getParent() != null) { ,if(getPlotChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol getPlotChangeEventType,if (getParent() != null) { ,if(getPlotChangeEventType.CAN_ADAPTABLE) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getPlot()!= null) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getChangeEventType.CAN_ADAPTABLE) {
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if (getParent() == null) {
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.size();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); this.domainAxisLocation = location;
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex(); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.size(); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.size(); if(index < 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex(); if(index < 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.size(); if(index!= 0) { fireChangeEvent(); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis(domainAxis);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BaseToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisStroke = new BasicStroke(1.0f);
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n");
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.length();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf("n");
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(index >= 0) { return removeDomainMarker(index, marker, layer); }
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(index, marker, layer);
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(index < 0) { return removeDomainMarker(index, marker, layer); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.size();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(index >= 0) { return removeLocalMarker(index, marker, layer); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.length();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.size();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index >= 0) { layer.removeChangeListener(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.'); if(index >= 0) { layer.removeChangeListener(marker); }
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('')+ marker.lastIndexOf('')+ 1;
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index == 0) { layer.removeChangeListener(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.'); if(index == 0) { layer.removeChangeListener(marker); }
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index >= 0) { layer.removeChild(marker); }
compilation error,[CE] ')' expected,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 2.0f >>, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] ')' expected,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, 2.0f }, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 1.0f, 0.0f);
compilation error,[CE] ')' expected,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 2.0f }, 0.0f);
compilation error,[CE] ')' expected,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 2.0f {, 0.0f);
compilation error,[CE] ')' expected,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.0f, BasicStroke.CAP_BUTT, 2.0f }, 0.0f);
compilation error,[CE] ')' expected,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(2.0f, BasicStroke.CAP_BUTT, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 2.0f <, 0.0f);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.domainAxis.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis = domainAxis.set(0, rangeAxis);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.setSelected(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, 0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.setSelected(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(1, rangeAxis);
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true;
compilation error,[CE] incompatible types,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = null;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VIRABLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VIRABLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISSIBLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISSIBLE;
compilation error,[CE] incompatible types,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VITABLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VITABLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_FIELD,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_FIELD;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol domainAxis,,if(this.orientation == PlotOrientation.HORIZONTAL) { this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] call to super must be first statement in constructor,,if(this.orientation == PlotOrientation.HORIZONTAL) { this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] cannot find symbol domainAxis,,if(this.orientation == PlotOrientation.HORIZONTAL) { this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] call to super must be first statement in constructor,,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol domainAxisMap,,if(this.orientation == PlotOrientation.HORIZONTAL) { this.domainAxisMap = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] '(' or '[' expected,,if(this.orientation == PlotOrientation.HORIZONTAL) { this.domainAxis = new ObjectList(); this.rangeAxis = new RangeAxisLocations = new ObjectList(); }
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,if(this.orientation == PlotOrientation.HORIZONTAL) { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); }
compilation error,[CE] cannot find symbol domainAxisMap,,if(this.orientation == PlotOrientation.HORIZONTAL) { this.domainAxisMap = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.mapDatasetToSharedDomainAxis = false;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis.setPlot(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Validate.isTrue(this.domainAxis instanceof DomainAxis); this.domainAxis = domainAxis;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.domainAxis.setPlot(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxisMap,,this.domainAxisMap = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol XYPlotChart,,XYPlotChart = new XYPlotChart();
compilation error,[CE] cannot find symbol XYPlotChart,,XYPlotChart = new XYPlotChart(this.chartChangeEventType);
compilation error,[CE] not a statement,,for(XYPlotChart : XYPlot.END_ARRAY) { if(ChartChangeEventType.CHARTS_UPDATED == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] not a statement,,for(XYPlotChart : XYPlot.END_ARRAY) { if(ChartChangeEventType.CHARTS_UPDATED!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] not a statement,,for(XYPlotChart : XYPlot.END_ARRAY) { if(ChartChangeEventType.CHARTS_UPDATED == null) { throw new IllegalStateException(""); }
compilation error,[CE] not a statement,,for(XYPlotChart : XYPlot.END_ARRAY) { if(ChartChangeEventType.CHARTS_UPDATED == null) { throw new NullPointerException(""); }
compilation error,[CE] not a statement,,for(XYPlotChart : XYPlot.END_ARRAY) { if(ChartChangeEventType.CHARTS_UNDEFINED) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol UPDATED,,super.setChangeEventType(ChartChangeEventType.UPDATED); notifyListeners(new XYPlotChangeEvent(this));
compilation error,[CE] not a statement,,for(XYPlotChart : XYPlot.END_ARRAY) { if(ChartChangeEventType.CHARTS_UNDEFINED) { throw new NullPointerException(""); }
compilation error,[CE] not a statement,,for(XYPlotChart : XYPlot.END_ARRAY) { if(ChartChangeEventType.CHARTS_UNDEFINED) { throw new IllegalStateException(""); }
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_MAX_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_MAX_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PINK,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PINK;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
compilation error,[CE] bad operand types for binary operator '-',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT - 1;
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_ PAINT;
compilation error,[CE] ';' expected,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_SPACE,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_SPACE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = null;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = getDomainAxisLocation();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocation = null;
compilation error,[CE] cannot find symbol domainAxisLocation,,Validate.isTrue(this.domainAxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocation = null;
compilation error,[CE] cannot find symbol domainAxisLocation,,Validate.isTrue(this.domainAxisLocation!= null); this.domainAxisLocation = null;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = getDomainAxisLocation(); this.domainAxisLocation = null;
compilation error,[CE] ';' expected,,super(); this.domainAxisLocation = AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = domainAxis.getLocation();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = AxisLocation.TOP_OR_LEFT;
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { return removeDomainMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker == null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { return removeDomainMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { return removeDomainMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { return marker; }
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.axisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.size();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getRange();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.location.getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.axisLocation.size();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getScope();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getLocation();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = XYPlot.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = XYPlot.IndexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = layer.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = map.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = marker.indexOf(XYPlot.START_OBJECT);
patch is same with buggy,,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] incompatible types,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_OPTIONAL_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_LOCAL_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_FLOAT_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_UNKNOWN;
compilation error,[CE] incompatible types,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_PADDING;
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new XYAnnotationIntrospector(); }
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new XYDataset(dataset, domainAxis, rangeAxis, renderer); }
compilation error,[CE] cannot find symbol,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayListWithCapacity(2);
compilation error,[CE] cannot find symbol Preconditions,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { Preconditions.checkNotNull(this.annotations); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToRangeAxis = mapDatasetToRangeAxis(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { mapDatasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { indexChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] cannot find symbol axisIndex,,this.rangeAxes = getRangeAxis(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent();
compilation error,[CE] cannot find symbol rangeAxises,,this.rangeAxises = getRangeAxis(axisIndex);
compilation error,[CE] cannot find symbol Event,,Event.setRange(this.rangeAxes);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(this.rangeAxes);
compilation error,[CE] cannot find symbol Event,,Event.init(this.rangeAxes);
compilation error,[CE] cannot find symbol Event,,Event.initRange(this.rangeAxes);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = this.rangeAxes.get();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = this.rangeAxes.get(axisIndex);
compilation error,[CE] cannot find symbol axisIndex,,this.rangeAxes = getRangeAxes(axisIndex);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isRange()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.hasChanged()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isArray()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isLocal()) {
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.length();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.indexOf("n");
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n");
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain(); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.size();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { return removeRangeMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getMarker(); if(marker == null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,Marker marker = getMarker();
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 1);
patch is same with buggy,,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol RIGHT,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol LEFT,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.TOP_OR_RIGHT);
compilation error,[CE] cannot find symbol TOP,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.TOP);
compilation error,[CE] cannot find symbol CENTER,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.CENTER);
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = 0;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol PAINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol PAINT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol ISOChronology,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = ISOChronology.getInstanceUTC();
compilation error,[CE] cannot find symbol NEW_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = NEW_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PAINT_REDEFINITION_CROSSHAIR,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_REDEFINITION_CROSSHAIR;
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] ';' expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red);
compilation error,[CE] ';' expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue, Color.red);
compilation error,[CE] ';' expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue);
compilation error,[CE] cannot find symbol redefinition,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.redefinition;
compilation error,[CE] incompatible types,ValueAxis result = null; ,ValueAxis result = this.rangeAxes;
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size());
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = getValueAxis();
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis();
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = this.rangeAxes.values();
compilation error,[CE] cannot find symbol value,ValueAxis result = null; ,ValueAxis result = this.value;
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size(), index);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size() );
increase failing tests, [FE] NullPointerException,ValueAxis result = null; ,ValueAxis result = getRangeAxis();
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size() - 1);
increase failing tests, [FE] StackOverflowError,XYDataset result = null; ,XYDataset result = getDataset();
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this.datasets;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset();
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets.size());
compilation error,[CE] cannot find symbol dataset,XYDataset result = null; ,XYDataset result = this.dataset;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets);
compilation error,[CE] cannot find symbol,XYDataset result = null; ,XYDataset result =(XYDataset)super.getDataset();
increase failing tests, [FE] StackOverflowError,XYDataset result = null; ,XYDataset result =(XYDataset)getDataset();
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = true;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = null;
patch is same with buggy,,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = true;
compilation error,[CE] <identifier> expected,private boolean domainCrosshairLockedOnData = true; ,safe boolean domainCrosshairLockedOnData = false;
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol RIGHT,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol TOP,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.TOP);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol LEFT,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.LEFT);
compilation error,[CE] cannot find symbol CENTER,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.CENTER);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.TOP_OR_RIGHT);
compilation error,[CE] cannot find symbol TOP_NOR_LEFT,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.TOP_NOR_LEFT);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxisMap);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis, domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = super.getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(domainAxis);
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getValuePointer()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext()!= null) {
compilation error,[CE] illegal start of expression,if (getParent() != null) { ,if(getParent() == null).removeChangeEvent(event);
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getPlot()!= null) {
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if (getParent() == null) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getChangeEventType.CAN_BEGIN_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getChangeEventType.CAN_ADAPTABLE) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(parent() == null) {
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxisLocation);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getValueAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = super.getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = this.dataset.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getValueAxis(domainAxisLocation);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.domainCrosshairPaint = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_DOUBLE_PAINT;
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap2();
compilation error,[CE] incompatible types,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap()? DEFAULT_CROSSHAIR_VISIBLE : null;
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapBuilder();
compilation error,[CE] ';' expected,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap()? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_RANGE_MARKS);
compilation error,[CE] incompatible types,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap()? DEFAULT_CROSSHAIR_VISIBLE : null;
compilation error,[CE] incompatible types,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap()? DEFAULT_CROSSHAIR_VISIBLE : UNKNOWN;
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapReferences();
compilation error,[CE] ';' expected,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap()? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_RANGE_MARKS);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocation.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocation.set(0, domainAxis);
increase failing tests, [FE] AssertionFailedError,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocations.set(0, rangeAxis);
increase failing tests, [FE] AssertionFailedError,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocations.set(0, domainAxis);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] ';' expected,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocation.set(0), rangeAxis);
compilation error,[CE] cannot find symbol rangeAxisControls,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisControls.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxisGroups,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisGroups.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.domainAxis.set(0, domainAxis);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
patch is same with buggy,,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, null);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.size();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).intValue(); this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex); this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).intValue(); this.mapDatasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex); this.datasetToDomainAxisMap.set(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).intValue(); this.datasetToDomainAxisMap.set(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.getIndex(axisIndex);
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : domainAxis;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : domainAxis.getLocale();
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : domainAxis.getLocalPart();
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : domainAxis.getLocalVisibility();
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : domainAxis.getClass().getName();
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : domainAxis.getLocalVisible();
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis == null)? null : domainAxis;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis == null)? null : domainAxis.getLocale();
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; i++) { result.addChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { int result = getRangeAxis(); for(int i = 0; i < index; i++) { result.addChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { int result = getRangeAxis(); for(int i = 0; i < index; i++) { result.setIndex(index); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; ++i) { result.addChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; i++) { result.setIndex(index); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; ++i) { result.setIndex(index); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { int result = getRangeAxis(); for(int i = 0; i < index; i++) { result.addChangeListener(this, index); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; i++) { result.addChangeListener(this, index); }
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis();
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; i++) { valueAxis.setRange(i); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToRangeAxis = mapDatasetToRangeAxis(new DatasetChangeEvent(this, getDataset(index)));
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { mapDatasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,mapDatasetToRangeAxis(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { indexChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,Validate.notNull(this.dataset);
compilation error,[CE] cannot find symbol dataset,,Validate.notNull(this.dataset); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.domainAxis = domainAxis;
compilation error,[CE] '(' or '[' expected,,Preconditions.checkNotNull(this.dataset); this.domainAxis = new domainAxis;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new Dataset(dataset, domainAxis, rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new Dataset(dataset, domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxisLocations); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxisLocations);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultCategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset, this.rangeAxis);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(null); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setRangeAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] cannot find symbol,,renderer.setDomainAxis(domainAxis); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.END;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,renderer.setDomainAxis(domainAxis); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.START;
compilation error,[CE] cannot find symbol,,renderer.setDomainAxis(domainAxis); this.domainAxisPaint = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
patch is same with buggy,,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_FIELD_GRIDLINES,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_FIELD_GRIDLINES;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE || this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_GRIDLINES,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_LOCAL_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_FIELD_NAMES,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_FIELD_NAMES;
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.PLAIN, 10);
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getCategoryPlot();
compilation error,[CE] no suitable constructor found for CategoryPlot(String,int,int),,CategoryPlot plot = new CategoryPlot("SansSerif", Font.PLAIN, 10);
compilation error,[CE] cannot find symbol DEFAULT_VALUE_LABEL_FONT,,CategoryPlot plot = new CategoryPlot(0, Font.DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] cannot find symbol DEFAULT_VALUE_LABEL_FONT,,CategoryPlot plot = new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] <identifier> expected,,CategoryPlot = getCategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot = getCategoryPlot(); return new Font("SansSerif", Font.PLAIN, 10);
compilation error,[CE] cannot find symbol,,CategoryPlot input = getCategoryPlot();
compilation error,[CE] no suitable constructor found for CategoryPlot(String,int,int),,CategoryPlot plot = new CategoryPlot("SansSerif", Font.PLAIN, 1);
compilation error,[CE] no suitable constructor found for CategoryPlot(String,int,int),,CategoryPlot input = new CategoryPlot("SansSerif", Font.PLAIN, 1);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.dataset, this.rangeAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getDataset();
compilation error,[CE] illegal start of expression,} ,super(dataset); this.rangeAxis = rangeAxis;
compilation error,[CE] illegal start of expression,} ,super(dataset, domainAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] illegal start of expression,} ,super(dataset); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,super(dataset);
compilation error,[CE] illegal start of expression,} ,this(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,this(dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] illegal start of expression,} ,super(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,super(); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,super(); this.rangeAxis = rangeAxis;
compilation error,[CE] illegal start of expression,} ,super(dataset, domainAxis);
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)this.getPlot();
increase failing tests, [FE] NullPointerException,,CategoryPlot plot = new CategoryPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)super.getPlot();
compilation error,[CE] invalid method declaration; return type required,,CategoryPlot plot =(CategoryPlot)getPlot(); getPlot().addChangeListener(this);
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getCategoryPlot();
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.clone();
compilation error,[CE] cannot find symbol data,,CategoryPlot plot =(CategoryPlot)this.data.getPlot();
compilation error,[CE] invalid method declaration; return type required,,CategoryPlot plot =(CategoryPlot)getPlot(); getPlot().reset();
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] incompatible types,if (notify) { ,if(this.setRangeAxisLocation(location)) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.setRangeAxisLocation(getAxisLocation())) {
compilation error,[CE] cannot find symbol removeChangeAxisLocation,if (notify) { ,if(this.removeChangeAxisLocation) {
compilation error,[CE] cannot find symbol index,if (notify) { ,if(this.index == AxisLocation.WHOLE_COLLECTION) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.setAxisLocation(location)) {
compilation error,[CE] cannot find symbol index,if (notify) { ,if(this.index == AxisLocation.NUMBER_INT) {
compilation error,[CE] cannot find symbol index,if (notify) { ,if(this.index == AxisLocation.SOURCEFILE_TITLE_FONT) {
compilation error,[CE] cannot find symbol getNotify,if (notify) { ,if(this.getNotify) {
compilation error,[CE] incompatible types,,this.rangeAxes =(XYPlot)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol FieldUtils,,FieldUtils.checkAndFixRange(this.rangeAxes, i);
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,Integer i = this.rangeAxes.size();
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,int i = this.rangeAxes.size();
compilation error,[CE] cannot find symbol,,Validate.isTrue(this.rangeAxes.containsKey(i));
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.rangeAxes.get(i));
compilation error,[CE] cannot find symbol,,super.setRangeAxes(i);
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,Integer i = this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol,,this.rangeAxes.remove(i);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index == 0) { throw new IllegalArgumentException(""); }
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ObjectArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisMap);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasets = new ObjectList(); ,this.datasets = new XYDataset();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new XYDatasetList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new OBList();
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(0);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] cannot find symbol rangeAxis,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.rangeAxis);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,boolean removed = markers.remove(marker); ,boolean removed = markers!= null? markers.remove(marker): null;
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.detachFromParent();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,boolean removed = markers.remove(marker); ,boolean removed = marker!= null? markers.remove(marker): 0;
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result = new XYDataset(this.index);
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result = new XYDataset(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); XYDataset result = new XYDataset(index);
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result = getDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result = new XYDataset(this, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); XYDataset result = new XYDataset(this, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); XYDataset result = new XYDataset(this.index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); XYDataset result = new XYDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= 0) { return result; }
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,,this.axisOffset = new HashMap(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.rangeAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.rangeAxisLocations = new HashMap(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.rangeAxisLocations = new HashMap(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] incompatible types,,this.rangeAxisLocations = new HashMap(); this.axisOffset = new RectangleInsets(0.0, 5.0, 5.0, 5.0);
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = DEFAULT_DOMAIN_VISIBLE;
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = null;
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = DEFAULT_DOMAIN_ASSIGN;
compilation error,[CE] call to super must be first statement in constructor,,super(); addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPaint = Color.black;
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null);
compilation error,[CE] cannot find symbol XYPlotUtil,,Validate.notNull(XYPlotUtil.stripLeadingAndTrailingQuotedObjects());
compilation error,[CE] <identifier> expected,,super(); this.null, null, null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(new XYPlot());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isNumericValue(this));
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null, null);
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isStatementBlock(this));
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.BackgroundRangeMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); >>
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); [Delete]
compilation error,[CE] generics are not supported in -source 1.4,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); <
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap();!=
patch is same with buggy,,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] incompatible types,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT? DEFAULT_CROSSHAIR_PAINT : DEFAULT_OPTIONAL_CROSSHAIR_PAINT;
patch is same with buggy,,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_ PAINT;
compilation error,[CE] incompatible types,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT? DEFAULT_CROSSHAIR_PAINT : DEFAULT_LOCAL_CROSSHAIR;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_MAX_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_MAX_PAINT;
compilation error,[CE] incompatible types,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT? DEFAULT_CROSSHAIR_PAINT : DEFAULT_DOCUMENT_PAINT;
compilation error,[CE] incompatible types,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT? DEFAULT_CROSSHAIR_PAINT : DEFAULT_LOCAL_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT? DEFAULT_CROSSHAIR_PAINT : DEFAULT_OPTIONAL_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT? DEFAULT_CROSSHAIR_PAINT : DEFAULT_STROKE;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)super.mapDatasetToRangeAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,super.mapDatasetToRangeAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge()); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge());
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)super.mapDatasetToRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PAPINT,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PAPINT,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] ';' expected,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisValue = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisValue = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisVisible = true;
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxisLocations == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] '(' or '[' expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxisLocations == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new Object
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxisLocations == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList();
increase failing tests, [FE] IllegalArgumentException,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxisLocations == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList();
increase failing tests, [FE] IllegalArgumentException,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxisLocations == null) { this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] '(' or '[' expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new Object
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxisLocations == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectLocations();
compilation error,[CE] illegal start of type,,CategoryPlot plot = getCategoryPlot(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.clone(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot = getPlot(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.getPlot(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.dataset.getPlot(); this.renderingOrder = new CategoryPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol categoryPlot,,CategoryPlot plot =(CategoryPlot)this.categoryPlot.clone();
compilation error,[CE] cannot find symbol dataset,,CategoryPlot plot =(CategoryPlot)this.dataset.getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.renderingOrder = DatasetRenderingOrder.RANGE;
patch is same with buggy,,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap();
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithCapacity(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeSet();
compilation error,[CE] cannot find symbol rangeAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.rangeAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new BigDecimal();
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = null; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i= 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(i); i++) {
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes = new ObjectList(); ,this.rangeAxises = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisElements,this.rangeAxes = new ObjectList(); ,this.rangeAxisElements = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisNames,this.rangeAxes = new ObjectList(); ,this.rangeAxisNames = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisEs,this.rangeAxes = new ObjectList(); ,this.rangeAxisEs = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisES,this.rangeAxes = new ObjectList(); ,this.rangeAxisES = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxiss,this.rangeAxes = new ObjectList(); ,this.rangeAxiss = new ObjectList();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.size();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.datasetToRangeAxisMap.getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = map.getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = Maps.newHashMap();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.getIndex();
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setPosition(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setPath(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setItem(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setSelected(ChartChangeEventType.DATASET_UPDATED);
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol NEGATIVE_TYPE,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.NEGATIVE_TYPE);
compilation error,[CE] cannot find symbol UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.UPDATED);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_NULL,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_NULL;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_FULL,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_FULL;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_NAME,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_NAME;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VOLATILE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VOLATILE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] illegal start of expression,,if(layer == Layer.NEGATIVE) { if(markers == null) { markers = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.DEFAULT) { if(markers == null) { markers = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(index);
compilation error,[CE] illegal start of expression,,if(layer == Layer.EXTENDS) { if(index == 0) { markers = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] 'else' without 'if',,Layer layer = getLastChange();
compilation error,[CE] illegal start of expression,,if(layer == Layer.NEGATIVE) { if(index == 0) { markers = new ArrayList(); this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.NEGATIVE) { if(markers == null) { markers = this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.NEGATIVE) { if(index == 0) { markers = new ArrayList(); this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.EXTENDS) { if(index == 0) { markers = new ArrayList(); this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.EXTENDS) { if(index == 0) { markers = this.backgroundRangeMarkers.get(new Integer(index), marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.size();
compilation error,[CE] unclosed character literal,,int index = marker.indexOf('marker');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.length();
compilation error,[CE] unclosed character literal,,int index = marker.lastIndexOf('marker');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf("Null'marker' argument.");
compilation error,[CE] empty character literal,,int index = marker.indexOf('');
compilation error,[CE] unclosed character literal,,int index = marker.indexOf('Marker');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.size();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('');
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location, notify);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location, notify);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getCurrentLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getCurrentLocation(); notify = false;
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getClass().getAxisLocation();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = false;
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getAxisLocation();
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNullPointer(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLocalRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLeftRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLocalFileRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLocalFunctionRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeMissingRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNonRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLocalFunctionMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] incompatible types,,this.foregroundRangeMarkers = new HashMap(); this.backgroundRangeMarkers = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol baseRangeMarkers,,this.foregroundRangeMarkers = new HashMap(); this.baseRangeMarkers = new BaseRangeMarkers();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisMap();
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectArray();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectArrayList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjLocation();
compilation error,[CE] bad operand types for binary operator '+',this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList() + 1;
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new OBList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new NullPointerException();
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocation = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(double),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0.0);
patch is same with buggy,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] cannot assign a value to final variable quadrantOrigin,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private final transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] cannot assign a value to final variable quadrantOrigin,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,public static final Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxisLocations); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol TOP_RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_RIGHT); this.domainAxisLocation.set(0, AxisLocation.TOP_RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.domainAxisLocation.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol TOP_RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_RIGHT); this.domainAxisLocation.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.domainAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT);
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = new java.util.ArrayList();
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 3;
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashSet();
compilation error,[CE] no suitable constructor found for HashMap(float),this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(1.0f);
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashList();
compilation error,[CE] no suitable constructor found for HashMap(double),this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(0.0);
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashImage();
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new hashMap();
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new Hashmap();
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = getMarker();
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker =(Marker)super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = getMarker(); if(marker == null) { layer.removeChain(marker); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = getMarker(); if(marker!= null) { layer.removeChain(marker); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Layer marker = super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker =(Marker)super.removeDomainMarker(marker); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = getMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker =(Marker)super.removeDomainMarker(marker); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = getMarker(); if(marker == null) { layer.removeChangeListener(marker); }
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null);
compilation error,[CE] <identifier> expected,,super(); this.null, null, null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] call to this must be first statement in constructor,,super(); this(null, null, null, null);
compilation error,[CE] <identifier> expected,,super(); this.null = null;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this);
compilation error,[CE] cannot find symbol,,Preconditions.checkState(this.isNullPointer());
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.isEmpty());
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Marker and Layer,if (layer == Layer.FOREGROUND) { ,if(marker == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol NEGATIVE,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == Layer.NEGATIVE) {
compilation error,[CE] cannot find symbol BOTTOM,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == Layer.BOTTOM) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '!=',if (layer == Layer.FOREGROUND) { ,if(index!= Layer.FOREGROUND) {
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker =(Marker)super.removeRangeMarker(marker);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeRangeMarker(marker);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(); if(marker == null) { layer.removeChangeListener(marker); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(); if(marker!= null) { layer.removeChangeListener(marker); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(); if(marker == null) { layer.removeChain(marker); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(); if(marker!= null) { layer.removeChain(marker); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { removeRangeMarker(marker); }
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || index == this.marker.size()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.size() == 0) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || index == this.marker.length) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || index == marker.length) {
compilation error,[CE] cannot find symbol markers,if (marker == null) { ,if(marker == null || markers.size() == 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || index >= marker.length) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || index == marker.size()) {
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
patch is same with buggy,,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] illegal start of expression,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;/only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.5;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
compilation error,[CE] illegal start of expression,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;/ only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol datasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.datasetToDomainAxis = mapDatasetToDomainAxis(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { mapDatasetChanged(new DatasetChangeEvent(this, getDataset(index))); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.datasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)));
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex >= 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,mapDatasetToDomainAxis(new DatasetChangeEvent(this, getDataset(index)));
patch is same with buggy,,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList();
compilation error,[CE] cannot find symbol markers,markers = new java.util.ArrayList(); ,this.markers = new java.util.ArrayList();
increase failing tests, [FE] NullPointerException,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers == null) { markers = new ArrayList(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),markers = new java.util.ArrayList(); ,for(int index = 0; index < this.backgroundRangeMarkers.size(); ++index) { markers = new ArrayList(); }
compilation error,[CE] illegal start of expression,markers = new java.util.ArrayList(); ,for(int index = 0; index < this.backgroundRangeMarkers.size(); if(notify) { markers = new ArrayList(); }
compilation error,[CE] incompatible types,markers = new java.util.ArrayList(); ,this.backgroundRangeMarkers = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,if(!this.backgroundRangeMarkers.contains(marker)) { markers = new ArrayList(); }
compilation error,[CE] <identifier> expected,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } this.markers = new ArrayList(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = getIndex(index).intValue();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.parseInt(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.parseInt(this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.parseInt(this.markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.parseInt(this.backgroundRangeMarkers.get(index));
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new NullPointerException("");
compilation error,[CE] cannot find symbol,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = getDefaultStroke();
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 0;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = Color.black;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new HashMap();
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new NullPointerException();
compilation error,[CE] cannot find symbol,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = XYPlot.getPlot();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { removeDomainMarker(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { marker = null; }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex.intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.axisIndex.lastIndexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.axisIndex.intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeAxis();
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLocalRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNonRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeCategoryMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLeftRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNullPointer(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNumber(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLineMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol FOREGROUND,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, CategoryPlot.FOREGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.axisOffset = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap(); this.orientation = PlotOrientation.HORIZONTAL;
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,boolean removed = markers.remove(marker); ,boolean removed = markers!= null? markers.remove(marker): null;
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.detachFromParent();
compilation error,[CE] no suitable method found for remove(Marker,int),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, index);
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,boolean removed = markers.remove(marker); ,boolean removed = marker!= null? markers.remove(marker): null;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,boolean removed = markers.remove(marker); ,boolean removed = marker!= null? markers.remove(marker): 0;
patch is same with buggy,,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot) {
compilation error,[CE] bad operand types for binary operator '==',if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot == null) {
increase failing tests, [FE] NullPointerException,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot == false) {
compilation error,[CE] bad operand types for binary operator '==',if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot == null || parent instanceof CategoryPlot) {
compilation error,[CE] bad operand types for binary operator '!=',if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot!= null) {
increase failing tests, [FE] NullPointerException,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)) {
compilation error,[CE] ')' expected,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot } null) {
compilation error,[CE] generics are not supported in -source 1.4,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot < null) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof CategoriesPlot) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.END;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.START;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = DEFAULT_DOMAIN_GLIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = DEFAULT_DOMAIN_POPES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.TOP;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.BOTTOM;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = DEFAULT_RANGE_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,,renderer.setBase64Visible(true); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxis = null;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBase64Visible(true); this.domainAxis = null;
increase failing tests, [FE] NullPointerException,,renderer.addChangeListener(this);
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
compilation error,[CE] cannot find symbol rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = true;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
patch is same with buggy,,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < count; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < size; axisIndex++) {
compilation error,[CE] cannot find symbol count,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.count; axisIndex++) {
compilation error,[CE] cannot find symbol number,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < number; axisIndex++) {
compilation error,[CE] cannot find symbol data,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < data.length; axisIndex++) {
compilation error,[CE] cannot find symbol categoryCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < categoryCount; axisIndex++) {
compilation error,[CE] cannot find symbol population,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < population; axisIndex++) {
compilation error,[CE] cannot find symbol getCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < getCount; axisIndex++) {
compilation error,[CE] cannot find symbol infancyCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < infancyCount; axisIndex++) {
compilation error,[CE] cannot find symbol infinity,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < infinity; axisIndex++) {
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return this.rangeCrosshairLockedOnData.isEmpty()? false : true;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return this.rangeCrosshairLockedOnData.isEmpty()? false : false;
compilation error,[CE] illegal start of type,,return this.rangeCrosshairLockedOnData.isOn()? false : true;
compilation error,[CE] illegal start of type,,return this.rangeCrosshairLockedOnData.isEmpty();
compilation error,[CE] illegal start of type,,return this.rangeCrosshairLockedOnData.isEmpty()? false : null;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData | false;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxisLocations); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxisLocations); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap();
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,CategoryPlot i =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,CategoryPlot i = getRangePlot();
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,CategoryPlot i = this.rangeAxes.get(i);
compilation error,[CE] incompatible types,,this.rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] incompatible types,,CategoryPlot input = this.rangeAxes.get(i);
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,CategoryPlot i = this.rangeAxes.size();
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,CategoryPlot i =(CategoryPlot)this.rangeAxes.size();
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,CategoryPlot i =(CategoryPlot)this.rangeAxes.get(i).getRange();
compilation error,[CE] variable i is already defined in method configureRangeAxes(),,CategoryPlot i =(CategoryPlot)this.rangeAxes.get(i).getAnnotation();
compilation error,[CE] incompatible types,,CategoryPlot input = this.rangeAxes.size();
patch is same with buggy,,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(this.axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol map,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(map, new Integer(index), new Integer(axisIndex));
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(0, new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(newest Integer(axisIndex), new Integer(index));
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,if(e.getValues()!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,if(e.getValue()!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,if(e.getValues() == null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,if(e.getValues()!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,if(e.getValue()!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,if(e.getValues()!= null) { throw new IllegalStateException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeListener(e);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(8.0, 8.0, 8.0, 8.0);
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 2.0, 4.0);
compilation error,[CE] no suitable constructor found for RectangleInsets(double,double,double),this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(7.0, 7.0, 7.0, 7.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0, 4.0);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent();
increase failing tests, [FE] NullPointerException,,e.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = new XYPlot(ChartChangeEventType.END_UPDATED); event.setChangeEvent(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = EventUtilities.getPlot(this.datasetChangeEventType);
increase failing tests, [FE] NullPointerException,,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = EventUtilities.getPlot(this.datasetChangeEventType); event.setChangeEvent(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = new XYPlot(ChartChangeEventType.DATASET_UPDATED); event.setChangeEvent(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent(); EventUtilities.setChangeEvent(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = new XYPlot(ChartChangeEventType.END_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent(); EventUtilities.setChangeEvent(this);
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new TreeMap();
compilation error,[CE] cannot find symbol domainAxisMap,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.domainAxisMap);
compilation error,[CE] incompatible types,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new ArrayList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol domainAxis,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.domainAxis);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashList();
compilation error,[CE] cannot find symbol domainAxisGroup,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.domainAxisGroup);
compilation error,[CE] cannot find symbol targetRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.targetRangeMarkers);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new ObjectList(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
patch is same with buggy,,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol layer,else if (layer == Layer.BACKGROUND) { ,else if(this.layer == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '==',else if (layer == Layer.BACKGROUND) { ,else if(index == Layer.BACKGROUND) {
patch is same with buggy,,else if (layer == Layer.BACKGROUND) { ,else if (layer == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol collection,else if (layer == Layer.BACKGROUND) { ,else if(collection == Layer.BACKGROUND) {
increase failing tests, [FE] NullPointerException,else if (layer == Layer.BACKGROUND) { ,else if(layer!= Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol level,else if (layer == Layer.BACKGROUND) { ,else if(level == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol label,else if (layer == Layer.BACKGROUND) { ,else if(label == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol info,else if (layer == Layer.BACKGROUND) { ,else if(info == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol,else if (layer == Layer.BACKGROUND) { ,else if(!layer.isWhitespace()) {
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return new Color(FOR_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new Color(FOR_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new RectangleInsets(1.0, 1.0, Color.red);
compilation error,[CE] illegal start of type,,return new RectangleInsets(1.0, 1.0, Color.blue);
compilation error,[CE] illegal start of type,,return new RectangleInsets(0, 0, 0, Color.blue);
compilation error,[CE] illegal start of type,,return new Color(FOR_CROSSHAIR_PAINT, Color.blue);
compilation error,[CE] illegal start of type,,return new Color(Paint.RED);
compilation error,[CE] illegal start of type,,return new RectangleInsets(0, Color.blue);
compilation error,[CE] illegal start of type,,return new Color(FOR_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,this.domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData.isEmpty()? false : true;
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData.isEmpty()? false : false;
compilation error,[CE] illegal start of type,,return XY.domainCrosshairLockedOnData.isEmpty()? false : true;
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData.isEmpty();
compilation error,[CE] illegal start of type,,return XY.domainCrosshairLockedOnData.isEmpty();
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(valueAxis)this.rangeAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.clone();
compilation error,[CE] ')' expected,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = getValueAxis(this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.contains(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,Validate.isTrue(this.rangeAxes.containsKey(i));
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(1);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(VeueAxis)this.rangeAxes.get(i);
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_ROIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GLIDLINE_STROKE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : DEFAULT_RANGE_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_RANGE_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_LOCAL_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GLIDLINE_STROKE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(); this.domainRangeMarkers = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(); this.domainRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxisMap();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getRangeAxis(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getRangeAxis();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = indexOfSupported(getRangeAxis());
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = valueAxis.getIndex(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndex(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getParent();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = indexOf('n');
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getValueAxis(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getValueAxis();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = indexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { removeRangeMarker(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselineStroke = new BasicStroke(0.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol domainAxisBaselineStroke,,this.domainAxisBaselineStroke = new BasicStroke(1.0f); this.domainAxisBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol domainAxisBaselineStroke,,this.domainAxisBaselineStroke = new BasicStroke(1.0f); this.domainAxisPaint = new BasicPaint(1.0f);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer marker = getDomainMarker(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer marker = new Layer(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index < 0) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(index == 0) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList(); this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = XYDomainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = XYDomainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = XYDomainAxis.getDomainAxis(domainAxis); this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = XYDomainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_COLOSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = XYDomainAxis.getDomainAxis(); this.domainCrosshairPaint = DEFAULT_DOUBLE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedHashMap();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new TreeSet();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new HashMap();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ObjectArrayList();
compilation error,[CE] no suitable constructor found for ArrayList(RectangleInsets),this.datasets = new ObjectList(); ,this.datasets = new ArrayList(this.axisOffset);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new PropertyList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new StringArrayList();
compilation error,[CE] cannot find symbol axisLocations,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisLocations = new HashMap();
compilation error,[CE] cannot find symbol axisLocations,,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0); this.axisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol axisRangeMarkers,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol axisLocation,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisLocation = new HashMap();
compilation error,[CE] cannot find symbol axisRenderer,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisRenderer = new HashMap();
compilation error,[CE] cannot find symbol axisRenderer,,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0); this.axisRenderer = new HashMap();
compilation error,[CE] cannot find symbol axisLocations,,this.axisOffset = new RectangleInsets(0.0, 5.0, 5.0, 5.0); this.axisLocations = new HashMap();
compilation error,[CE] cannot find symbol axisLocation,,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0); this.axisLocation = new HashMap();
compilation error,[CE] illegal start of type,,super();
compilation error,[CE] ']' expected,,private transient Paint[] quadrantPaint = new TransientPaint[null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private transient Paint[] quadrantPaint = new TransientPaint[null], null, null, null } ;
compilation error,[CE] <identifier> expected,,private transientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] ';' expected,,private Transient Paint[] quadrantPaint = new TransientPaint[null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private transient Paint[] quadrantPaint = new TransientPaint[null], null, null, null } ;
compilation error,[CE] <identifier> expected,,private transientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] ';' expected,,private Transient Paint[] quadrantPaint = new TransientPaint[null], null, null, null } ;
compilation error,[CE] ']' expected,,private transient Paint[] quadrantPaint = new Paint[null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private transient Paint[] quadrantPaint = new TransientPaint[0], null, null, null } ;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.length();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n");
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf("n");
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.size();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index >= 0) { layer.removeChangeListener(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(index >= 0) { return removeLocalMarker(index, marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(index >= 0) { return removeRangeMarker(index, marker, layer); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n"); if(index >= 0) { layer.removeChangeListener(marker); }
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(); this.domainAxisLocation = null;
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getValueAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(); this.domainAxisLocation = 0;
compilation error,[CE] cannot assign a value to final variable rowRenderingOrder,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder rowRenderingOrder = SortOrder.ASCENDING;
patch is same with buggy,,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] incompatible types,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING? null : SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol ASCIENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCIENDING;
compilation error,[CE] incompatible types,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING? super.getSortedOrder() : SortOrder.ASCENDING;
compilation error,[CE] incompatible types,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING? super.getSortOrder() : SortOrder.ASCENDING;
compilation error,[CE] incompatible types,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING? nullPointerException : SortOrder.ASCENDING;
patch is same with buggy,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, true);
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.CENTER_OR_LEFT, false);
compilation error,[CE] no suitable method found for setDomainAxisLocation(AxisLocation,<null>),setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, null);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setupDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, true);
compilation error,[CE] cannot find symbol real,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, real);
compilation error,[CE] ';' expected,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, true)
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol nullPointer,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointer);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointer());
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return removeLocalFileRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return removeLocalRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return removeLeftRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(this);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(null);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.setRange(this);
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, layer);
patch is same with buggy,,marker.addChangeListener(this); ,marker.addChangeListener(this);
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, marker);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.setRange(null);
compilation error,[CE] method removeChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.removeChangeListener(layer);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.setRange(0, marker.size());
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.appendChangeListener(this);
patch is same with buggy,,super(); ,super();
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(4.0, 4.0, 4.0, 4.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(5.0, 5.0, 5.0, 5.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(1.0, 1.0, 1.0, 1.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(0.0, 4.0, 4.0, 4.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(1.0, 4.0, 4.0, 4.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(1.0, 1.0, 4.0, 4.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(4.0, 4.0, 4.0, 5.0));
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(new RectangleInsets(0.0, 4.0, 4.0, 5.0));
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.size();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getScope();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getDomainAxisLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getRawClass();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex(index);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getOwnerDomain();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getParent();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getFunctionName();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getSize();
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,Validate.notNull(PlotType.UNKNOWN_TYPE);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(PlotUtils.safeMultiply(this));
compilation error,[CE] <identifier> expected,} ,super(); this.null = null;
compilation error,[CE] illegal start of expression,} ,Validate.notNull(PlotType.UNKNOWN_TYPE); this.next();
compilation error,[CE] illegal start of expression,} ,super(); this.plot = new HashMap();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(PlotUtils.safeToInt(this));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(PlotUtil.safeToInt(this));
compilation error,[CE] illegal start of expression,} ,super(); this.plot = new java.util.ArrayList();
compilation error,[CE] illegal start of expression,} ,Validate.notNull(PlotType.UNKNOWN_TYPE); this.nextToken();
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setRangeAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(null); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocalFileAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureExternAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDefaultAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocalEvents();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureOutputAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxisAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureGlobalAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureWidth();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureGlobalState();
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] ';' expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red);
compilation error,[CE] ';' expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue, Color.red);
compilation error,[CE] cannot find symbol chrono,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.chrono;
compilation error,[CE] ';' expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue);
compilation error,[CE] cannot find symbol,,XYAxis axis = getDomainAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getDomainAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = new XYPlotAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxis();
compilation error,[CE] cannot find symbol,,XYDomainAxis axis = getDomainAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Map < XYPlot> axis = getDomainAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,XYPlot axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,XYPlot axis = getDomainAxes();
compilation error,[CE] generics are not supported in -source 1.4,,Map < XYPlot> axis = getDomainAxes();
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADDING;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 2;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINTING;
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYPlotChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,updateListeners(e);
compilation error,[CE] cannot find symbol nullPointerException,notifyListeners(e); ,notifyListeners(e, nullPointerException);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new Event(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new ChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,fireDatasetChanged();
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYPlotItem(e), nullPointerException);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new Event(e), nullPointerException);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYPlotChangeEvent(this, event));
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.RANGE : result;
compilation error,[CE] cannot find symbol RANGE,return result; ,return result == null? ValueAxis.RANGE : result;
compilation error,[CE] cannot find symbol nullPointerException,return result; ,return(index == 0)? result : nullPointerException.getValueAxis();
compilation error,[CE] cannot find symbol nullPointerException,return result; ,return(index == 0)? result : nullPointerException.getValue();
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? valueAxis.getRange() : null;
compilation error,[CE] cannot find symbol nullPointerException,return result; ,return(index == 0)? result : nullPointerException.getLowerBound();
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result == null? valueAxis.getRange() : result;
compilation error,[CE] bad operand types for binary operator '!=',return result; ,return result!= 0? ValueAxis.RANGE : result;
compilation error,[CE] cannot find symbol nullPointerException,return result; ,return(index == 0)? result : nullPointerException.getLocalPointer();
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = 0;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol ISOChronology,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = ISOChronology.getInstanceUTC();
compilation error,[CE] cannot find symbol PAINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PAINT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol NEW_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = NEW_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PAINT_CROSSHAIR,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_CROSSHAIR;
patch is same with buggy,,if (markers == null) { ,if(markers == null) {
compilation error,[CE] bad operand types for binary operator '>=',if (markers == null) { ,if(markers == null || index >= this.backgroundRangeMarkers.get(new Integer(index))) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (markers == null) { ,if(markers == null || index >= this.backgroundRangeMarkers.get(new Integer(index), markers)) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (markers == null) { ,if(markers == null || index >= this.backgroundRangeMarkers.get(new Integer(index), marker)) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (markers == null) { ,if(markers == null || index < this.backgroundRangeMarkers.get(new Integer(index), markers)) {
compilation error,[CE] bad operand types for binary operator '<',if (markers == null) { ,if(markers == null || index < this.backgroundRangeMarkers.get(new Integer(index))) {
compilation error,[CE] ')' expected,if (markers == null) { ,if(markers == null || index >= this.backgroundRangeMarkers.get(new Integer(index), markers) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANACCORD_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker =(Marker)super.removeRangeMarker(marker);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { throw new NullPointerException(""); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = getLastChain();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { removeRangeMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { removeRangeMarker(marker); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = super.removeRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain(); if(layer.isEmpty()) { return removeRangeMarker(marker, layer); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = getMarker(); if(marker!= null) { layer.removeChangeListener(marker); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = getIndex(index).intValue(); this.backgroundRangeMarkers.put(new Integer(index), markers);
increase failing tests, [FE] NullPointerException,,if(this.backgroundRangeMarkers!= null) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,if(this.backgroundRangeMarkers!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,renderer.setRangeAxis(domainAxis);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,renderer.setRangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureDefaultRangeAxis();
increase failing tests, [FE] NullPointerException,configureRangeAxes(); ,setRangeAxis(domainAxis);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,defineRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableDefaultRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxes();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.rangeAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.appendChangeListener(layer); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.containsKey(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { addRangeMarker(margin); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.containsKey(marker)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { removeRangeMarker(marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.appendChangeListener(layer); }
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof CategoryAxis) { this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof CategoryAxis) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof CategoryAxis) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxis = domainAxis.getFunctionAxis(); this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof CategoryAxis) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxis = domainAxis.getFunctionAxis(); this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof CategoryAxis) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxis = domainAxis.getFunctionAxis(); this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); >>
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(index >= this.foregroundRangeMarkers.size()) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(index >= this.foregroundRangeMarkers.get(new Integer(index)) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,for(int index = 0; index < this.foregroundRangeMarkers.size(); ++index) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,marker =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(index >= this.foregroundRangeMarkers.get(new Integer(index)) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(1, dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol domainAxisLocation,this.datasets.set(0, dataset); ,this.datasets.set(new CategoryDataset(dataset, domainAxisLocation.BOTTOM_OR_LEFT), false);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.set(new CategoryDataset(dataset));
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] cannot find symbol domainAxisLocation,this.datasets.set(0, dataset); ,this.datasets.set(new CategoryDataset(dataset, domainAxisLocation.BOTTOM_OR_LEFT));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.set(new CategoryDataset(dataset, domainAxis));
compilation error,[CE] cannot find symbol domainAxisLocation,this.datasets.set(0, dataset); ,this.datasets.set(new CategoryDataset(dataset, domainAxisLocation.TOP_OR_LEFT), false);
compilation error,[CE] cannot find symbol domainAxisLocation,this.datasets.set(0, dataset); ,this.datasets.set(new CategoryDataset(dataset, domainAxisLocation));
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index);
compilation error,[CE] illegal start of expression,} ,addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLabel(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLabel(); if(marker!= null) { addRangeMarker(index, marker); }
compilation error,[CE] unclosed character literal,} ,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { marker.append('ufffd'); }
compilation error,[CE] unclosed character literal,} ,if(index >= 0) { Layer layer = getLastChain(); if(marker!= null) { marker.append('ufffd'); }
compilation error,[CE] unclosed character literal,} ,if(index == 0) { Layer layer = getLabel(); if(marker!= null) { marker.append('ufffd'); }
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index); this.marker = marker;
compilation error,[CE] cannot assign a value to final variable datasetRenderingOrder,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
patch is same with buggy,,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] bad operand types for binary operator '+',private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE + 1;
compilation error,[CE] cannot find symbol,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private datasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol NEVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.NEVERSE;
compilation error,[CE] cannot find symbol RANSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.RANSE;
compilation error,[CE] cannot find symbol TREVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.TREVERSE;
compilation error,[CE] ';' expected,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE || isEnabled(Feature.AUTO_CLOSE_SOURCE));
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.peek(), false);
compilation error,[CE] cannot find symbol Path,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Path, false);
compilation error,[CE] cannot find symbol XY,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.XY, false);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot, false);
compilation error,[CE] cannot find symbol PEAK,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.PEAK, false);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.peek(), true);
compilation error,[CE] no suitable method found for removeDomainMarker(Marker,int,Layer,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol PEEL,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.PEEL, false);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker),,addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLabel(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index);
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLabel(); if(marker!= null) { addRangeMarker(index, marker); }
compilation error,[CE] unclosed character literal,,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { marker.append('ufffd'); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { marker.append('n'); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLabel(); if(marker!= null) { marker.append('n'); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChain(); if(marker!= null) { marker.append("n"); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.parseInt(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.Integer.valueOf(this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index == 0) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,if(this.backgroundRangeMarkers!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index!= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = getIndex(index).intValue();
compilation error,[CE] illegal start of expression,,if(this.backgroundRangeMarkers!= null) { Layer layer = new Layer(); if(layer.isEmpty()) { fireChangeEvent(); }
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.backgroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] no suitable constructor found for HashMap(float),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(1.0f);
compilation error,[CE] no suitable constructor found for HashMap(double),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(0.0);
compilation error,[CE] cannot find symbol BackgroundDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.BackgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol baseDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.baseDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new hashMap();
compilation error,[CE] cannot find symbol centerDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.centerDomainMarkers = new HashMap();
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocation.set(index, location);
patch is same with buggy,,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.rangeAxisLocation);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocation.set(0, location);
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol position,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, position);
compilation error,[CE] cannot find symbol position,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocation.set(index, position);
compilation error,[CE] cannot find symbol index,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocation.set(this.index, location);
compilation error,[CE] cannot find symbol areaAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.areaAxisLocation);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis, domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxisMap);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(domainAxis, rangeAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxisMap, domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(getClass().getName());
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(domainAxis);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getPlot());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getPlot());
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation(), location);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getAxisLocation();
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol datasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.datasetToDomainAxis = mapDatasetToDomainAxis(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToDomainAxis = mapDatasetToDomainAxis(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.datasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)));
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxisLocation.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation);
increase failing tests, [FE] AssertionFailedError,this.domainAxes.set(0, domainAxis); ,this.domainAxisLocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxisLocation.SET(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation.RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation.LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true;This.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; This.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true;This.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; This.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true;This.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true;This.domainCrosshairPaint = DEFAULT_CLOSSHAIR_PAINT;
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; This.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol This,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true;This.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol setOrientation,,this.setOrientation = PlotOrientation.HORIZONTAL; this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol domainAxis,,this.orientation = PlotOrientation.HORIZONTAL; this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol focus,,this.focus = PlotOrientation.HORIZONTAL; this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol setOrientation,,this.setOrientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol rangeAxis,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.rangeAxis, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(double,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.anchorValue, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol rangeAxis,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(this.rangeAxis, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,defineRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,updateRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol entities,addRangeMarker(baseline, Layer.BACKGROUND); ,addEntity(entities, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(new RangeAxisElement(), Layer.BACKGROUND);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_NULL,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_NULL;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_QUOTE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_QUOTE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_FULL,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_FULL;
compilation error,[CE] cannot find symbol DEFAULT_ROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROSSHAIR_VALUE;
compilation error,[CE] ';' expected,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VOLATILE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VOLATILE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_LENGTH,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_LENGTH;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.domainAxises = null;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(dataset);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(getItemRenderer());
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.rangeAxises = null;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = super.getDomainAxis(); this.domainAxises = null;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)super.getDomainAxis(); this.domainAxis = false;
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.size()) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,marker =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.get(new Integer(index)) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.get(new Integer(index)) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.get(new Integer(index)) { markers = new ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes, 0);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex.intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.axisIndex.lastIndexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex.lastIndexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = this.axisIndex.intValue();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset, this.rangeAxis);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getDataset();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getInstance();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(dataset, this.rangeAxis);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.containsKey(marker)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker == null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { return false; }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { return removeRangeMarker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { removeRangeMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.containsKey(marker)) { return false; }
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setPosition(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setItem(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setPath(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setSelected(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol NEGATIVE_TYPE,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.NEGATIVE_TYPE);
compilation error,[CE] cannot find symbol UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.UPDATED);
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_LOCAL_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_FLOAT_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_UNKNOWN;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_PADDING;
compilation error,[CE] cannot find symbol,notifyListeners(e); ,updateListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,fireDatasetChanged();
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e!= null) { notifyListeners(e); } else { fireDatasetChangeEvent(); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new Event(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e!= null) { notifyListeners(e); } else { fireDatasetChanged(); }
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index+1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index-1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index * 2);
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result = (XYDataset)this.datasets.get(index);
compilation error,[CE] cannot find symbol,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index+1).getValue();
compilation error,[CE] cannot find symbol,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index).getValue();
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index >= 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index!= 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(!(index == 0 && location == null)) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index <= 0 || location == null) {
compilation error,[CE] cannot find symbol position,if (index == 0 && location == null) { ,if(index == 0 || position == null) {
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] ';' expected,,ValueAxis rangeAxis =(ValueAxis)this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation.set(0, domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis); this.rangeAxisLocation.set(0, domainAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis); this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxis); this.rangeAxisLocation.set(0, domainAxis);
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlot.WRITE_INIT_ERROR);
compilation error,[CE] illegal start of expression,} ,super(); Preconditions.checkNotNull(XYPlot.WRITE_INIT_ERROR);
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtils.safeMultiply(this));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtils.safeToInt(this));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYZone.getDefault());
compilation error,[CE] illegal start of expression,} ,super(); XYPlot = new XYPlot();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.isStatementBlock(this));
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_LOAD_FACTOR, DEFAULT_NAME);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.layer.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = layer.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.edgeRangeMarkers.size();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(XYPlot,<null>,<null>,<null>),this(null, null, null, null); ,this(new XYPlot(), null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,XYPlot),this(null, null, null, null); ,this(null, null, null, new XYPlot());
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] cannot find symbol compiler,this(null, null, null, null); ,this(compiler, null, null, null);
compilation error,[CE] <null> cannot be dereferenced,this(null, null, null, null); ,this(null, null, null, null.getClass());
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,boolean),this(null, null, null, null); ,this(null, null, null, false);
compilation error,[CE] ';' expected,this(null, null, null, null); ,this(null, null, null, null));
compilation error,[CE] cannot find symbol arbitrary,this(null, null, null, null); ,this(arbitrary, null, null, null);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = getCategoryPlot();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCategoryPlot(this);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = getCurrentPlot();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCurrentPlot(event);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCategoryPlot(category);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCategoryPlot(event);
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> yAxis = getClass();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCurrentPlot(this);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCurrentPlot();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = getChangeEvent(event);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainBounds(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxisEdge(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxisPaint = DEFAULT_GRIDLINE_PAINT;
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectArrayList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol setToRangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.setToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxis, domainAxis);
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.dataset ToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxis, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.rangeAxisMap = new ObjectList();
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_MAX_PAINT,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_MAX_PAINT;
compilation error,[CE] cannot find symbol REFAULT_GRIDLINE_PAINT,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = REFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
compilation error,[CE] ';' expected,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PINK,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PINK;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_SPACE,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_SPACE;
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] class or interface expected,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } NullPointerException: this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayListWithCapacity(2);
compilation error,[CE] cannot find symbol,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayListWithCapacity(0, 0, nullPointerExceptions());
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.paint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,CategoryPlot plot = getPlot(); this.paint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.setPaint(Paint.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getCategoryPlot();
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.blue);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] invalid method declaration; return type required,,CategoryPlot plot =(CategoryPlot)getPlot(); getPlot().addChangeListener(this);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisValue = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairValue = DEFAULT_CLOSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisValue = DEFAULT_COSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisValue = DEFAULT_CLOSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisValue = DEFAULT_DOMAIN_VALUE;
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]) { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size(); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { result = this.datasets.get(index); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { result = this.datasets.size(); }
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.clone();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(0);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.domainAxis.getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.domainAxis.clone();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)dataset.clone();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getItemDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setRangeAxis(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setRangeAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(index >= this.foregroundRangeMarkers.size()) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(index >= this.foregroundRangeMarkers.get(new Integer(index)) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,marker =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; STRIPE_DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] illegal start of type,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; return new Stroke(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; XYPlotUtil.stripLeadingAndTrailingQuotedShouldBeStroke(DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; XYPlotUtil.stripLeadingAndTrailingQuotedStroke(DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; return new Stroke(DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] <identifier> expected,,final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_CROSSHAIR_STROKE; XYPlotUtil.stripLeadingAndTrailingQuotedShouldBeStroke(DEFAULT_CROSSHAIR_STROKE
patch is same with buggy,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.LEFT, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.CENTER_OR_LEFT);
compilation error,[CE] cannot find symbol LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.LEFT, BOTTOM_OR_LEFT);
compilation error,[CE] not a statement,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT)- 1;
compilation error,[CE] cannot find symbol LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.LEFT, 0);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.LEFT);
compilation error,[CE] cannot find symbol RIGHT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.RIGHT);
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)super.mapDatasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)super.getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)super.mapDatasetToDomainAxis();
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis()? this.axisIndex : Integer.toString(axisIndex));
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); if(e!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent(); EventUtilities.resetAndRemoveChangeListener(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); if(e!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); if(e!= null) { fireDatasetChanged(); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); if(e!= null) { notifyListeners(e); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); if(e!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); if(e!= null) { throw new RuntimeException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); EventUtilities.removeChangeListener(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent(); EventUtilities.resetAndRemoveChangeListener(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,DatasetChangeEvent event = getDatasetChangeEvent(); event.addChangeEvent(e);
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(index));
patch is same with buggy,,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol top,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(top, new Integer(axisIndex));
compilation error,[CE] '.class' expected,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(int index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol map,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(map, new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < this.datasets.size()) { return null; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = XYPlot.indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { return null; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { return this.datasets.size(); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexes.size(); if(index < 0) { return null; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size(); if(index < 0) { return null; }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisValue = DEFAULT_DOMAIN_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisValue = DEFAULT_RANGELINE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisValue = DEFAULT_GLIDLINE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineValue = DEFAULT_GLIDLINE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisValue = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisValue = false;
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker == null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] ';' expected,,if(marker!= null) { Layer layer = get Layer(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { Layer layer = getLastChangeMarker(); if(marker == null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChangeMarker(); if(marker!= null) { return false; }
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_PAPINT,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAPINT;
compilation error,[CE] cannot find symbol rangeAxisPaint,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; this.rangeAxisPaint = DEFAULT_CROSSHAIR_PAPINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_PADDING,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADDING;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected dynamic ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol ResourcesBundle,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourcesBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.newBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(".org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCount(axisIndex);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCount(this);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtilities.getCategoryPlotCount(this);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCurrentCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getChangeCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtils.getCategoryPlotCount(this);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = this.getCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLength();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot count = EventUtilities.getCategoryPlotCount(count);
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Map and Layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Marker and Layer,if (layer == Layer.FOREGROUND) { ,if(marker == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol NEGATIVE,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == Layer.NEGATIVE) {
compilation error,[CE] cannot find symbol BOTTOM,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == Layer.BOTTOM) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_RIGHT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, true);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxisLocation(AxisLocation.BOTTOM_OR_RIGHT, false);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = EventUtilities.getCategoryPlot(getChangeEventType());
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event =(CategoryPlot)getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = EventUtilities.getCategoryPlot(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = EventUtilities.getCategoryPlot(category);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = EventUtilities.getCategoryPlot(getEventType());
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = getCurrentPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event =(CategoryPlot)this.chartChangeEvent.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = getCategoryPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event =(CategoryPlot)getParent();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= WHOLE_COLLECTION) { result = new CategoryDataset(); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= 0) { result = new CategoryDataset(); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= WHOLE_COLLECTION) { result = index; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); result = new CategoryDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= 0) { return result; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index < 0) { result = new CategoryDataset(); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= WHOLE_COLLECTION) { return result; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= 0) { result = this.dataset.size(); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainAxisStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.peek(), false);
compilation error,[CE] cannot find symbol Path,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.Path, false);
compilation error,[CE] cannot find symbol XY,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.XY, false);
compilation error,[CE] cannot find symbol PEAK,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PEAK, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol DEFAULT,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.DEFAULT);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.peek(), true);
compilation error,[CE] cannot find symbol Plot,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.Plot, false);
compilation error,[CE] cannot find symbol DEFAULT,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.DEFAULT, false);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(index < 0) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index < 0) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index == 0) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(marker!= null) { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(index >= 0) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(index >= 0) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = new Layer(); if(position == 0) { addRangeMarker(marker); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker); this.marker = marker;
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxes!= null);
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this.domainAxes);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] cannot find symbol,,super.setDomainAxes(this.domainAxes);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.domainAxes.size() == this.domainAxes.size());
compilation error,[CE] cannot find symbol,,this.domainAxes =(DomainAxis)this.domainAxes.get();
compilation error,[CE] cannot find symbol,,this.domainAxes =(DomainAxis)this.domainAxes.get(0);
compilation error,[CE] no suitable method found for get(),,this.domainAxes =(XYPlot)this.domainAxes.get();
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDoubleAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBaseAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDefaultAxis(axisIndex);
patch is same with buggy,,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getValueAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getChangeAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getLocaleAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getLocalEvent(axisIndex);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location, notify);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = false;
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getCurrentLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getCurrentLocation(); notify = false;
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getAxisLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getAxisLocation(location);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getClass().getAxisLocation();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location, false);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer marker = getDomainMarker(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer marker = new Layer(); if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!markers.containsKey(marker)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!markers.containsKey(marker)) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index >= 0) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(position == 0) { return removeDomainMarker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(index == 0) { return index; }
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxisLocations = new ObjectList(); this.domainAxises = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxises = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxises,,this.domainAxisLocations = new ObjectList(); this.rangeAxises = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisEs,,this.domainAxisLocations = new ObjectList(); this.domainAxisEs = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(index >= this.datasets.size()) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if (this.datasets.size() > index) {
compilation error,[CE] bad operand type int for unary operator '!',if (this.datasets.size() > index) { ,if(!this.datasets.size() > index) {
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.length();
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.size();
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(index, marker, layer);
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index >= 0) { layer.removeChild(marker); }
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf('')+ marker.lastIndexOf('')+ 1;
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index >= 0) { layer.removeChangeListener(marker); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf("n");
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n");
compilation error,[CE] empty character literal,,int index = marker.lastIndexOf(''); if(index == 0) { layer.removeChild(marker); }
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setAxisLocation(null, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setAxisLocation(location, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(location, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setStandardAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setRemoteAxisLocation(0, location, notify);
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setDomainAxisLocation(location, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(location, null);
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,CategoryPlot plot = ResourceBundle.getPlot("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,CategoryPlot plot = ResourceBundle.getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.localizationResources = resourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.localizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.locationBundle");
compilation error,[CE] no suitable constructor found for CategoryPlot(String),,CategoryPlot plot = new CategoryPlot("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private CategoryPlot rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.clone();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.clone();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private SortOrder rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private CategoryPlot rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getSortedList();
compilation error,[CE] cannot find symbol,,private ListRenderingOrder rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getSortOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private SortOrder rowRenderingOrder =(CategoryPlot)getRowRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getDefault();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getSortedOrder();
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
compilation error,[CE] variable domainCrosshairLockedOnData is already defined in class XYPlot,private boolean rangeCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,private boolean rangeCrosshairLockedOnData = true; ,safe boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getItemDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.dataset.getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBase64Variants());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.dataset.clone();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)dataset.clone();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = DatasetUtilities.getDataset(getItemDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.dataset.getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBase64Visible());
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(getRange()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,this.location = location.getAxisLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getRange()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.domainAxis = domainAxis;
compilation error,[CE] '(' or '[' expected,,Preconditions.checkNotNull(this.dataset); this.domainAxis = new domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainAxis = domainAxis;
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation());
compilation error,[CE] illegal start of expression,} ,setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent());
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.containsKey(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { addRangeMarker(margin); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain().getLastChain(); if(layer.isEmpty()) { addRangeMarker(margin); }
compilation error,[CE] call to super must be first statement in constructor,,super(dataset); this.rangeAxis = rangeAxis;
compilation error,[CE] cannot find symbol,,renderer.setValueAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(dataset, domainAxis, rangeAxis);
compilation error,[CE] call to this must be first statement in constructor,,this(dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] call to super must be first statement in constructor,,super(dataset, domainAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol,,renderer.setValueAxis(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(dataset);
compilation error,[CE] call to this must be first statement in constructor,,this(dataset, domainAxis, rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis(), renderer);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNonDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeImmediateParentMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeWhitespaceMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalFileMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeInferredMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.mayHaveSideEffects()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.setDomainAxisLocation(getAxisLocation())) {
compilation error,[CE] incompatible types,if (notify) { ,if(this.setDomainAxisLocation(location)) {
compilation error,[CE] cannot find symbol index,if (notify) { ,if(this.index == AxisLocation.WHOLE_COLLECTION) {
compilation error,[CE] cannot find symbol setDomainAxisLocation,if (notify) { ,if(this.setDomainAxisLocation) {
compilation error,[CE] cannot find symbol index,if (notify) { ,if(this.index == AxisLocation.HORIZONTAL) {
compilation error,[CE] cannot find symbol index,if (notify) { ,if(this.index == AxisLocation.NUMBER_INT) {
compilation error,[CE] cannot find symbol index,if (notify) { ,if(this.index == AxisLocation.SOURCEFILE_TITLE_FONT) {
compilation error,[CE] illegal start of expression,} ,super(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,super(dataset); this.rangeAxis = rangeAxis;
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(dataset); this.rangeAxis = RangeAxis.getRange();
compilation error,[CE] illegal start of expression,} ,super(dataset, domainAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] illegal start of expression,} ,super(dataset, domainAxis); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,this(dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] illegal start of expression,} ,super(dataset); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,super(dataset, domainAxis); this.rangeAxis = RangeAxis.getRange();
compilation error,[CE] illegal start of expression,} ,this(dataset, domainAxis, rangeAxis);
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_ROIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_ROIDLINE_PAINT;
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_ PAINT;
compilation error,[CE] ';' expected,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PINK,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PINK;
compilation error,[CE] cannot find symbol DEFAULT_GIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_RANGE_PAINT;
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
compilation error,[CE] cannot find symbol objectItemRenderer,if (renderer != null) { ,if(objectItemRenderer == null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis == null) {
compilation error,[CE] cannot find symbol rangeAxis,if (renderer != null) { ,if(this.rangeAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(!(renderer!= null)) {
compilation error,[CE] cannot find symbol Renderer,if (renderer != null) { ,if(Renderer == null) {
compilation error,[CE] cannot find symbol Renderer,if (renderer != null) { ,if(Renderer!= null) {
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(notify) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = getIndex(index).intValue(); this.backgroundRangeMarkers = new java.util.ArrayList();
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;
compilation error,[CE] cannot find symbol This,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;This.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol This,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false; This.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol This,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;This.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol This,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false; This.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible!= false) { this.rangeGridlinesVisible = true; }
compilation error,[CE] cannot find symbol This,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false; This.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol This,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;This.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol This,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;This.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index >= this.rangeAxes.size()) {
patch is same with buggy,,if (index < this.rangeAxes.size()) { ,if(index < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 && index < this.rangeAxes.size()) {
compilation error,[CE] inconvertible types,if (index < this.rangeAxes.size()) { ,if(this.rangeAxes instanceof ValueAxis) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index >= this.rangeAxes.size() || index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(this.rangeAxes == null) {
compilation error,[CE] cannot find symbol,,fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeEvent(event); fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeListener(this); fireDatasetChanged();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent(); this.datasetChanged = event.getDatasetChangeEvent(); fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent = event.getDatasetChangeEvent(); fireDatasetChanged();
compilation error,[CE] cannot find symbol,,super.setChanged(event); fireDatasetChanged();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent(); this.datasetChanged = event.getDatasetChangeEvent();
compilation error,[CE] cannot find symbol,,event.addChangeEvent(this); fireDatasetChanged();
compilation error,[CE] cannot find symbol,,event.setChangeEvent(this); fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeEvent(this); fireDatasetChanged();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxisMap);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxisMap.getRenderer();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> this.rangeAxes = new CategoryPlot(this.rangeAxes.size());
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> this.rangeAxes = new CategoryPlot(this.rangeAxes.size());
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> this.rangeAxes = getRangeAxes();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> rangeAxis = this.rangeAxes.get(i);
compilation error,[CE] not a statement,,CategoryPlot[] this.rangeAxes = new CategoryPlot[this.rangeAxes.size() ];
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> rangeAxis = getRangeAxis(this.rangeAxes);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> this.rangeAxes = new CategoryPlot(this.rangeAxes.size(), this.rangeAxes.size());
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes = new CategoryPlot(this.rangeAxes.size(), this.rangeAxes.size());
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> this.rangeAxes = new CategoryPlot(this.rangeAxes.size());
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes = new CategoryPlot(this.rangeAxes.size());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisPosition = CategoryAnchor.CENTER;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxis = domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDefaultAxis();
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] cannot find symbol White,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.White;
compilation error,[CE] cannot find symbol YEAR,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.YEAR;
compilation error,[CE] cannot find symbol START,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.START;
compilation error,[CE] cannot find symbol RAL,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.RAL;
compilation error,[CE] cannot find symbol domainAxisMap,,this.domainAxisMap = new ObjectList(); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,,this.domainAxisMap = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,,this.domainAxisMap = new ObjectList(); this.domainAxismap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,,Preconditions.checkNotNull(domainAxisMap); this.domainAxisMap = new ObjectList();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = new CategoryDataset(); this.domainAxisMap = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxisMap,,this.domainAxisMap = new ObjectList(); this.domainAxisMap = new ObjectArray();
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectArrayList();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new Class();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new NullPointerException();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectArray();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectMap();
compilation error,[CE] List is abstract; cannot be instantiated,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new List();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new OBList();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlot();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,checkAlterRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,updateXYPlots();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEvent(this);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,disableRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxise(new XYPlot());
compilation error,[CE] no suitable method found for setRangeAxis(boolean),configureRangeAxes(); ,setRangeAxis(false);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEvent(null);
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)super.mapDatasetToDomainAxis(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge(); this.axisIndex = axisIndex;
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)super.mapDatasetToDomainAxis();
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge());
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)this.axisIndex.getAxis());
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisLocation = AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT, false);
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = AxisLocation.CENTER_OR_LEFT, false);
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = AxisLocation.BOTTOM_OR_LEFT, true);
compilation error,[CE] ';' expected,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = AxisLocation.TOP_OR_RIGHT, false);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol warning,if (notify) { ,if(warning) {
compilation error,[CE] cannot find symbol warning,if (notify) { ,if(this.warning) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.removeChangeEvent()) {
compilation error,[CE] cannot find symbol marker,if (notify) { ,if(this.marker!= null) {
compilation error,[CE] cannot find symbol Notify,if (notify) { ,if(!Notify) {
compilation error,[CE] cannot find symbol removeChangeEvent,if (notify) { ,if(this.removeChangeEvent) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isRegistered()) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(isRegistered(this)&& notify)) {
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangePlot();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangeAxes();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = Maps.newHashMap();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangeAxisEdge();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = plot.getRangeAxisEdge();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getCfg().getRangeAxisEdge();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = super.getRangeAxisEdge();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = plot.getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getCfg().getAxisEdge();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex.intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.axisIndex.lastIndexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexToDomainAxis(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.axisIndex.intValue();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex++;
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLeftRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeCategoryMarker(marker, Layer.FOREGROUND);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 0);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNullPointer(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLineMarker(marker, Layer.FOREGROUND);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,double),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 0.0);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNumberMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeTopMarker(marker, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers, 0);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, 0);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { this.foregroundRangeMarkers.add(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { this.foregroundRangeMarkers.remove(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] incompatible types,,baseline = getDomainAxis(); addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,,baseline = getDomainAxis().getDomainBounds(); addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,baseline = getDomainAxisLine(); addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,,setBaselineVisible(true); this.baseline = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,,setBaselineVisible(true); this.baseline = new BaselineVisible(true);
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = new CategoryAxis(domainAxis);
compilation error,[CE] cannot find symbol,,setBaselineVisible(true); this.baselineVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(""));
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYLocation);
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(")"));
compilation error,[CE] bad operand type ObjectList for unary operator '!',,Preconditions.checkArgument(!this.domainAxisLocations!= null);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] illegal start of expression,,if(this.location!= null) { this.location = new CategoryPlot(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocation(this), notify);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new RendererChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,,if(this.location!= null) { this.location = new CategoryPlot(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this), location); }
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.annotationList = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(new XYDataset(dataset, domainAxis)); this.annotations = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.annotationList = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getPropertyRenderer(); this.annotationList = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.annotationIntrospector = new XYItemRenderer(renderer);
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.rangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol setToRangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.setToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisOffset,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxisOffset);
compilation error,[CE] no suitable constructor found for RectangleInsets(double,double,double),this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new RectangleInsets(0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol rangeAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.rangeAxis);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol PlotOrientation,,PlotOrientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,PlotOrientation orientation = getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset == null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
increase failing tests, [FE] NullPointerException,marker.addChangeListener(this); ,marker.removeChangeListener(this);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(this);
compilation error,[CE] cannot find symbol RangeMarker,marker.addChangeListener(this); ,marker.setAnnotation(RangeMarker.NONEMPTY_ANNOTATION);
patch is same with buggy,,marker.addChangeListener(this); ,marker.addChangeListener(this);
compilation error,[CE] cannot find symbol RangeMarker,marker.addChangeListener(this); ,marker.setAnnotation(RangeMarker.NOT_IMPLEMENTED);
compilation error,[CE] method removeChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.removeChangeListener(layer);
compilation error,[CE] cannot find symbol RangeMarker,marker.addChangeListener(this); ,marker.setAnnotation(RangeMarker.NONEMPTY_ANNOTATIONS);
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, layer);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.setAnnotation(RangeMarker.class);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.setRange(this);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); getAxis().setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(XYPlot.SOURCENAME_ARRAY);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(XYPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); axisIndex.setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromIndex(axisIndex);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, getDatasetIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NAME);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getBase());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NAME_TYPE);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(tag);
compilation error,[CE] cannot find symbol zone,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(zone);
compilation error,[CE] cannot find symbol level,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(level);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(0);
compilation error,[CE] cannot find symbol link,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(link);
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] <identifier> expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.markers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index
compilation error,[CE] 'else' without 'if',markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.markers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.backgroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis == null); this.rangeAxis = domainAxis;
compilation error,[CE] ';' expected,,Preconditions.checkArgument(!this.rangeAxis instanceof XYRenderer));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis == null); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.isNull());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkState(this.rangeAxis == null); this.rangeAxis = rangeAxis;
compilation error,[CE] ';' expected,,Preconditions.checkArgument(!this.rangeAxis instanceof XYRendering));
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty());
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.size; axisIndex++) {
compilation error,[CE] cannot find symbol area,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < area; axisIndex++) {
compilation error,[CE] cannot find symbol rangeAxis,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < rangeAxis; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < size; axisIndex++) {
compilation error,[CE] cannot find symbol SIZES,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < CategoryPlot.SIZES; axisIndex++) {
compilation error,[CE] cannot find symbol alphaSize,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < alphaSize; axisIndex++) {
compilation error,[CE] cannot find symbol count,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.count; axisIndex++) {
compilation error,[CE] cannot find symbol location,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < location; axisIndex++) {
compilation error,[CE] cannot find symbol END_ARRAY,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < CategoryPlot.END_ARRAY; axisIndex++) {
compilation error,[CE] cannot find symbol range,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < range; axisIndex++) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol mayHaveSideEffects,if (notify) { ,if(this.mayHaveSideEffects) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.mayHaveSideEffects()) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node!= null && this.notify) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node == null && this.notify) {
compilation error,[CE] cannot find symbol reportChangeAxisLocation,if (notify) { ,if(this.reportChangeAxisLocation) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node == null && notify) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node!= null && notify) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(!this.notify) {
patch is same with buggy,,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '==',else if (layer == Layer.BACKGROUND) { ,else if(index == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol layer,else if (layer == Layer.BACKGROUND) { ,else if(this.layer!= Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol layer,else if (layer == Layer.BACKGROUND) { ,else if(this.layer == Layer.BACKGROUND) {
increase failing tests, [FE] NullPointerException,else if (layer == Layer.BACKGROUND) { ,else if(layer!= Layer.BACKGROUND) {
increase failing tests, [FE] NullPointerException,else if (layer == Layer.BACKGROUND) { ,else if(!(layer == Layer.BACKGROUND)&&(index == 0)) {
compilation error,[CE] cannot find symbol layers,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND || layers.size() == 0) {
compilation error,[CE] ')' expected,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND || outer Layer.isBoundary()) {
compilation error,[CE] cannot find symbol,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND || layer.peek() == null) {
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] <identifier> expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE.
compilation error,[CE] <identifier> expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE.;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_LOAD_FACTOR, false);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_THRESHOLD);
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData? false : true;
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_LOCK_ON_DATA);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_LOAD_FACTOR, true);
compilation error,[CE] illegal start of type,,return getClass().getName();
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.containsKey("org.jfree.chart.plot.LocalizationBundle")); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle
compilation error,[CE] <identifier> expected,,XYPlot plot =(XYPlot)getPlot(); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.containsKey("org.jfree.chart.plot.LocalizationBundle")); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBund
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.containsKey("org.jfree.chart.plot.LocalizationBundle")); localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.Localization
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.containsKey("org.jfree.chart.plot.LocalizationBundle")); LocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.containsKey("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.containsKey("org.jfree.chart.plot.LocalizationBundle")); LocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.Localization
compilation error,[CE] <identifier> expected,,Preconditions.checkState(!localizationResources.containsKey("org.jfree.chart.plot.LocalizationBundle")); LocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBund
compilation error,[CE] illegal start of type,,return new ResourceBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol chartChangeEventType,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, chartChangeEventType);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] cannot find symbol CHART_DELETE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_DELETE);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, event);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CLOSED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CLOSED);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex(axisIndex); this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.datasetToRangeAxisMap.remove(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.datasetToRangeAxisMap.put(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.mapToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.datasetToRangeAxisMap.put(index, new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.datasetToRangeAxisMap.put(index, new Integer(axisIndex), axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.datasetToRangeAxisMap.put(index, new Integer(axisIndex), null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(dataset.size() > 0);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,,this.axisOffset = new CategoryDataset(this.axisOffset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.axisOffset == null); this.axisOffset = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.axisOffset == null); this.axisOffset = new CategoryDataset(this.axisOffset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.axisOffset!= null); this.axisOffset = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.axisOffset!= null); this.axisOffset = new CategoryDataset(this.axisOffset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.axisOffset = new CategoryDataset(dataset);
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocation = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(double),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0.0);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList() + 1;
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new OBList();
increase failing tests, [FE] NullPointerException,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0);
compilation error,[CE] unclosed string literal,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList() +";
compilation error,[CE] cannot find symbol domainAxislocations,this.domainAxisLocations = new ObjectList(); ,this.domainAxislocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(dataset.getName().length() > 0);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.dataset = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.dataset = dataset;
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.getDataset(getItemRenderer());
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.dataset = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.dataset = new CategoryDataset(dataset, domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(dataset); this.renderer = new CategoryDataset(dataset);
compilation error,[CE] method getRowKey in interface KeyedValues2D cannot be applied to given types;,,Preconditions.checkArgument(dataset.getRowKey()!= null);
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(dataset.getName()!= null);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_BLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_BLIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlineStroke = DEFAULT_RANGE_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlineStroke = DEFAULT_RANGE_GRIDLINES_STROKES;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlineStroke = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlineStroke = DEFAULT_RANGE_GRIDLINES_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_GIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); AxisLocation location = new AxisLocation();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); AxisLocation location = new AxisLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getAxisLocation();
compilation error,[CE] illegal start of expression,,if(index == 0) { if(!this.location.isLocal()) { setAxisLocation(getAxisLocation()); }
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getDomainAxisLocation();
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); AxisLocation location = getAxisLocation();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getKey();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getPrototype();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(new CategoryItemRenderer());
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxisRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getAxisRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowDataset();
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(tag);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] cannot find symbol level,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(level);
compilation error,[CE] cannot find symbol zone,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(zone);
compilation error,[CE] cannot find symbol link,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(link);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(0);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,ensureCapacity(new Integer(index));
compilation error,[CE] no suitable constructor found for Integer(Marker),fireChangeEvent(); ,ensureCapacity(new Integer(marker));
compilation error,[CE] no suitable method found for addRangeMarker(Integer),fireChangeEvent(); ,addRangeMarker(new Integer(index));
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker(marker);
compilation error,[CE] no suitable method found for addRangeMarker(int),fireChangeEvent(); ,addRangeMarker(index);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,recalculateStackTrace();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,ensureCapacity();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,ensureCapacity(getPointer());
compilation error,[CE] constructor Layer in class Layer cannot be applied to given types;,fireChangeEvent(); ,addRangeMarker(new Layer(index, marker));
compilation error,[CE] no suitable constructor found for Integer(int,Marker),fireChangeEvent(); ,ensureCapacity(new Integer(index, marker));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(axisIndex));
compilation error,[CE] no suitable method found for set(CategoryPlot,Integer),this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this, new Integer(axisIndex));
patch is same with buggy,,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisPlot,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisPlot, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol position,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(position, new Integer(axisIndex));
compilation error,[CE] cannot find symbol i,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(i, new Integer(axisIndex));
compilation error,[CE] cannot find symbol path,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(path, new Integer(axisIndex));
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(tag);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(0);
compilation error,[CE] cannot find symbol link,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(link);
compilation error,[CE] ')' expected,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(area marker);
compilation error,[CE] cannot find symbol zone,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(zone);
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,Layer layer = getLastChain().getLowerBound();
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker!= null) { layer.add(marker); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker!= null) { layer.addChangeListener(marker); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker == null) { layer.add(marker); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker!= null) { layer.append(","); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker!= null) { layer.addChangeListener(marker, Layer.SEPARATOR); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker!= null) { layer.append(");n"); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker!= null) { layer.addChangeListener(marker, marker); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.getLabel(); if(marker == null) { layer.append(","); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.clone(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker instanceof CategoryPlot) { return removeCategoryMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.clone(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new CategoryPlot(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker; if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker instanceof CategoryPlot) { return removeCategoryMarker(marker, Layer.TOP); }
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.annotationIntrospector = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.annotationIntrospector = new XYAnnotationIntrospector();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.annotationIntrospector = new java.util.ArrayRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.annotationIntrospector = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers, 0);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { this.foregroundRangeMarkers.remove(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { this.foregroundRangeMarkers.add(marker); }
compilation error,[CE] illegal start of expression,,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { this.foregroundRangeMarkers.remove(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] ')' expected,,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { this.foregroundRangeMarkers.remove(marker); if(notify) { notifyListeners(new RangeMarkerChangeEvent(this); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] ')' expected,,int index = this.backgroundRangeMarkers.size(); if(index >= 0) { this.foregroundRangeMarkers.get(new Integer(index)); marker = this.markers.get(new Integer(index); }
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index == 0 || index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 || index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index!= 0 || index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index <= 0 || index >= this.rangeAxes.size()) {
compilation error,[CE] cannot find symbol,if (index < this.rangeAxes.size()) { ,if(!this.rangeAxes.containsKey(index)) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index >= this.rangeAxes.size()) {
compilation error,[CE] cannot find symbol,if (index < this.rangeAxes.size()) { ,if(!this.rangeAxes.contains(index)) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index == this.rangeAxes.size()) {
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNonDomainMarker(marker, Layer.FOREGROUND);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removePossibleMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLeafMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeTopMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeUnknownMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,super.setPosition(index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(getAxisLocation(), this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setPosition(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation(), index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new ObjectRendererList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new ObjectRenderer();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new ObjectRenderingsList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new RectangleList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.class);
compilation error,[CE] cannot find symbol renderer,this.renderers = new ObjectList(); ,this.renderer = new ObjectList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new RendererList();
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, 0);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = getCurrentLocation();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = getLowerBound();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty()); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty());
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty()); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(""));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this));
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYPlotChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new Event(e), nullPointerException);
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, e);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(e), nullPointerExceptionId);
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, event);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(e), nullPointerException);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(e, new XYPlotChangeEvent(this));
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCount(axisIndex);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCategoryCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCurrentCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getRangeAxisCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = this.categoryPlot.getCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLowerBound();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCategoryIndexCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = this.categoryPlot.size();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCategoryIndex(category);
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithCapacity(0.0);
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol backgroundRangeMarker,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarker = new HashMap();
compilation error,[CE] bad operand types for binary operator '+',this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap() + 1;
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.BackgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithCapacity(2.0);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashWhitespace();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainAxisGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] <identifier> expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.backgroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Int
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.backgroundRangeMarkers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
compilation error,[CE] cannot find symbol JIN_BEVEL,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]!= 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DEFAULT_GRIDLINE_PAINT, Color.BLACK);
compilation error,[CE] illegal start of type,,return PlotManager.newPlot(DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.BLACK);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DEFAULT_GRIDLINE_PAINT, Color.WHITE);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DEFAULT_GRIDLINE_PAINT, Color.green);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.WHITE);
patch is same with buggy,,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10); ,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10);
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.isLocal()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.size() == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getClass()!= getRangeMarker()) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || index == marker.length) {
compilation error,[CE] cannot find symbol labeler,if (marker == null) { ,if(marker == null || labeler.getClass()!= getClass()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || isEmptyMarker(marker)) {
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES, DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxis = domainAxis;
increase failing tests, [FE] AssertionFailedError,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_RIGHT); this.rangeAxisLocations.set(1, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_RIGHT); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_RIGHT); this.rangeAxisLocations.set(1, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeftDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNonDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeafDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removePossibleMarker(0, marker, layer);
compilation error,[CE] cannot find symbol nullPointerException,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNumberMarker(0, marker, layer);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.TOP_OR_LEFT);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 1);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.TOP_OR_RIGHT);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapToDomainAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol TOP_NORTH,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.TOP_NORTH);
compilation error,[CE] cannot find symbol LEFT,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, AxisLocation.LEFT);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapToDomainAxis(0, AxisLocation.TOP_OR_LEFT);
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= ChartChangeEventType.READ_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= ChartChangeEventType.CHART_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= ChartChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CharacterChangeEventType.CHART_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= ChartChangeEventType.GENERAL) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= ChartChangeEventType.GENERAL_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= ChartChangeEventType.BEFORE_CONSTANT) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CharacterChangeEventType.BLOCK) {
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers, 0);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this, Layer.SEPARATOR);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(',');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(path);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers, null);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n');
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxis = new DomainAxis(domainAxis, domainAxis);
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxis = new DomainAxis(domainAxis, rangeAxis);
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxisEdge = new DomainAxisEdge();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxisRenderer = new DomainAxisRenderer(domainAxis, domainAxis);
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxisRenderer = new DomainAxisRenderer(domainAxis, rangeAxis);
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxis = new DomainAxis(rangeAxis);
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxis = new DomainAxis(domainAxis).getLocalPart();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new CategoryDataset(DEFAULT_DOMAIN_GRIDLINES_VISIBLE));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new CategoryDataset(DEFAULT_DOMAIN_GRIDLINES_VISIBLE), DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new CategoryDataset(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new CategoryDataset(DEFAULT_DOMAIN_GRIDLINES_VISIBLE), 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapDomainAxisToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol DomainAxis,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(DomainAxis.valueOf(domainAxis));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new CategoryDataset(0, 0));
compilation error,[CE] cannot find symbol series,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(series, 0);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, 0);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundDomainMarkers, 0);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.backgroundDomainMarkers.size()) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] illegal start of expression,,int index = this.backgroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.remove(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] no suitable constructor found for RectangleInsets(double,double,double),,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol axisRenderer,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisRenderer = new HashMap();
compilation error,[CE] cannot find symbol seriesOffset,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.seriesOffset = new RectangleInsets(4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol labelOffset,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.labelOffset = new RectangleInsets(4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol axisLocation,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisLocation = new RectangleInsets(4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol axisLocation,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.axisLocation = new HashMap();
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(dataset.getRowCount() > 0); this.renderer = new CategoryDataset(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,super(dataset); this.renderer = null;
compilation error,[CE] illegal start of expression,} ,this(null, dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(dataset.getValue() == null); this.renderer = new CategoryDataset(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(dataset.getRowCount() > 0); this.renderer = new CategoryPlot(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(dataset.getValue()!= null); this.renderer = new CategoryDataset(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(dataset.getValue() == null); this.renderer = new CategoryRenderer(dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,super(dataset); this.renderer = new ValueAxis(rangeAxis).getRenderer();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(dataset.getRowCount() > 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderers = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderer = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.domainAxis.get(0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderer = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderer = new CategoryItemRenderer(this);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROOT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROOT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_REACHHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_REACHHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LIST_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_LIST_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROVERHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROVERHAIR_VALUE;
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : DEFAULT_OPTIONAL_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : BLACK;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE +"";
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 2;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.domainGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : Color.black;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 0.5f;
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); EventUtil.checkState(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); EventUtil.checkLoopState(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); event.getParent().removeChangeEvent(event);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); EventUtil.flush();
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); EventUtil.checkIsSyntheticBlock(true);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); EventUtil.checkLoop(this.rangeAxes == null);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.flush(this.rangeAxes, event);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); EventUtil.checkChangeEvent(this);
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.checkState(this.rangeAxes!= null); EventUtil.checkLoopState(this.rangeAxes == null);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = getLastChain().getLowerBound();
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = getLastChain().getLowerBound(); removeRangeMarker(marker, layer);
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain().getLowerBound(); if(layer!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = getLastChain();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain().getLowerBound(); if(layer!= null) { removeRangeMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain().getLowerBound(); if(layer!= null) { removeRangeMarker(0, marker, layer); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = getLastChain().getLastChain();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = new Layer(); if(layer.isEmpty()) { marker.setLength(0); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = System.err.println("Unable to parse:" + this);
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLowerBound(); if(layer!= null) { removeRangeMarker(marker, layer); }
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = orientation;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(new RectangleInsets(4.0, 4.0, 4.0, 4.0)); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = Orientation.HORIZONTAL;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(new RectangleInsets(4.0, 4.0, 4.0, 4.0));
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(new RectangleInsets(4.0, 4.0, 4.0, 4.0)); this.itemRenderer = new HashMap();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(new RectangleInsets(4.0, 4.0, 4.0, 4.0)); this.plot = PlotOrientation.HORIZONTAL;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(new RectangleInsets(4.0, 4.0, 4.0, 4.0)); this.dataset = dataset;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(new RectangleInsets(4.0, 4.0, 4.0, 4.0)); this.subplot = PlotOrientation.HORIZONTAL;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(new RectangleInsets(4.0, 4.0, 4.0, 4.0)); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlot();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureGlobalState();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocalFileAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureContinueAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureExpressionAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePlotAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureChangeEvent();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureEventAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureContinueAxis();
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { this.axis.
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { this.axis.
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { axis.
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { this.axis.configure
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { axis.
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { this.axis.configure
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis instanceof ValueAxis) { this.axis
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(0));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(0));
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValueAxis(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.rangeAxis = rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValueAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.rangeAxis = domainAxis.getRenderer();
increase failing tests, [FE] IllegalArgumentException,,throw new IllegalArgumentException("");
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValueAxis(); this.renderer = new XYRenderer(rangeAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValue(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)getDatasetRenderer(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SIZES);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.NAME_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SIZES_PER_HOUR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.COMMA);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.TYPE);
patch is same with buggy,,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_RANGE_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_ROOT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairPaint!= DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] unclosed string literal,,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.append("n
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); }
compilation error,[CE] <identifier> expected,,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.append(layer.
compilation error,[CE] unclosed string literal,,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); markers.append("n
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.setLength(0); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker == null) { Layer layer = getLastChain().getTopLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); }
compilation error,[CE] not a statement,,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.add
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); markers.append("n"); }
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocation);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.rangeAxisLocation);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 0);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.rangeAxisLocations.size());
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocation.TOP_OR_LEFT);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT + 1);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = DEFAULT_ANACCERATOR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkArgument(this.rangeAxis!= null); this.rangeAxis = new RangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
patch is same with buggy,,super(); ,super();
compilation error,[CE] cannot find symbol DateTimeUtils,super(); ,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol DateTimeUtils,super(); ,super(DateTimeUtils.currentTimeMillis(), DatasetUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol DateTimeUtils,super(); ,super(DateTimeUtils.currentTimeMillis(), DatasetUtilities.currentTimeMillis());
compilation error,[CE] cannot find symbol DateTimeUtils,super(); ,super(DateTimeUtils.currentTimeMillis(), TimeZone.getDefault());
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("PlotOrientation.HORIZONTAL", PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol DateTimeUtils,super(); ,super(DateTimeUtils.currentTimeMillis(), null);
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(DateTimeUtils.safeMultiply(this.dataset, getItemRenderer()));
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(DateTimeUtils.safeMultiply(this.dataset, dataset.getValue()));
compilation error,[CE] cannot find symbol DateTimeUtils,super(); ,super(DateTimeUtils.currentTimeMillis(), this.dataset);
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers!= null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol lastCategory,if (layer == Layer.FOREGROUND) { ,if(this.lastCategory == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer!= Layer.FOREGROUND || this.foregroundRangeMarkers!= null) {
compilation error,[CE] cannot find symbol edge,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.edge == Layer.FOREGROUND) {
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT +"";
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index-1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index+1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index + 1);
compilation error,[CE] cannot find symbol,result = (CategoryDataset) this.datasets.get(index); ,if(this.datasets!= null) { result =(CategoryDataset)this.datasets.get(index); } else { throw new NullPointerException("Unknown dataset:" + this.datasets.get(index).getName()); }
compilation error,[CE] cannot find symbol,result = (CategoryDataset) this.datasets.get(index); ,if(this.datasets!= null) { result =(CategoryDataset)this.datasets.get(index); } else { result =(CategoryDataset)this.datasets.get(index); this.datasets.put(index, result); }
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, axisIndex);
compilation error,[CE] illegal start of expression,} ,axisIndex = indexOf(axisIndex); map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,axisIndex = indexOf(axisIndex); map.addChangeListener(this);
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] not a statement,} ,super.mapDatasetToRangeAxis;
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot(); index = axisIndex;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.indexOf(' ');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.indexOf('.');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.indexOf("n");
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n', '0');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.getLowerBound();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.getLength();
compilation error,[CE] ';' expected,,for(int i = index; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getImmediateParentPointer(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getValueAxis
compilation error,[CE] ';' expected,,for(int i = 0; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getImmediateParentPointer(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getValueAxis
compilation error,[CE] ';' expected,,for(int i = index; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getLowerBound(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getRange
compilation error,[CE] ';' expected,,for(int i = 0; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getLowerBound(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getRange
compilation error,[CE] ';' expected,,for(int i = index; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getImmediateParentPointer(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getRange
compilation error,[CE] ';' expected,,for(int i = index; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getImmediateParentPointer(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getValueAx
compilation error,[CE] ';' expected,,for(int i = index; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getImplicitReturn(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getValueAxis
compilation error,[CE] ';' expected,,for(int i = index; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getLowerBound(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getValueAxis
compilation error,[CE] ';' expected,,for(int i = 0; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getImmediateParentPointer(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getRange
compilation error,[CE] ';' expected,,for(int i = 0; i < getRangeAxis(); i++) { ValueAxis valueAxis = ValueAxis.getImplicitReturn(); if(valueAxis instanceof CategoryPlot) { result =(CategoryPlot)getRange
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxisLocation);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getName();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxisLocation);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getItemRenderer();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getValueAxis();
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairPaint!= null? new RangeCrosshairPaint() : DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = 0;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairPaint == null? new RangeCrosshairPaint() : DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '!=',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairPaint!= 0? new RangeCrosshairPaint() : DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PAINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairPaint!= null? new RangeCrosshairPaint(0.0f): DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] ';' expected,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairPaint!= DEFAULT_CROSSHAIR_PAINT);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
increase failing tests, [FE] AssertionFailedError,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocations.set(0, rangeAxis);
compilation error,[CE] cannot find symbol DomainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, DomainAxis.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol DomainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, DomainAxis.RANGE_AXIS);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
increase failing tests, [FE] AssertionFailedError,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol RangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, RangeAxis.RANGE_AXIS);
compilation error,[CE] cannot find symbol,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, new RangeAxis(domainAxis));
compilation error,[CE] cannot find symbol RangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, RangeAxis.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super();
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] not a statement,,if(initProblems) { throw new IllegalArgumentException(""); } else { Throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol initProblems,,if(initProblems) { throw new IllegalArgumentException(""); } else { System.err.println("Unable to parse:" + this); }
compilation error,[CE] cannot find symbol,,if(initProblem()) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,if(initPlot()) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol initProblems,,if(initProblems) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,throw new IllegalStateException("");
compilation error,[CE] cannot find symbol initProblems,,if(initProblems) { throw new IllegalArgumentException(""); } else { System.err.println("Unable to parse:" + getName()); }
compilation error,[CE] cannot find symbol initProblems,,if(initProblems) { throw new IllegalArgumentException(""); } else { System.err.println("Unable to parse:" + getClass()); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,Integer axisIndex = getRangeAxis(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent axisIndex = getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent().getParent();
compilation error,[CE] cannot find symbol,,ClassIndex axisIndex = getRangeAxis();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent().getLastChange();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent(); axisIndex = this.axisIndex;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(' ');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(',');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.length();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.getLength();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(':');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinesVisible == DEFAULT_RANGE_GRIDLINES_VISIBLE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinesVisible == DEFAULT_RANGE_GRIDLINES_VISIBLE); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinesVisible == DEFAULT_RANGE_GRIDLINES_VISIBLE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinesVisible == DEFAULT_RANGE_GRIDLINES_VISIBLE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinesVisible == DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(getXYPlot());
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlotName(getXYPlot());
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlot(getXYPlot()));
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlotIndex(getXYPlotIndex());
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlotIndex(new XYPlotIndex);
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlot(getXYPlot())); this.seriesRenderingOrder = new SeriesRenderingOrder(SeriesRenderingOrder.FULL);
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlot(getXYPlot())); this.seriesRenderingOrder = new SeriesRenderingOrder(SeriesRenderingOrder.UNDEFINED);
compilation error,[CE] <identifier> expected,,private final XYPlotTrace = new XYPlotTrace();
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlot(getXYPlot())); this.seriesRenderingOrder = new SeriesRenderingOrder(SeriesRenderingOrder.FIRST);
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlot(getXYPlot())); this.seriesRenderingOrder = new SeriesRenderingOrder(SeriesRenderingOrder.NEVER);
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(i);
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis = (CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.clone();
compilation error,[CE] cannot find symbol dominAxes,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.dominAxes.get(i);
increase failing tests, [FE] NullPointerException,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.getAll();
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.contains(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { Layer marker = getLabel(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { Layer marker = getLabel(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { notifyListeners(new ThreatChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index >= 0) { removeRangeMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index == 0) { removeRangeMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index < 0) { removeRangeMarker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { marker.removeChangeListener(this); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { marker.removeChangeListener(this); if(notify) { notifyListeners(new RangeMarkerChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { this.layer.removeChangeListener(index); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { marker.removeChangeListener(this); if(notify) { notifyListeners(new ErrorEvent(this)); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { marker.removeChangeListener(this); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index >= 0) { this.layer.removeChangeListener(index); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { marker.removeChangeListener(this); if(notify) { notifyListeners(new RangePointerChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { marker.removeChangeListener(this); if(notify) { notifyListeners(new RangeEvent(this)); }
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes.get(i), this.rangeAxes.size());
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes.size() > 0);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes.get(i)!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(i).getRange());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(i).getRange());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(i), this.rangeAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(i).getAnnotation());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes.get(i), this.rangeAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(i).getLowerBound());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes.get(i)!= null); this.rangeAxes = new RangeAxis(this.rangeAxes.get(i).getAnnotation());
patch is same with buggy,,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size();
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.lastIndexOf(this.rangeAxes);
compilation error,[CE] cannot find symbol axisCount,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.lastIndexOf(this.axisCount);
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.getCount();
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol chartChangeEventType,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, chartChangeEventType);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol CHART_DELETE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_DELETE);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_CROSSHAIR_STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_GRIDLINE_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_STROKE, DEFAULT_GLIDLINE_STROKE);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_PAINT; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROOT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROOT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROVERHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROVERHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_REACHHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_REACHHAIR_VALUE;
compilation error,[CE] ';' expected,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINES_STROKE;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PAIN,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] cannot find symbol,,RangeAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(dataset);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(dataset, renderer);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(dataset);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = super.getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getBaseValue();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getOwner();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getPrototype();
patch is same with buggy,,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private datasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol renderingOrder,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot assign a value to final variable renderingOrder,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] bad operand types for binary operator '+',private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE + 1;
compilation error,[CE] cannot find symbol DEVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.DEVERSE;
patch is same with buggy,,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder =DatasetRenderingOrder.REVERSE;
compilation error,[CE] ';' expected,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE, CategoryPlot.NONE;
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new TreeMap();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new TreeList();
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRendererList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new HashSet();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new DefaultRenderer();
compilation error,[CE] List is abstract; cannot be instantiated,this.renderers = new ObjectList(); ,this.renderers = new List();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new SymbolList();
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(getAxisLocation(), this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(getPlotInfo(), this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(getDefaultAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = new RangeAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainZeroBaselineVisible); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] unexpected type,,Preconditions.checkArgument(!this.domainZeroBaselineVisible = true); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainZeroBaselineVisible); this.domainZeroBaselinePaint = DEFAULT_BLACK;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainZeroBaselineVisible); this.domainZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainZeroBaselineVisible); this.domainZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isDefined()); this.domainZeroBaselinePaint = DEFAULT_BLACK;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainZeroBaselineVisible); this.domainZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isDefined()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isDefined()); this.domainAxis = domainAxis;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset();
increase failing tests, [FE] NullPointerException,CategoryDataset result = null; ,CategoryDataset result = getDataset();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getPlot());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.getSeriesCount());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getBase());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getPlot().getName());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.getSeriesKey());
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this);
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.getName());
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true;
compilation error,[CE] method toHexString in class Integer cannot be applied to given types;,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_CROSSHAIR_STROKE);
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_RANGE_CROSSHAIR_STROKE);
compilation error,[CE] method toHexString in class Integer cannot be applied to given types;,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_STRING,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_CROSSHAIR_STRING);
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_STRING,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_RANGE_CROSSHAIR_STRING);
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_GROSSHAIR_STROKE);
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_RANGE_CROSSHAIR_STROKE);
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_ROOT_CROSSHAIR_STROKE);
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true; Integer.toHexString(this.rangeCrosshairStroke, DEFAULT_GROSSHAIR_STROKE);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!axis.isLocal() || axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isRange()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isArray()) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result == null? valueAxis.getRange() : result;
compilation error,[CE] cannot find symbol RANGE,return result; ,return result == null? ValueAxis.RANGE : result;
increase failing tests, [FE] NullPointerException,return result; ,return result == null? getRangeAxis() : result;
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result!= null? valueAxis.getRange() : result;
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result == null? valueAxis.getReturnType() : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? getRangeAxis().getIndex() : result;
compilation error,[CE] cannot find symbol RANGE_ERROR,return result; ,return result == null? ValueAxis.RANGE_ERROR : result;
compilation error,[CE] cannot find symbol RANGE_EXTENDS,return result; ,return result == null? ValueAxis.RANGE_EXTENDS : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 1 : result;
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(!(index == 0 || index >= this.domainAxisLocation.size())) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(!(index == 0 || index >= this.domainAxisLocation.getLocation())) {
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_RANGE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_ROOT_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = new java.util.ArrayPaint();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_ROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_RAIN_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis), this.mapDatasetToDomainAxis);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0), domainAxis);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis;
compilation error,[CE] cannot find symbol,this.domainAxes.set(0, domainAxis); ,this.domainAxes.remove(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis), this.mapDatasetToDomainAxis;
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis), this.rangeAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis); ++this.mapDatasetToDomainAxis;
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(getItemRenderer());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(getPlot());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.clone();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.getInstance();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.getDataset();
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, this);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event);
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.UPDATED, this);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol USE_DEFAULT,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.USE_DEFAULT);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, null);
compilation error,[CE] cannot find symbol NEW_DATASET_UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.NEW_DATASET_UPDATED);
compilation error,[CE] cannot find symbol nullPointerException,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, nullPointerException);
compilation error,[CE] cannot find symbol NEW_TYPE,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.NEW_TYPE);
increase failing tests, [FE] NullPointerException,,if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new CategoryPlot(getRangeAxisLocation(), location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new RendererChangeEvent(this));
compilation error,[CE] '(' or '[' expected,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new CategoryPlot(getRangeAxisLocation(), location); if(notify) { notifyListeners(new AxisLocationChangeEvent
compilation error,[CE] '(' or '[' expected,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new CategoryPlot(getRangeAxisLocationInfo(), location); if(notify) { notifyListeners(new AxisLocationChangeEvent
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new CategoryPlot(getRangeAxisLocationInfo(), location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] '(' or '[' expected,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new CategoryPlot(getRangeAxisLocation(), location, notify); if(notify == null) { notifyListeners(new AxisLocation
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, false);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, true);
compilation error,[CE] cannot find symbol SEPARATOR,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.SEPARATOR, true);
compilation error,[CE] cannot find symbol Path,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Path, false);
compilation error,[CE] cannot find symbol Path,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Path, true);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!axis.isLocal() || axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isArray()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isArray()) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_STROKE); this.domainAxis = DEFAULT_DOMAINAXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKES;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKES;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
patch is same with buggy,,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.axisIndex), new Integer(index));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(0, new Integer(axisIndex));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(seriesIndex), new Integer(index));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex - 1));
compilation error,[CE] no suitable constructor found for Integer(int,int),this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex, 0));
compilation error,[CE] no suitable constructor found for Integer(int,int),this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex, -1));
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers!= null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND || this.foregroundRangeMarkers!= null) {
compilation error,[CE] cannot find symbol edge,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.edge == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselinePaint = Color.red;
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(getAxisLocation(), this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxis = domainAxis;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
patch is same with buggy,,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 2;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 10;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.5;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 5.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
patch is same with buggy,,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 1.0f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.5f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
patch is same with buggy,,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 0.5f), new BasicStroke(1.0f), new Color(1.0f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] AssertionFailedError,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.7f);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.NONE);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.NEGATIVE) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(new DatasetChangeEvent(this)); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(new PlotChangeEvent(this)); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(new PlotChangeEvent(this, this)); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(new PlotChangeEvent(this), this); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(new DatasetChangeEvent(this, this)); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.CHART_UPDATED); notifyListeners(new PlotChangeEvent(this)); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.CHART_UPDATED); notifyListeners(new DatasetChangeEvent(this)); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(new DatasetChangeEvent(this), this); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged!= null) { this.datasetChanged = new CategoryPlot(ChartChangeEventType.DATASET_UPDATED); notifyListeners(new DatasetChangeEvent(this), event); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getBaseValue());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(',');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComponentType());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(parent);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers, 0);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.toIndex(index).intValue();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers.size());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_PADDING); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = new HashMap();
increase failing tests, [FE] IllegalArgumentException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,axisIndex = getAxis();
compilation error,[CE] cannot find symbol mapToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis.addChangeEvent(this, getDataset(index)); }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new XYPlotChangeEvent(this, getDataset(index)); datasetChanged(new DatasetChangeEvent(this, get
compilation error,[CE] not a statement,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new XYPlotChangeEvent(this, getDataset(index)); data
compilation error,[CE] '(' or '[' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new XYPlotChangeEvent(this, getDataset(index)); datasetChanged(new Data
compilation error,[CE] cannot find symbol mapToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new XYPlotChangeEvent(this, getDataset(index)); }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new XYPlotChangeEvent(this, getDataset(index)); registerArgumentException(axisIndex
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol XYItemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer(renderer));
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer(this));
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, Renderer.TYPE_INIT_ERROR);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer(0.0, renderer));
compilation error,[CE] cannot find symbol rendering,this.renderers.set(0, renderer); ,this.renderers.set(0, rendering);
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis + 1);
compilation error,[CE] no suitable method found for set(int,ValueAxis,AxisLocation),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,ValueAxis,AxisLocation),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol TOP_LEFT,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.TOP_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] bad operand types for binary operator '-',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis - 1);
compilation error,[CE] cannot find symbol TOP_NORTH,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.TOP_NORTH);
compilation error,[CE] no suitable method found for set(int,ValueAxis,AxisLocation),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] illegal start of expression,} ,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValueAxis(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] illegal start of expression,} ,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.rangeAxis = rangeAxis.getRenderer();
compilation error,[CE] illegal start of expression,} ,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValueAxis();
compilation error,[CE] illegal start of expression,} ,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis()); this.dataset = dataset;
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] illegal start of expression,} ,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] illegal start of expression,} ,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValueAxis(); this.renderer = new XYRenderer(rangeAxis);
compilation error,[CE] illegal start of expression,} ,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValue(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] illegal start of expression,} ,this(new XYDataset(dataset, domainAxis));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.backgroundRangeMarkers = new HashMap(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxis();
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = 0;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol PAINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PAINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol PRINT_DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PRINT_DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '-',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT - 1;
compilation error,[CE] cannot find symbol,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new RangeCrosshairPaint();
compilation error,[CE] cannot find symbol PRINT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = PRINT_CROSSHAIR_PAINT;
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxis = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocation = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.rangeAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol rangeAxisState,this.rangeAxes = new ObjectList(); ,this.rangeAxisState = new ObjectList();
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol This,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();This.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol This,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(); This.backgroundRangeMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(this.backgroundRangeMarkers);
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol This,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();This.backgroundRangeMarkers = new ObjectList();
compilation error,[CE] ,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap() +" XYItemRenderer:" + this.backgroundRangeMarkers);
compilation error,[CE] cannot find symbol This,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(); This.backgroundRangeMarkers = new ObjectList();
compilation error,[CE] incompatible types,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap() +" XYItemRenderer:" + this.backgroundRangeMarkers;
compilation error,[CE] cannot find symbol XYBackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(); XYBackgroundRangeMarkers = new XYBackgroundMarkers();
patch is same with buggy,,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POP,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POP;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPED,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPED;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPES_VISIBLE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPES,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPES;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPECTION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPECTION;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POPIE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POPIE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POINT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = CategoryAnchor.MIDDLE + 1;
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol warning,if (notify) { ,if(this.warning) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(!this.notify) {
compilation error,[CE] cannot find symbol Notify,if (notify) { ,if(!Notify) {
patch is same with buggy,,if (notify) { ,if(notify) {
compilation error,[CE] cannot find symbol warning,if (notify) { ,if(warning) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isErrorEvent()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isError()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(isErrorEvent(this)) {
patch is same with buggy,,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot assign a value to final variable rowRenderingOrder,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] cannot find symbol ASCIENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCIENDING;
compilation error,[CE] ';' expected,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING, CategoryPlot.NEW;
compilation error,[CE] ';' expected,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING, CategoryPlot.START;
compilation error,[CE] incompatible types,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING? new SortOrder() : SortOrder.BOTTOM;
compilation error,[CE] ';' expected,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING, CategoryPlot.ZERO;
compilation error,[CE] ';' expected,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING, CategoryPlot.DEFAULT;
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectArrayList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new NodePointer();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new Class();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashList();
compilation error,[CE] List is abstract; cannot be instantiated,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new List();
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0);
compilation error,[CE] no suitable constructor found for ObjectList(double),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0.0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.rangeAxisLocations.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol rangeAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation.setPlot(this);
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 1; i < this.rangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i).size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = null; i < this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i).length(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.length(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexFromLocal(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexInList(axisIndex, axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(XYPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(XYPlot.SOURCENAME_ARRAY);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf(',');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf(':');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('"');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('?');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.indexOf(',');
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(index); if(result!= 0) { result = new XYDataset(getItemCount(), index + 1); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(getItemCount(), index); if(result!= 0) { result = new XYDataset(index); }
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result =(XYDataset)getDataset(index); result = new XYDataset(result, index + 1);
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(index); if(result!= 0) { result = new XYDataset(getItemCount(), index); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(index); if(result!= null) { result = new XYDataset(getItemCount(), index + 1); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(getItemCount(), index); if(result!= 0) { result = new XYDataset(i); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(getItemCount(), index + 1); if(result!= 0) { result = new XYDataset(index); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(index); if(result!= null) { result = new XYDataset(getItemCount(), index); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getDatasetCount(); i++) { XYDataset result = new XYDataset(getItemCount(), index + 1); if(result!= 0) { result = new XYDataset(i); }
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result =(XYDataset)getDataset(index);
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Color[] { null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ; Arrays.sort(quadrantPaint, 0, quadrantPaint.length);
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] variable orientation is already defined in class XYPlot,,PlotOrientation orientation = XYPlotOrientation.getOrientation();
compilation error,[CE] '}' expected,,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, ArrayUtils.toString(quadrantPaint);
compilation error,[CE] <identifier> expected,,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ; Arrays.fill(quadrantPaint, 0, QuadrantPaint.length);
compilation error,[CE] <identifier> expected,,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ; Arrays.fill(quadrantPaint, 0, quadrantPaint.length);
compilation error,[CE] <identifier> expected,,private TransientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(1, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.put(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.contains(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.copy(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0, dataset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxisBaselineStroke,,this.domainAxisBaselineStroke = new BasicStroke(0.5f); this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] cannot find symbol domainAxisBaselinePaint,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); this.domainAxisBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] variable e is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent e = new PlotChangeEvent(this);
compilation error,[CE] cannot find symbol XYPlot,,XYPlot instanceof XYPlot =(XYPlot)getPlot();
compilation error,[CE] cannot find symbol,,PlotChangeEvent e = new PlotChangeEvent(this); event.addChangeEvent(this);
compilation error,[CE] cannot find symbol datasetChanged,,Preconditions.checkState(this.datasetChanged!= null);
compilation error,[CE] not a statement,,XYPlot instanceof PlotChangeEvent :(PlotChangeEvent)getPlot();
compilation error,[CE] cannot find symbol name,,System.err.println("Unable to parse:" + XYPlot.name);
compilation error,[CE] cannot find symbol NAME_TYPE,,System.err.println("Unable to parse:" + XYPlot.NAME_TYPE);
compilation error,[CE] cannot find symbol,,PlotChangeEvent e = new PlotChangeEvent(this); event.getPlot().reset();
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.verifyValueChangeEvent(this); event.getDatasetChangeEvent().clear();
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.verifyValueChangeEvent(this); event.getAnnotation(JavaTimeConstants.MILLIS_PER_DAY);
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] cannot find symbol DatasetChangeEventType,,e.setChangeEventType(DatasetChangeEventType.GENERAL_EVENT);
compilation error,[CE] cannot find symbol DatasetChangeEventType,,e.setChangeEventType(DatasetChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol datasetChangeEvent,,EventUtil.unwrapAndThrowAsIAE(e, this.datasetChangeEvent);
compilation error,[CE] cannot find symbol DATASET_DEFAULT,,e.setChangeEventType(ChartChangeEventType.DATASET_DEFAULT);
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.isName(getXYPlot()));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.isGetPropertyName(""));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.isStatement());
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.isStatementBlock(this));
compilation error,[CE] illegal start of expression,} ,XYPlotUtil.setXYPlot(getXYPlot());
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.isNumericValue(getClass()));
compilation error,[CE] illegal start of expression,} ,XYPlotUtils.setXYPlot(getXYPlot());
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPlotUtil.isStatementBlock());
patch is same with buggy,,super(); ,super();
compilation error,[CE] generics are not supported in -source 1.4,super(); ,super(new XYPlot < PlotOrientation.HORIZONTAL, RectangleInsets.NORTH, RectangleInsets.NORTH);
compilation error,[CE] generics are not supported in -source 1.4,super(); ,super(new XYPlot < PlotOrientation.HORIZONTAL, RectangleInsets.NORTH, RectangleInsets.NORTH));
compilation error,[CE] method toHexString in class Integer cannot be applied to given types;,super(); ,super("XYPlot '" + Integer.toHexString(4.0, 4.0, 4.0));
compilation error,[CE] method toHexString in class Integer cannot be applied to given types;,super(); ,super("XYPlot '" + Integer.toHexString(2.0, 4.0, 4.0));
compilation error,[CE] method toHexString in class Integer cannot be applied to given types;,super(); ,super("XYPlot '" + Integer.toHexString(0.0, 5.0, 5.0));
compilation error,[CE] generics are not supported in -source 1.4,super(); ,super(new XYPlot < PlotOrientation.HORIZONTAL, RectangleInsets.NORTH));
compilation error,[CE] method toHexString in class Integer cannot be applied to given types;,super(); ,super("XYPlot '" + Integer.toHexString(0.0, 0.0, 0.0));
compilation error,[CE] generics are not supported in -source 1.4,super(); ,super(new XYPlot < PlotOrientation.HORIZONTAL, RectangleInsets.NORTH);
compilation error,[CE] generics are not supported in -source 1.4,super(); ,super(new XYPlot < PlotOrientation.HORIZONTAL, RectangleInsets.NORTH, RectangleInsets.CENTER);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.annotationList = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getValueAxis(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)dataset.getRenderer(); this.renderer = new XYRenderer(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.renderer = new XYRenderer(new RangeAxisRenderer());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.annotation = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.dataset = new XYDataset(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.dataset = new XYDataset(dataset, domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.randomAxis = new XYRenderer(renderer);
patch is same with buggy,,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setupRangeAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRuleAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setChangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setPosition(AxisLocation.TOP_OR_LEFT, false);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,<null>),setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, null);
compilation error,[CE] cannot find symbol TOP_OR_LeFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LeFT, true);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = super.getDomainAxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = getDomainAxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] ')' expected,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = super.getDomainAxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this); }
compilation error,[CE] ')' expected,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = getDomainAxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = super.getDomainAxisLocation(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = new CategoryPlot(getDomainAxisLocation()); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] ')' expected,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = LocationUtil.getDomainAxisLocation(getPlot()); if(notify) { notifyListeners(new AxisLocationChangeEvent(
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocations!= null) { this.domainAxisLocation = getDomainAxisLocation(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers, 0);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = getCurrentLocation();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, 0);
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); }
compilation error,[CE] unclosed string literal,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.append("n
compilation error,[CE] <identifier> expected,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.append(layer.
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.setLength(0); }
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] unclosed string literal,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); markers.append("n
compilation error,[CE] illegal line end in character literal,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.append('
compilation error,[CE] not a statement,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.add
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastChain().getLowerBound(); marker.append("n"); marker.append(layer).append("n"); marker.append("n"); marker.append(layer); }
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)getColumnRenderingOrder();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder = getColumnRenderingOrder();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.clone();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)columnRenderingOrder.clone();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder = new CategoryPlot().getColumnRenderingOrder();
compilation error,[CE] <identifier> expected,,private CategoryPlot =(CategoryPlot)getPlot();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)getColumnRenderingOrder().clone();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)getSortOrder();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf('.');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(' ');
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(index, marker, layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(':');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(',');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.getLength();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, true);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol Path,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Path, true);
compilation error,[CE] cannot find symbol Path,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Path, false);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] cannot find symbol SEPARATOR,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.SEPARATOR, true);
compilation error,[CE] cannot find symbol Paint,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Paint, true);
compilation error,[CE] cannot find symbol PEEL,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.PEEL, true);
compilation error,[CE] cannot find symbol Layer,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer, false);
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,XYPlot axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getChangeAxis();
compilation error,[CE] cannot find symbol,,XYAutoRangeAxis axis = getAutoRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,Anxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYPlotaxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getXYPlot();
compilation error,[CE] illegal start of type,,return Stroke.newInstance();
compilation error,[CE] illegal start of type,,return Stroke.newStroke(0, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(1.0f);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(0, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(0.0f);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(0, BasicStroke.CAP_BUTT, Base64Variants.DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.newInstance(Stroke.NONE_CONSTANT, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] variable orientation is already defined in class XYPlot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, axisIndex);
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol,,axisIndex = indexOf(axisIndex); map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, Color.green);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, Color.blue);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, DEFAULT_COSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, Color.black);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_CROSSHAIR_PAINT, Color.green);
compilation error,[CE] illegal start of expression,,for(int i = index; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(getItemCount(), index + 1); if(result!= 0) { result = new CategoryDataset(index); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(getItemCount(), index); if(result!= 0) { result = new CategoryDataset(index); }
compilation error,[CE] not a statement,,for(int i = index; i < getDatasetCount(); i++) { CategoryDataset int result = new CategoryDataset(getItemCount(), index + 1); if(result!= 0) { result = new CategoryDataset(index); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(index); if(result!= 0) { result = new CategoryDataset(getItemCount(), index + 1); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(getItemCount(), index + 1); if(result!= null) { result = new CategoryDataset(index); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(index); if(result!= null) { result = new CategoryDataset(getItemCount(), index + 1); }
compilation error,[CE] not a statement,,for(int i = index; i < this.dataset.size(); i++) { CategoryDataset int result = new CategoryDataset(getItemCount(), index + 1); if(result!= 0) { result = new CategoryDataset(index); }
compilation error,[CE] illegal start of expression,,for(int i = index; i < this.dataset.size(); i++) { CategoryDataset result = new CategoryDataset(getItemCount(), index + 1); if(result!= 0) { result = new CategoryDataset(index); }
compilation error,[CE] ';' expected,,for(int i = index; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(getItemCount(), index + 1); if(result!= null) { result = new CategoryDataset(i).getValue(), index + 1); }
compilation error,[CE] ';' expected,,for(int i = index; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(getItemCount(), index + 1); if(result!= 0) { result = new CategoryDataset(i).getValue(), index + 1); }
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation);
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocations!= null) { this.rangeAxisLocation = super.getRangeAxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocations!= null) { this.rangeAxisLocation = new CategoryPlot(getRangeAxisLocation()); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocations!= null) { this.rangeAxisLocation = getRangeAxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocations!= null) { this.rangeAxisLocation = new CategoryPlot(this.rangeAxisLocation); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocations!= null) { this.rangeAxisLocation = super.getRangeAxisLocation(); if(notify) { fireChangeEvent(); }
compilation error,[CE] ')' expected,,if(this.rangeAxisLocations!= null) { this.rangeAxisLocation = super.getRangeAxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocations!= null) { this.rangeAxisLocation = new CategoryPlot(getRangeAxisLocation()); if(notify) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getRangeAxisLocation();
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkState(isEnabled(Feature.AUTO_CLOSE_TARGET));
compilation error,[CE] cannot find symbol,,Preconditions.checkState(this.isNullPointer());
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(this.isNullPointer());
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] cannot find symbol DEFAULT_NAME_PROP,,Preconditions.checkArgument(NodeUtil.isGetProp(XYPlot.DEFAULT_NAME_PROP));
compilation error,[CE] cannot find symbol DEFAULT_NAME_PROP,,Preconditions.checkNotNull(XYPlotUtil.isGetProp(XYPlot.DEFAULT_NAME_PROP));
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,,Preconditions.checkNotNull(XYPlotUtil.isGetProp(XYPlot.DEFAULT_INIT_ERROR));
compilation error,[CE] parent has private access in Plot,,Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));
compilation error,[CE] cannot find symbol DEFAULT_NO_TYPE,,Preconditions.checkNotNull(XYPlotUtil.isGetProp(XYPlot.DEFAULT_NO_TYPE));
compilation error,[CE] cannot find symbol DEFAULT_INIT_PROP,,Preconditions.checkNotNull(XYPlotUtil.isGetProp(XYPlot.DEFAULT_INIT_PROP));
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setBaseToolTipText(createBaseToolTipText());
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,renderer.setRangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setBaseToolTipText(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setBaseToolTipText(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setBaseToolTipGenerator(new RangeTipGenerator());
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PADDING,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADDING);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PADD,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADD);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, event);
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, this);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DateTimeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(DateTimeEventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, null);
compilation error,[CE] cannot find symbol USE_DEFAULT,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.USE_DEFAULT);
compilation error,[CE] cannot find symbol nullPointerException,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, nullPointerException);
compilation error,[CE] cannot find symbol UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.UPDATED, this);
compilation error,[CE] cannot find symbol NEW_DATASET_UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.NEW_DATASET_UPDATED);
patch is same with buggy,,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
increase failing tests, [FE] NullPointerException,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] unexpected type,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE || this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_DOMAINE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAINE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAINE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAINE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOUBLE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOUBLE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setDataset(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setType(ChartChangeEventType.RANGE_TYPE); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setType(ChartChangeEventType.RANGE); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setType(ChartChangeEventType.GENERAL_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setType(ChartChangeEventType.RANGE_ON_EVENT); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event =(XYPlot)getPlot(); event.setChangeEventType(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setType(ChartChangeEventType.RANGE_TEST); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent(); event.setDataset(ChartChangeEventType.RANGE_DATASET); notifyListeners(e);
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder =(CategoryPlot)getRowRenderingOrder();
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder =(CategoryPlot)rowRenderingOrder.clone();
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder =(CategoryPlot)rowRenderingOrder.getLowerBound();
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder = Lists.newArrayList(); this.rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] <identifier> expected,,private CategoryPlot instanceof CategoryPlot :(CategoryPlot)getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder =(CategoryPlot)getRowRenderingOrder().clone();
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder =(CategoryPlot)rowRenderingOrder.newInstance();
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlot().getValue());
compilation error,[CE] generics are not supported in -source 1.4,,private List < CategoryPlot> rowRenderingOrder =(CategoryPlot)rowRenderingOrder.getSize();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(); this.mapToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(); this.datasetToDomainAxisMap.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = Integer.toString(axisIndex); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = Integer.toString(axisIndex); this.mapToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.mapToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = Integer.toString(axisIndex);
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!Marker.isLabelName(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { marker = new XYMarker(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getDomainMarker(); if(marker!= null) { return marker; }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { marker.setLength(0); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!Marker.isLabelName(marker)) { return false; }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { return marker.detachFromLocalFile(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { return marker; }
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,this.backgroundRangeMarkers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,if(this.backgroundRangeMarkers!= null) { markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] ';' expected,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,if(this.backgroundRangeMarkers!= null) { markers = Collections this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,marker =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,this.backgroundRangeMarkers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] illegal start of expression,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,if(this.backgroundRangeMarkers!= null) { markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)); } else { this.backgroundRangeMarkers = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol baseline,,Validate.notNull(baseline); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DomainAxis.getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol baseline,,Preconditions.checkNotNull(baseline); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.rangeAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxisLocations); this.domainAxisLocations = new HashMap();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getLocale();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocale();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocalPart();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getLocalPart();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxisMap);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getOwner();
increase failing tests, [FE] AssertionFailedError,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol Preconditions,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; Preconditions.checkState(this.domainZeroBaselineVisible);
compilation error,[CE] cannot find symbol Preconditions,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; Preconditions.checkNotNull(this.domainZeroBaselineVisible);
compilation error,[CE] cannot find symbol Preconditions,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; Preconditions.checkArgument(this.domainZeroBaselineVisible == false);
compilation error,[CE] cannot find symbol Preconditions,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; Preconditions.checkArgument(this.domainZeroBaselineVisible!= false);
compilation error,[CE] not a statement,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; 0 } this.domainZeroBaselineVisible = false;
compilation error,[CE] cannot find symbol Preconditions,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; Preconditions.checkState(this.domainZeroBaselineVisible == false);
compilation error,[CE] bad operand types for binary operator '<',this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; Preconditions.checkArgument(this.domainZeroBaselineVisible < false);
compilation error,[CE] cannot find symbol Preconditions,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true; Preconditions.checkArgument(this.domainZeroBaselineVisible);
compilation error,[CE] cannot find symbol This,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;This.domainZeroBaselineVisible = false;
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = true;
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = null;
patch is same with buggy,,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,private boolean domainCrosshairLockedOnData = true; ,private new boolean domainCrosshairLockedOnData = false;
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlot();
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR, DEFAULT_LOAD_FACTOR);
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR);
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR, PlotChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR, DEFAULT_DOCUMENT_INIT_ERROR);
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR, DEFAULT_INIT_ERROR);
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR, ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol DEFAULT_INIT_ERROR,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] ';' expected,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR));
compilation error,[CE] ';' expected,configureRangeAxes(); ,updateXYPlot(XYPlot.DEFAULT_INIT_ERROR, XYPlot.DEFAULT_INIT_ERROR, DEFAULT_DOCUMENT_INIT_ERROR));
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= getClass()) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol datasetChangeEvent,,System.err.println("Unable to parse:" + this.datasetChangeEvent.getName());
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getName());
compilation error,[CE] cannot find symbol EventUtil,,EventUtil.unwrapAndThrowAsIAE(e);
compilation error,[CE] cannot find symbol EventUtils,,System.err.println("Unable to parse:" + EventUtils.toString(this)+")");
compilation error,[CE] cannot find symbol dataset,,System.err.println("Unable to parse:" + this.dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBase());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBase64Variants());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getItemDataset());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlot());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getAxis());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getSeriesCount());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(version);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBaseValue());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset();
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] <identifier> expected,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protection static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { CategoryPlot plot = ResourceBundle.getPlot
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { CategoryPlot plot = ResourceBundle.getPlot();
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol localizationResources,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localeizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { System.err.println("Usage:
compilation error,[CE] variable orientation is already defined in class CategoryPlot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkState(orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(PlotOrientation.HORIZONTAL);
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(orientation!= PlotOrientation.HORIZONTAL);
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(PlotOrientation.HORIZONTAL));
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(orientation == PlotOrientation.HORIZONTAL));
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkNotNull(orientation);
compilation error,[CE] illegal start of type,,return PlotOrientation.getPlotOrientation();
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(Orientation.HORIZONTAL);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(parent);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,Integer parent = valueAxis.getParent();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(parent);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = parent.getIndex();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,Integer parent = valueAxis.get(index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = valueAxis.getParent();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, getPlotIndex());
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = indexOf(parent);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] call to this must be first statement in constructor,,System.err.println("Unable to parse:" + getClass());
compilation error,[CE] cannot find symbol NullPointer,,Preconditions.checkArgument(NullPointer.isEmpty());
compilation error,[CE] parent has private access in Plot,,Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getName());
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(NodeUtil.isStatementBlock(getCategory()));
compilation error,[CE] cannot find symbol NodeUtil,,Preconditions.checkArgument(NodeUtil.isStatementBlock(this));
compilation error,[CE] cannot find symbol NullPointer,,Preconditions.checkArgument(NullPointer.isSet());
compilation error,[CE] cannot find symbol,,Preconditions.checkState(this.isNullPointer());
compilation error,[CE] cannot find symbol NodeUtil,,Preconditions.checkArgument(NodeUtil.isStatementBlock(getClass()));
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); datasetChanged(new DatasetChangeEvent(this, get
compilation error,[CE] '(' or '[' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); datasetChanged(new Data
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); recordChangeEvent(this, get
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); areaIndex++; }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); this.axisIndex++; }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); setIndex(axisIndex
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.contains(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { notifyListeners(new XYPlotChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!Notify) { notifyListeners(new XYPlotChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { notifyListeners(new XYPlotChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index >= 0) { removeDomainMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index == 0) { removeDomainMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index < 0) { removeDomainMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.contains(marker)) { return false; }
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasets = new ObjectList(); ,this.datasets = new XYDataset();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ObjectArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisMap);
compilation error,[CE] cannot find symbol domainAxis,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ObjectSet();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.renderers);
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new SymbolList();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] illegal start of expression,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] illegal start of expression,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] illegal start of expression,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] not a statement,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes.get(i); if(this.axis!= null) { this.domainAxes
compilation error,[CE] not a statement,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes.get(i); if(this.domainAxes!= null) { this
compilation error,[CE] not a statement,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAx
compilation error,[CE] not a statement,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes.clear(); if(this.domainAxes!= null) { this
compilation error,[CE] not a statement,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { (CategoryAxis)this.domainAxes.get(i); if(axis!= null) {
compilation error,[CE] not a statement,,if(this.domainAxes!= null) { for(int i = 0; i < this.domainAxes.size(); i++) { this.domainAxes.get(i); if(this.domainAxes!= null) { this.domain
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.rangeAxisLocations = new HashMap();
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(tag);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] cannot find symbol link,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(link);
compilation error,[CE] cannot find symbol level,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(level);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(0);
compilation error,[CE] cannot find symbol zone,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(zone);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getBaseValue());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparableIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getScope());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparableType());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol DEFAULT_BIGDECIMAL_STANDARD,,renderer.setBaseToolTipGenerator(DEFAULT_BIGDECIMAL_STANDARD); this.domainAxis = domainAxis;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxis = domainAxis;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol DEFAULT_BIGDECIMAL_STANDARD,,renderer.setBaseToolTipGenerator(DEFAULT_BIGDECIMAL_STANDARD);
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] <identifier> expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red; Public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] variable DEFAULT_CROSSHAIR_PAINT is already defined in class XYPlot,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red;public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] <identifier> expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red;Public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] <identifier> expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red; Public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.green;
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getValue() == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getClass()!= getRangeMarker()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.isLocal()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.size() == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || getRangeMarker() == null) {
compilation error,[CE] cannot find symbol labeler,if (marker == null) { ,if(marker == null || labeler.getClass()!= getClass()) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || index == marker.length) {
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(layer!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLabel(); if(layer!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(layer!= null) { this.layer.removeChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLabel(); if(layer!= null) { this.layer.removeChangeListener(this); }
compilation error,[CE] cannot find symbol LayerUtils,,LayerUtils.verifyValueBounds(this, layer); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(layer!= null) { this.layer.removeChangeListener(index); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = getLastChange(); if(layer!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(layer!= null) { this.layer.appendChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(layer!= null) { this.layer.removeChangeEvent(index); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(layer!= null) { addRangeMarker(layer); }
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, true);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] cannot find symbol SEPARATOR,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.SEPARATOR, true);
compilation error,[CE] cannot find symbol Paint,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.Paint, true);
compilation error,[CE] cannot find symbol Path,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.Path, true);
compilation error,[CE] cannot find symbol Path,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.Path, false);
compilation error,[CE] cannot find symbol PEEL,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PEEL, true);
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(null); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(getName()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.anchorValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); this.rangeAxisLocations = domainAxis;
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis); this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation.setPlot(this);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation = domainAxis;
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis); this.rangeAxisLocation = domainAxis;
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureGlobalAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureUseOfBounds();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDefaultAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureExternalAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocale();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureUseOfElement();
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis = (ValueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol dominAxes,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.dominAxes.get(i);
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.clone();
compilation error,[CE] cannot find symbol zoneAxes,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.zoneAxes.get(i);
patch is same with buggy,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
patch is same with buggy,,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol White,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.White;
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxis);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocation = new ObjectList();
compilation error,[CE] bad operand types for binary operator '+',this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList() + 1;
compilation error,[CE] no suitable constructor found for ObjectList(double),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0.0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0, this.rangeAxis);
compilation error,[CE] incompatible types,return result; ,return index;
increase failing tests, [FE] NullPointerException,return result; ,return result == null? getDataset() : result;
compilation error,[CE] cannot find symbol ValueUtils,return result; ,return result == null? ValueUtils.getValue(index): result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? getResult() : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 1 : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? getResult() : result;
increase failing tests, [FE] NullPointerException,return result; ,return result!= null? getDataset() : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? ValueUtils.toString(getPlot()): result;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,return result; ,return result == null? new CategoryDataset(index): result;
compilation error,[CE] cannot find symbol ValueUtils,return result; ,return result == null? ValueUtils.toString(index): result;
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent().getEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getParent().getEvent();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> event = getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.green);
compilation error,[CE] illegal start of type,,return Collector.collect(new CategoryPlot(DEFAULT_CROSSHAIR_PAINT), DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return Collector.collect(new CategoryPlot(DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT), DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return Collector.collect(new CategoryPlot(DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT));
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.blue);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] illegal start of type,,return Collector.collect(new CategoryPlot(DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT), DEFAULT_COSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.black);
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 0);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLeftRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, Integer.MAX_VALUE);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,double),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 0.0);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNullPointer(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLowerBoundMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLineMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,new Point2D.Double(0.0, 0.0);
compilation error,[CE] <identifier> expected,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); Preconditions.checkNotNull(quadrantOrigin);
compilation error,[CE] <identifier> expected,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); Preconditions.checkState(quadrantOrigin == null);
compilation error,[CE] <identifier> expected,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); Preconditions.checkState(quadrantOrigin!= null);
compilation error,[CE] <identifier> expected,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); Preconditions.checkArgument(quadrantOrigin == null);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.00, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(1.0, 0.0);
compilation error,[CE] <identifier> expected,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); Preconditions.checkArgument(quadrantOrigin == 0.0);
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getEntry().getRangeAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBeanAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getPositionAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getChangeAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBaseAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getInitialValue(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBetaAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDoubleAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getOffsetAxis(axisIndex);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinesVisible = true;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinesVisible = false;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinesVisible = true;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinesVisible = true;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinesVisible = false;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlineStroke = DEFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis == null || axis.isEnabled(Feature.QUOTE_FIELD_NAMES)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis == null || axis.isEnabled(Feature.AUTO_CLOSE_TARGET)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isLocal()) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis == null || axis.isEnabled(Feature.ALLOW_RANGE_AS_NULL_OBJECT)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis == null || axis.isEnabled(Feature.XY_LANGUAGE_ERROR)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.contains("xyz")) {
compilation error,[CE] illegal start of expression,if (axis != null) { ,if(axis == null || axis.isEnabled(Feature.QUOTE_FIELD_NAMES))) {
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, rangeAxis);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, domainAxis);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, 0);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.domainAxis.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.setPosition(this);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.setItemCount(0);
compilation error,[CE] cannot find symbol target,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, target);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NAME_TYPE);
compilation error,[CE] cannot find symbol domainAxises,,this.domainAxises.set(0, domainAxis); this.rangeAxes.set(0, rangeAxis);
increase failing tests, [FE] NullPointerException,,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,,this.rangeAxes.set(0, domainAxis); this.mapDatasetToRangeAxis(0, rangeAxis);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,this.rangeAxes.set(0, rangeAxis); this.mapDatasetToDomainAxis = new CategoryDataset(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,,this.rangeAxes.set(0, domainAxis); this.mapDatasetToRangeAxis(0.0, rangeAxis);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,this.rangeAxes.set(0, rangeAxis); this.mapDatasetToDomainAxis = false;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.NAME_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DISTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XY_Plot.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.COMMA);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.NONE);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker);
increase failing tests, [FE] NullPointerException,,this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = this.backgroundRangeMarkers.get(index);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(',');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_GRIDLINE_STROKE = DEFAULT_CROSSHAIR_STROKE;
increase failing tests, [FE] NullPointerException,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DESFAULT_GRIDLINE_STROKE;
compilation error,[CE] <identifier> expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE.
increase failing tests, [FE] NullPointerException,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GLIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DERFAULT_GRIDLINE_STROKE;
compilation error,[CE] <identifier> expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE.;
increase failing tests, [FE] NullPointerException,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = deFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = BRAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(")")); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(", domainAxis")); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(">")); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] cannot find symbol,return result; ,return result == null? getDataset().getValue() : result;
compilation error,[CE] cannot find symbol ValueUtils,return result; ,return result == null? ValueUtils.getValue(index): result;
increase failing tests, [FE] StackOverflowError,return result; ,return result == null? getDataset() : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? getDataset().getValue(index): result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getValue();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 1 : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? getDataset().getIndex() : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result.toString();
increase failing tests, [FE] StackOverflowError,return result; ,return result!= null? getDataset() : result;
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
increase failing tests, [FE] StackOverflowError,if (getParent() != null) { ,if(getParent() == null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.isByNameOrVar(event.getName())) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CategoryPlot.CONTINUOUS_EVENT_INIT_ERROR) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CategoryPlot.HORIZONTAL) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CategoryPlot.CONTINUOUS) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CategoryPlot.CONDITIONAL) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CategoryPlot.CONTINUOUS_EVENT_INCLUSIVE) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType!= CategoryPlot.WARNING && event.getInfo()!= null) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.isBoolean()) {
compilation error,[CE] variable orientation is already defined in class CategoryPlot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] illegal start of type,,throw new IllegalArgumentException("");
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkState(orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(Orientation.HORIZONTAL);
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(PlotOrientation.HORIZONTAL);
compilation error,[CE] invalid method declaration; return type required,,PlotOrientation orientation = plot.getOrientation(); getPlotOrientation().setOrientation(orientation);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(1.0f);
compilation error,[CE] <identifier> expected,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkArgument(Orientation.HORIZONTAL)!= null;
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 2;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 0.0;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_POP;
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE +"";
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 0.5;
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : BLACK;
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer(renderer));
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, Renderer.TYPE_INIT_ERROR);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(1, renderer);
compilation error,[CE] cannot find symbol,this.renderers.set(0, renderer); ,this.renderers.remove(0, renderer);
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer(this));
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
compilation error,[CE] cannot find symbol rendering,this.renderers.set(0, renderer); ,this.renderers.set(0, rendering);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, 0);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.backgroundDomainMarkers.size()) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size() - 1;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.add(marker); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.backgroundDomainMarkers.size()) { this.markers.remove(index); }
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] cannot reference this before supertype constructor has been called,this(null, null, null, null); ,this(new NullPointerException(this), null, null, null, null);
compilation error,[CE] cannot find symbol NO_TYPE,this(null, null, null, null); ,this(null, null, null, NullPointerException.NO_TYPE);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,CategoryPlot),this(null, null, null, null); ,this(null, null, null, new CategoryPlot());
compilation error,[CE] ')' expected,this(null, null, null, null); ,this(null, null, null, null;
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,int,<null>,<null>),this(null, null, null, null); ,this(null, null, 0, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] <null> cannot be dereferenced,this(null, null, null, null); ,this(null, null, null, null.length);
compilation error,[CE] cannot find symbol NO_OBJECT,this(null, null, null, null); ,this(null, null, null, NullPointerException.NO_OBJECT);
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationPackage,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationPackage = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationSet,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationSet = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationIntrospector,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationIntrospector = new XYAnnotationIntrospector(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); this.annotationList = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); this.annotations = new ArrayList(); }
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); >>
compilation error,[CE] illegal start of expression,} ,super.setPosition(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(getName()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setPosition(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setPosition(getAxisLocation()); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis == null) {
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isLocal()) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= getClass()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChanged()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.size() == 0) {
compilation error,[CE] bad operand types for binary operator '!=',if (domainAxis != null) { ,if(this.drawSharedDomainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis == null || domainAxis.isLocal()) {
compilation error,[CE] cannot find symbol domainAxis,if (domainAxis != null) { ,if(this.domainAxis!= null) {
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] <identifier> expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red; Public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] <identifier> expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red;Public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] variable DEFAULT_CROSSHAIR_PAINT is already defined in class CategoryPlot,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red;public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] <identifier> expected,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.red; Public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.green;
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.size()!= 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!axis.isLocal() || axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.isArray()) {
compilation error,[CE] 'void' type not allowed here,if (axis != null) { ,if(axis == null || axis.configure()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis == null || axis.construct()) {
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRangeAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); AxisLocation location = new AxisLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getRangeAxisLocation();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRangeAxisLocation()); AxisLocation location = new AxisLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation();
compilation error,[CE] cannot find symbol,,super.setPosition(getRangeAxisLocation());
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getAxisLocation();
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new HashMap();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxis = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ClassList();
compilation error,[CE] List is abstract; cannot be instantiated,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new List();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new Class();
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(!this.marker.isEmpty()) { this.marker.setPaint(getRangeMarker()); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(!this.marker.isEmpty()) { this.marker.setPaint(getRangeMarker()); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(index == 0) { addRangeMarker(( Layer)marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLabel(); if(index == 0) { addRangeMarker(( Layer)marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLabel(); if(index == 0) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(!this.marker.isEmpty()) { this.marker.setPaint(getLabel()); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(!this.marker.isEmpty()) { this.marker.setPaint(getLabel()); }
compilation error,[CE] illegal start of expression,,if(this.marker!= null) { Layer layer = getLastChange(); if(index == 0) { addRangeMarker(( Layer)marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer layer = getLastChange(); if(!isRangeMarker(marker)) { addRangeMarker(( Layer)marker); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAnchor.MIDDLE);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAnchor.MIDDLE); this.renderer = new CategoryAnchor();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAnchor.MIDDLE); this.rangeAxis =(CategoryAnchor)super.renderer;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty()); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAnchor.MIDDLE); this.dataset = dataset;
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.rangeAxis = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] no suitable method found for setDomainAxis(boolean,boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setDomainAxis(boolean,boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_RANGE_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.rangeAxis = RangeAxis.
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.rangeAxis = rangeAxis;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty());
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_DOMAIN_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_GLOBAL_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_CROOSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_CROOSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainCrosshairStroke = DEFAULT_GLOBAL_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_LOAD_FACTOR;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_DOUBLE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_DOMAIN_STROKE;
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index - 1);
compilation error,[CE] ')' expected,result = (XYDataset) this.datasets.get(index); ,if(this.datasets!= null) { result =(XYDataset)this.datasets.get(index); } else { result = new XYDataset(this.datasets.get(index); }
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index-1);
compilation error,[CE] ')' expected,result = (XYDataset) this.datasets.get(index); ,if(this.datasets!= null) { result =(XYDataset)this.datasets.get(index); } else { this.datasets.put(index, new XYDataset(this.datasets.get(index)); }
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index + 1);
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes = new ObjectList(); ,this.domainAxisLocation = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisList,this.domainAxes = new ObjectList(); ,this.domainAxisList = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxes = new ObjectList(); ,this.domainAxisNames = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,this.domainAxes = new ObjectList(); ,this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisState,this.domainAxes = new ObjectList(); ,this.domainAxisState = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisGroups,this.domainAxes = new ObjectList(); ,this.domainAxisGroups = new ObjectList();
compilation error,[CE] cannot find symbol domainAxiss,this.domainAxes = new ObjectList(); ,this.domainAxiss = new ObjectList();
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis(), DEFAULT_CROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol NumberAxis,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(NumberAxis.getLowerBound());
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis(), Layer.BACKGROUND);
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis(), DEFAULT_GROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol NumberAxis,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(NumberAxis.EXTENDS_TAG);
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis(), DEFAULT_FOREGROUND);
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis(), Color.REDEFINITION);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(0));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null); this.domainAxes = new XYPlot();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(1));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(i).getClass());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(i).getName());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(i).getAnnotation());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(i), this.domainAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(i).getClass());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.clone();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset(dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,,this.axisOffset = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(0);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBase64Variants());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getItemCount());
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectArrayList();
compilation error,[CE] cannot find symbol domainAxisList,this.domainAxes = new ObjectList(); ,this.domainAxisList = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxes = new ObjectList(); ,this.domainAxisNames = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxis = new HashMap();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList() +":";
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.rangeGridlinesVisible); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinesVisible == true); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis == null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinesVisible == true); this.rangeGridlinesVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.rangeGridlinesVisible); this.rangeGridlinesVisible = true;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0, domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)super.getDomainAxis(); this.mapDatasetToRangeAxis(0, domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)super.getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(dataset);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis =(CategoryAxis)getDomainAxis();
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
patch is same with buggy,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] cannot assign a value to final variable quadrantOrigin,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private final transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] variable orientation is already defined in class CategoryPlot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.FALSE;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.END_ARRAY;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.NEVER;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.DUPLICATE;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.DEVERSE;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.DOCUMENT;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.DOCUMENTS;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.FULL;
compilation error,[CE] illegal start of type,,super.renderingOrder = DatasetRenderingOrder.EXTERNAL;
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,super.configureDomainAxes(); this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> this.domainAxes =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> this.domainAxes = getDomainAxes();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes =(CategoryAxis)this.domainAxes.get(i); }
compilation error,[CE] illegal start of expression,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> this.domainAxes = new CategoryPlot(this.domainAxes.size());
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes = getDomainAxes(); }
compilation error,[CE] ';' expected,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes =(CategoryAxis)this.domainAxes.get(i); axis
compilation error,[CE] illegal start of expression,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i); if(this.domainAxes!= null) { this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol domainAxis,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol renderer,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.renderer = new CategoryItemRenderer(this);
compilation error,[CE] cannot find symbol renderer,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.renderer = new CategoryItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol rangeAxis,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol renderer,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.renderer = new CategoryRenderer();
compilation error,[CE] cannot find symbol renderer,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.renderer = new CategoryRenderer(this);
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.axisOffset = new CategoryItemRenderer(this);
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(i); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.length(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] ';' expected,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0, i < this.domainAxes.size(); i++) {
increase failing tests, [FE] AssertionFailedError,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INFINITY;
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol TOP,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.TOP;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] cannot find symbol POSITIVE_INSETS,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INSETS;
compilation error,[CE] cannot find symbol CUSTOM,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.CUSTOM;
compilation error,[CE] cannot find symbol BOTTOM,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.BOTTOM;
compilation error,[CE] cannot find symbol DECLARATE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.DECLARATE;
compilation error,[CE] cannot find symbol POSITIVE_WARNING,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_WARNING;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocalPart();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocale();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.rangeAxis.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getValueAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRawClass();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocalFileDataset();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this));
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, event);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new Event(e), nullPointerException);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(e, new Event(this));
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, e);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(e), nullPointerException);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(e), nullPointerExceptionId);
compilation error,[CE] cannot find symbol nullPointerException,notifyListeners(e); ,notifyListeners(e, nullPointerException.node);
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(!(renderer instanceof XYItemRenderer)) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(!(renderer instanceof XYItemRenderer)&&(this.domainAxis!= null || this.rangeAxis!= null)) {
compilation error,[CE] illegal start of expression,if (renderer != null) { ,if(!(renderer instanceof XYItemRenderer)&&(( XYItemRenderer)renderer).getChangeListener()!= null)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer instanceof XYItemRenderer)&&(( XYItemRenderer)renderer).getChangeListener()!= null) {
compilation error,[CE] cannot find symbol Renderer,if (renderer != null) { ,if(Renderer.isLocal() ||(renderer!= null && renderer.hasChangeListener())) {
compilation error,[CE] illegal start of expression,if (renderer != null) { ,if(!(renderer instanceof XYItemRenderer)&&(( XYItemRenderer)renderer).getChangeListener() == null)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer instanceof XYItemRenderer)&&(( XYItemRenderer)renderer).hasChangeListener()) {
patch is same with buggy,,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_OPTIONAL_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_OPTIONAL_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_LOAD_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_RANGE_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol rangeCrosshairFont,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairFont = DEFAULT_CROSSHAIR_FLOAT;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_POP,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint!= DEFAULT_CROSSHAIR_POP;
compilation error,[CE] cannot find symbol DEFAULT_FIELD_NAMES,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_FIELD_NAMES;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_GLOBAL;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_PAIN,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint!= DEFAULT_CROSSHAIR_PAIN;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(""));
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol markers,markers = new java.util.ArrayList(); ,this.markers = new java.util.ArrayList();
patch is same with buggy,,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList();
compilation error,[CE] illegal start of expression,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] illegal start of expression,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] continue outside of loop,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers); continue; }
compilation error,[CE] continue outside of loop,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers); continue; }
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapAxisToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapDomainAxis(0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapReferenceToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisPaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.domainAxisStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint == Color.black); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint!= Color.black);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] bad operand type Paint for unary operator '!',,Preconditions.checkArgument(!this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint!= Color.blue); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainZeroBaselinePaint!= Color.black); this.domainZeroBaselinePaint = new BasicPaint(2.0f);
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,this.domainGridlinesVisible = false;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinePaint = DEFAULT_GRIDLINE
compilation error,[CE] bad operand types for binary operator '==',this.domainGridlinesVisible = true; ,this.domainGridlinesVisible =(this.domainGridlinesVisible == DEFAULT_GRIDLINE_STROKE)? DEFAULT_GRIDLINE_STROKE : DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] not a statement,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.domain
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlineStroke = DEFAULT_GRIDLINE
compilation error,[CE] not a statement,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this
compilation error,[CE] illegal start of expression,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false;
compilation error,[CE] <identifier> expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.
compilation error,[CE] not a statement,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == false) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.domain
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainPaint = DEFAULT_GRIDLINE_
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START_OBJECT);
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START_OBJECT); this.weight = 0;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START_OBJECT); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START_OBJECT); this.weight = 0.0;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START);
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot == XYPlot.START_OBJECT);
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START); this.weight = 0;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START_ARRAY); this.weight = 0;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START_ARRAY);
compilation error,[CE] no suitable method found for addRangeMarker(int,Layer,Marker,boolean),addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, layer, marker, true);
compilation error,[CE] cannot find symbol TOO_SMALL,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.TOO_SMALL, true);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,setRangeMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol PlotType,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.PlotType.RANGE_MARKER, true);
compilation error,[CE] '.class' expected,addRangeMarker(index, marker, layer, true); ,addRangeMarker(int, index, marker, layer, true);
compilation error,[CE] no suitable method found for addRangeMarker(int,Layer,Marker,boolean),addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol PlotType,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.PlotType.RANGE_MARKER, false);
compilation error,[CE] cannot find symbol TOO_NUMBER,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.TOO_NUMBER, true);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = getLastChain().getLowerBound();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer marker = getLabel(); if(marker!= null) { removeRangeMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer marker = getLabel(); if(marker!= null) { layer.removeChild(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLowerBound(); if(layer!= null) { removeRangeMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer marker = getLabel(); if(marker!= null) { layer.removeChangeListener(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLastChild(); if(layer!= null) { removeRangeMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer!= null) { removeRangeMarker(marker, layer); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(Marker,Layer),,Layer layer = getLastChild().getLastChild().getNext();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLowerBound(); if(layer!= null) { removeRangeMarker(0, marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLastChild(); if(layer!= null) { removeRangeMarker(0, marker, layer); }
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] ';' expected,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE, DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GLIDLINE_STROKE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] ';' expected,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE, DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getScope());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getBaseValue());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparableIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparatorIndex());
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot();
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, axisIndex);
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot().getAxis(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot().getAxis();
compilation error,[CE] illegal start of expression,} ,axisIndex = indexOf(axisIndex); map.addChangeListener(this);
compilation error,[CE] illegal start of expression,} ,mapDataset = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot().getAxis(); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex); this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.put(index, new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.put(index, new Integer(axisIndex), axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.remove(new Integer(index), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.put(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.mapToDomainAxisMap.put(index, new Integer(axisIndex), axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.remove(index);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.put(0, index);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRowItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxisRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxisRenderer(); this.rangeAxisLocation = dataset.getRangeAxisLocation();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRangeItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getLocation(); this.rangeAxisLocation = dataset.getRangeAxisLocation();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxisRenderer(); this.rangeAxisLocation = getRangeAxisLocation();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.getParent(); event.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.getGenericParser(); event.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event =(XYPlot)getPlot(); event.setChangeEventType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event =(XYPlot)getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event =(XYPlot)getPlot(); event.setChangeEventType(ChartChangeEventType.END_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.getGenericParser(); event.setType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event =(XYPlot)getPlot(); event.setChangeEventType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.getParent(); event.setType(ChartChangeEventType.INTERNAL_NAME); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.getGenericParser(); event.setType(ChartChangeEventType.INTERNAL_NAME); notifyListeners(event);
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null || this.rangeAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(!(renderer instanceof CategoryItemRenderer)) {
compilation error,[CE] cannot find symbol rangeAxis,if (renderer != null) { ,if(this.rangeAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&&(renderer.getChangeListener() == null)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&&(renderer.hasChangeListener())) {
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.baseDomainMarkers = new HashMap(); this.baseRangeMarkers = new HashMap(); this.baseRangeMarkers = new
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.edgeRangeMarkers = new HashMap(); this.edgeRangeMarkers = new HashMap(); this.edgeRangeMarkers = new
compilation error,[CE] cannot find symbol rangeAxisMarkers,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); this.rangeAxisMarkers = new RangeAxisMarkers(); }
compilation error,[CE] cannot find symbol edgeRangeMarkers,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.edgeRangeMarkers = new HashMap(); this.edgeRangeMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); this.baseRangeMarkers = new BaseRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); this.baseRangeMarkers = new HashMap(); this.baseRangeMarkers = new
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); this.edgeRangeMarkers = new HashMap(); this.edgeRangeMarkers = new
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.baseDomainMarkers = new HashMap(); this.baseRangeMarkers = new HashMap(); this.backgroundDomainMarkers = new
compilation error,[CE] cannot find symbol markers,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); this.markers = new HashMap(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(' ');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.getLength();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf('n', 'r');
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index, marker, layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(',');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf("n");
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.indexOf(':');
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_VALUE_LABEL_FONT, 10);
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(SansSerif, Font.PLAIN, 10);
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT, Font.PLAIN, 10);
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT, 10);
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT, Font.PLAIN);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_VALUE_LABEL_FONT, Font.PLAIN, 10);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_VALUE_LABEL_FONT, Font.PLAIN);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_VALUE_LABEL_FONT, 1);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINES, DEFAULT_RANGE_GRIDLINES); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKES;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINES, DEFAULT_RANGE_GRIDLINES); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINES, DEFAULT_RANGE_GRIDLINES); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINES, DEFAULT_RANGE_GRIDLINES);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINES_STROKE;
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
compilation error,[CE] illegal start of type,if (index == 0 && location == null) { ,if(!(index == 0 || index > this.rangeAxisLocation.size())) throw new IllegalArgumentException("Null 'location' for index 0 not permitted.");
compilation error,[CE] illegal start of type,if (index == 0 && location == null) { ,if(!(index == 0 || index > this.rangeAxisLocation.getLocation())) throw new IllegalArgumentException("Null 'location' for index 0 not permitted.");
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
compilation error,[CE] illegal start of type,if (index == 0 && location == null) { ,if(!(index == 0 || index >= this.rangeAxisLocation.getLocation())) throw new IllegalArgumentException("Null 'location' for index 0 not permitted.");
compilation error,[CE] illegal start of type,if (index == 0 && location == null) { ,if(!(index == 0 || index >= this.rangeAxisLocation.size())) throw new IllegalArgumentException("Null 'location' for index 0 not permitted.");
compilation error,[CE] illegal start of type,if (index == 0 && location == null) { ,if(!(index == 0 || index > this.rangeAxisLocations.size())) throw new IllegalArgumentException("Null 'location' for index 0 not permitted.");
compilation error,[CE] illegal start of type,if (index == 0 && location == null) { ,if(!(index == 0 || index >= this.rangeAxisLocations.size())) throw new IllegalArgumentException("Null 'location' for index 0 not permitted.");
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashToolTipGenerator();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashToolTipSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashManager();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashBackgroundMarkers();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithCapacity(2.0);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithCapacity(0.0);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashCode();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYLocation);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(""));
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.dataset = new HashMap();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisLocations = new HashMap();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocale();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxis = domainAxis;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocalPart();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getLocale();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getDomainAxis(); this.renderers = new ObjectList();
patch is same with buggy,,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private datasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot assign a value to final variable datasetRenderingOrder,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol DEVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DEVERSE;
compilation error,[CE] bad operand types for binary operator '+',private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE + 1;
compilation error,[CE] cannot find symbol NEVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.NEVERSE;
patch is same with buggy,,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder =DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol SEVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.SEVERSE;
compilation error,[CE] ';' expected,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE, XYPlot.END_ARRAY;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.mapDatasetToDomainAxis(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = domainAxis;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); getAxis().setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); axisIndex.setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexInList(this, axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
patch is same with buggy,,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] no suitable constructor found for BasicStroke(double),this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5d);
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_POP;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_OPTIONAL_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] ';' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
compilation error,[CE] cannot find symbol,,fireDatasetChanged();
increase failing tests, [FE] IllegalArgumentException,,throw new IllegalArgumentException("");
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent().getDataset(); event.setChangeEvent(event);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = getDatasetChangeEvent(); event.addChangeEvent(event);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = EventUtils.getDatasetChangeEvent(getChangeEvent()); event.addChangeEvent(event);
increase failing tests, [FE] IllegalStateException,,throw new IllegalStateException("");
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = this.getDatasetChangeEvent(); event.addChangeEvent(event);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = EventUtils.getDatasetChangeEvent(getMillis()); event.addChangeEvent(event);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = EventUtils.getDatasetChangeEvent(getMillis()); event.setChangeEvent(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,XYPlot event = getChangeEvent(); event.addChangeEvent(event);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(JavaTimeConstants.MILLIS_PER_SECOND); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(); this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getPlot(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(); this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(); this.itemRenderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(JavaTimeConstants.MILLIS_PER_SECOND); this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis(); this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(JavaTimeConstants.MILLIS_PER_SECOND); this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0);
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.contains(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { Layer marker = getLabel(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.containsKey(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { Layer marker = getLabel(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { notifyListeners(new XYPlotChangeEvent(this)); }
compilation error,[CE] cannot find symbol,,XYMarker marker =(XYMarker)layer.get(index);
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.contains(marker)) { return false; }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!markers.contains(marker)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index >= 0) { removeRangeMarker(); }
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol nullPointerException,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeNonDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeftDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeDomainMarker(Layer,Marker),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(layer, marker);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeafDomainMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeDomainMarker(<null>,Marker,Layer),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(null, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeWhitespaceMarker(0, marker, layer);
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,XYPlot),this(null, null, null, null); ,this(null, null, null, new XYPlot());
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,int,<null>,<null>),this(null, null, null, null); ,this(null, null, 0, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, null, 0);
compilation error,[CE] <null> cannot be dereferenced,this(null, null, null, null); ,this(null, null, null, null.length);
compilation error,[CE] ')' expected,this(null, null, null, null); ,this(null, null, null, null;
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,XYPlot),this(null, null, null, null); ,this(null, null, new XYPlot());
compilation error,[CE] no suitable constructor found for XYPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
patch is same with buggy,,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOAD_FACTOR;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_BLOSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_BLOSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOMAIN_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOAD_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_BLESSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_BLESSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_DOCUMENT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOCUMENT_CROSSHAIR_VALUE;
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index+1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index-1);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index * 2);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index - 1);
compilation error,[CE] no suitable method found for get(int,int),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, index + 1);
compilation error,[CE] no suitable method found for get(int,int),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, index);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasetToDomainAxis(1, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasetToDomainAxis(0.0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(0.0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(new XYItemRenderer());
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(dataset, 0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getPrototype();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getOwner();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasetToDomainAxis(1, 0);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, true);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol TOO_SMALL,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.TOO_SMALL, true);
compilation error,[CE] cannot find symbol SEPARATOR,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.SEPARATOR, true);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SIZES);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.NAME_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,Integer index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.NONE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SIZES_PER_HOUR);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.getParent();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = getParent();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> yAxis = getAxis();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis =(PlotChangeEvent)getParent();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = getPlot();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis =(PlotChangeEvent)this.getParent();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = getPlotChangeEvent();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = getParent().getChangeEvent();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = EventUtilities.getCurrentPlot();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = EventUtil.getCurrentPlot();
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_POP;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_OPTIONAL_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : BLACK;
compilation error,[CE] cannot find symbol baseline,,Validate.notNull(baseline); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] cannot find symbol baseline,,Validate.notNull(baseline); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkState(this.anchorValue == null); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] unreachable statement,,throw new IllegalArgumentException("");
compilation error,[CE] cannot find symbol baseline,,Validate.notNull(baseline); this.anchorValue = DEFAULT_ANACCERATOR_VALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkState(this.anchorValue == null); this.anchorValue = DEFAULT_ANACCORD_VALUE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.anchorValue == 0.0); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] cannot find symbol baseline,,Validate.notNull(baseline); this.anchorValue = DEFAULT_ANACID_VALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkState(this.anchorValue == null); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkState(this.anchorValue == null); this.anchorValue = DEFAULT_ANACCERATOR_VALUE;
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.backgroundDomainMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND || this.foregroundDomainMarkers!= null) {
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemVisible(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemMargin(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemRenderer(baseline, Layer.BACKGROUND);
patch is same with buggy,,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemLabel(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol Baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this, Baseline.BACKGROUND);
compilation error,[CE] cannot find symbol map,,map =(XYPlot)getPlot();
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol map,,map =(XYPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, axisIndex);
compilation error,[CE] cannot find symbol map,,map =(XYPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol map,,map =(XYPlot)getPlot().getAxis();
compilation error,[CE] method indexOf in class XYPlot cannot be applied to given types;,,axisIndex = indexOf(axisIndex); map.addChangeListener(this);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis();
compilation error,[CE] incompatible types,ValueAxis result = null; ,ValueAxis result = this;
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = getValueAxis();
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size() - 1);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes);
compilation error,[CE] cannot find symbol UniqueAxis,ValueAxis result = null; ,ValueAxis result = UniqueAxis.valueOf(this.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.get(index));
compilation error,[CE] package This does not exist,ValueAxis result = null; ,ValueAxis result = new ValueAxis(This.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size() );
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getRangeMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.clone(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.clone(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new CategoryPlot(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { return removeRangeMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker instanceof CategoryPlot) { Marker marker =(Marker)this.marker.clone(); if(marker!= null) { return removeRangeMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!Marker.isLabelName(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getRangeMarker(); if(marker instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
patch is same with buggy,,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(getPlot(), location, notify);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,setNumberAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,setRuleAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,setRuleAxisLocation(null, location, notify);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(1, location, notify);
compilation error,[CE] cannot find symbol NullPointer,setRangeAxisLocation(0, location, notify); ,setErrorOrigin(NullPointer.notify(this));
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,<null>,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, null, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,boolean,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(location, false, notify);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocations);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getRangeAxisLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocations.get(index);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocations.size();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = super.getRangeAxisLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location =(AxisLocation)getRange();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(getRangeAxisLocation());
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 1);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapAxisToRangeAxis(0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
patch is same with buggy,,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapAxisToRangeAxis(0, 1);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapToRangeAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] no suitable method found for removeRangeMarker(Layer,Marker),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(layer, marker);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] <identifier> expected,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException.null);
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException.node);
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException.next());
compilation error,[CE] no suitable method found for removeRangeMarker(<null>,Marker,Layer),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(null, marker, layer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointer());
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxisLocation);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxisLocation); this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.domainAxisLocation = AxisLocation.BOTTOM_OR_LEFT;
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.mapDatasetToRangeAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxisLocation); this.mapDatasetToRangeAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.mapDatasetToRangeAxis(1, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getValueAxis(domainAxisLocation);
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] <identifier> expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] 'else' without 'if',markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.markers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.markers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.backgroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(1);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
compilation error,[CE] unreported exception CloneNotSupportedException; must be caught or declared to be thrown,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.clone();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getEmptyValue();
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(4);
compilation error,[CE] no suitable method found for get(int,<null>),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i, null);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getSize();
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(getDefaultAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getEmptyValue();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getSingleNodePointer();
compilation error,[CE] no suitable method found for get(int,<null>),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i, null);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i).getRange();
compilation error,[CE] method toHexString in class Integer cannot be applied to given types;,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; Integer.toHexString(this.domainCrosshairStroke, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; Integer.toHexString(this.domainCrosshairStroke, DEFAULT_LOAD_FACTOR);
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; Preconditions.checkState(this.domainCrosshairVisible == false);
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; Preconditions.checkState(this.domainCrosshairVisible!= false);
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true; Preconditions.checkNotNull(this.domainCrosshairVisible);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCurrentItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getOwner();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getCategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(dataset, 0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getPrototype();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowDistributionCount();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKES;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKES;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKES;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_STROKE); this.domainAxis = DEFAULT_DOMAINAXIS;
patch is same with buggy,,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairStroke!= DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] ';' expected,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairStroke!= DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_
compilation error,[CE] incompatible types,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_OPTIONAL_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairStroke == DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 0.0;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChain().getLastChange(); if(!NotifyPlotManager()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastModule(); if(layer.getLowerBound()!= null) { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastModule(); if(layer.getLowerBound()!= null) { marker.append("n"); marker.append("n"); }
compilation error,[CE] unclosed string literal,,if(marker == null) { Layer layer = getLastModule(); if(layer.getLowerBound()!= null) { marker.append('n'); marker.append("'); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastModule(); if(layer.isEmpty() && marker.getSize() > 0) { marker.append('n'); marker.setLength(0); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastModule(); if(layer.getLowerBound()!= null) { marker.append("n"); }
compilation error,[CE] unclosed string literal,,if(marker == null) { Layer layer = getLastModule(); if(layer.isEmpty() && marker.getSize() > 0) { marker.append('n'); marker.append("'); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastModule(); if(layer.getLowerBound()!= null) { marker.append('n'); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastModule(); if(layer.isEmpty() && marker.getSize() > 0) { marker.append('n'); }
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getChangeAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,XYPlot axis = getPlot();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getXYPlot();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,XYPlot axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,XYPlot axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getImmediateParentPointer();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new HashMap();
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new LinkedHashMap();
compilation error,[CE] List is abstract; cannot be instantiated,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new List();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ClassList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(0);
compilation error,[CE] cannot find symbol map,,map =(XYPlot)getPlot();
compilation error,[CE] cannot find symbol map,,map =(XYPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, axisIndex);
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { map.getRangeAxis(); for(int i = axisIndex; i < axisIndex; i++) { map.getLowerBound(); map.getUpperBound(); }
compilation error,[CE] cannot find symbol map,,map =(XYPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { map.getRangeAxis(); for(int i = axisIndex; i!= axisIndex; i++) { map.getLowerBound(); map.getUpperBound(); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { map.getRangeAxis(); for(int i = axisIndex; i < axisIndex; i++) { map.getLowerBound(); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { map.getRangeAxis(); for(int i = axisIndex; i < axisIndex; i++) { map.getUpperBound(); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { map.getRangeAxis(); for(int i = axisIndex; i < axisIndex; i++) { map.getUpperBound(); map.getLowerBound(); }
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations = new ValueAxis(domainAxisLocation.BOTTOM_OR_LEFT); this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.mapDatasetToRangeAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol rangeAxislocations,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.rangeAxislocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] illegal start of expression,,if(this.backgroundRangeMarkers!= null) { this.backgroundRangeMarkers.put(new Integer(index), markers); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] illegal start of expression,,if(this.backgroundRangeMarkers!= null) { this.backgroundRangeMarkers.put(new Integer(index), markers); if(notify) { this.backgroundRangeMarkers.put(new Integer(index), markers); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(path); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] illegal start of expression,,if(this.backgroundRangeMarkers!= null) { this.backgroundRangeMarkers.put(new Integer(index), markers); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(this.backgroundRangeMarkers!= null) { this.backgroundRangeMarkers.put(new Integer(index), marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(this.backgroundRangeMarkers!= null) { this.backgroundRangeMarkers.put(new Integer(index), markers); if(Notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(this.backgroundRangeMarkers!= null) { this.backgroundRangeMarkers.put(new Integer(index), markers); if(notify) { this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getBase());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getComponentType());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NAME_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NONE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, getDatasetIndex());
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationSet,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationSet = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationReset,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationReset = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationAnnotations,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationAnnotations = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotations = new java.util.ArrayList(); this.annotationList = new java.util.ArrayList(); }
compilation error,[CE] illegal start of expression,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); this.annotations = new java.util.ArrayList(); >>
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getName());
compilation error,[CE] cannot find symbol dataset,,System.err.println("Unable to parse:" + this.dataset);
compilation error,[CE] cannot find symbol,,if(e.getDataset()!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol datasetChangeEvent,,System.err.println("Unable to parse:" + this.datasetChangeEvent.getName());
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getSeriesName());
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getDatasetName());
compilation error,[CE] cannot find symbol EventUtils,,System.err.println("Unable to parse:" + EventUtils.getDataset(this));
compilation error,[CE] cannot find symbol eventName,,System.err.println("Unable to parse:" + eventName);
patch is same with buggy,,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof LocationPlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof ActionPlot) {
compilation error,[CE] inconvertible types,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof ValueAxis) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof VerticalPlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof ImagePlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof ClassPlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof OrganizationPlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent instanceof EnterprisePlot) {
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(',');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this.rangeAxes, getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromProperty("rangeAxis");
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromProperty("rangeAxis", getRangeAxis());
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset == null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset == null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.renderer = new CategoryPlot();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.renderer = new CategoryItemRenderer();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.renderer = new CategoryPlot();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkState(this.dataset!= null); this.renderer = new CategoryItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.axisOffset = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.axisOffset = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(domainAxis); this.axisOffset = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.renderers = new ObjectList();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADD); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADDING); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADD);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADD); this.rangeAxis = rangeAxis;
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(NodeUtil.isGetProp(getBase64Variants()));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));
compilation error,[CE] illegal start of expression,} ,throw new IllegalStateException("");
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(NodeUtil.isGetProperty(""));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(NodeUtil.isStatementBlock(getParent()));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(NodeUtil.isStatementBlock(this));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(NodeUtil.isGetProp(this));
compilation error,[CE] illegal start of expression,} ,PlotUtil.checkNotNull(getPlot());
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
compilation error,[CE] ')' expected,if (this.datasets.size() > index) { ,if(this.datasets.size() } index) {
compilation error,[CE] incompatible types,if (this.datasets.size() > index) { ,if(this.datasets.size() << index) {
compilation error,[CE] cannot find symbol rangeMarker,markers.add(marker); ,markers.add(rangeMarker);
patch is same with buggy,,markers.add(marker); ,markers.add(marker);
compilation error,[CE] Marker is abstract; cannot be instantiated,markers.add(marker); ,markers.add(new Marker(this, marker));
compilation error,[CE] package RangeMarker does not exist,markers.add(marker); ,markers.add(RangeMarker.None.class);
compilation error,[CE] method add in interface Collection cannot be applied to given types;,markers.add(marker); ,markers.add(0, marker);
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(Marker.None.class);
compilation error,[CE] cannot find symbol range,markers.add(marker); ,markers.add(range);
compilation error,[CE] cannot find symbol NO_WARNING,markers.add(marker); ,markers.add(Marker.NO_WARNING);
compilation error,[CE] cannot find symbol NONE,markers.add(marker); ,markers.add(Marker.NONE);
compilation error,[CE] method add in interface Collection cannot be applied to given types;,markers.add(marker); ,markers.add(index);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] cannot find symbol,,super.setBackgroundRangeMarkers(this); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(this); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(',');
compilation error,[CE] cannot find symbol,,super.addRangeMarker(this); this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] cannot find symbol,,super.setBackgroundRangeMarkers(this); this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; range
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; RangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; RangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; RangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; range
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = true; RangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData == false) { rangeCrosshairLockedOnData = false; RangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; RangeCrosshairLockedOnData = true; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false
compilation error,[CE] illegal start of type,,if(rangeCrosshairLockedOnData!= false) { rangeCrosshairLockedOnData = false; RangeCrosshairLockedOnData = true; rangeCrosshairLockedOnData = false; rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!Marker.isLabelName(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { return removeRangeMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { removeRangeMarker(marker, Layer.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = getMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { marker = new XYMarker(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new XYPlot(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { removeRangeMarker(marker, Line.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { return removeRangeMarker(marker, Line.FOREGROUND); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarker(); if(marker!= null) { return marker; }
patch is same with buggy,,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol DEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.DEVERSE;
compilation error,[CE] bad operand types for binary operator '+',private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE + 1;
compilation error,[CE] cannot find symbol NEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.NEVERSE;
compilation error,[CE] cannot find symbol SEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.SEVERSE;
compilation error,[CE] cannot find symbol TOP,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.TOP;
compilation error,[CE] cannot find symbol CEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.CEVERSE;
compilation error,[CE] cannot find symbol TREVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.TREVERSE;
compilation error,[CE] cannot find symbol BEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.BEVERSE;
compilation error,[CE] ';' expected,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE, XYPlot.END_ARRAY;
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinesVisible = true; this.rangeGridlinePaint = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinesVisible = false; this.rangeGridlinePaint = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DE
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DE
compilation error,[CE] illegal start of expression,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke =
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT
compilation error,[CE] not a statement,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; this.rangeGridlinesVisible = true; this.rangeGridlinePaint = DEFAULT_GRIDLINE_
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParentPointer();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getNext();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getOwner();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImplicitParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPosition();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getNextPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getConstructor();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCfgParent();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf(',');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = getRangeMarkerIndex(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf(':');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('?');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.indexOf(',');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf('.');
compilation error,[CE] incompatible types,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = null;
compilation error,[CE] generics are not supported in -source 1.4,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; NullPointerException < 0 } this.drawSharedDomainAxis = false;
compilation error,[CE] not a statement,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; NullPointerException { 0 } this.drawSharedDomainAxis = false;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; Preconditions.checkState(this.mapDatasetToDomainAxis);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; Preconditions.checkState(!this.mapDatasetToDomainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; Preconditions.checkState(this.domainAxis!= domainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = true; Preconditions.checkArgument(this.domainAxis!= domainAxis);
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] bad operand types for binary operator '!=',if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getLowerBound()!= DEFAULT_DOMAIN_GRIDLINES_VISIBLE) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.setPosition(getItemPosition())) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getPlot()!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.setPosition(getItemRenderer())) {
compilation error,[CE] bad operand types for binary operator '!=',if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getLowerBound()!= null) {
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GRIDLINES_Visible,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getLowerBound()!= DEFAULT_DOMAIN_GRIDLINES_Visible) {
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GLIDLINES_VISIBLE,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getLowerBound()!= DEFAULT_DOMAIN_GLIDLINES_VISIBLE) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.size() == 0) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size()!= 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol length,if (dataset != null) { ,if(dataset!= null || dataset.length == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == this.dataset.size()) {
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData = true;
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)domainCrosshairLockedOnData.get(true);
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)domainCrosshairLockedOnData.get(true); this.domainCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)domainCrosshairLockedOnData.get(true); domainCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)clone(); domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return domainCrosshairLockedOnData.true;
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)domainCrosshairLockedOnData;
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)domainCrosshairLockedOnData.get();
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)super.getDomainCrosshairLockedOnData();
compilation error,[CE] <identifier> expected,,private XYPlot instanceof XYPlot :(XYPlot)domainCrosshairLockedOnData =(XYPlot)domainCrosshairLockedOnData.get(true); this.domainCrosshairLockedOnData = true;
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
compilation error,[CE] ')' expected,if (this.datasets.size() > index) { ,if(this.datasets.size() } index) {
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxisGridlinePaint = DEFAULT_GRIDLINE_PAIN;
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] call to this must be first statement in constructor,,this(null, dataset, domainAxis, rangeAxis);
compilation error,[CE] inconvertible types,,if(rangeAxis instanceof CategoryAxis) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(rangeAxis == null) { renderer = new RangeDataset(dataset, domainAxis.getRangeAxis()); if(renderer!= null) { renderer.addChangeListener(this); }
compilation error,[CE] ,,if(rangeAxis instanceof CategoryAxis) { throw new IllegalArgumentException(""); } else { Preconditions.checkState(rangeAxis instanceof CategoryPlot)); super.setItemRenderer(renderer); }
compilation error,[CE] no suitable method found for getValue(),,Preconditions.checkArgument(dataset.getValue() == null); this.renderer = new CategoryDataset(dataset, domainAxis, rangeAxis);
compilation error,[CE] inconvertible types,,if(rangeAxis instanceof CategoryAxis) { throw new IllegalArgumentException(""); } else { this.renderer = new CategoryPlot(dataset, domainAxis, rangeAxis).getRenderer(); }
compilation error,[CE] no suitable method found for getValue(),,Preconditions.checkArgument(dataset.getValue()!= null); this.renderer = new CategoryDataset(dataset, domainAxis, rangeAxis);
compilation error,[CE] ')' expected,,if(rangeAxis == null) { renderer = new RangeDataset(dataset, domainAxis.getRangeAxis()); if(renderer!= null) { renderer = new RangeDataset(dataset, domainAxis, rangeAxis.getR
compilation error,[CE] inconvertible types,,if(rangeAxis instanceof CategoryAxis) { throw new IllegalArgumentException(""); } else { Preconditions.checkNotNull(rangeAxis, dataset, domainAxis, renderer); }
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
compilation error,[CE] incompatible types,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = null;
patch is same with buggy,,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = false;
compilation error,[CE] cannot find symbol True,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = True;
compilation error,[CE] cannot find symbol rangeZeroBaseLineVisible,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaseLineVisible = true;
compilation error,[CE] cannot find symbol zoneZeroBaselineVisible,this.rangeZeroBaselineVisible = false; ,this.zoneZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol real,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = real;
compilation error,[CE] cannot find symbol areaZeroBaselineVisible,this.rangeZeroBaselineVisible = false; ,this.areaZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol actual,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = actual;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] cannot find symbol rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private boolean scopeCrosshairLockedOnData = false;
compilation error,[CE] variable domainCrosshairLockedOnData is already defined in class XYPlot,private boolean rangeCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(Dataset.isAssignableFrom(dataset)) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(this.axisOffset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset == null || dataset.size()!= 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(dataset)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.contains(0, domainAxis)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(dataset));
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(dataset)); this.rangeAxisLocations = new ObjectList();
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol White,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.White;
compilation error,[CE] cannot find symbol BLK,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.BLK;
compilation error,[CE] cannot find symbol YEAR,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.YEAR;
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] cannot find symbol START,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.START;
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol EAST,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EAST) {
compilation error,[CE] cannot find symbol NEGATIVE,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.NEGATIVE) {
compilation error,[CE] cannot find symbol RELATIVE,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.RELATIVE) {
compilation error,[CE] cannot find symbol ERROR,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.ERROR) {
compilation error,[CE] cannot find symbol NONE,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.NONE) {
compilation error,[CE] cannot find symbol EXTENDS,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EXTENDS) {
compilation error,[CE] cannot find symbol NORTH,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.NORTH) {
compilation error,[CE] cannot find symbol NEGROUND,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.NEGROUND) {
compilation error,[CE] cannot find symbol NEGATING,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.NEGATING) {
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_POP;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADD;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADDING;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : BLACK;
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i); this.rangeAxes.clear();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i); this.rangeAxes.remove(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i = getRangePlot();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxis = getRangeAxis(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i).getRange();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < Range> i =(CategoryPlot)this.rangeAxes.get(i); this.rangeAxes.put(i, new ClassPlot(i));
compilation error,[CE] cannot find symbol,,super.configureRangeAxes();
compilation error,[CE] cannot find symbol Arrays,,Arrays.sort(this.rangeAxes);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.annotationList = new java.util.ArrayList();
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(index);
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(0, index);
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.getLast();
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(new Layer(index));
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(layer.getLast());
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(new Layer());
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(this.index);
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(index); if(layer == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.drawSharedDomainAxis!= null); this.dataset = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.drawSharedDomainAxis!= false); this.dataset = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty());
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.drawSharedDomainAxis!= null); this.dataset = new CategoryDataset(dataset, domainAxis);
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkState(this.drawSharedDomainAxis == null); this.dataset = new CategoryDataset(dataset);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null);
compilation error,[CE] unexpected type,,Preconditions.checkArgument(!this.drawSharedDomainAxis = false);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.drawSharedDomainAxis!= false); this.dataset = new CategoryDataset(dataset, domainAxis);
compilation error,[CE] unexpected type,,Preconditions.checkArgument(!this.drawSharedDomainAxis = false); this.dataset = new CategoryDataset(dataset);
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.drawSharedDomainAxis!= null);
increase failing tests, [FE] IllegalArgumentException,,throw new IllegalArgumentException("");
increase failing tests, [FE] IllegalStateException,,throw new IllegalStateException("");
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(XYPlotUtil.isName(getXYPlot()));
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isGetPropertyName(""));
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isStatementBlock(this));
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isStatement());
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isNumericValue(getClass()));
compilation error,[CE] cannot find symbol XYPlotUtil,,Preconditions.checkNotNull(XYPlotUtil.isStatementBlock(getClass()));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,XYPlotUtils.setXYPlot(getXYPlot());
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(DatasetChangeEvent e : this.datasetChangeEvents.getInstance()) { if(e.getType()!= Token.EXPR_RESULT) { e.setChart(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(DatasetChangeEvent e : this.datasetChangeEvents.getInstance()) { if(e.getType()!= Token.EXPR_RESULT) { e.setProperty(ChartChangeEvent.DATASET_UPDATED); notifyListeners(e); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(DatasetChangeEvent e : this.datasetChangeEvents.getInstance()) { if(e.getType()!= Token.EXPR_RESULT) { e.setChart(ChartChangeEventType.CHART_UPDATED); notifyListeners(e); }
compilation error,[CE] cannot find symbol NONEMPTY_ANNOTATION,,e.setChangeEventType(ChartChangeEventType.NONEMPTY_ANNOTATION);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(DatasetChangeEvent e : this.datasetChangeEvents.getInstance()) { if(e.getType()!= Token.EXPR_RESULT) { e.setChart(ChartChangeEventType.DATASET_UPDATED); e.
compilation error,[CE] cannot find symbol DATASET_DEFAULT,,e.setChangeEventType(ChartChangeEventType.DATASET_DEFAULT);
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.verifyValueChangeEvent(this); event.getDatasetChangeEvent().clear();
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(DatasetChangeEvent e : this.datasetChangeEvents.getInstance()) { if(e.getType()!= Token.EXPR_RESULT) { e.setProperty(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e); }
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> axis = getRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,ArrayAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getChangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxis(getRange());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangePlot();
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers);
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker);
patch is same with buggy,,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] cannot find symbol edge,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.edge);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, 0);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.markers.size());
compilation error,[CE] cannot find symbol edge,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.edge);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, layer);
compilation error,[CE] cannot find symbol marker,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.marker);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers, marker);
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot();
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, axisIndex);
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,map =(XYPlot)getPlot().getAxis();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,axisIndex = indexOf(axisIndex); map.addChangeListener(this);
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.NEVER;
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DUPLICATE;
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.FALSE;
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.FULL;
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DOCUMENTS;
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DOCUMENT;
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = getDatasetRenderingOrder();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DEVERSE;
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = Maps.newHashMap();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.NONE;
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent().getEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)this.getParent();
patch is same with buggy,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, true);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setupDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, true);
compilation error,[CE] no suitable method found for setDomainAxisLocation(AxisLocation,<null>),setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, null);
compilation error,[CE] cannot find symbol BOOM_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOM_OR_LEFT, true);
compilation error,[CE] cannot find symbol BOOLEAN_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOLEAN_OR_LEFT, true);
compilation error,[CE] cannot find symbol BOTTOM_OR_LeFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LeFT, true);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(Marker,Layer),,Layer layer = getLastChain().getLowerBound();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLastChild(); if(layer!= null) { removeLowerBoundMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer marker = getLabel(); if(marker!= null) { marker.removeChild(layer); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(Marker,Layer),,Layer layer = getLastChild().getNext();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer.isEmpty()) { marker.setLength(0); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLastChild(); if(layer!= null) { marker = new Long(layer.getLowerBound()); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Layer marker = super.removeDomainMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLowerBound(); if(layer!= null) { removeDomainMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLastChild(); if(layer!= null) { removeLowerBoundMarker(margin, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChild().getLastChild(); if(layer!= null) { removeLowerBoundMarker(0, marker, layer); }
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(this.domainAxisLocation!= null); this.rangeAxisLocation = new XYLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation = new RangeAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation = new XYLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol rangeAxisLocation,,Preconditions.checkArgument(!this.rangeAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation = null;
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkArgument(!this.domainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocation = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
patch is same with buggy,,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.axisIndex), new Integer(index));
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
compilation error,[CE] no suitable constructor found for Integer(int,int),this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex, 0));
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(0, new Integer(axisIndex));
increase failing tests, [FE] AssertionFailedError,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex - 1));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(seriesIndex), new Integer(index));
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex, getLocale());
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexInList(this, axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); axisIndex.setIndex(axisIndex);
increase failing tests, [FE] NullPointerException,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol POSITIVE_INIT_ERROR,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INIT_ERROR;
compilation error,[CE] cannot find symbol POSITIVE_INIT_ERROR,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INIT_ERROR? PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL? PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol POSITIVE_INIT_ERROR,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INIT_ERROR? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL;
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol TOP,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.TOP;
compilation error,[CE] ';' expected,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INIT_ERROR, PlotOrientation.VERTICAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL? PlotOrientation.VERTICAL : PlotOrientation.POSITIVE_INIT_ERROR;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL? PlotOrientation.VERTICAL : PlotOrientation.POSITIVE_INFINITY;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset();
increase failing tests, [FE] StackOverflowError,XYDataset result = null; ,XYDataset result = getDataset();
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.getSeriesCount());
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets.size());
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.getClass());
compilation error,[CE] cannot find symbol,XYDataset result = null; ,XYDataset result = new XYDataset(this.getSeriesKey());
compilation error,[CE] cannot find symbol,XYDataset result = null; ,XYDataset result = new XYDataset(getPlot());
compilation error,[CE] cannot find symbol,XYDataset result = null; ,XYDataset result = new XYDataset(this.getName());
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedHashSet();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new TreeSet();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets =(CategoryDataset)new ObjectList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets =(CategoryDataset)this.datasets.clone();
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new HashSet();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets =(CategoryDataset)super.clone();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets =(CategoryDataset)this.datasets.get(0);
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(this.rangeAxisLocations!= null) {
increase failing tests, [FE] AssertionFailedError,if (rangeAxis != null) { ,if(this.rangeAxisLocations == null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getPlot()!= null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getClass()!= getClass()) {
compilation error,[CE] 'void' type not allowed here,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.setPlot(this)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.size() == 0) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getRange()!= null) {
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainGridlinesVisible == DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainGridlinesPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainGridlinesVisible == DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainGridlinesVisible == DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainGridlinesVisible == DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.rangeGridlinesPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isDefined()); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainGridlinesVisible == DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(!this.domainGridlinesVisible == DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.rangeGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf('.');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(' ');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(',');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf(':');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.getLength();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.indexOf('n', '-');
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of expression,} ,map.put(axisIndex, axisIndex);
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,axisIndex = indexOf(axisIndex); map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
patch is same with buggy,,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] ';' expected,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + Color.red;
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + 1;
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + Color.blue;
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLabel(); if(layer!= null) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(index == 0) { Layer layer = getLastChange(); if(layer!= null) { addRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(layer.getLowerBound()!= null) { addRangeMarker(index, marker); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(layer.getLowerBound()!= null) { marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(layer.getLowerBound()!= null) { addRangeMarker(label); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(layer.getLowerBound()!= null) { addRangeMarker(( Layer)marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(layer.getPadding()!= null) { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(layer.isEmpty()) { marker.setLength(0); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastChange(); if(layer.getLowerBound()!= null) { addRangeMarker(label, marker); }
patch is same with buggy,,if (markers == null) { ,if(markers == null) {
increase failing tests, [FE] NullPointerException,if (markers == null) { ,if(this.backgroundRangeMarkers == null) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (markers == null) { ,if(markers == null || index < this.backgroundRangeMarkers.get(new Integer(index), markers)) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (markers == null) { ,if(markers == null || index >= this.backgroundRangeMarkers.get(new Integer(index), markers)) {
compilation error,[CE] bad operand types for binary operator '<',if (markers == null) { ,if(markers == null || index < this.backgroundRangeMarkers.get(new Integer(index))) {
compilation error,[CE] bad operand types for binary operator '>=',if (markers == null) { ,if(markers == null || index >= this.backgroundRangeMarkers.get(new Integer(index))) {
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]!= null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] == null, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] illegal start of expression,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null >> ;
compilation error,[CE] illegal start of expression,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null!= ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] << null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] >> null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] < null, null, null, null } ;
patch is same with buggy,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,AxisLocation,Stroke),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.rangeAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 0);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 4);
compilation error,[CE] cannot find symbol LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.LEFT, BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxisLocation,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocation);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 3);
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index >= 0) { removeDomainMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index == 0) { removeDomainMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { notifyListeners(new ThreatChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { int index = marker.indexOf(layer); if(index < 0) { removeDomainMarker(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { notifyListeners(new ThreatChangeEvent(this)); }
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisMap = new DomainAxisMap();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getLocale();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocale();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocalPart();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getLocalPart();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis, domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNonDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removePossibleMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeWhitespaceMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLeafMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNullPointer(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol mayHaveSideEffects,if (notify) { ,if(this.mayHaveSideEffects) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.mayHaveSideEffects()) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node == null && this.notify) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation == null || this.notify) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node!= null && this.notify) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node == null && notify) {
compilation error,[CE] cannot find symbol node,if (notify) { ,if(this.node!= null && notify) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation == null) {
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureBase64Visible();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePositionAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureGlobalAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureVisibleAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdge();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePosition();
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new XYDataset();
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new XYDataset(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new DoubleMap();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new Dataset(this.domainAxis);
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new NullPointerException();
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new Base64Variants();
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(8.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(7.0, 7.0, 7.0, 7.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 2.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0, 3.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 8.0, 8.0);
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { this.axis.
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { this.axis.
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { this.axis.configure
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { axis.
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis instanceof ValueAxis) { this.axis
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { axis.
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { this.rangeAxes
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { this.axis.configure
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { this.rangeAxes
compilation error,[CE] not a statement,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { this.axis.re
compilation error,[CE] variable layer is already defined in method removeDomainMarker(Marker,Layer),,Layer layer = getLastChain().getLowerBound();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer.isEmpty()) { marker.setLength(0); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer.isEmpty()) { removeDomainMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer!= null) { removeDomainMarker(marker, layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = new Layer(); if(layer.isEmpty()) { marker.setLength(0); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(Marker,Layer),,Layer layer = getLastChain();
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer.isEmpty()) { marker.detachFromParam(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer!= null) { marker.detachFromParam(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLabel(); if(layer!= null) { removeDomainMarker(marker); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(Marker,Layer),,Layer layer = getLastChain().getLastChain();
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis == null) {
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.plot(this) == AxisLocation.BOTTOM_OR_LEFT) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (domainAxis != null) { ,if(this.domainAxisLocation!= null) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (domainAxis != null) { ,if(this.domainAxisLocation!= AxisLocation.TOP_OR_LEFT || this.domainAxisLocation!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.plot(this) == AxisLocation.TOP_OR_LEFT) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.plot(this) == AxisLocation.BOTTOM_OR_RIGHT) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (domainAxis != null) { ,if(this.domainAxisLocation!= AxisLocation.TOP_OR_LEFT) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= getClass()) {
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.SEPARATOR);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.NONE);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, 0);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.SECOND);
compilation error,[CE] illegal start of expression,} ,super.setPosition(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setPosition(index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(getAxisLocation(), this));
compilation error,[CE] illegal start of expression,} ,setPosition(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setPosition(getAxisLocation(), index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis == null) { this.axis.
compilation error,[CE] <identifier> expected,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis!= null) { this.axis.
compilation error,[CE] not a statement,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis!= null) { this.axis.configure
compilation error,[CE] not a statement,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis == null) { this.axis.configure
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null); this.domainAxes = new DomainAxis(this.domainAxes.get(0));
compilation error,[CE] not a statement,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis!= null) { this.axis.set
compilation error,[CE] not a statement,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis == null) { this.axis.set
compilation error,[CE] not a statement,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis instanceof ValueAxis) { this.axis
compilation error,[CE] not a statement,,for(int i = 0; i < this.domainAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.domainAxes.get(i); if(axis!= null) { this.axis.re
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_POPOSE); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to this must be first statement in constructor,,this(DEFAULT_DOMAIN_GRIDLINES, DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainAxisPaint = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); setBasePosition(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] call to this must be first statement in constructor,,this(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastChain().getLastChange(); if(!NotifyPlotManager()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastChain().getLastChange(); if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastChain().getLowerBound(); if(layer!= null) { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastChain().getLowerBound(); if(layer!= null) { marker.append("n"); marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastChain().getLastChange(); if(!NotifyPlotManager()) { addRangeMarker(index, marker); }
compilation error,[CE] unclosed string literal,} ,if(index == 0) { Layer layer = getLastChain().getLowerBound(); if(layer!= null) { marker.append('n'); marker.append("'); }
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastChain().getLowerBound(); if(layer!= null) { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastChild().getLastChild(); if(layer!= null) { marker.append(","); }
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL); this.plot = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= PlotOrientation.HORIZONTAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.CENTER); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(this.dataset!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL); this.subplot = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= PlotOrientation.HORIZONTAL);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getDomainAxisLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocations.get(index);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getDomainAxisLocation(); if(location!= null) { throw new IllegalArgumentException("Null 'location' for index 0 not permitted."); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocations.size();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location =(AxisLocation)getDomainAxisLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocations.get(index); if(location!= null) { throw new IllegalArgumentException("Null 'location' for index 0 not permitted."); }
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location =(AxisLocation)getDomainAxisLocation(); if(location!= null) { throw new IllegalArgumentException("Null 'location' for index 0 not permitted."); }
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getDomainAxisLocation(); if(location!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocations);
patch is same with buggy,,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, location);
increase failing tests, [FE] NullPointerException,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol locale,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(locale, index);
compilation error,[CE] cannot find symbol i,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(i, location);
compilation error,[CE] cannot find symbol position,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, position);
compilation error,[CE] cannot find symbol index,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.index, location);
compilation error,[CE] no suitable method found for set(int,int),this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, 0);
compilation error,[CE] cannot find symbol location,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.location, index);
compilation error,[CE] cannot find symbol focus,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(focus, location);
compilation error,[CE] cannot find symbol position,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(position, index);
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisPlot,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisPlot, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] no suitable method found for set(CategoryPlot,Integer),this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this, new Integer(axisIndex));
compilation error,[CE] cannot find symbol path,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(path, new Integer(axisIndex));
compilation error,[CE] cannot find symbol i,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(i, new Integer(axisIndex));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(seriesIndex, new Integer(index));
compilation error,[CE] cannot find symbol axisReachingPoint,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisReachingPoint, new Integer(axisIndex));
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(i); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.length(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = null; i < this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(null, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(0, location, notify);
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyList(new AxisLocation(location, notify));
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AlertEvent(this));
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location, notify));
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(location, notify);
compilation error,[CE] ')' expected,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location, notify);
compilation error,[CE] ')' expected,setDomainAxisLocation(0, location, notify); ,setNotifyList(new AxisLocation(this, location, notify);
patch is same with buggy,,this.anchorValue = 0.0; ,this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATIONS,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATIONS;
compilation error,[CE] cannot find symbol DEFAULT_ANCORD,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCORD;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCORD_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCORD_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATION,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATION;
compilation error,[CE] cannot find symbol DEFAULT_ANGER_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANGER_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ARRAY_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ARRAY_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANACCESS_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_STROKE, DEFAULT_CROSSHAIR_STROKE); this.domainAxisValue = DEFAULT_CROOSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_STROKE, DEFAULT_CROSSHAIR_STROKE); this.domainAxisValue = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.domainAxisStroke = DEFAULT_CROOSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.domainAxisStroke = DEFAULT_DOMAIN_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.domainAxisStroke = DEFAULT_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.domainAxisStroke = DEFAULT_GLOBAL_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.dataset = new XYDataset(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer(); this.domainAxisStroke = DEFAULT_DOMAIN_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = JXPathIntrospector.getPropertyRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxisStroke = DEFAULT_STROKE;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.getDataset(getItemRenderer()); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.getDataset(getItemRenderer()); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.getDataset(getItemRenderer()); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.getDataset(getItemRenderer()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.getDataset(getItemRenderer());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getBaseValue());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(parent);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparableIndex());
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] <identifier> expected,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protection static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { ResourceBundle localizationResources = ResourceBundle.
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { Preconditions.checkState(localizationResources.
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { return ResourceBundle.getBundle("org.jfree
compilation error,[CE] cannot find symbol localizationResources,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localeizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(0, location);
patch is same with buggy,,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, location);
compilation error,[CE] no suitable method found for set(AxisLocation,AxisLocation),this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(getRangeAxisLocation(), location);
compilation error,[CE] cannot find symbol i,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(i, location);
compilation error,[CE] cannot find symbol index,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.index, location);
compilation error,[CE] cannot find symbol position,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, position);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, 0);
compilation error,[CE] cannot find symbol position,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(position, index);
compilation error,[CE] cannot find symbol locale,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(locale, index);
compilation error,[CE] cannot find symbol target,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(target, location);
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol YEAR,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.YEAR;
compilation error,[CE] cannot find symbol White,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.White;
compilation error,[CE] cannot find symbol BLK,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.BLK;
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] cannot find symbol,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Painting DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] illegal start of expression,} ,fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,XYPlot event = getChangeEvent().getDataset(); event.setChangeEvent(event);
compilation error,[CE] illegal start of expression,} ,XYPlot event = getChangeEvent(); event.addChangeEvent(event);
compilation error,[CE] illegal start of expression,} ,XYPlotChangeEvent event = EventUtils.getDatasetChangeEvent(getChangeEvent()); event.addChangeEvent(event);
compilation error,[CE] illegal start of expression,} ,throw new IllegalStateException("");
compilation error,[CE] illegal start of expression,} ,XYPlotChangeEvent event = EventUtils.getDatasetChangeEvent(getMillis()); event.setChangeEvent(event);
compilation error,[CE] illegal start of expression,} ,XYPlot event = getChangeEvent().getDataset(); event.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,XYPlotChangeEvent event = EventUtils.getDatasetChangeEvent(getMillis()); event.addChangeEvent(event);
compilation error,[CE] illegal start of expression,} ,XYPlotChangeEvent event = new XYPlotChangeEvent(getDataset()); event.addChangeEvent(event);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxisLocation,,Preconditions.checkArgument(!this.mapDatasetToDomainAxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.rangeAxisLocations.set(0, AxisLocation.RIGHT);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol RIGHT,,this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT); this.rangeAxisLocations.set(0, AxisLocation.RIGHT);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxisLocation,,Preconditions.checkArgument(!this.mapDatasetToDomainAxisLocation.BOTTOM_OR_LEFT); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol NEW,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.NEW);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol START_ARRAY,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.START_ARRAY);
compilation error,[CE] cannot find symbol DEFAULT_MARKER,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_MARKER);
compilation error,[CE] cannot find symbol nullPointer,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointer());
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException.node);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey()); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(""));
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey("")); this.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey());
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey()); this.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.rangeAxisLocations.containsKey("")); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYLocation); this.domainAxisLocations = new HashMap();
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent!= null) {
compilation error,[CE] cannot find symbol NONE,if (result == null) { ,if(result == null || result == ValueAxis.NONE.CAPACITY) {
compilation error,[CE] cannot find symbol RANGE,if (result == null) { ,if(result == null || result == ValueAxis.RANGE) {
compilation error,[CE] cannot find symbol valueAxis,if (result == null) { ,if(result == null || result == valueAxis.getRange()) {
compilation error,[CE] cannot find symbol NO_NUMBER_INT,if (result == null) { ,if(result == null || result == ValueAxis.NO_NUMBER_INT) {
compilation error,[CE] cannot find symbol NO_OBJECT,if (result == null) { ,if(result == null || result == ValueAxis.NO_OBJECT) {
compilation error,[CE] cannot find symbol NONE,if (result == null) { ,if(result == null || result == ValueAxis.NONE.CONSTANT) {
compilation error,[CE] cannot find symbol SOURCENAME_ARRAY,if (result == null) { ,if(result == null || result == ValueAxis.SOURCENAME_ARRAY) {
compilation error,[CE] cannot find symbol SOURCENAME_OF_DAY,if (result == null) { ,if(result == null || result == ValueAxis.SOURCENAME_OF_DAY) {
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList(); this.
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList(); this
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocation = new DomainAxisLocation(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocation = new ObjectList(); this.rangeAxisLocations = new ObjectList(); this.
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.rangeAxisLocations = new ObjectList(); this.domainAxisLocations = new ObjectList(); this.
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.rangeAx
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_VISIBLE); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_POP;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_NULL,,Validate.notNull(DEFAULT_NULL); this.domainAxis = domainAxis;
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getItemCount(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.length(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i).length(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = null; i < this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot = getPlot(); this.localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot = ResourceBundle.getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); if(plot == null) { localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); if(plot!= null) { localizationResources = new ResourceBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); if(plot!= null) { localizationResources = new ResourceBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); if(plot == null) { localizationResources = new ResourceBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); if(plot!= null) { return new ResourceBundle("org.jfree.chart.plot.LocalizationBundle"); }
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index); marker.setIndex(index + 1); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.setIndex(index + 1); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.setInitialIndex(index + 1); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index); marker.setIndex(index); markers.add(index); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.append(layer.getUpperBound(), index + 1); marker.append(
compilation error,[CE] not a statement,,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.append(layer.getUpperBound(), index + 1); marker.setIndex
compilation error,[CE] ')' expected,,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.append(layer.getUpperBound(), index + 1, marker.index
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index); marker.setIndex(index); markers.add(index + 1); }
patch is same with buggy,,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot assign a value to final variable columnRenderingOrder,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] cannot find symbol ASCIENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCIENDING;
compilation error,[CE] cannot find symbol Lists,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING || Lists.newArrayList();
compilation error,[CE] cannot find symbol SECENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.SECENDING;
compilation error,[CE] ';' expected,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING, CategoryPlot.NEW;
compilation error,[CE] cannot find symbol SCENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.SCENDING;
compilation error,[CE] ';' expected,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING, CategoryPlot.ZERO;
compilation error,[CE] ';' expected,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING, CategoryPlot.START;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = new RangeGridlinePaint(2.0f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = new RangeGridlinePaint(1.0f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = new RangeGridlinePaint(0.5f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = new RangeGridlinePaint(0.0f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = new RangeGridlinePaint(2.0f);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinePaint!= null); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = new RangeGridlinePaint(1.0f);
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.layer!= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.backgroundDomainMarkers == null || this.layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol layer,if (layer == Layer.FOREGROUND) { ,if(this.layer == Layer.FOREGROUND || this.foregroundDomainMarkers!= null) {
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,axisIndex = getAxis();
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); datasetChanged(new DatasetChangeEvent(this, get
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); databaseChanged(new DatasetChangeEvent(this, get
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); recordChangeEvent(this, get
compilation error,[CE] '(' or '[' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); datasetChanged(new Data
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); areaIndex++; }
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); this.axisIndex++; }
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxes();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getChangeAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getImmediateParentPointer();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getPlot();
compilation error,[CE] cannot find symbol,,axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,PlotOrientation axis = getAxis();
compilation error,[CE] cannot find symbol,,axis = getDomainAxes();
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker,Layer,<null>),addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, null);
compilation error,[CE] inconvertible types,addRangeMarker(0, marker, layer); ,if(marker instanceof CategoryPlot) { addRangeMarker(0, marker, layer); } else { LayerUtils.redeclareVars(marker, Layer.NONE); marker.setLength(0); }
compilation error,[CE] inconvertible types,addRangeMarker(0, marker, layer); ,if(marker instanceof CategoryPlot) { addRangeMarker(0, marker, layer); } else { LayerUtils.redeclareVars(marker, Layer.NO_OBJECT); marker.setLength(0); }
compilation error,[CE] cannot find symbol nullPointerException,addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, nullPointerException.getLowerCase());
compilation error,[CE] cannot find symbol nullPointerException,addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, nullPointerException.node);
compilation error,[CE] inconvertible types,addRangeMarker(0, marker, layer); ,if(marker instanceof CategoryPlot) { addRangeMarker(0, marker, layer); } else { LayerUtils.redeclareVars(marker, Layer.DEFAULT_OUTLINE_MARKER); marker = null; }
compilation error,[CE] inconvertible types,addRangeMarker(0, marker, layer); ,if(marker instanceof CategoryPlot) { addRangeMarker(0, marker, layer); } else { LayerUtils.redeclareVars(marker, Layer.DEFAULT_OUTLINE_MARKER); marker.setLength(0); }
compilation error,[CE] cannot find symbol nullPointerException,addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] inconvertible types,addRangeMarker(0, marker, layer); ,if(marker instanceof CategoryPlot) { addRangeMarker(0, marker, layer); } else { LayerUtils.redeclareVars(marker, Layer.DANGLING_EXPR_RESULT); marker.setLength(0); }
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
compilation error,[CE] cannot find symbol JIN_BEVEL,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]!= 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0.0;
compilation error,[CE] cannot find symbol REDEFAULT_GRIDLINE_PAINT,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = Color.REDEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeSet();
patch is same with buggy,,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset(this.domainAxis);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset(new TreeMap());
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol rangeAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset(this.rangeAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeSet(this.domainAxis);
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new ObjectList();
patch is same with buggy,,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList() + 1;
compilation error,[CE] cannot find symbol setToDomainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.setToDomainAxisMap = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0);
compilation error,[CE] unclosed string literal,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList() +";
compilation error,[CE] no suitable constructor found for ObjectList(double),this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0.0);
compilation error,[CE] cannot find symbol desetToDomainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.desetToDomainAxisMap = new ObjectList();
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = true;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
compilation error,[CE] cannot find symbol rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private boolean scopeCrosshairLockedOnData = false;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] cannot find symbol rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = false;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.annotationList = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_GROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol map,,map.put(axisIndex, axisIndex);
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] cannot find symbol,,axisIndex = indexOf(axisIndex); map.addChangeListener(this);
compilation error,[CE] cannot find symbol,,axisIndex = indexOf(axisIndex); super.mapDatasetToRangeAxis = new Integer(axisIndex);
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot(); index = axisIndex;
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot(); this.axisIndex = index;
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] <identifier> expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.backgroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Int
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.markers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxisLocation = new ObjectList();
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol Maps,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() + Maps.newHashMap();
compilation error,[CE] cannot find symbol Maps,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() + Maps.newHashMap(this.backgroundDomainMarkers);
compilation error,[CE] cannot find symbol Maps,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() + Maps.newHashMap(this.domainAxisLocations);
compilation error,[CE] cannot find symbol This,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();This.domainAxisLocation = new TreeMap();
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.setIndex(index + 1); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index); marker.setIndex(index + 1); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.append(layer.getUpperBound(), index + 1); marker.append(
compilation error,[CE] not a statement,} ,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.append(layer.getUpperBound(), index + 1); marker.setIndex
compilation error,[CE] illegal start of expression,} ,if(index == 0) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.setIndex(index + 1); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.setInitialIndex(index + 1); }
compilation error,[CE] ')' expected,} ,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.append(layer.getUpperBound(), index + 1, marker.index
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = getLastLayout().getLowerBound(); int index = marker.indexOf('n', index + 1); marker.setIndent(index + 1); }
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisFromLocal(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getBranch().indexOf(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getIntValue();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getSeriesIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis().getIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getSeriesIndex();
increase failing tests, [FE] IllegalArgumentException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,axisIndex = getAxis();
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapOutlineStroke(this, getSeriesKey(axisIndex)); datasetChanged(new DatasetChangeEvent(this, get
compilation error,[CE] cannot find symbol mapRelatedToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapRelatedToRangeAxis.addChangeEvent(this, getDataset(index)); }
increase failing tests, [FE] IllegalArgumentException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException("Illegal pointer error:" + this); }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapOutlineStroke(this, getSeriesKey(axisIndex)); datasetChanged(new DatasetChangeEvent(this, getValue
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapOutlineStroke(this, getSeriesKey(axisIndex)); datasetChanged(new DatasetChangeEvent(this, getAuto
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_PAINT, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Integer(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_GRIDLINE_PAINT, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new NullPointer(XYPlot.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_PAINT, DEFAULT_GRIDLINE_SPACE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_PAINT, DEFAULT_GRIDLINE_FLAG);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_PAINT, Color.WHITE);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_GRIDLINE_PAINT, DEFAULT_GRIDLINE_SIZE);
increase failing tests, [FE] NullPointerException,if (yAxis != null) { ,if(yAxis == null) {
patch is same with buggy,,if (yAxis != null) { ,if(yAxis!= null) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.size()!= 0) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null ||!yAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.size() == 0) {
compilation error,[CE] cannot find symbol PlotChangeEventType,if (yAxis != null) { ,if(yAxis!= null || yAxis.getClass()!= PlotChangeEventType.CHART_UPDATED) {
compilation error,[CE] cannot find symbol EventUtil,if (yAxis != null) { ,if(yAxis!= null || EventUtil.isLocal(yAxis)) {
compilation error,[CE] cannot find symbol EventUtils,if (yAxis != null) { ,if(yAxis!= null || EventUtils.isLocal(yAxis)) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.getParent()!= null) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null ||!yAxis.isStatic()) {
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
patch is same with buggy,,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE + 1;
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE || this.rangeGridlinesPaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset));
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.clear(new CategoryDataset(dataset));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset), dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0);
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset, false));
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.setIndex(index); marker.addRangeMarker(layer, index + 1); }
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker),,if(marker!= null) { addRangeMarker(index, marker); } else { Layer layer = getLastLastLastLastLocation(); marker.setPosition(1); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.addRangeMarker(index, marker); } else { addRangeMarker(layer, marker); }
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker),,if(marker!= null) { addRangeMarker(index, marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.addRangeMarker(index, marker); }
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker),,if(marker!= null) { addRangeMarker(index, marker); } else { Layer layer = getLastLastLastLastLastLocation(); marker.setPosition(1); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.annotationRenderer = new java.util.ArrayList();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol,,addItemRenderer(baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = domainAxis;
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(baseline); this.annotationRenderer = new java.util.ArrayList();
compilation error,[CE] no suitable method found for addDomainMarker(Marker,Layer),,addDomainMarker(baseline, Layer.BACKGROUND); this.domainAxis = DEFAULT_DOMAIN_MARKER;
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(index >= this.datasets.size()) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
increase failing tests, [FE] AssertionFailedError,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_SOURCE));
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE);
compilation error,[CE] cannot find symbol START_ARGUMENT,,Preconditions.checkNotNull(XYPlot.START_ARGUMENT);
compilation error,[CE] cannot find symbol START_OBJECT,,Preconditions.checkNotNull(XYPlot.START_OBJECT);
compilation error,[CE] cannot find symbol XYPlotContext,,Preconditions.checkNotNull(XYPlotContext.TYPE);
compilation error,[CE] cannot find symbol XYPlotContext,,Preconditions.checkNotNull(XYPlotContext.TYPE_INCLUSION);
compilation error,[CE] cannot find symbol XYPlotContext,,Preconditions.checkNotNull(XYPlotContext.TYPE_OPTIONAL_POLICY);
compilation error,[CE] cannot find symbol XYPlotStart,,Preconditions.checkNotNull(XYPlotStart);
compilation error,[CE] cannot find symbol TYPE,,Preconditions.checkNotNull(XYPlot.TYPE);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = SerialUtilities.createRangeCrosshairPaint(this.domainAxis, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] cannot find symbol domainAxis,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = SerialUtilities.deepCrosshairPaint(this.domainAxis, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol domainAxis,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = SerialUtilities.deepCrosshairPaint(this.domainAxis);
patch is same with buggy,,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol position,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, position);
compilation error,[CE] bad operand types for binary operator '-',this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, location - 1);
compilation error,[CE] cannot find symbol position,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, position - 1);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.domainAxisLocation, location);
compilation error,[CE] no suitable method found for set(int,int),this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, 0);
compilation error,[CE] cannot find symbol i,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(i, location);
compilation error,[CE] no suitable method found for set(int,int),this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, -1);
compilation error,[CE] cannot find symbol area,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, area);
increase failing tests, [FE] NullPointerException,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(0, location);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis);
compilation error,[CE] cannot find symbol DomainAxis,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(DomainAxis.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new DefaultDomainAxis());
compilation error,[CE] cannot find symbol DomainAxis,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(DomainAxis.USE_DEFAULT_DOMAIN_GRIDLINES);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new DefaultDomainAxisEquals(domainAxis));
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new DefaultDomainAxisItemRenderer());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainCrosshairVisible = false;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainCrosshairVisible = false;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainCrosshairVisible = false;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.domainCrosshairVisible = false;
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol Lists,,this.domainAxisLocations = Lists.newArrayList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = Collections.emptyList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] incompatible types,,this.domainAxisLocations = Collections.emptySet();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYLocation);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = null;
compilation error,[CE] cannot find symbol domainAxisLocation,,Preconditions.checkState(this.domainAxisLocation!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations.size() > 0);
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = Maps.newHashMap();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = this.axis.getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = Plot.getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = this.getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = this.axis.getParent();
compilation error,[CE] cannot find symbol,,AxisAxis axis = getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,Node axis = getAxis();
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex);
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(XYPlot)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(XYPlot)this.mapDataset.get(axisIndex);
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < K, V>)getDataset().getAxisEdge();
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(XYPlot)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(XYPlot)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] cannot find symbol GENERAL_UPDATED,,e.setType(ChartChangeEventType.GENERAL_UPDATED); notifyListeners(e);
compilation error,[CE] cannot find symbol TYPE_REDEFINITION,,e.setType(ChartChangeEventType.TYPE_REDEFINITION); notifyListeners(e);
compilation error,[CE] cannot find symbol TYPE_REDEFINITION,,e.setType(ChartChangeEventType.TYPE_REDEFINITION);
compilation error,[CE] cannot find symbol,,e.setChangeEvent(this);
compilation error,[CE] cannot find symbol,,e.removeChangeListener(e);
compilation error,[CE] cannot find symbol GENERAL_INITIALIZED,,e.setType(ChartChangeEventType.GENERAL_INITIALIZED); notifyListeners(e);
compilation error,[CE] cannot find symbol,,e.setCause(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol CHART_CHECKED,,e.setCause(ChartChangeEventType.CHART_CHECKED); notifyListeners(e);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, 0);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, this.markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, Layer.peek());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, null);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers, Layer.class);
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis - this.domainAxisLocation);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, DomainAxisLocation.TOP_OR_LEFT);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, DomainAxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.renderer = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderer = new ObjectList();
compilation error,[CE] cannot find symbol,,SetDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT); this.renderer = new ObjectList();
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] illegal start of type,,return Collections.emptySet();
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT, Font.PLAIN, 10);
compilation error,[CE] illegal start of type,,return Sets.newHashSet();
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT, Font.PLAIN);
compilation error,[CE] illegal start of type,,return Collections.emptyList();
compilation error,[CE] illegal start of type,,return UnsupportedFunction();
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT, Font.PLAIN, 1);
compilation error,[CE] illegal start of type,,return new CategoryPlot(Font.DEFAULT_VALUE_LABEL_FONT)+ Font.PLAIN, 10);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_RANGE_GRIDLINES);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setRangeAxis(boolean),configureRangeAxes(); ,setRangeAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new HashMap();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new TreeMap();
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new Class();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ClassList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] List is abstract; cannot be instantiated,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new List();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new TreeList();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot.DEFAULT_GRIDLINE_STROKE =(CategoryPlot)super.getPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot.DEFAULT_GRIDLINE_STROKE =(CategoryPlot)getPlot();
compilation error,[CE] invalid method declaration; return type required,,CategoryPlot plot =(CategoryPlot)getPlot(); getPlot().reset();
compilation error,[CE] <identifier> expected,,CategoryPlot.DEFAULT_GRIDLINE_STROKE =(CategoryPlot)this.getPlot();
compilation error,[CE] <identifier> expected,,CategoryPlot.DEFAULT_GRIDLINE_STROKE = getPlot();
compilation error,[CE] invalid method declaration; return type required,,CategoryPlot plot =(CategoryPlot)getPlot(); getPlot().clear();
compilation error,[CE] <identifier> expected,,CategoryPlot.DEFAULT_GRIDLINE_STROKE = new CategoryPlot(0.0f);
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)super.getPlot();
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADDING;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_POP;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAGE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PACK;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PACE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP;
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GLIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_STROKE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_LOCAL_GRIDLINE_STROKE;
increase failing tests, [FE] NullPointerException,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GIDLINE_STROKE;
patch is same with buggy,,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10); ,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotationIntrospector =(XYItemRenderer)super.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotationIntrospector =(XYItemRenderer)super.renderer.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.annotationIntrospector =(XYItemRenderer)super.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.annotationIntrospector =(XYDataset)super.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.annotationIntrospector =(XYItemRenderer)this.annotations.get(0);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotationIntrospector =(XYItemRenderer)this.annotations.get(0);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol chartChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.chartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol ChartChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.UPDATED);
compilation error,[CE] package This does not exist,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(This.ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setPrototypeBasedOn(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] package This does not exist,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(This.DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] package This does not exist,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(This.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol This,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(This.DATASET_UPDATED);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDataset); this.domainAxis =(XYDataset)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.renderer;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.rangeAxis =(XYItemRenderer)super.renderer;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.rangeAxis =(XYItemRenderer)super.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.visit(this);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.rangeAxis =(XYItemRenderer)super.visit(this);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)getDomainAxis();
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE;
patch is same with buggy,,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_FIELD_LINE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_EMPTY;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_FIELD_NAME;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_FIELD_NAMES;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_BOTTOM;
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.rangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol plotToRangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.plotToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol setToRangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.setToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();This.rangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisOffset,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList(this.domainAxisOffset);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFileData(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundDomainMarkers, this.backgroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFileData(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundDomainMarkers, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocale(layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFileData(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFile(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFileData(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxis);
compilation error,[CE] cannot find symbol rangeAxisNames,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisNames);
compilation error,[CE] cannot find symbol rangeAxisItemLocations,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisItemLocations);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol rangeAxisResolver,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisResolver);
compilation error,[CE] cannot find symbol annotationAxisLocations,this.rangeAxisLocations = new ObjectList(); ,this.annotationAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisNodes,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisNodes);
patch is same with buggy,,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot) {
increase failing tests, [FE] NullPointerException,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)) {
increase failing tests, [FE] NullPointerException,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)|| parent instanceof CategoryPlot) {
compilation error,[CE] illegal start of expression,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&(( CategoryPlot)parent).getRangeAxis() == getRangeAxis())) {
compilation error,[CE] illegal start of expression,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&(( CategoryPlot)parent).getRangeAxis() == (CategoryPlot)parent)) {
compilation error,[CE] illegal start of expression,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&(( CategoryPlot)parent).getRange().equals(getRangeAxis()))) {
compilation error,[CE] illegal start of expression,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&& isEnabled(Feature.QUOTE_FIELD_NAMES))) {
compilation error,[CE] illegal start of expression,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&(( CategoryPlot)parent).getRangeAxis()!= (CategoryPlot)parent)) {
compilation error,[CE] bad operand types for binary operator '==',if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&&(( CategoryPlot)parent).getRangeAxis() == index) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(!(parent instanceof CategoryPlot)&& isRangeAxisEmpty()) {
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol,,super.configureRangeAxes();
compilation error,[CE] no suitable method found for get(),,this.rangeAxes =(XYPlot)this.rangeAxes.get();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this.rangeAxes);
compilation error,[CE] incompatible types,,this.rangeAxes =(XYPlot)this.rangeAxes.get(0);
compilation error,[CE] cannot find symbol i,,this.rangeAxes =(XYPlot)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,,this.rangeAxes =(XYPlot)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol,,super.setRangeAxes(this.rangeAxes);
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index - 1);
compilation error,[CE] no suitable method found for get(int,int),result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, index + 1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index + 1);
compilation error,[CE] cannot find symbol GENERAL,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.GENERAL);
compilation error,[CE] cannot find symbol START_ARG,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.START_ARG);
compilation error,[CE] no suitable method found for get(int,int),result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, index);
compilation error,[CE] cannot find symbol START_ARGB,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.START_ARGB);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index-1);
compilation error,[CE] cannot find symbol START_ARGUMENT,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.START_ARGUMENT);
patch is same with buggy,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getLowerBound();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> marker = getLastChild().getLowerBound();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getNext();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getTopSize();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getRange();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> marker = getLastPointer();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastLabel();
patch is same with buggy,,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_POP;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PACK;
compilation error,[CE] cannot find symbol DEFAULT_EMPTY,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_EMPTY;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PACE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADDING;
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers.remove(marker); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,for(int index = 0; index < this.foregroundRangeMarkers.size(); index++) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(index >= this.foregroundRangeMarkers.size()) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers.remove(marker); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.backgroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Int
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (marker == null) { ,if(marker == null || marker.getClass()!= this.backgroundRangeMarkers.get(index)) {
compilation error,[CE] cannot find symbol foregroundRangeMarker,if (marker == null) { ,if(marker == null || marker.getClass()!= this.foregroundRangeMarker) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (marker == null) { ,if(marker == null || marker.getClass()!= this.foregroundRangeMarkers.get(index)) {
compilation error,[CE] cannot find symbol backgroundRangeMarker,if (marker == null) { ,if(marker == null || marker.getClass()!= this.backgroundRangeMarker) {
compilation error,[CE] incomparable types: Class and Map,if (marker == null) { ,if(marker == null || marker.getClass()!= this.foregroundRangeMarkers) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.isNull()) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol get,if (marker == null) { ,if(marker == null || marker.getClass()!= this.backgroundRangeMarkers.get) {
compilation error,[CE] no suitable method found for remove(int),if (marker == null) { ,if(marker == null || marker.getClass()!= this.backgroundRangeMarkers.remove(index)) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselineStroke = new BasicStroke(0.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(0.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.renderer = new RangeAxisRenderer();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.renderer = new XYRenderer(new RangeAxisEquals(domainAxis, rangeAxis));
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis()); this.dataset = dataset;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = rangeAxis.getRange();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.renderer = new XYRenderer(new RangeAxisItemRenderer());
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = rangeAxis.getRange();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.renderer = new XYRenderer(new RangeAxisEquals(domainAxis));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = XYItemRenderer.newInstance();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = XYItemRenderer.createXYDataset(dataset);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainPaint = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainPaint = DEFAULT_LOAD_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainPaint = DEFAULT_COSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainPaint = DEFAULT_CROPSHAIR_PAINT;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index >= 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index >= 0) { this.foregroundDomainMarkers.clear(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index!= 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index < 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size() - 1;
patch is same with buggy,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 4);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 0);
compilation error,[CE] no suitable method found for set(int,AxisLocation,Stroke),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 3);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 1);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 2);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, 5);
compilation error,[CE] cannot find symbol domainAxisStroke,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisStroke);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Validate.isTrue(this.domainAxis!= null);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.domainAxis = domainAxis;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis); this.mapDatasetToDomainAxis(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,Validate.isTrue(this.domainAxis instanceof ValueAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = valueAxis(this.domainAxis); this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = valueAxis(this.domainAxis);
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = null;
patch is same with buggy,,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,private boolean domainCrosshairLockedOnData = true; ,private null domainCrosshairLockedOnData = true;
compilation error,[CE] ';' expected,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLocked OnData = false;
compilation error,[CE] cannot find symbol False,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = False;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.rangeAxis = new RangeAxisLocations();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.rangeAxisLocations = new RangeAxisLocations();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.rangeAxis = new RangeAxisLocations();
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); this.plotToDomainAxisMap = new TreeMap();
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); this.plotToDomainAxisMap = new TreeMap(); this.domainAxisMap =
compilation error,[CE] cannot find symbol domainAxis,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); this.domainAxis = new TreeMap(); this.renderers = new TreeMap(); }
compilation error,[CE] not a statement,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); this.plotToDomainAxisMap = new TreeMap(); this.domainAxis
compilation error,[CE] generics are not supported in -source 1.4,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); this.plotToDomainAxisMap = new TreeMap(); <
compilation error,[CE] not a statement,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); this.plotToDomainAxisMap = new TreeMap(); this.domainAxisMap
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex);
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = indexOf(axisIndex); for(int i = 0; i < index; i++) { mapDatasetToRangeAxis =(MapDataset)this.axisIndex.get(i); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(XYPlot)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = indexOf(axisIndex); for(int i = 0; i < index; i++) { mapDatasetToRangeAxis = new HashMap(); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] illegal start of expression,,for(int i = 0; i < mapDataset.size(); i++) { if(axisIndex < axisIndex) { index += axisIndex; }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(XYPlot)this.mapDataset.get(axisIndex);
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex + 1;
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol marker,,if(this.marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,if(marker!= null) { throw new JXPathInvalidUseException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,if(marker!= null) { throw new IllegalArgumentException(""); } else { Layer layer = getLastModule(); marker = null; }
compilation error,[CE] cannot find symbol,,if(marker!= null) { throw new JXPathNotFoundException(""); }
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,if(marker!= null) { throw new IllegalArgumentException(""); } else { Layer layer = getLastModule(); marker.appendChangeListener(this); }
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] cannot find symbol YEAR,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.YEAR;
compilation error,[CE] variable BLACK might not have been initialized,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE, BLACK;
compilation error,[CE] cannot find symbol START,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.START;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromEncoded(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromStack(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers).size();
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this, this));
compilation error,[CE] illegal start of expression,} ,setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,if(!notifyListeners()) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol marker,if (notify) { ,if(this.marker!= null) {
compilation error,[CE] cannot find symbol strictValuesFunction,if (notify) { ,if(this.strictValuesFunction) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.strictValuesHaveSideEffects()) {
compilation error,[CE] cannot find symbol strictValuesHaveSideEffects,if (notify) { ,if(this.strictValuesHaveSideEffects) {
compilation error,[CE] cannot find symbol annotation,if (notify) { ,if(this.annotation) {
compilation error,[CE] cannot find symbol marker,if (notify) { ,if(this.marker == null) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.strictValuesIgnoreCase(notify)) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(!this.notify) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getRangeAxis()!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.hasChangeListener()) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getRange()!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getScope()!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getParent()!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.containsKey(this)) {
compilation error,[CE] incomparable types: Class and CategoryAxis,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getClass()!= domainAxis) {
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastChain();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild();
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,Layer layer = getLastChild();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastModule();
compilation error,[CE] cannot find symbol,,super.addMarker(marker);
compilation error,[CE] cannot find symbol Layer,,Layer> layer = getLastChild();
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getRangeMarker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker!= null);
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getRangeMarker(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getRangeMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker == null);
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] incompatible types,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new ArrayList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.BackgroundRangeMarkers);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new hashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedStdItems();
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.BackgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxisNames,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.domainAxisNames);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getCfg().getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,CategoryPlotAxis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,Node axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxesByName();
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,updateListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,fireDatasetChanged();
compilation error,[CE] generics are not supported in -source 1.4,notifyListeners(e); ,notifyListeners(e, new LinkedHashMap < CategoryPlot>());
compilation error,[CE] generics are not supported in -source 1.4,notifyListeners(e); ,notifyListeners(e, new LinkedHashMap < DatasetChangeEvent>());
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this, this));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this, this));
compilation error,[CE] generics are not supported in -source 1.4,notifyListeners(e); ,notifyListeners(e, new LinkedHashMap < DatasetChangeEventType>());
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,this.annotations = new java.util.ArrayList(); ,this.annotations = isEmpty()? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.XY_ANNOTATIONS)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.XY_ANNOTATIONS_PER_ANNOTATION)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.XY_ANOTATIONS_PER_ANNOTATION)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.XY_ANNOTATIONS_PER_ANNOTATION)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,this.annotations = new java.util.ArrayList(); ,this.annotations =(java.util.ArrayList)this.dataset.getAnnotations();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.XY_ANNOTATIONS);
increase failing tests, [FE] NullPointerException,this.annotations = new java.util.ArrayList(); ,this.annotations =(java.util.ArrayList)this.getAnnotations();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer);
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private static boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private false boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private super boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_FIELD_NAME,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_FIELD_NAME);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] cannot find symbol CHART,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART);
compilation error,[CE] cannot find symbol CHART_NEW,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_NEW);
compilation error,[CE] cannot find symbol CHART_SET,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_SET);
compilation error,[CE] cannot find symbol CHART_NAME,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_NAME);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_FIELD_NAME,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_FIELD_NAME);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_FIELD_NAME,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_FIELD_NAME);
compilation error,[CE] cannot find symbol CHART_NEW,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_NEW);
compilation error,[CE] cannot find symbol CHART,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART);
compilation error,[CE] cannot find symbol CHART_NEW,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_NEW);
compilation error,[CE] cannot find symbol CHART_DELETE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_DELETE);
compilation error,[CE] cannot find symbol CHART_NAME,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_NAME);
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.Plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.Localization Bundle");
patch is same with buggy,,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, location);
compilation error,[CE] bad operand types for binary operator '-',this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, location - 1);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, 0);
compilation error,[CE] cannot find symbol position,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, position - 1);
compilation error,[CE] cannot find symbol position,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, position);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.rangeAxisLocation, location);
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol i,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(i, location);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.rangeAxisLocation, index, location);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, -1);
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxises();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdge();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEquals();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisElements();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdges();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisses();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisNames();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisElement();
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.setPaint(this); marker.addRangeMarker(layer, marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.setLabel(layer); } else { addRangeMarker(margin); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.setPaint(this); marker.addRangeMarker(layer); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.append(layer).append('n'); } else { addRangeMarker(margin); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.append(layer).append('n'); } else { addRangeMarker(this, marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.addRangeMarker(layer, marker); } else { addRangeMarker(margin); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLast(); marker.append(layer).append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.append(layer).append("n"); }
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol DateTimeZone,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeZone.UTC, DEFAULT_CROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol DateTimeUtils,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis(), DEFAULT_CROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol DateTimeZone,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeZone.getDefault(), DEFAULT_CROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol DateTimeZone,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeZone.UTC, DEFAULT_GROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VISIBLE,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DEFAULT_GROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashList();
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMapBuilder();
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMapStart();
patch is same with buggy,,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(CategoryPlot,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(this, location, notify);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(1, location, notify);
compilation error,[CE] cannot find symbol renderer,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, this.renderer);
compilation error,[CE] no suitable method found for setRangeAxisLocation(int,AxisLocation,<null>),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, null);
compilation error,[CE] cannot find symbol nullPointerException,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, nullPointerException);
compilation error,[CE] no suitable method found for setRangeAxisLocation(int,AxisLocation,int),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, 1);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,Integer index = indexInList(this.rangeAxisLocation);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,Integer index = indexInList(this.rangeAxisLocations, location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.range);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation); AxisLocation location = this.rangeAxisLocation.getLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation); if(index < 0) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,Integer index = indexInList(this.rangeAxisLocations);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxis); this.domainAxis = rangeAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet();
compilation error,[CE] cannot find symbol Lists,,this.domainAxisLocations = Lists.newArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
compilation error,[CE] incompatible types,,this.domainAxisLocations = Collections.emptyList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = null;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new HashMap();
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISIBILITY,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBILITY;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VISIBLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_RANGE_CROSSHAIR_VISIBLE;
compilation error,[CE] incompatible types,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = null;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VOID,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VOID;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VISSIBLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISSIBLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VisIBLE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VisIBLE;
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] non-static method getClass() cannot be referenced from a static context,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE + getClass().getName();
compilation error,[CE] bad operand types for binary operator '+',public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] ';' expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke(1.0f));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.datasets = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset);
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.datasets = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(!this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.domainAxis = new HashMap();
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private static boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null rangeCrosshairLockedOnData = true;
compilation error,[CE] ';' expected,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLocked OnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null rangeCrosshairLockedOnData = false;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this.datasets;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size());
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset();
increase failing tests, [FE] NullPointerException,CategoryDataset result = null; ,CategoryDataset result = getDataset();
increase failing tests, [FE] NullPointerException,CategoryDataset result = null; ,CategoryDataset result = this.getDataset();
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getPlot());
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this;
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.size());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getPlot().getIndex());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getPlotIndex());
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] bad operand types for binary operator '!=',if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getClass()!= this.drawSharedDomainAxis) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.drawSharedDomainAxis) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getDomain()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasOwnPropertyName("")) {
compilation error,[CE] cannot find symbol propertyName,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasOwnPropertyName(propertyName)) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.hasOwnProperty("")) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getPlot()!= null) {
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] illegal start of expression,if (axis != null) { ,if(!(axis!= null)&& axis.getParent().getType() == Token.EXPR_RESULT)) {
compilation error,[CE] illegal start of expression,if (axis != null) { ,if(!(axis!= null)&& axis.getParent().getType() == Token.FUNCTION || axis.getType() == Token.EXPR_RESULT)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.getParent().getType() == Token.FUNCTION || axis.getType() == Token.SCRIPT) {
compilation error,[CE] illegal start of expression,if (axis != null) { ,if(!(axis!= null)&& axis.getParent().getType() == Token.FUNCTION || axis.getType() == Token.CATCH)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.getParent().getType() == Token.FUNCTION || axis.getName().equals("xml")) {
compilation error,[CE] illegal start of expression,if (axis != null) { ,if(!(axis!= null)&& axis.getParent().getType() == Token.FUNCTION || axis.getType() == Token.VAR)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.getParent().getType() == Token.EXPR_RESULT) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.isLocal()) {
compilation error,[CE] variable e is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent e = new PlotChangeEvent(this);
compilation error,[CE] cannot find symbol CHARTS,,Preconditions.checkNotNull(ChartChangeEventType.CHARTS);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol CHART_UNDEFINED,,Preconditions.checkNotNull(ChartChangeEventType.CHART_UNDEFINED);
compilation error,[CE] variable e is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent e = new PlotChangeEvent(this); notifyListeners(e);
compilation error,[CE] cannot find symbol CHARTS_OUT,,Preconditions.checkNotNull(ChartChangeEventType.CHARTS_OUT);
compilation error,[CE] cannot find symbol CHARTS_UNDEFINED,,Preconditions.checkNotNull(ChartChangeEventType.CHARTS_UNDEFINED);
compilation error,[CE] cannot find symbol CHART_UPDATED,,Preconditions.checkNotNull(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol CHARTS_OUT,,Preconditions.checkNotNull(ChartChangeEventType.CHARTS_OUT); notifyListeners(new XYPlotChangeEvent(this));
compilation error,[CE] cannot find symbol CHARTS_UPDATED,,Preconditions.checkNotNull(ChartChangeEventType.CHARTS_UPDATED);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getXYItemRenderer();
compilation error,[CE] cannot find symbol dataset,,XYItemRenderer rendered =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getSelectedRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getLowerBound();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.dataset);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index!= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker.getLowerBound());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index >= 0) { throw new NullPointerException(""); }
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new HashMap();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis);
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new TreeMap();
compilation error,[CE] cannot find symbol rangeAxisElements,this.rangeAxes = new ObjectList(); ,this.rangeAxisElements = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes = new ObjectList(); ,this.rangeAxises = new ObjectList();
compilation error,[CE] cannot find symbol,,private TransientPaint[] quadrantPaint = new Paint[0];
compilation error,[CE] <identifier> expected,,private TransientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] illegal start of type,,return(XYPlot)getPlot();
compilation error,[CE] <identifier> expected,,private final transientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private final TransientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private TransientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,,private TransientPaint[] quadrantPaint = new Paint[];
compilation error,[CE] <identifier> expected,,private final TransientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private TransientPaint[] quadrantPaint = new Paint[0], null, null, null, null } ;
compilation error,[CE] <identifier> expected,,private final transientPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYPlot.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFile(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFileData(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocations.size();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocations.get(index);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,Integer location = this.rangeAxisLocations.get(index);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = AxisLocation.getRange();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getRangeAxisLocation();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getRange();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getRange();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesPosition = CategoryAnchor.START;
compilation error,[CE] cannot find symbol domainGridlinesPosition,,this.domainGridlinesPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainGridlinesPosition,,this.domainGridlinesPosition = CategoryAnchor.START;
compilation error,[CE] cannot find symbol domainGridlinesPosition,,this.domainGridlinesPosition = CategoryAnchor.CENTER;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesPosition = CategoryAnchor.END;
patch is same with buggy,,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] ';' expected,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + 1;
compilation error,[CE] cannot find symbol White,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.White;
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return NodePointer.newNumberPointer(DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return NodePointer.newNullPointerException("");
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return Sets.newHashSet();
compilation error,[CE] illegal start of type,,return PlotContext.createPlotContext();
compilation error,[CE] illegal start of type,,return new Integer(Paint.DOUBLE);
compilation error,[CE] illegal start of type,,return XYPlot.newInstance();
compilation error,[CE] illegal start of type,,return NodePointer.newNumberPointerException("");
compilation error,[CE] illegal start of type,,return NodePointer.newNumberPointer(DEFAULT_GRIDLINE_PADDING);
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0.0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToOrientationAxis(0, 0);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!hasChanged()) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Class <?> layer = getLastChangeListener(); if(notify) { fireChangeEvent(); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Class <?> layer = getLastChangeListener(); if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Class <?> layer = getLastChild(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Class <?> layer = getLastChangeListener(); if(marger!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Class <?> layer = getLastChange(); if(notify) { fireChangeEvent(); }
compilation error,[CE] generics are not supported in -source 1.4,,if(marker!= null) { Class <?> layer = getLastChangeListener(); if(marker!= null) { throw new IllegalArgumentException(""); }
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis), this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis - this.domainAxis);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol,this.domainAxes.set(0, domainAxis); ,this.domainAxes.remove(0, domainAxis);
compilation error,[CE] not a statement,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis)- 1;
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis), this.rangeAxes);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,Integer index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromPlot(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromPlot(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFrom(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromPlot();
compilation error,[CE] illegal start of type,,return Stroke.newInstance();
compilation error,[CE] illegal start of type,,return Stroke.class.getSimpleName();
compilation error,[CE] illegal start of type,,return Stroke.getPlot();
compilation error,[CE] illegal start of type,,return Stroke.newStroke("NullPointerException");
compilation error,[CE] illegal start of type,,return Stroke.class.getName();
compilation error,[CE] illegal start of type,,return Stroke.newNullPointerException("");
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return Stroke.newStroke("CrOSSHAIR_STROKE");
compilation error,[CE] illegal start of type,,return Stroke.newStroke("");
compilation error,[CE] illegal start of type,,return Stroke.NO_STROKE;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setPosition(index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol position,,super.setAxisLocation(position); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setPosition(index); notifyListeners(new AxisLocationEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol position,,super.setAxisLocation(position); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRangeAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol position,,super.setRangeAxisLocation(position);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), index);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol loc,,super.setRangeAxisLocation(loc);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis == null);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GLOBAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROOT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROOT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_QUOTE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_QUOTE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VARIABLE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VARIABLE;
compilation error,[CE] cannot find symbol DEFAULT_ROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VOID,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VOID;
patch is same with buggy,,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList();
compilation error,[CE] cannot find symbol markers,markers = new java.util.ArrayList(); ,this.markers = new java.util.ArrayList();
compilation error,[CE] method put in interface Map cannot be applied to given types;,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.put(index, marker); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.add(marker); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.add(index, marker); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.add(marker); marker = new ArrayList(); }
compilation error,[CE] no suitable method found for remove(int),markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new ArrayList(); } else { this.backgroundRangeMarkers.remove(index); marker.addChangeListener(this); }
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] cannot find symbol START,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.START;
compilation error,[CE] variable BLACK might not have been initialized,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE, BLACK;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.RED);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(8.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0, 3.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 2.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(7.0, 7.0, 7.0, 7.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 8.0, 8.0, 8.0);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,Integer index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable result is already defined in method getDataset(int),,CategoryDataset result =(CategoryDataset)getDataset();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getRowKey());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.dataset);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlot());
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.rangeAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.domainAxisLocations.set(0, AxisLocation.TOP_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis(); this.domainAxisLocations.set(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.clear(); fireDatasetChanged();
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeListener(this); fireDatasetChanged();
compilation error,[CE] cannot find symbol,,this.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeListener(this);
compilation error,[CE] cannot find symbol,,fireChanged();
compilation error,[CE] cannot find symbol,,firePropertyChanged();
compilation error,[CE] cannot find symbol,,this.setChangeEvent(event);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.addChangeEvent(event);
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] cannot find symbol JXYDataset,return result; ,return result == null? JXYDataset.VALUE_NULL : result;
compilation error,[CE] cannot find symbol JYDataset,return result; ,return result == null? JYDataset.VALUE_NULL : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getDataset();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getValue();
compilation error,[CE] cannot find symbol NoDataset,return result; ,return result == null? NoDataset.createXYDataset() : result;
compilation error,[CE] cannot find symbol JXYDataset,return result; ,return result == null? JXYDataset.START_ARRAY : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getResult();
compilation error,[CE] cannot find symbol dataset,return result; ,return this.dataset;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] illegal start of type,,return Stroke.newInstance();
compilation error,[CE] illegal start of type,,return Stroke.class.getSimpleName();
compilation error,[CE] illegal start of type,,return Stroke.createPaint(Stroke.DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return StaxUtil.throwInternal();
compilation error,[CE] illegal start of type,,return Stroke.createPaint(Stroke.DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.createPaint(Stroke.STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(FALSE, DEFAULT_GRIDLINE_STROKE, Integer.MAX_VALUE);
compilation error,[CE] illegal start of type,,return new Stroke(FALSE, DEFAULT_GRIDLINE_STROKE, 0.0f);
compilation error,[CE] illegal start of type,,return new Stroke(FALSE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(FALSE, DEFAULT_GRIDLINE_STROKE, Integer.toHexString(0.0f));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = index;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); super.setAxisEdge(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); getAxis().setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
increase failing tests, [FE] AssertionFailedError,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
compilation error,[CE] not a statement,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.black; this.domainZeroBas
compilation error,[CE] not a statement,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.black; this.domainZeroBas
compilation error,[CE] illegal start of expression,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] not a statement,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.black; this.domain
compilation error,[CE] illegal start of expression,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] not a statement,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.black; this.domain
compilation error,[CE] not a statement,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.white; this.domainZeroBas
compilation error,[CE] illegal start of expression,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] not a statement,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; this.domainZeroBaselinePaint = Color.white; this.domainZeroBas
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;
compilation error,[CE] not a statement,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBas
compilation error,[CE] not a statement,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible!= false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselinePaint = Color.black; this.rangeZeroBas
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible!= false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselineStroke = new BasicStroke(0.0f);
compilation error,[CE] illegal start of expression,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; this.rangeZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { this.foregroundRangeMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { this.foregroundRangeMarkers.clear(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(notify) { fireChangeEvent(); }
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.WRITE_INIT_ERROR)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { Preconditions.checkState(this.annotations.size() == 1); this.annotations.add(null); }
compilation error,[CE] cannot find symbol,this.annotations = new java.util.ArrayList(); ,this.annotations = isEmpty()? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new ArrayList(); } else { Preconditions.checkState(this.annotations.size() == 1); this.annotations.add(null); }
increase failing tests, [FE] NullPointerException,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotations.add(null); }
compilation error,[CE] cannot find symbol Preconditions,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { Preconditions.checkState(this.annotations.size() == 0); this.annotations.add(null); }
compilation error,[CE] cannot find symbol Preconditions,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new ArrayList(); } else { Preconditions.checkState(this.annotations.size() == 0); this.annotations.add(null); }
increase failing tests, [FE] NullPointerException,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotations.add(""); }
increase failing tests, [FE] NullPointerException,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotations.add(","); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis()); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainAxis = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis()); this.domainAxis = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = DEFAULT_DOMAIN_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(""));
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof XYPlot));
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer);
patch is same with buggy,,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeSet();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedChangeListener(this);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedSize(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedStructure(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeList();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new LinkedList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.dataset = new XYDataset(this.dataset);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARGUMENT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECTION_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARG, 0);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SIZES);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SRC_OVER);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.class);
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_POP;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADDING;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PACK;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.clone();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasets.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getSelectedRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getDefaultOffset();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRange();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getClass();
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { XYDataset result =(XYDataset)getDataset(index); if(result!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result =(XYDataset)getDataset();
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { XYDataset result =(XYDataset)getDataset(index); if(result!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { XYDataset result =(XYDataset)getDataset(index); if(result!= null) { result = new XYDataset(i); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { XYDataset result =(XYDataset)getDataset(index); if(result == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { XYDataset result =(XYDataset)getDataset(index); if(result!= null) { return result; }
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getXYDataset());
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { XYDataset result =(XYDataset)getDataset(index); if(result!= null) { result = getDataset(); }
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result =(XYDataset)getDataset(); result.addChangeListener(this);
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { XYDataset result =(XYDataset)getDataset(index); if(result!= null) { result = new XYDataset(i, index); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = Maps.newHashMap(); notifyListeners(new AxisLocation(location, this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new NotifyChangeEvent(this));
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = Maps.newHashMap(); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this, location));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this, this));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); this.backgroundRangeMarkers.put(index, marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); this.backgroundRangeMarkers.put(index, markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); this.backgroundRangeMarkers.add(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); this.backgroundRangeMarkers.clear();
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(index);
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(layer == Layer.BACKGROUND) { markers =(CategoryPlot)this.backgroundRangeMarkers.get(index); }
compilation error,[CE] ';' expected,,Layer layer = get Layer(index);
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(markers == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(markers == null) { throw new NullPointerException(""); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(layer == Layer.BACKGROUND) { markers =(CategoryPlot)this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(markers == null) { markers = new java.util.ArrayList(); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(layer == Layer.BACKGROUND) { markers =(CategoryPlot)this.backgroundRangeMarkers.get(new Integer(index), marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(layer == Layer.BACKGROUND) { markers =(CategoryPlot)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.backgroundRangeMarkers.get(index); if(margin!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setPosition(index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(position); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setPosition(index); notifyListeners(new AxisLocationEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(position); notifyListeners(new AxisEvent(this));
compilation error,[CE] no suitable method found for set(XYDataset,int),this.datasets.set(0, dataset); ,this.datasets.set(dataset, 0);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] no suitable method found for set(XYDataset,<null>),this.datasets.set(0, dataset); ,this.datasets.set(dataset, null);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.set(dataset, new XYDataset[dataset.size() ]);
compilation error,[CE] cannot find symbol DEFAULT_DOCUMENT_ERROR,this.datasets.set(0, dataset); ,this.datasets.set(Dataset.DEFAULT_DOCUMENT_ERROR, dataset);
compilation error,[CE] cannot find symbol DEFAULT_DATASET,this.datasets.set(0, dataset); ,this.datasets.set(Dataset.DEFAULT_DATASET);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(1, dataset);
compilation error,[CE] cannot find symbol DEFAULT_DECEMBER,this.datasets.set(0, dataset); ,this.datasets.set(Dataset.DEFAULT_DECEMBER, dataset);
compilation error,[CE] cannot assign a value to final variable renderingOrder,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol EVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.EVERSE + 1;
compilation error,[CE] cannot find symbol RANGE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.RANGE;
compilation error,[CE] cannot find symbol USE_DEFAULT,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.USE_DEFAULT;
compilation error,[CE] cannot find symbol TREVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.TREVERSE + 1;
compilation error,[CE] cannot find symbol DOCUMENT,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.DOCUMENT;
compilation error,[CE] cannot find symbol EVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.EVERSE;
compilation error,[CE] cannot find symbol TREVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.TREVERSE;
compilation error,[CE] cannot find symbol EVERY,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.EVERY;
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getDomainAxis(dataset);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = this.dataset.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getDomainAxis(getItemRenderer());
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis =(ValueAxis)getDomainAxis();
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol getNotify,if (notify) { ,if(this.getNotify) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation.notify) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation.getNotify()) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation!= null) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation.hasChanged()) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(!this.notify) {
compilation error,[CE] cannot find symbol axisLocation,if (notify) { ,if(this.axisLocation.getNotify) {
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new TreeMap();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new TreeList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] List is abstract; cannot be instantiated,this.renderers = new ObjectList(); ,this.renderers = new List();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new TreeArrayList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new TreeSet();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new HashList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new PropertyList();
compilation error,[CE] Collection is abstract; cannot be instantiated,this.renderers = new ObjectList(); ,this.renderers = new Collection();
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol This,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();This.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol This,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(); This.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList() +"".equals(this.domainAxis);
compilation error,[CE] cannot find symbol This,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();This.domainAxisNames = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisNames);
compilation error,[CE] cannot find symbol This,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();This.domainAxisElements = new ObjectList();
compilation error,[CE] cannot find symbol This,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();This.domainAxisMaps = new ObjectList();
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLocalName());
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] boolean cannot be dereferenced,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker).marker.isEmpty();
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, this.marker);
compilation error,[CE] cannot find symbol markers,boolean removed = markers.remove(marker); ,boolean removed = this.markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)&& marker.getLocalName();
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex);
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index + 1;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Plot)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Plot)this.mapDataset.get(axisIndex);
compilation error,[CE] illegal start of expression,} ,mapDatasetToRangeAxis =(Plot)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,this.marker = SerialUtilities.stripLeadingAndTrailingZeroes(index, marker);
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.setIndex(index); marker.addRangeMarker(layer, index + 1); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.setPaint(this); marker.addRangeMarker(index, layer); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.setIndex(index); marker.addRangeMarker(this, marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.addRangeMarker(index, marker); } else { addRangeMarker(layer, marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLast(); marker.addRangeMarker(index, layer); } else { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.setIndex(index); marker.addRangeMarker(layer); }
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker); this.marker = marker;
compilation error,[CE] bad operand types for binary operator '==',else if (layer == Layer.BACKGROUND) { ,else if(index == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '!=',else if (layer == Layer.BACKGROUND) { ,else if(index!= Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '<',else if (layer == Layer.BACKGROUND) { ,else if(index < Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '<=',else if (layer == Layer.BACKGROUND) { ,else if(index <= Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '>=',else if (layer == Layer.BACKGROUND) { ,else if(index >= Layer.BACKGROUND) {
increase failing tests, [FE] NullPointerException,else if (layer == Layer.BACKGROUND) { ,else if(this.backgroundRangeMarkers == null) {
compilation error,[CE] ')' expected,else if (layer == Layer.BACKGROUND) { ,else if(index } Layer.BACKGROUND) {
compilation error,[CE] ')' expected,else if (layer == Layer.BACKGROUND) { ,else if(index { Layer.BACKGROUND) {
compilation error,[CE] ')' expected,else if (layer == Layer.BACKGROUND) { ,else if(index [BUGGY] Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlotParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParentPointer();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPosition();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlotManager();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCurrentPlot();
compilation error,[CE] cannot find symbol Plotparent,Plot parent = getParent(); ,Plotparent = getPlot();
compilation error,[CE] incompatible types,Plot parent = getParent(); ,Plot parent = getPlotType();
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis = false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.drawSharedDomainAxis = false;
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis);
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.drawSharedDomainAxis!= null);
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkArgument(this.drawSharedDomainAxis!= null);
increase failing tests, [FE] NullPointerException,,this.drawSharedDomainAxis = false; this.rangeAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis = true);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getLocation();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getLength();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,Integer location = this.domainAxisLocation.getLocation();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getRowKey();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = AxisLocation.getLength();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getDomainAxisLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int location = this.domainAxisLocation.getLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,Integer location = this.domainAxisLocation.getLocationIndex();
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_THRESHOLD);
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, Integer.MAX_VALUE);
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, false);
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_LOAD_FACTOR);
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_INIT_ERROR);
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPOLOT_TYPE); this.plot = new XYPlot();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(XYPOLOT_TYPE);
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_TYPE);
compilation error,[CE] illegal start of expression,} ,super(XYPlot.DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_NAME);
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis instanceof ValueAxis)?(ValueAxis)this.domainAxis : false;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? null : this.drawSharedDomainAxis;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis instanceof ValueAxis)?(ValueAxis)this.domainAxis : null;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? false : this.drawSharedDomainAxis = true;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null? false : this.drawSharedDomainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis instanceof List)?(List)this.domainAxis : false;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis instanceof List)?(List)this.domainAxis : null;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis instanceof ValueAxis)?(ValueAxis)this.domainAxis: false;
compilation error,[CE] cannot find symbol domainAxis,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis =(this.domainAxis!= null)? false : new ValueAxis(domainAxis);
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.clone();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder = getRowRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getSortOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(SortOrder)this.rowRenderingOrder.clone();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(CategoryPlot)getRowRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getParent();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(SortOrder)getRowRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(CategoryPlot)super.getRowRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final SortOrder rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.newInstance();
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot.DEFAULT_LOAD_FACTOR, false);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot.DEFAULT_LOAD_FACTOR, true);
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot.DEFAULT_CAPACITY, true);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeTheDomainMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Statement(true), false);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Statement(true));
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker(marker);
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot),fireChangeEvent(); ,addRangeMarker(this);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker(index);
compilation error,[CE] cannot find symbol marker,fireChangeEvent(); ,ensureCapacity(this.marker.size());
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,updateLastPointer();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,updateBounds();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,ensureChanged();
compilation error,[CE] cannot find symbol margin,fireChangeEvent(); ,super.addRangeMarker(margin);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,updateLast();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
compilation error,[CE] cannot find symbol rangeAxis,this.renderers.set(0, renderer); ,this.renderers.set(0, this.rangeAxis);
compilation error,[CE] ')' expected,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.XYItemRenderer, this.mapDatasetToDomainAxis(0, renderer);
compilation error,[CE] cannot find symbol XYItemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer);
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.RANGE_TYPE, Renderer.KEY_ANTIALIASING, Renderer.VALUE_ANTIALIAS_ON);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(1, renderer);
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.XYItemRenderer, this.rangeAxis);
compilation error,[CE] ')' expected,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.XYItemRenderer, this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot();
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder.DOUBLE;
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder.DOCUMENT_ORDER;
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder.DOCUMENT;
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder.DOCUMENT_ERROR;
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder.NEVER;
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder);
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder = DatasetRenderingOrder.DOUBLE;
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder.FUNCTION;
compilation error,[CE] <identifier> expected,,private final CategoryPlot instanceof CategoryPlot =(CategoryPlot)getPlot(); this.renderingOrder =(CategoryPlot)this.renderingOrder.DUPLICATE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkArgument(this.domainCrosshairValue!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainCrosshairValue = DEFAULT_CLOSSHAIR;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainCrosshairValue = DEFAULT_CROSSHAIR;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.annotationIntrospector = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.annotationIntrospector = new XYItemRenderer();
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLeftRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removePlotRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removePlotMarker(marker, Layer.FOREGROUND);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 0);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 1);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeStandardMarker(marker, Layer.FOREGROUND);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,double),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 0.0);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLineMarker(marker, Layer.FOREGROUND);
patch is same with buggy,,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex - 1));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] cannot find symbol getLowerBound,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex, getLowerBound));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex, getLastChange()));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex, getSeries()));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(seriesIndex), new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex, getChangeEvent()));
compilation error,[CE] generics are not supported in -source 1.4,,XYItemRenderer <?> renderer = this.dataset.getRenderer();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.getInstance();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.get();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)getDataset();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.getParser();
compilation error,[CE] generics are not supported in -source 1.4,,XYItemRenderer <?> renderer =(XYItemRenderer)this.dataset.getDataset();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.getRenderer();
compilation error,[CE] generics are not supported in -source 1.4,,XYItemRenderer <?> renderer =(XYItemRenderer)this.dataset.get();
compilation error,[CE] generics are not supported in -source 1.4,,XYItemRenderer <?> renderer =(XYItemRenderer)this.dataset.getParent();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getRangeAxis(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(0); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getRangeAxis(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getRangeAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = this.dataset.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(valueAxis)this.dataset.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = super.getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(valueAxis)super.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.prependPath(this);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(valueAxis)super.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(getDefaultAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(position); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this, this));
compilation error,[CE] illegal start of expression,} ,super.setPosition(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,if(!notifyListeners()) { notifyListeners(new AxisLocation(this, this)); } else { notifyListeners(new AxisLocation(this, this)); }
compilation error,[CE] illegal start of expression,} ,super.setPosition(position); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setPosition(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
increase failing tests, [FE] NullPointerException,,if(this.orientation!= PlotOrientation.HORIZONTAL) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new NotifyChangeEvent(this));
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return ExceptionUtils.getCrosshairLockedOnData(this.rangeCrosshairLockedOnData);
compilation error,[CE] illegal start of type,,return ExceptionUtils.getCrosshairLockedOnData(this);
compilation error,[CE] illegal start of type,,return ExceptionUtils.getCrosshairLockedOnData(rangeCrosshairLockedOnData);
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return ExceptionUtils.getCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return getPlot();
compilation error,[CE] illegal start of type,,return Lists.newArrayList();
compilation error,[CE] illegal start of type,,return ExceptionUtils.getCrosshairLockedOnData(this, null);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.domainAxis);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, rangeAxis);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, this.rangeAxis);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxises.set(0, rangeAxis);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(1, rangeAxis);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker.getLowerBound());
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { marker.setLength(0); }
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryItemRenderer <?> renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryItemRenderer <?> renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getSelectedRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getDefaultAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.clone();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRange();
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getAutoRange
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getaxisIndex
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(this, getDataset(index)); } else { mapDatasetToDomainAxis = this; mapDatasetToDomainAxis = new DatasetChangeEvent(this, getData
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToDomainAxis = mapDatasetToDomainAxis(this, getDataset(index));
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getAxis
compilation error,[CE] '(' or '[' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = this; mapDatasetToDomainAxis = new Dataset
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getData
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = this; mapDatasetToDomainAxis = new DatasetChangeEvent(this, get
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getRaw
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getMaxis
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,RectangleEdge),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, RectangleEdge.BOTTOM);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(marker, layer, null);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,RectangleEdge),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, RectangleEdge.LEFT);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,RectangleEdge),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, RectangleEdge.TOP);
compilation error,[CE] cannot find symbol MIN_VALUE,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, RectangleEdge.MIN_VALUE);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.objectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(0);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(renderer);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.blue);
compilation error,[CE] cannot find symbol chrono,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.chrono;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.green);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.weight = 0;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = new XYPlot(this.dataset);
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.plot = new XYPlot();
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= XYPlot.START_OBJECT);
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.itemRenderer = new XYItemRenderer();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.weight!= 0);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis = (ValueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.getDomainAxisEdges();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.getDomainAxises();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.getRootAxis();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.getDomainAxis();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(valueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.getRowKey(i);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_MARKER,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, XYPlot.DEFAULT_DOMAIN_MARKER);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol DEFAULT_CAPACITY,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, XYPlot.DEFAULT_CAPACITY);
compilation error,[CE] cannot find symbol DEFAULT_DOMA_MARKER,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, XYPlot.DEFAULT_DOMA_MARKER);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_MARKER,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, XYPlot.DEFAULT_LOAD_MARKER);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalMarker(0, marker, layer);
compilation error,[CE] cannot find symbol DEFAULT_DOMARKER,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, XYPlot.DEFAULT_DOMARKER);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPaths(marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeftDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,setRangeMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol Plot,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.Plot.DEFAULT_CAPACITY, true);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,if(marker!= null) { addRangeMarker(index, marker, layer, true); } else { addInputRangeMarker(index, marker, layer); }
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,if(marker!= null) { addRangeMarker(index, marker, layer, true); } else { addLowerBoundMarker(index, marker, layer); }
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,if(marker!= null) { addRangeMarker(index, marker, layer, true); } else { addLeftRangeMarker(index, marker, layer); }
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,if(marker!= null) { addRangeMarker(index, marker, layer, true); } else { addRangeMarker(index, marker.getLowerBound(), marker.getUpperBound()); }
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,if(marker!= null) { addRangeMarker(index, marker, layer, true); } else { addLocalMarker(index, marker, layer); }
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return XYPlot.newInstance();
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return this.domainCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData(XYPlot.DEFAULT_LOCKED_ON_DATA);
compilation error,[CE] illegal start of type,,return new XYPlotImpl(XYPlot.DEFAULT_LOCKED_ON_DATA);
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData(XYPlot.class);
compilation error,[CE] illegal start of type,,return new XYPlotImpl(XYPlot.DEFAULT_CrosshairLockedOnData());
compilation error,[CE] illegal start of type,,return this.domainCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return super.domainCrosshairLockedOnData(XYPlot.NONEMPTY_THRESHOLD);
patch is same with buggy,,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_CROSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_LOAD_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_DOUBLE_CROSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_DOUBLE_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol DEFAULT_CLOSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CLOSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_CROSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_DOMAIN_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL_CROSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_GLOBAL_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_CROSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_LOCAL_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_LOSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_LOSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_BLOSSHAIR_PAINT,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_BLOSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = XYItemRenderer.newInstance();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = XYItemRenderer.createXYDataset(dataset);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = this.axis.getAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,Anxis axis = getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxes();
patch is same with buggy,,super(); ,super();
compilation error,[CE] ';' expected,super(); ,super(this.rangeAxis instanceof XYPlot));
compilation error,[CE] not a statement,super(); ,super(this.rangeAxis instanceof XYPlot)? super() : null;
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(this.rangeAxis instanceof XYPlot);
compilation error,[CE] not a statement,super(); ,super(this.itemRenderer instanceof XYPlot)? super() : null;
compilation error,[CE] ';' expected,super(); ,super(this.rangeAxis instanceof XYRenderer));
compilation error,[CE] ';' expected,super(); ,super(this.rangeAxis instanceof XYPlotRenderer));
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(this.rangeAxis instanceof XYPlotRenderer);
compilation error,[CE] ';' expected,super(); ,super(this.itemRenderer instanceof XYPlot));
compilation error,[CE] ';' expected,super(); ,super(this.rangeAxis instanceof XYLabelRenderer));
compilation error,[CE] call to super must be first statement in constructor,,super();
increase failing tests, [FE] NullPointerException,,throw new IllegalArgumentException("");
compilation error,[CE] call to super must be first statement in constructor,,super(NodeUtil.stripLeadingHyphens(this));
compilation error,[CE] call to super must be first statement in constructor,,super(NodeUtil.stripLeadingAndTrailingQuotes(null));
compilation error,[CE] call to super must be first statement in constructor,,super(NodeUtil.getCurrentNodePointerException(""));
compilation error,[CE] call to super must be first statement in constructor,,super(NodeUtil.getCurrentNodePointer());
compilation error,[CE] call to super must be first statement in constructor,,super("NullPointerException:" + getClass().getName());
compilation error,[CE] call to super must be first statement in constructor,,super(NodeUtil.stripLeadingHyphens(getCurrentPlot()));
compilation error,[CE] call to super must be first statement in constructor,,super(NodeUtil.stripLeadingHyphens(getPlotIndex()));
compilation error,[CE] call to super must be first statement in constructor,,super(NodeUtil.getCurrentNodePointerException(this));
patch is same with buggy,,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size();
compilation error,[CE] : expected,int count = this.rangeAxes.size(); ,int count =(this.rangeAxes!= null? this.rangeAxes.size() - 1): this.rangeAxes.size();
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index >= this.rangeAxes.size()) {
patch is same with buggy,,if (index < this.rangeAxes.size()) { ,if(index < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 && index < this.rangeAxes.size()) {
compilation error,[CE] cannot find symbol,if (index < this.rangeAxes.size()) { ,if(!this.rangeAxes.containsKey(index)) {
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis, this.rangeAxisLocations);
compilation error,[CE] cannot find symbol This,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();This.rangeAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes = new ObjectList(); ,this.rangeAxises = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisElements,this.rangeAxes = new ObjectList(); ,this.rangeAxisElements = new ObjectList();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = indexInList(this, axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = indexOf(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis().getIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = Integer.valueOf(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = indexInList(this.datasetToRangeAxisMap);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis().getIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxis().getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECTION_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARG, 0);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SRC_OVER);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.COMMA);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARGUMENT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARG, 0);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(domainAxis));
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.itemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.getDataset();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.clone();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(dataset.isEmpty());
compilation error,[CE] cannot find symbol dataset,,this.dataset = getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getItemRenderer());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
compilation error,[CE] cannot find symbol dataset,,this.dataset = dataset.getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getRowKey());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlot());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset();
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(marker); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,for(int index = 0; index < this.foregroundDomainMarkers.size(); index++) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(marker); }
compilation error,[CE] no suitable method found for remove(int),markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.size()) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ';' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(marker); marker =(ArrayList)this.background
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,} ,if(this.marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new JXPathInvalidUseException(""); }
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.setIndex(index); marker.addRangeMarker(layer, index + 1); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalArgumentException(""); } else { Layer layer = getLastModule(); marker = null; }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLocation(); marker.setPaint(this); marker.addRangeMarker(index, layer); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkState(this.anchorValue == null); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkArgument(this.anchorValue!= null); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.anchorValue!= null); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkArgument(this.anchorValue!= null); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkState(this.anchorValue == null); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.anchorValue!= null); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkArgument(this.anchorValue == null); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] bad operand types for binary operator '==',,Preconditions.checkArgument(this.anchorValue == null); this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, null);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPaths(marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeftDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removePositionMarker(0, marker, layer);
compilation error,[CE] cannot find symbol nullPointerException,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeTheDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeOverrideMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPostmarkers(marker, layer);
compilation error,[CE] incompatible types,,this.rangeAxes =(XYPlot)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] cannot find symbol Sets,,this.rangeAxes = Sets.newHashSet();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes.size() == this.rangeAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol,,super.configureRangeAxes();
compilation error,[CE] cannot find symbol Sets,,this.rangeAxes = Sets.newHashSet(this.rangeAxes.size() - 1);
compilation error,[CE] cannot find symbol Sets,,this.rangeAxes = Sets.newHashSet(this.rangeAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(rangeAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.rangeAxes.size() == 0);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxis);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
increase failing tests, [FE] AssertionFailedError,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocations.set(0, rangeAxis);
increase failing tests, [FE] AssertionFailedError,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol DomainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, DomainAxis.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, new RangeAxis(domainAxis));
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxisLocations);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
compilation error,[CE] not a statement,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,0.5f, new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
compilation error,[CE] not a statement,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,0.5f, new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.5f);
compilation error,[CE] ')' expected,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 1.0f, 1.0f), new BasicStroke(1.0f), new Color(1.0f, 0.5f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f,
compilation error,[CE] ')' expected,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 1.0f, 1.0f), new BasicStroke(1.0f), new Color(1.0f, 0.85f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(1.0f, 1.0f,
compilation error,[CE] ')' expected,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 1.0f, 1.0f), new BasicStroke(1.0f), new Color(1.0f, 0.5f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(1.0f, 0.85f,
compilation error,[CE] ')' expected,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 1.0f, 1.0f), new BasicStroke(1.0f), new Color(1.0f, 0.5f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(1.0f, 1.0f,
compilation error,[CE] ')' expected,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 1.0f, 1.0f), new BasicStroke(1.0f), new Color(1.0f, 0.8f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(1.0f, 0.85f,
compilation error,[CE] ')' expected,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(1.0f, 1.0f, 1.0f, 1.0f), new BasicStroke(1.0f), new Color(1.0f, 0.5f, 0.5f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 8.0f,
compilation error,[CE] cannot assign a value to final variable seriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot assign a value to final variable seriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder =SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol TREVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.TREVERSE;
compilation error,[CE] cannot find symbol RANGE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.RANGE;
increase failing tests, [FE] NullPointerException,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = getSeriesRenderingOrder();
compilation error,[CE] cannot find symbol,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = new XYSeriesRenderingOrder();
increase failing tests, [FE] NullPointerException,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = this.seriesRenderingOrder;
compilation error,[CE] cannot find symbol SeriesPlot,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = getSeriesRenderingOrder(SeriesPlot.START_OBJECT);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private final transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Double(0.0, 0.0);
compilation error,[CE] cannot find symbol,,private transientPoint2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] cannot find symbol,,private TransientPoint2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.00, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Integer(0.0, 0.0);
compilation error,[CE] <identifier> expected,,private transient Point2D.Double(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Double(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(1.0, 0.0);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = XYMarker.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.length();
compilation error,[CE] cannot find symbol,,Int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.getIndex();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = getRangeMarkerIndex();
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this.datasets;
increase failing tests, [FE] StackOverflowError,XYDataset result = null; ,XYDataset result = getDataset();
compilation error,[CE] cannot find symbol dataset,XYDataset result = null; ,XYDataset result = this.dataset;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets.size());
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset();
increase failing tests, [FE] StackOverflowError,XYDataset result = null; ,XYDataset result = this.getDataset();
increase failing tests, [FE] ClassCastException,XYDataset result = null; ,XYDataset result =(XYDataset)this.datasets;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlot();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,super.setRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlots();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,checkAlterAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlotParser();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYChangeEvents();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYChangeEvent();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlotParse();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlotManager();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getParent();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getValueAxis();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndex(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getRangeAxis();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getPlotIndex();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndexes();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = indexOf(parent);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndexedField(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getValueAxis(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndexedVariable(index);
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '-',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT - 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.domainZeroBaselinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.domainZeroBaselinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + Color.black;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index >= 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index >= 0) { this.foregroundDomainMarkers.clear(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index!= 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers); if(index < 0) { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof ValueAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof ValueAxis); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,super.configureDomainAxes(); this.domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,super.configureDomainAxes();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] cannot find symbol,,Preconditions.checkState(this.domainAxes.containsKey(i));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxes.size());
compilation error,[CE] no suitable method found for get(),,Preconditions.checkNotNull(domainAxes.get());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes.size() == this.domainAxes.size());
compilation error,[CE] illegal start of expression,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible!= false) { this.domainCrosshairVisible = false; } else { Preconditions.checkState(this.domainCrosshairVisible); this.domainCrosshairVisible = false; this.domainCrosshairVisible = true;
compilation error,[CE] illegal start of expression,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkState(this.domainCrosshairVisible); this.domainCrosshairVisible = false; this.domainCrosshairVisible = true;
compilation error,[CE] ';' expected,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible!= false) { this.domainCrosshairVisible = false; } else { Preconditions.checkState(this.domainCrosshairVisible); this.domainCrosshairVisible = false; this.domainCrosshairValue = DEFAULT
compilation error,[CE] ';' expected,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible!= false) { this.domainCrosshairVisible = false; } else { Preconditions.checkState(this.domainCrosshairVisible); this.domainCrosshairVisible = false; this.domainCrosshairValue = DEFAULT_
compilation error,[CE] no suitable method found for addRangeMarker(int,Marker,Layer,<null>),addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,setRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol nullPointerException,addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] no suitable method found for addRangeMarker(Layer,Marker),addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { addRangeMarker(layer, marker); }
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,super.addRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { Preconditions.checkState(marker.getLowerBound()); addRangeMarker(0, marker, layer); }
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,setRangeMarker(marker, layer);
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,setRangeMarker(marker, Layer.peek());
compilation error,[CE] illegal start of expression,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { Preconditions.checkState(marker.getLowerBound());
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = new HashMap();
compilation error,[CE] cannot find symbol DOUBLE,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = Color.DOUBLE;
compilation error,[CE] ';' expected,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = Color.blue);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(1, renderer);
compilation error,[CE] no suitable method found for set(CategoryItemRenderer,<null>),this.renderers.set(0, renderer); ,this.renderers.set(renderer, null);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.this, renderer);
compilation error,[CE] <identifier> expected,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.null, renderer);
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.None, renderer);
compilation error,[CE] cannot find symbol Renderer,this.renderers.set(0, renderer); ,this.renderers.set(Renderer.None, null);
compilation error,[CE] cannot find symbol renderinger,this.renderers.set(0, renderer); ,this.renderers.set(0, renderinger);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(!(axis!= null)&& axis.getRange().isEnabled(Feature.FLUSH_PASSED_TO_STREAM)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(!(axis!= null)&& axis.getRange().isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.size() > 0) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(!(axis!= null)&& axis.getRange().isEnabled(Feature.QUOTE_FIELD_NAMES)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(!(axis!= null)&& axis.getRange().isEnabled(Feature.QUOTE_NON_GLOBAL_ANNOTATIONS)) {
compilation error,[CE] cannot find symbol axis,if (axis != null) { ,if(!(axis!= null)&& axis.getRange().equals(this.axis)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(!(axis!= null)&& axis.getRange().isEnabled(Feature.QUOTE_NON_GLOBAL_ANNOTATION)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(!(axis!= null)&& axis.getRange().isEnabled(Feature.QUOTE_NON_GLOBAL_ADJSTORY)) {
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(this);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkState(isEnabled(Feature.AUTO_CLOSE_SOURCE));
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createPlot();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParsePlot();
compilation error,[CE] cannot find symbol,,configureXYPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(getGenericParent());
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result == null? valueAxis.getRange() : result;
compilation error,[CE] cannot find symbol RANGE,return result; ,return result == null? ValueAxis.RANGE : result;
compilation error,[CE] cannot find symbol VALUE_NUMBER_INT,return result; ,return result == null? ValueAxis.VALUE_NUMBER_INT : result;
increase failing tests, [FE] NullPointerException,return result; ,return result == null? getRangeAxis() : result;
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result == null? valueAxis.valueAxis() : result;
compilation error,[CE] cannot find symbol VALUE_RANGE,return result; ,return result == null? ValueAxis.VALUE_RANGE : result;
compilation error,[CE] cannot find symbol START_ARRAY,return result; ,return result == null? ValueAxis.START_ARRAY : result;
compilation error,[CE] cannot find symbol VALUE_RANG,return result; ,return result == null? ValueAxis.VALUE_RANG : result;
compilation error,[CE] cannot find symbol RANGE,return result; ,return result!= null? ValueAxis.RANGE : result;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.indexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.lastIndexOf('n');
compilation error,[CE] cannot find symbol,,Int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.length();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = findRangeMarker(layer, index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.marker.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = getRangeMarkerIndex();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = findRangeMarker(layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = marker.size();
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet(); this.rangeAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet(); this.rangeAxisLocations.set(0, AxisLocation.TOP_OR_RIGHT);
compilation error,[CE] cannot find symbol Sets,,this.rangeAxisLocations = Sets.newHashSet();
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet();
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet(); this.rangeAxisLocations.set(1, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet(); this.rangeAxisLocations.set(1, AxisLocation.TOP_OR_RIGHT);
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet(); this.rangeAxisLocations.set(1, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet(); this.rangeAxisLocations.set(0, AxisLocation.CENTER_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeAxis = renderer.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = renderer.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAxis); this.rangeAxis =(CategoryAxis)super.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = renderer.getValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.annotationList = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkNotNull(this.rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkNotNull(this.rangeAxis); this.annotationList = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,this.domainGridlinesVisible = false;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlineStroke = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesStroke = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.domainZeroBaselineStroke = DEFAULT_
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.domainPaint = DEFAULT_
compilation error,[CE] illegal start of expression,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.domainPaint = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = DEFAULT_GRIDLINE_STROKE; this.domainGridlinesVisible = false; this.domainGridlinePaint = DEFAULT
compilation error,[CE] ';' expected,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.domainZeroBaselineStroke = DEFAULT
compilation error,[CE] illegal start of expression,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; this.domainGridlinesVisible = true; this.domainGridlinesVisible = false; this.domainZeroBaselineStroke =
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange().getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxisIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxisIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromAxis(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(this.rangeAxes);
patch is same with buggy,,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] unexpected type,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE || this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_DOMAINE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAINE_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_PLAIN,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_PLAIN;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_FIELDS,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_FIELDS;
compilation error,[CE] cannot find symbol DEFAULT_DOCUMENT_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOCUMENT_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] unexpected type,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE && this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers);
patch is same with buggy,,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] bad operand types for binary operator '+',this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index)+ 1, markers);
compilation error,[CE] bad operand types for binary operator '+',this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index)+ 1);
compilation error,[CE] cannot find symbol labelNames,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.labelNames);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(null, new Integer(index), markers);
compilation error,[CE] cannot find symbol length,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(index, new Integer(markers.length));
compilation error,[CE] cannot find symbol edge,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.edge);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke!= null); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PAPINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,return new NullPointerException(this.rangeCrosshairLockedOnData());
compilation error,[CE] illegal start of type,,return new NullPointerException(this.rangeCrosshairLockedOnData);
compilation error,[CE] illegal start of type,,return new XYPlotImpl(this.rangeCrosshairLockedOnData);
compilation error,[CE] illegal start of type,,return new XYPlotImpl(this.rangeCrosshairLockedOnData());
compilation error,[CE] illegal start of type,,return XYPlot.newInstance();
compilation error,[CE] illegal start of type,,return super.rangeCrosshairLockedOnData;
compilation error,[CE] illegal start of type,,return new NullPointerException(this.rangeCrosshairLockedOnDataImpl());
compilation error,[CE] illegal start of type,,return new NullPointerException(this.getXYPlot());
compilation error,[CE] illegal start of type,,return new NullPointerException(this.rangeCrosshairLockedOnData(1));
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)&& marker.getLowerBound();
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLowerBound());
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)&& this.marker.isEmpty();
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] boolean cannot be dereferenced,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker).marker.isEmpty();
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] cannot find symbol JIN_BEVEL,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.backgroundRangeMarkers = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.backgroundRangeMarkers); this.rangeAxisRenderer = new RangeAxisRenderer();
compilation error,[CE] incompatible types,,this.backgroundRangeMarkers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.backgroundRangeMarkers = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.backgroundRangeMarkers); this.domainAxisRenderer = new ValueAxisRenderer();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.backgroundRangeMarkers); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol backgroundPlot,,this.backgroundPlot = new XYPlot();
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), index + 1); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), index + 1); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), index + 1); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation(), index); notifyListeners(new AxisEvent(this));
increase failing tests, [FE] NullPointerException,,result = getRangeAxis();
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(this.valueAxis)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(this.valueAxis)) { result += index; }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(this.valueAxis)) { result += valueAxis.getIndex(); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(getRangeAxis())) { result += index; }
compilation error,[CE] ';' expected,,for(int i = 0; i < this.index; i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(this.valueAxis)) { result += valueAxis.getIndex
compilation error,[CE] cannot find symbol,,result = getRangeAxis().getIndex();
compilation error,[CE] not a statement,,for(int i = 0; i < getRangeAxis(); i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(valueAxis.getLowerBound)) { result
compilation error,[CE] illegal start of expression,,for(int i = 0; i < getRangeAxis(); i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(this.valueAxis)) { result += index; }
compilation error,[CE] not a statement,,for(int i = 0; i < getRangeAxis(); i++) { ValueAxis valueAxis = getValueAxis(index); if(valueAxis.equals(valueAxis.getLowerBound())) { result
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] non-static method removeDomainMarker(Marker) cannot be referenced from a static context,,XYPlot.removeDomainMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!Marker.isLocal()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { return null; }
compilation error,[CE] cannot find symbol,,XYPlot.RemoveDomainMarker(marker);
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker!= null);
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker == null);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol defaultItemRenderer,,Preconditions.checkNotNull(defaultItemRenderer); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.LocalizationBundle"); }
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourcesBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,safe static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static resourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange().getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getSeriesIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(parent);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComponentType());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, getIndex());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderer = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(getDomainAxis());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderer = null;
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] no suitable method found for set(CategoryPlot,Integer),this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this, new Integer(axisIndex));
patch is same with buggy,,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol i,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(i, new Integer(axisIndex));
compilation error,[CE] no suitable method found for set(CategoryPlot,int,Integer),this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this, axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol key,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(key, new Integer(axisIndex));
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new ObjectList();
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(1);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(valueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValidAxis axis =(ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange(1);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(valueAxis)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRangeOne();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = super.removeRangeMarker(marker);
compilation error,[CE] cannot find symbol markers,,Preconditions.checkState(this.markers.isEmpty());
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < marker.size(); index++) { if(markers.containsKey(index)) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index);
compilation error,[CE] illegal start of expression,,for(int index = 0; index < marker.size(); index++) { if(markers.remove(index)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < marker.size(); index++) { if(markers.containsKey(index)) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < marker.size(); index++) { if(markers.contains(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,XYPlot marker =(XYPlot)super.removeRangeMarker(index);
compilation error,[CE] illegal start of expression,,for(int index = 0; index < marker.size(); index++) { if(markers.get(index)) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] illegal start of expression,} ,super(dataset); this.renderer = null;
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis()); this.dataset = dataset;
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis()); this.renderer = null;
compilation error,[CE] illegal start of expression,} ,super(getItemRenderer().getValueAxis());
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(getItemRenderer()); this.renderer = null;
compilation error,[CE] illegal start of expression,} ,super(getItemRenderer().getValue());
compilation error,[CE] illegal start of expression,} ,this(null);
compilation error,[CE] illegal start of expression,} ,super(null);
compilation error,[CE] illegal start of expression,} ,super(dataset);
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.backgroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol baseDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.baseDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol BackgroundDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.BackgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol overgroundDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.overgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol outlineDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.outlineDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol fieldDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.fieldDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol plotDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.plotDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol targetDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.targetDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol frontDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.frontDomainMarkers = new HashMap();
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] incompatible types,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new ObjectList();
compilation error,[CE] incompatible types,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new ArrayList();
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashList();
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() ;
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new hashMap();
compilation error,[CE] Map is abstract; cannot be instantiated,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new Map();
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new RectangleList();
compilation error,[CE] unclosed string literal,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() +";
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] NullPointerException,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL;
compilation error,[CE] ';' expected,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.DECEMBER;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.BOTTOM;
compilation error,[CE] cannot find symbol DECEMBER_LOAD_FACTOR,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.DECEMBER_LOAD_FACTOR;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.DECEMBER : PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, null);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol WINDOW_THIS,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WINDOW_THIS, false);
patch is same with buggy,,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removerangeMarker(index, marker, layer, false);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getRowKey());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getItemCount());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromPlot(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getComponentType());
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i=0; i < this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.length(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(Int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes. size(); i++) {
compilation error,[CE] cannot find symbol I,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); I++) {
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.rangeAxes = new ObjectList(); this.domainAxes = new ObjectList(); this.domainAxisNames = new ObjectList(); }
compilation error,[CE] generics are not supported in -source 1.4,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.rangeAxes = new ObjectList(); this.domainAxes = new ObjectList(); <
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.rangeAxes = new ObjectList(); this.domainAxes = new ObjectList(); >>
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = this; mapDatasetToRangeAxis = new DatasetChangeEvent(this, getData
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(this, getDataset(index)); } else { mapDatasetToRangeAxis = this; mapDatasetToRangeAxis = new DatasetChangeEvent(this, getData
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getAutoRange
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getData
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getaxisIndex
compilation error,[CE] '(' or '[' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = this; mapDatasetToRangeAxis = new Data
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = this; mapDatasetToRangeAxis = this); }
compilation error,[CE] '(' or '[' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = this; mapDatasetToRangeAxis = new Dataset
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = this; mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); this.axisIndex = index + 1; }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol defaultItemRenderer,,Preconditions.checkNotNull(defaultItemRenderer); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] '(' or '[' expected,,Preconditions.checkNotNull(defaultItemRenderer); this.domainAxis = new CategoryAnchor.MIDDLE;
compilation error,[CE] '(' or '[' expected,,Preconditions.checkNotNull(dataset); this.domainAxis = new CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol defaultItemRenderer,,Preconditions.checkNotNull(defaultItemRenderer); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] '(' or '[' expected,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new CategoryAnchor.MIDDLE;
compilation error,[CE] '(' or '[' expected,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis());
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.5;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(8.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.5;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 5.0);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 1.0;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GLOBAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROOT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROOT_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_QUOTE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_QUOTE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VOID,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VOID;
compilation error,[CE] ';' expected,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(domainAxis));
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot assign a value to final variable rowRenderingOrder,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder rowRenderingOrder = SortOrder.ASCENDING;
patch is same with buggy,,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] cannot find symbol START_ARGING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.START_ARGING;
compilation error,[CE] cannot find symbol RECORDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.RECORDING;
compilation error,[CE] cannot find symbol READING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.READING;
compilation error,[CE] cannot find symbol ROUND_RENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ROUND_RENDING;
compilation error,[CE] cannot find symbol START,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.START;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE);
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE); this.plot = new XYPlot();
compilation error,[CE] cannot return a value from method whose result type is void,,return PlotContext.createChildObjectContext();
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE); this.plot = new XYPlotImpl();
compilation error,[CE] call to super must be first statement in constructor,,super(XYPlot.TYPE_ARGUMENTS);
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE); this.plot = new XYPlotChangeListener();
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE); this.plot = new XYPlot[size() ];
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE); this.plot = new XYPlotManager();
compilation error,[CE] cannot find symbol XYPOLOT_TYPE,,Preconditions.checkNotNull(XYPOLOT_TYPE); this.plot = new XYPlotControl();
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] call to super must be first statement in constructor,,super(getItemRenderer().getValueAxis());
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis()); this.dataset = dataset;
compilation error,[CE] call to super must be first statement in constructor,,super(getItemRenderer().getValue());
compilation error,[CE] call to super must be first statement in constructor,,super(dataset); this.renderer = null;
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis()); this.renderer = null;
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.renderer = null;
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer());
compilation error,[CE] call to this must be first statement in constructor,,this(null);
compilation error,[CE] call to super must be first statement in constructor,,super(null);
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
compilation error,[CE] cannot find symbol getChartChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChartChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() == 2) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.CAN_BEGIN_UPDATED) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() == 1) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.CAN_BEHAVIOR) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() < 2) {
compilation error,[CE] cannot find symbol getEventType,if (getParent() != null) { ,if(getParent()!= null || getEventType.DATASET_UPDATED) {
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,this.mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis =(Map)this.mapDataset.get(axisIndex);
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = new java.util.ArrayList(this.axisIndex); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,this.axisIndex = indexOf(axisIndex); mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Lists.newArrayList();
compilation error,[CE] illegal start of expression,} ,this.axisIndex = indexOf(axisIndex); mapDatasetToDomainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= null); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= null); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeGridlinePaint!= DEFAULT_GRIDLINE_PAINT); this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeGridlinePaint); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.annotationRenderer = new HashMap();
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] <identifier> expected,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT).this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] ';' expected,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT), this.domainAxisLocations.addChangeListener(this);
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocations.size() - 1);
compilation error,[CE] not a statement,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT)- 1;
compilation error,[CE] no suitable method found for set(int,AxisLocation,int),this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocations.size());
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.CENTER_OR_LEFT);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT + 1);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = this.dataset.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(this.dataset);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(this);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.mapDatasetToRangeAxis(this);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = this.dataset.getDomainAxis();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLength();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCategoryCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getChronology().getCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCategoryPlotCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCurrentCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getChangeCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getItemCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getChronology().getLength();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getCost();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis == null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderer = null;
compilation error,[CE] cannot find symbol renderer,,Preconditions.checkArgument(this.renderer!= null);
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener() == null) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getName().isEmpty()) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getName().equals("")) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getName().length() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.containsKey(this)) {
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = index;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); getRangeAxis().setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexInList(this, axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); super.setAxisEdge(axisIndex);
compilation error,[CE] ';' expected,,int index = indexOf(axisIndex); for(int i = 0; i < axisIndex; i++) { axisIndex++; axisIndex++) { this.axisIndex--; }
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(e); this.datasetChanged = null;
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,,this.datasetChangeEvent.prependPath(new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.ignoreListeners(e);
compilation error,[CE] cannot find symbol,,fireDatasetChanged();
compilation error,[CE] cannot find symbol,,this.datasetChangeEvent.prependPath(new JXPathIntrospector());
compilation error,[CE] cannot find symbol datasetChanged,,this.datasetChanged = notifyListeners(e);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(e); this.datasetChanged = new DatasetChangeEvent(this, null);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.clear();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(e); this.datasetChanged = new DatasetChangeEvent(this);
compilation error,[CE] cannot find symbol datasetChangeEvent,,this.datasetChangeEvent.prependPlot(e);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] cannot find symbol JIN_BEVEL,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty());
compilation error,[CE] cannot find symbol defaultPlotType,,Preconditions.checkNotNull(defaultPlotType); this.dataset = new ObjectList();
compilation error,[CE] not a statement,,Preconditions.checkArgument(this.domainAxis instanceof CategoryPlot)&& this.rangeAxis instanceof ValuePlot);
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof CategoryPlot));
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.size() > 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.isLocal()) {
compilation error,[CE] illegal start of expression,if (axis != null) { ,if(!(axis!= null)&& axis.getDomainAxis()!= null)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.hasDomainAxis()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.isContainer()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.isDynamic()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.hasCfg()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(!(axis!= null)&& axis.isSupported()) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(index >= this.datasets.size()) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() > index + 1) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
patch is same with buggy,,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
increase failing tests, [FE] AssertionFailedError,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex - 1));
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(axisIndex), new Integer(index));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex, getLocalFileDataset()));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex, getChangeEvent()));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex, getMillis()));
compilation error,[CE] cannot find symbol getLowerBound,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex, getLowerBound));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex, getLocalFile()));
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(marker.getLowerBound());
compilation error,[CE] method add in interface Collection cannot be applied to given types;,markers.add(marker); ,markers.add(index, marker);
patch is same with buggy,,markers.add(marker); ,markers.add(marker);
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(marker.getAnnotationIntrospector());
compilation error,[CE] cannot find symbol None,markers.add(marker); ,markers.add(Marker.None.valueOf(index + 1));
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(marker.getLowerCase());
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(marker.getLocalPlot());
increase failing tests, [FE] NullPointerException,markers.add(marker); ,markers.add(marker.getLabel());
compilation error,[CE] <identifier> expected,markers.add(marker); ,markers.add(marker.null);
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(marker.getAnnotation());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(DEFAULT_DOMAIN_GRIDLINES);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new TreeSet();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new java.util.ArrayList();
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new PropertyList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new HashList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new DatasetList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new ContainerList();
compilation error,[CE] no suitable constructor found for ArrayList(ObjectList),this.datasets = new ObjectList(); ,this.datasets = new ArrayList(this.datasets);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index);
compilation error,[CE] cannot find symbol markers,,Preconditions.checkState(this.markers.isEmpty());
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] illegal start of expression,,for(int index = 0; index < marker.size(); index++) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < marker.size(); index++) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = markers.containsKey(marker);
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker!= null);
compilation error,[CE] cannot assign a value to final variable columnRenderingOrder,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder columnRenderingOrder = SortOrder.ASCENDING;
patch is same with buggy,,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] bad operand types for binary operator '+',private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING + 1;
compilation error,[CE] cannot find symbol SCENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.SCENDING;
compilation error,[CE] cannot find symbol DOCUMENTS,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.DOCUMENTS;
compilation error,[CE] cannot find symbol ASCIENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCIENDING;
compilation error,[CE] cannot find symbol SECONDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.SECONDING;
compilation error,[CE] cannot find symbol START,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.START;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,this.mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis =(XYPlot)getDataset();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = new HashMap();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis =(XYPlot)this.dataset.getAxisElement();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis =(XYPlot)this.dataset.getAxisEdge();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis =(XYPlot)getDataset(); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = index;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); super.setAxisEdge(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); getAxis().setIndex(axisIndex);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxes = new ObjectList();
compilation error,[CE] illegal start of type,,return Stroke.newInstance();
compilation error,[CE] illegal start of type,,return Stroke.newStroke(XYPlot.DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(XYPlot.DEFAULT_CROSSHAIR_STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(XYPlot.DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.class.getSimpleName();
compilation error,[CE] illegal start of type,,return Stroke.newStroke("NullPointerException");
compilation error,[CE] illegal start of type,,return Stroke.newStroke(XYPlot.TYPE_ROOT, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(XYPlot.DEFAULT_COSSHAIR_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(XYPlot.DEFAULT_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new NullPointerException("");
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol EVERYGROUND,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EVERYGROUND) {
compilation error,[CE] cannot find symbol EXTENDS,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EXTENDS) {
compilation error,[CE] cannot find symbol EAST,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EAST) {
compilation error,[CE] cannot find symbol FIELD_NAME,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FIELD_NAME) {
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer. FOREGROUND) {
compilation error,[CE] cannot find symbol ERROR,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.ERROR) {
compilation error,[CE] cannot find symbol FOR,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOR) {
compilation error,[CE] cannot find symbol EVERY_INT,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EVERY_INT) {
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = this.dataset.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getXYRenderer();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getXYDataset();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(valueAxis)super.getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)XYDataset.clone();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = this.domainAxisRenderer.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)XYDataset.getInstance();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = super.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this.dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getClass();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.itemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.annotationList = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] call to super must be first statement in constructor,,super(DateTimeUtils.currentTimeMillis()); this.annotationList = new java.util.ArrayList();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset);
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkNotNull(this.rangeAxis); this.annotationList = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol rangeAxis,,Preconditions.checkNotNull(this.rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeAxis = new RangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getDefaultAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(dataset);
compilation error,[CE] generics are not supported in -source 1.4,,XYItemRenderer <?> renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.getDataset();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getOwner();
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = getDomainMarker(); if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker!= null);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotationIntrospector =(XYItemRenderer)super.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotationIntrospector =(XYItemRenderer)super.renderer.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.annotationIntrospector =(XYItemRenderer)super.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.annotationIntrospector =(XYItemRenderer)this.annotations.get(0);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotationIntrospector =(XYItemRenderer)this.annotations.get(0);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.annotationIntrospector =(XYItemRenderer)this.annotationIntrospector;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.annotationIntrospector =(XYDataset)super.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] incompatible types,,this.rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,,super.configureRangeAxes();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this.rangeAxes);
compilation error,[CE] cannot find symbol,,this.rangeAxes = getRangeAxes(i);
compilation error,[CE] incompatible types,,this.rangeAxes =(CategoryPlot)this.rangeAxes.clone();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] cannot find symbol,,this.rangeAxes =(CategoryPlot)this.rangeAxes.next();
compilation error,[CE] cannot find symbol Arrays,,Arrays.sort(this.rangeAxes);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] incompatible types,,this.rangeAxes =(CategoryPlot)this.rangeAxes.get(0);
compilation error,[CE] incompatible types,ValueAxis result = null; ,ValueAxis result = this.rangeAxes;
compilation error,[CE] incompatible types,ValueAxis result = null; ,ValueAxis result = this.rangeAxes.get(index);
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = this.rangeAxes.values();
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size());
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = this.rangeAxes.remove(index);
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = getValueAxis();
compilation error,[CE] cannot find symbol rangeAxis,ValueAxis result = null; ,ValueAxis result = this.rangeAxis;
increase failing tests, [FE] NullPointerException,ValueAxis result = null; ,ValueAxis result = getRangeAxis();
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.get(index));
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = this.rangeAxes.iterateValueAxis();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker.getLowerBound());
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index!= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] cannot find symbol chartChangeEventType,,e.setType(this.chartChangeEventType); notifyListeners(e);
compilation error,[CE] cannot find symbol GENERAL_UPDATED,,e.setType(ChartChangeEventType.GENERAL_UPDATED); notifyListeners(e);
compilation error,[CE] cannot find symbol TYPE_REDEFINITION,,e.setType(ChartChangeEventType.TYPE_REDEFINITION); notifyListeners(e);
compilation error,[CE] cannot find symbol,,e.setChangeEvent(this);
compilation error,[CE] cannot find symbol TYPE_REDEFINITION,,e.setType(ChartChangeEventType.TYPE_REDEFINITION);
compilation error,[CE] cannot find symbol GENERAL_TYPE,,e.setType(ChartChangeEventType.GENERAL_TYPE); notifyListeners(e);
compilation error,[CE] cannot find symbol NEGATIVE_TYPE,,e.setType(ChartChangeEventType.NEGATIVE_TYPE); notifyListeners(e);
compilation error,[CE] cannot find symbol,,e.setCause(ChartChangeEventType.GENERAL); notifyListeners(e);
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.foregroundRangeMarkers.containsKey(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.foregroundRangeMarkers.contains(marker)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers!= null || this.foregroundRangeMarkers.contains(marker)) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers!= null || this.foregroundRangeMarkers.containsKey(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.foregroundRangeMarkers.contains(index)) {
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis = false);
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkState(this.drawSharedDomainAxis!= null);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getValueAxis(getItemRenderer());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.drawSharedDomainAxis!= false);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis = true);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.drawSharedDomainAxis!= false);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.isTrue(this.drawSharedDomainAxis!= false);
compilation error,[CE] bad operand types for binary operator '!=',,Preconditions.checkArgument(this.drawSharedDomainAxis!= null);
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedSize(DateTimeZone.UTC, DEFAULT_CROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol DateTimeZone,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(DateTimeZone.UTC, DEFAULT_CROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedSize(DateTimeZone.UTC, DEFAULT_BACKGROUND);
compilation error,[CE] cannot find symbol DateTimeZone,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(DateTimeZone.UTC, DEFAULT_BACKGROUND);
compilation error,[CE] cannot find symbol DateTimeUtils,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(DateTimeUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapBuilder();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedStructure(DEFAULT_BACKGROUND);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis!= null || axis.isEnabled(Feature.QUOTE_FIELD_NAMES)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis!= null || axis.isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis!= null || axis.isEnabled(Feature.FLUSH_PASSED_TO_STREAM)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.isRange()) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis!= null || axis.isEnabled(Feature.WRITE_NULL_OBJECT)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.isLocal()) {
compilation error,[CE] cannot find symbol Feature,if (axis != null) { ,if(axis!= null || axis.isEnabled(Feature.AUTO_CLOSE_JSON_ARRAY)) {
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol marker,,this.marker.setItemCount(0);
compilation error,[CE] cannot find symbol marker,,this.marker.setItem(index);
compilation error,[CE] cannot find symbol marker,,this.marker = marker.trim();
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker); this.index = 0;
compilation error,[CE] cannot find symbol marker,,this.marker.setPosition(1);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker); this.index = -1;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation!= PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation!= PlotOrientation.HORIZONTAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL); this.plot = PlotOrientation.HORIZONTAL;
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(0); if(axis!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(0); if(axis == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(0); if(axis!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] ,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(0); if(axis!= null) { throw new NullPointerException("")
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(0); if(axis!= null) { axis.configure(); }
compilation error,[CE] unclosed string literal,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { throw new NullPointerException("
compilation error,[CE] ,,for(int i = 0; i < this.rangeAxes.size(); i++) { ValueAxis axis =(ValueAxis)this.rangeAxes.get(i); if(axis!= null) { throw new NullPointerException("")
patch is same with buggy,,super(); ,super();
compilation error,[CE] cannot find symbol PlotIndex,super(); ,super(this.setPlotIndex(PlotIndex.VERTICAL), this.orientation = PlotOrientation.HORIZONTAL);
compilation error,[CE] ')' expected,super(); ,super(this.setPlotIndex(PlotIndex.VERTICAL), this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] ')' expected,super(); ,super(this.setPlotIndex(PlotIndex.VERTICAL), this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(this.renderer!= null? PlotRenderer.VERTICAL : Renderer.UNKNOWN);
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(this.renderer!= null? this.renderer.getItemRenderer() : null);
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(this.renderer!= null? this.renderer.getRenderer() : null);
compilation error,[CE] cannot reference this before supertype constructor has been called,super(); ,super(this.renderer!= null? PlotRenderer.VERTICAL : Renderer.UNDEFINED);
compilation error,[CE] cannot find symbol PlotIndex,super(); ,super(this.setPlotIndex(PlotIndex.VERTICAL), this.orientation = PlotOrientation.VERTICAL);
compilation error,[CE] <identifier> expected,super(); ,super(this.renderer!= null? PlotRenderer.VERTICAL : this.renderer.null);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLowerBound());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.removeRangeMarker(marker);
compilation error,[CE] boolean cannot be dereferenced,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker).marker.isEmpty();
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)+ 1;
compilation error,[CE] boolean cannot be dereferenced,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker).toString();
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(0);
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i=0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.length(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol I,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); I++) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= 0) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (index == 0 && location == null) { ,if(location == null && index >= this.rangeAxisLocation.getRangeAxisLocation()) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (index == 0 && location == null) { ,if(location == null && index >= this.rangeAxisLocation) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (index == 0 && location == null) { ,if(location == null && index < this.rangeAxisLocation.getRangeAxisLocation()) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (index == 0 && location == null) { ,if(location == null && index < this.rangeAxisLocation) {
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastModule();
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> marker = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastChild();
compilation error,[CE] not a statement,,Layer == K, V> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastLocation();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastChain();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> marker = getLabel();
compilation error,[CE] not a statement,,Layer == K, V> layer = getLastChild();
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.foregroundDomainMarkers.containsKey(index)) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.foregroundDomainMarkers.contains(index)) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.foregroundDomainMarkers.containsKey(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.foregroundDomainMarkers.contains(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.foregroundDomainMarkers.contains(marker)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.foregroundDomainMarkers.contains(marker)) {
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol position,,super.setDomainAxisLocation(position);
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationEvent(this));
compilation error,[CE] cannot find symbol,,super.setPosition(index);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createPlotChangeEvent(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,int axisIndex = getRangeAxis(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createPlotChangeEvent(axisIndex, axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(axisIndex, axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(axisIndex); event.addChangeEvent(event);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,Integer axisIndex = getRangeAxis(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(axisIndex); axisIndex = indexOf(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent(axisIndex);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(axisIndex); axisIndex = this.axisIndex;
patch is same with buggy,,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicPaint(0.5f);
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasOwnPropertyName("")) {
compilation error,[CE] cannot find symbol Feature,if (renderer != null) { ,if(!(renderer!= null)&& renderer.isEnabled(Feature.FLUSH_PASSED_TO_STREAM)) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer!= this) {
compilation error,[CE] cannot find symbol propertyName,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasOwnPropertyName(propertyName)) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(!this.domainAxis instanceof CategoryItemRenderer) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasChangeListener()) {
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(rangeAxis); this.renderer = new RangeAxisRenderer();
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis()); this.dataset = dataset;
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(rangeAxis); this.renderer = new XYRenderer(new RangeAxisEquals(domainAxis, rangeAxis));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(rangeAxis); this.renderer = new XYRenderer(new RangeAxisItemRenderer());
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(rangeAxis); this.renderer = new XYRenderer(new RendererChangeEvent(this, dataset, domainAxis, rangeAxis));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(rangeAxis); this.renderer = new XYRenderer(new RangeAxisEquals(domainAxis));
compilation error,[CE] illegal start of expression,} ,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxis = rangeAxis.getRange();
compilation error,[CE] illegal start of expression,} ,Preconditions.checkNotNull(rangeAxis); this.setRenderer(new RangeAxisRenderer());
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? Collections.EMPTY_LIST : result;
compilation error,[CE] cannot find symbol dataset,return result; ,return this.dataset;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? Collections.emptyList() : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result!= null? Collections.EMPTY_LIST : result;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,return result; ,return result == null? new CategoryDataset() : result;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,return result; ,return result == null? new CategoryDataset(index): result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? new CategoryDataset(getRowKey()): result;
compilation error,[CE] no suitable method found for getValue(),return result; ,return result == null? null : result.getValue();
compilation error,[CE] cannot find symbol,return result; ,return result == null? null : result.getDataset();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParsePlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.getParent();
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(this, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addItemRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,validateRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addAnchorMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,defineRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,addRangeMarker(baseline, Layer.BACKGROUND); ,super(baseline, Layer.BACKGROUND);
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangeAxes();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getRangeAxes();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = plot.getAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,PlotOrientation axis = plot.getOrientation();
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof CategoryAxis) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof Chart) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); }
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); }
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.backgroundDomainMarkers = new HashMap(); }
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol REDEFINITION_CROSSHAIR,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = Color.REDEFINITION_CROSSHAIR;
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapAxisToRangeAxis(0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis);
compilation error,[CE] cannot find symbol series,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(series);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 1);
compilation error,[CE] cannot find symbol DomainAxisLocation,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol series,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(series, 0);
compilation error,[CE] cannot find symbol DomainAxisLocation,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new XYDataset(DomainAxisLocation.BOTTOM_OR_LEFT));
compilation error,[CE] cannot find symbol DomainAxis,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new XYDataset(DomainAxis.BOTTOM_OR_LEFT));
compilation error,[CE] cannot find symbol DomainAxisLocation,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(new XYDataset(DomainAxisLocation.TOP_OR_LEFT));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] incompatible types,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.backgroundRangeMarkers = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] cannot find symbol nullPointerException,this(null, null, null, null); ,this(null, nullPointerException, null, null, null);
compilation error,[CE] ')' expected,this(null, null, null, null); ,this(new NullPointerException(null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] cannot find symbol NullPointerException,this(null, null, null, null); ,this(NullPointerException, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] cannot reference this before supertype constructor has been called,this(null, null, null, null); ,this(new NullPointerException(this), null, null, null);
compilation error,[CE] cannot find symbol Null,this(null, null, null, null); ,this(Null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] cannot reference this before supertype constructor has been called,this(null, null, null, null); ,this(new NullPointerException(this), null, null, null, null);
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return NodePointer.newNullPointerException("");
compilation error,[CE] illegal start of type,,return Collections.emptySet();
compilation error,[CE] illegal start of type,,return PlotManager.getPlotManager().newInstance();
compilation error,[CE] illegal start of type,,return NodePointer.newString(Token.NAME,"");
compilation error,[CE] illegal start of type,,return NodePointer.newNullPointer(this);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance().toString();
compilation error,[CE] illegal start of type,,return getPlot();
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInvalidUse();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(); this.mapDatasetToDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Validate.isTrue(this.domainAxis instanceof ValueAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToDomainAxis(0, DomainAxis.BOTTOM_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.mapDatasetToDomainAxis(rangeAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToDomainAxis(0, DomainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToDomainAxis(0, domainAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis(); this.mapDatasetToDomainAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis(domainAxis); this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getRangeAxis();
compilation error,[CE] cannot find symbol,,super.configureDomainAxes();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryPlot)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] no suitable method found for get(),,this.domainAxes =(CategoryAxis)this.domainAxes.get();
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes(this.domainAxes);
compilation error,[CE] cannot find symbol i,,this.domainAxes =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this.domainAxes);
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); }
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.LocalizationBundle"); } else { Preconditions.checkState(localizationResources.containsKey
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { Preconditions.checkState(localizationResources.
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { return LocalizationBundle.getBundle("org.jfree
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle"); } else { Preconditions.checkState(localizationResources.containsKey
compilation error,[CE] illegal start of type,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,if(localizationResources == null) { protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.LocalizationBundle"); }
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new HashMap();
compilation error,[CE] no suitable constructor found for BasicStroke(String),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke("NO_CROSSHAIR_STROKE");
compilation error,[CE] non-static method getClass() cannot be referenced from a static context,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE + getClass().getName();
compilation error,[CE] bad operand types for binary operator '+',public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] ';' expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE, Color.black;
compilation error,[CE] ';' expected,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke(1.0f));
compilation error,[CE] cannot assign a value to final variable datasetRenderingOrder,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot assign a value to final variable datasetRenderingOrder,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder datasetRenderingOrder =DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol DOCUMENT,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DOCUMENT;
compilation error,[CE] cannot find symbol EXPECTED,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.EXPECTED;
compilation error,[CE] cannot find symbol VARIABLE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = new DatasetRenderingOrder(Arrays.asList(XYPlot.VARIABLE));
compilation error,[CE] cannot find symbol EXPR_RESULT,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.EXPR_RESULT;
compilation error,[CE] cannot find symbol EXTENDS,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.EXTENDS;
compilation error,[CE] not a statement,,for(int i = 0; i < this.index; i++) { CategoryDataset int result = getDataset(index); if(result!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] not a statement,,for(int i = 0; i < this.index; i++) { CategoryDataset int result = getDataset(index); if(result!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { CategoryDataset result = new CategoryDataset(this.index); if(result!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < this.index; i++) { CategoryDataset result = new CategoryDataset(this.index); if(result!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(this.index); if(result!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(index); if(result!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < getSeriesCount(); i++) { CategoryDataset result = new CategoryDataset(this.index); if(result!= null) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,result =(CategoryDataset)getDataset();
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getName());
compilation error,[CE] variable index is already defined in method getDataset(int),,Integer index = indexInList(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECTION_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SRC_OVER);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, index);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARG, 0);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARGUMENT);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(getDefaultAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol position,,super.setAxisLocation(position); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this, this));
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setPosition(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol position,,super.setPosition(position); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,,if(!notifyListeners()) { notifyListeners(new AxisLocation(this, this)); }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this, this));
compilation error,[CE] cannot find symbol,,setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol location,,if(this.location!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(this.dataset!= null) {
compilation error,[CE] cannot find symbol Feature,if (dataset != null) { ,if(dataset!= null || isEnabled(Feature.QUOTE_FIELD_NAMES)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(dataset!= null || dataset.containsKey(this.dataset.getRowKey())) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(dataset!= null || dataset.containsKey(this.dataset.getValue())) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.getChangeListener() == null) {
compilation error,[CE] cannot find symbol dataset,if (dataset != null) { ,if(dataset!= null || dataset.containsKey(this.dataset.getRawClass())) {
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,Integer index = indexInList(this.domainAxisLocation);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(index < 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(index!= 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(local) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(index < 0) { this.domainAxisLocation = new CategoryPlot(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(index!= 0) { this.domainAxisLocation = new CategoryPlot(); }
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation); if(index < 0) { this.domainAxisLocation = Location.getDefault(); }
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureChangeAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureContinueAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePlotAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocalFileAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocaleAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureHandlerAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureHandlerAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureEndAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] cannot find symbol,,super.configureDomainAxes();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] no suitable method found for get(),,this.domainAxes =(XYPlot)this.domainAxes.get();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this.domainAxes);
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes();
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,super.configureXYPlot();
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes(this.domainAxes);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDataset); this.domainAxis =(XYDataset)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.domainAxis =(XYDataset)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.renderer;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.renderer;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.visit(this);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)getDomainAxis();
compilation error,[CE] '.' expected,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super;
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLo
increase failing tests, [FE] IllegalArgumentException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.rangeAxisLo
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.renderers = new
compilation error,[CE] <identifier> expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.renderers = new
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.regionAxisLo
compilation error,[CE] not a statement,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); this.domainAxisLocations = new ObjectList(); this.regionAxisLo
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)super.getColumnRenderingOrder();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.clone();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder = getColumnRenderingOrder();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.DOCUMENTS;
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.newInstance();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)getColumnRenderingOrder();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.getParent();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.EXTENDS_OPTIONAL_ORDER;
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final SortOrder columnRenderingOrder =(CategoryPlot)getSortOrder();
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.renderers);
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_ROOT);
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new ObjectListWithCapacity(this.renderers.size());
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new DefaultRenderer();
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_NOT_OBJECT);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_NOT_IMPLEMENTED);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_NOT_ASSIGN);
compilation error,[CE] illegal start of expression,} ,fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.clear(); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeListener(this); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,this.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,throw new IllegalArgumentException("");
compilation error,[CE] illegal start of expression,} ,this.datasetChangeEvent.addChangeListener(this);
compilation error,[CE] illegal start of expression,} ,fireChanged();
compilation error,[CE] illegal start of expression,} ,firePropertyChanged();
compilation error,[CE] illegal start of expression,} ,this.setChangeEvent(event);
compilation error,[CE] illegal start of expression,} ,super.setChangeEvent(event); fireDatasetChanged();
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] ')' expected,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location, notify);
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(1, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setStandardAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setFunctionAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setRemoteAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(0, location, notify);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location, notify));
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setAxisLocation(0, location, notify);
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = new XYPlotManager().getDatasetRenderingOrder();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = new XYPlot();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = getDatasetRenderingOrder();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = new XYPlotImpl();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = new XYPlot[XYPlot.size() ];
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = new XYPlotManager().newInstance();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder =(DatasetRenderingOrder)XYPlot.newInstance();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder = new XYPlotManager();
compilation error,[CE] variable datasetRenderingOrder is already defined in class XYPlot,,private final DatasetRenderingOrder datasetRenderingOrder =(DatasetRenderingOrder)XYPlot.getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getLowerBound();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getNext();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastLabel();
compilation error,[CE] illegal start of expression,,Layer ==?> layer = getLastChild().getNext();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastChild();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastChild().getTopSize();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> marker = getLastModule();
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeTheDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPostmarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPostMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllDomainMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeStandardMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeOverrideMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAll(marker, Layer.FOREGROUND);
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxises();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdge();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEdges();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisEquals();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisses();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisElements();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxisElement();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDOMAINAxes();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(valueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getX(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getScreen();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getAll(i);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, null);
compilation error,[CE] cannot find symbol,return removeRangeMarker(index, marker, layer, true); ,return removerangeMarker(index, marker, layer, false);
patch is same with buggy,,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol layers,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layers, false);
compilation error,[CE] cannot find symbol WINDOW_THIS,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WINDOW_THIS, false);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.domainStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = null;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < index) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.mapDatasetToDomainAxis = mapDatasetToDomainAxis(this, getDataset(index));
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < index) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = this; mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] not a statement,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); data
compilation error,[CE] generics are not supported in -source 1.4,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); <
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); this.axisIndex = index
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); this.axisIndex++; }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(dataset.isEmpty());
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryDataset);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations.set(0, AxisLocation.TOP_OR_LEFT);
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] cannot find symbol nullPointerException,this(null, null, null, null); ,this(null, nullPointerException, null, null, null);
compilation error,[CE] cannot find symbol NullPointerException,this(null, null, null, null); ,this(NullPointerException, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] ')' expected,this(null, null, null, null); ,this(new NullPointerException(null, null, null, null);
compilation error,[CE] ')' expected,this(null, null, null, null); ,this(new NullPointerException(this, null, null, null);
compilation error,[CE] cannot reference this before supertype constructor has been called,this(null, null, null, null); ,this(new NullPointerException(this), null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] cannot reference this before supertype constructor has been called,this(null, null, null, null); ,this(null, null, null, null, Arrays.asList(this));
compilation error,[CE] cannot find symbol object,this(null, null, null, null); ,this(object, null, null, null);
patch is same with buggy,,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CLOSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CLOSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_GLOBAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOMAIN_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_CROSSHAIR,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOAD_CROSSHAIR;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOAD_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOCAL_CROSSHAIR_VALUE;
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new TreeMap();
compilation error,[CE] cannot find symbol This,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();This.domainAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisMap);
compilation error,[CE] cannot find symbol domainAxisNames,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisNames);
compilation error,[CE] cannot find symbol domainAxis,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisRenderer,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisRenderer);
compilation error,[CE] cannot find symbol domainAxisElement,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisElement);
compilation error,[CE] cannot find symbol domainAxisGroup,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisGroup);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_GRIDLINES);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_GRIDLINE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(rangeAxis);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxis(new RangeAxis());
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE,configureRangeAxes(); ,setRangeAxis(DEFAULT_GRIDLINE);
compilation error,[CE] cannot find symbol DEFAULT_RANGE_ASSIGN,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_RANGE_ASSIGN);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES,configureRangeAxes(); ,setRangeAxis(DEFAULT_GRIDLINES);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE,configureRangeAxes(); ,setRangeAxisEdge(DEFAULT_GRIDLINE);
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(CategoryPlot());
compilation error,[CE] cannot find symbol START_OBJECT,,Preconditions.checkNotNull(CategoryPlot.START_OBJECT);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getPlot());
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(getPlotType());
compilation error,[CE] cannot find symbol START_ARGUMENT,,Preconditions.checkNotNull(CategoryPlot.START_ARGUMENT);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(defaultPlot());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.getClass()!= null);
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(this.rangeAxisLocations!= null) {
increase failing tests, [FE] AssertionFailedError,if (rangeAxis != null) { ,if(this.rangeAxisLocations == null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(!this.rangeAxisLocations.containsKey(domainAxis)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(!this.domainAxisLocations.containsKey(domainAxis)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(!this.rangeAxisLocations.containsKey(domainAxis.getRangeAxis())) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(!this.domainAxisLocations.containsKey(domainAxis.getRangeAxis())) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(!this.domainAxisLocations.containsKey(domainAxis.getXPath())) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(!this.domainAxisLocations.containsKey(domainAxis.getRootAxis())) {
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDoubleAxis(axisIndex);
compilation error,[CE] cannot find symbol axisIndex,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(this.axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getPositionAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getChangeAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBetaAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getOffset(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(getStandardTree());
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(getStandardTicks());
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkNotNull(this.dataset); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol renderer,,Preconditions.checkArgument(this.renderer!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol renderer,,Preconditions.checkArgument(this.renderer!= null);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.dataset = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer = createItemRenderer(null);
compilation error,[CE] cannot find symbol chartChangeEvent,,CategoryPlot e =(CategoryPlot)this.chartChangeEvent.clone(); notifyListeners(e);
compilation error,[CE] cannot find symbol CAN_BEGIN_UPDATED,,if(ChartChangeEventType.CAN_BEGIN_UPDATED) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,CategoryPlotChartChangeEvent e = new CategoryPlotChartChangeEvent(this); notifyListeners(e);
compilation error,[CE] cannot find symbol CAN_BEGIN_UPDATED,,if(ChartChangeEventType.CAN_BEGIN_UPDATED) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol chartChangeEvent,,CategoryPlot e =(CategoryPlot)this.chartChangeEvent.clone();
compilation error,[CE] cannot find symbol,,CategoryPlot e =(CategoryPlot)getPlot(); notifyListeners(e);
compilation error,[CE] cannot find symbol,,CategoryPlotChartChangeEvent e = new CategoryPlotChartChangeEvent(this);
compilation error,[CE] cannot find symbol chartChangeEvent,,CategoryPlot e =(CategoryPlot)this.chartChangeEvent.getParent(); notifyListeners(e);
compilation error,[CE] cannot find symbol CHARTS_OUT,,Preconditions.checkNotNull(ChartChangeEventType.CHARTS_OUT);
compilation error,[CE] cannot find symbol GENERAL_UPDATED,,CategoryPlot e = new CategoryPlot(ChartChangeEventType.GENERAL_UPDATED); notifyListeners(e);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
patch is same with buggy,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] cannot assign a value to final variable quadrantOrigin,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private final transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] no suitable constructor found for Double(double,double,double),private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.areaCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairVisible = DEFAULT_ROUND_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = createRangeAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairVisible = DEFAULT_ROUND_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairVisible = DEFAULT_RANGE_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxis(getRangeAxis());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainGridlineStroke == DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainGridlineStroke!= DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] incompatible types,if (notify) { ,if(this.getDomainAxisLocation()) {
compilation error,[CE] cannot find symbol getDomainAxisLocation,if (notify) { ,if(this.getDomainAxisLocation) {
compilation error,[CE] cannot find symbol strictFunctionAxisLocation,if (notify) { ,if(this.strictFunctionAxisLocation) {
compilation error,[CE] cannot find symbol getNotify,if (notify) { ,if(this.getNotify) {
compilation error,[CE] ')' expected,if (notify) { ,if(this.getDomainAxisLocation notify) {
compilation error,[CE] cannot find symbol getDomainAxisLocationNotify,if (notify) { ,if(this.getDomainAxisLocationNotify) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(!this.notify) {
compilation error,[CE] cannot find symbol getDomainAxisLocationnotified,if (notify) { ,if(this.getDomainAxisLocationnotified) {
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = XYPlot.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocale(layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFileData(layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFile(layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLast();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent();
compilation error,[CE] cannot find symbol,,Event[] event = getChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createPlotChangeEvent();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.size();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(this.datasetToDomainAxisMap);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexInList(this.datasetToDomainAxisMap);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.datasetToDomainAxisMap.remove(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexInList(this.datasetToDomainAxisMap, axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.get(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(getX());
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] no suitable method found for set(CategoryPlot,Integer),this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this, new Integer(axisIndex));
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.rangeAxisMap, new Integer(axisIndex));
compilation error,[CE] cannot find symbol i,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(i, new Integer(axisIndex));
patch is same with buggy,,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(seriesIndex, new Integer(index));
compilation error,[CE] cannot find symbol key,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(key, new Integer(axisIndex));
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.layer.size(); index++) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.level; index++) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.layer.size(); index++) { if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.layer.size(); index++) { if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol markers,,Preconditions.checkState(this.markers.isEmpty());
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.level; index++) { if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.level; index++) { if(markers.size() > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.layer.size(); index++) { if(markers!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event =(CategoryPlot)getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = PlotChangeEvent.getPlot();
compilation error,[CE] cannot find symbol,,Event[] event = getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = PlotChangeEvent.createParser(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot event = PlotChangeEvent.createParser(event);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 1);
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
increase failing tests, [FE] AssertionFailedError,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 10);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToOrientationAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 4);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 2);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 3);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,this.mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = new java.util.ArrayList(this.axisIndex);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis =(Map)this.mapDataset.get(axisIndex);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = new java.util.ArrayList(this.axisIndex); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = new java.util.ArrayList(this.axisIndex, index + 1);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,,mapDatasetToDomainAxis = new java.util.ArrayList();
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index + 1);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, 0);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, index + 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index-1);
compilation error,[CE] cannot find symbol GENERAL,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, CategoryPlot.GENERAL);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, 1);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, index);
compilation error,[CE] illegal start of expression,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, % 2);
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ArrayList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();This.domainAxisLocations = new ObjectList();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new Class();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashList();
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisNames);
compilation error,[CE] cannot find symbol domainAxis,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new RectangleList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new hashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.annotationRenderer = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis);
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() == 2) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() == 1) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() < 2) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.CAN_BEGIN_UPDATED) {
compilation error,[CE] cannot find symbol getEventType,if (getParent() != null) { ,if(getParent()!= null || getEventType.DATASET_UPDATED) {
compilation error,[CE] cannot find symbol getChangeEventType,if (getParent() != null) { ,if(getParent()!= null || getChangeEventType.CAN_BEHAVIOR) {
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromStack(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromBounds(this.foregroundRangeMarkers, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(this.backgroundRangeMarkers.get(index));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromBounds(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundRangeMarkers);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = new HashMap();
compilation error,[CE] ';' expected,,this.rangeGridlinePaint = Color.black); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = new HashMap(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = new HashMap(); this.rangeGridlinePaint = new HashMap();
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol chartChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.chartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.UPDATED);
compilation error,[CE] cannot find symbol ChartChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setPrototypeBasedOn(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] package This does not exist,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(This.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, this);
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.UPDATED, this);
compilation error,[CE] cannot find symbol Event,,Event.init(this.rangeAxes);
compilation error,[CE] cannot find symbol Event,,Event.DatasetChangeEvent = this.rangeAxes.getParent();
compilation error,[CE] cannot find symbol Event,,Event.DatasetChangeEvent = this.rangeAxes.get(axisIndex);
compilation error,[CE] cannot find symbol Event,,Event.DatasetChangeEvent = event.getDataset();
compilation error,[CE] cannot find symbol Event,,Event.datasetChangeEvent(event);
compilation error,[CE] package Event does not exist,,Event.DatasetChangeEvent event = this.rangeAxes.get();
compilation error,[CE] cannot find symbol Event,,Event.DatasetChangeEvent = this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol Event,,Event.DatasetChangeEvent = this.rangeAxes.get();
compilation error,[CE] cannot find symbol Event,,Event.DatasetChangeEvent = this.rangeAxes.getInstance();
compilation error,[CE] package Event does not exist,,Event.goog.addChangeEvent(event);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POP,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POP;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSITION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSITION;
patch is same with buggy,,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POINT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POINT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POLICY,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POLICY;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSITIVE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSITIVE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POLICY,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POLICY;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSITE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSITE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POSITION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POSITION;
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + this); } else { this.setChangeEvent(e); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + getClass().getName()); } else { this.setChangeEvent(e); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + this); }
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(e); this.datasetChanged = null;
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + getName()); } else { this.setChangeEvent(e); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + getXYPlot().getName()); } else { this.setChangeEvent(e); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + getJXPlot().getName()); } else { this.setChangeEvent(e); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + this); } else { this.setChangeEvent(e, true); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { System.err.println("Unable to parse:" + this); } else { this.datasetChangeEvent.add(e); }
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = getRangeAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = ValueAxis.calculateRangeAxis(getBaseValue());
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = ValueAxis.calculateRangeAxis(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getResult();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = valueAxis.getRange();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getValueAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = ValueAxis.getRange();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = valueAxis.getRange();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,ValueAxis result = ValueAxis.getRange();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.backgroundRangeMarkers!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.backgroundPlots = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker.getLowerBound());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = getIndex(index); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n");
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf("n"); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = indexOf(marker.getRange());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,this.foregroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers.remove(marker); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,for(int index = 0; index < this.foregroundRangeMarkers.size(); index++) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(index >= this.foregroundRangeMarkers.size()) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.backgroundRangeMarkers =(ArrayList)this.backgroundRangeMarkers.get(new Int
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { this.foregroundRangeMarkers.remove(marker); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainCrosshairStroke!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainCrosshairStroke!= DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainStroke = DEFAULT_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainStroke = DEFAULT_STROKE;
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return NodePointer.newNullPointerException("");
compilation error,[CE] illegal start of type,,return new RectangleInsets(1.0, 1.0, 1.0, 1.0);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return new RectangleInsets(1.0, 1.0, 1.0, 1.0, 1.0);
compilation error,[CE] illegal start of type,,return XYPlot.newInstance();
compilation error,[CE] illegal start of type,,return new RectangleInsets(0, 0, 0, 0);
compilation error,[CE] illegal start of type,,return NodePointer.newNullPointerException("");
compilation error,[CE] illegal start of type,,return new RectangleInsets(1.0, 1.0, Color.blue);
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = null;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDataset.newInstance();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,super.configureDomainAxes();
compilation error,[CE] cannot find symbol,,super.configureDomainAxes(); this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,super.configureDomainAxes(); this.domainAxes =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,this.domainAxes = super.configureDomainAxes();
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot.DEFAULT_LOAD_FACTOR, false);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot.DEFAULT_LOAD_FACTOR, true);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeTheDomainMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol Plot,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.Plot.DEFAULT_CAPACITY, true);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Marker,Layer,<null>),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layer, null);
compilation error,[CE] cannot find symbol,return removeDomainMarker(index, marker, layer, true); ,return removeOverrideMarker(index, marker, layer, false);
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,this.foregroundDomainMarkers =(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(marker); }
compilation error,[CE] no suitable method found for remove(int),markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,for(int index = 0; index < this.foregroundDomainMarkers.size(); index++) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(index >= this.foregroundDomainMarkers.size()) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] variable markers might not have been initialized,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(marker); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ';' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { this.foregroundDomainMarkers.remove(index); marker =(ArrayList)this.background
patch is same with buggy,,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol dominoAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.dominoAxisMap = new ObjectList();
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList() + 1;
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(This.domainAxis);
compilation error,[CE] cannot find symbol plotToDomainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.plotToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol setToDomainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.setToDomainAxisMap = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
patch is same with buggy,,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol DOUBLE,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.DOUBLE;
compilation error,[CE] cannot find symbol BLK,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.BLK;
compilation error,[CE] cannot find symbol White,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.White;
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(location == null && index >= this.domainAxisLocation) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= 0) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(location == null && index < this.domainAxisLocation) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(location == null && index!= this.domainAxisLocation) {
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_POP;
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAIN;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADDING;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol categoryCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < categoryCount; axisIndex++) {
compilation error,[CE] cannot find symbol CategoryCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < CategoryCount; axisIndex++) {
compilation error,[CE] cannot find symbol count,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.count; axisIndex++) {
compilation error,[CE] cannot find symbol rangeAxis,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < rangeAxis; axisIndex++) {
compilation error,[CE] cannot find symbol area,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < area; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < size; axisIndex++) {
compilation error,[CE] cannot find symbol END_ARG,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < CategoryPlot.END_ARG; axisIndex++) {
compilation error,[CE] cannot find symbol region,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < region; axisIndex++) {
compilation error,[CE] cannot find symbol CategoryPlotCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < CategoryPlotCount; axisIndex++) {
compilation error,[CE] cannot find symbol categoryPlotCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < categoryPlotCount; axisIndex++) {
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(i);
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis = (CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.getRootAxis();
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.getAll();
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.getDomainAxisEdges();
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.getParent();
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.getDomainAxises();
compilation error,[CE] cannot find symbol,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.getElementType();
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADDING;
compilation error,[CE] cannot find symbol rangeGridlineValue,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlineValue = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeCrosshairValue = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAIN;
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 1; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i=0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.length(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol allRangeAxes,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < allRangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(0); i++) {
compilation error,[CE] cannot find symbol I,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); I++) {
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(this);
patch is same with buggy,,marker.addChangeListener(this); ,marker.addChangeListener(this);
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, layer);
increase failing tests, [FE] NullPointerException,marker.addChangeListener(this); ,marker.removeChangeListener(this);
compilation error,[CE] cannot find symbol Plot,marker.addChangeListener(this); ,marker.addChangeListener(this, Layer.Plot.DEFAULT);
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, Layer.class);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addChangeListener(new MemberKey(this));
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol WARNING,marker.addChangeListener(this); ,marker.addChangeListener(this, Layer.WARNING);
compilation error,[CE] cannot find symbol level,marker.addChangeListener(this); ,marker.addChangeListener(this, level);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRowKey(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getXYRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getLowerBound();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getXYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getSelectedRenderer();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { this.foregroundRangeMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index >= 0) { this.foregroundRangeMarkers.clear(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLeaf(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, 0);
patch is same with buggy,,if (yAxis != null) { ,if(yAxis!= null) {
increase failing tests, [FE] NullPointerException,if (yAxis != null) { ,if(yAxis == null) {
compilation error,[CE] cannot find symbol Feature,if (yAxis != null) { ,if(yAxis!= null || yAxis.isEnabled(Feature.FLUSH_PASSED_TO_STREAM)) {
compilation error,[CE] cannot find symbol Feature,if (yAxis != null) { ,if(yAxis!= null || yAxis.isEnabled(Feature.QUOTE_FIELD_NAMES)) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.getParent()!= null) {
increase failing tests, [FE] NullPointerException,if (yAxis != null) { ,if(yAxis!= null || yAxis.getClass()!= null) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.size() == 0) {
compilation error,[CE] cannot find symbol Feature,if (yAxis != null) { ,if(yAxis!= null || yAxis.isEnabled(Feature.WRITE_INIT_ERROR)) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.isConstructor()) {
compilation error,[CE] cannot find symbol Feature,if (yAxis != null) { ,if(yAxis!= null || yAxis.isEnabled(Feature.WRITE_NULL_OBJECT)) {
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxis);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxisIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxisIndex(this.rangeAxes);
compilation error,[CE] cannot find symbol,,Int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxis, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxis();
patch is same with buggy,,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_RIGHT, true);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,boolean,boolean),setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false, true);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,<null>),setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, null);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_RIGHT, false);
compilation error,[CE] cannot find symbol TEP_OR_LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TEP_OR_LEFT, true);
compilation error,[CE] cannot find symbol RIGHT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.RIGHT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setupRangeAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] generics are not supported in -source 1.4,,XYItemRenderer <?> renderer = this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] generics are not supported in -source 1.4,,XYItemRenderer <?> renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.newInstance();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = index;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); getRangeAxis().setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); super.setAxisEdge(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); getAxis().setIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexInList(this, axisIndex);
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex);
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,this.mapDatasetToRangeAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,,for(int i = 0; i < mapDataset.size(); i++) { if(isRangeAxisEdge()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int i = 0; i < mapDataset.size(); i++) { if(isRangeAxisEdge()) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,mapDatasetToRangeAxis =(Map)this.mapDataset.get(axisIndex); this.axisIndex = index + 1;
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastChain();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> marker = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastLocation();
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> layer = getLastChild();
compilation error,[CE] not a statement,,Layer == K, V> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer <?> layer = getLastModule();
compilation error,[CE] generics are not supported in -source 1.4,,Layer < K, V> marker = getLabel();
compilation error,[CE] not a statement,,Layer == K, V> layer = getLastChain();
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible!= false) { this.rangeGridlinesVisible = true; }
compilation error,[CE] incompatible types,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_STROKE;
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = false; }
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_VISIBILITY,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_VISIBILITY;
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible!= true) { this.rangeGridlinesVisible = false; }
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_VALUE,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_VALUE;
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new ArrayList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(); Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] cannot find symbol This,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();This.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes = new ObjectList(); ,this.domainAxises = new ObjectList();
compilation error,[CE] bad operand types for binary operator ,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList() +"".equals(this.domainAxes);
compilation error,[CE] cannot find symbol This,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();This.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList() +"".equals(this.domainAxis);
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (domainAxis != null) { ,if(domainAxis!= null || this.domainAxisLocation!= AxisLocation.TOP_OR_LEFT) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocations.containsKey(domainAxis.getDomainAxis())) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocations.containsKey(domainAxis.getLocation())) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocations.containsKey(domainAxis.getLocationName())) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.equals(this.domainAxisLocation)) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocations.containsKey(domainAxis.getLocalName())) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocations.containsKey(domainAxis.getDomainAxisNames())) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocations.containsKey(domainAxis.getXPath())) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocations.containsKey(domainAxis.getClass())) {
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,XYPlot marker =(XYPlot)super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,XYPlot marker =(XYPlot)super.removeDomainMarker(index);
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = super.removeChangeEvent();
compilation error,[CE] cannot find symbol markers,,Preconditions.checkState(this.markers.isEmpty());
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = markers.containsKey(marker);
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker!= null);
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = isEnabled(State.XY_OPTIONAL_MARKER);
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = isEnabled(XYPlot.DISPOSE_ON_DOMAIN_MARKER);
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,this.mapDatasetToDomainAxis = Maps.newHashMap();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis =(XYPlot)getDataset();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = new HashMap();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis =(XYPlot)this.dataset.getAxisElement();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = new java.util.ArrayList();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = this.mapDatasetToDomainAxis();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis =(XYPlot)this.dataset.getAxisEdge();
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis = Maps.newHashMap(); this.axisIndex = index;
compilation error,[CE] illegal start of expression,} ,mapDatasetToDomainAxis =(XYPlot)getDataset(); this.axisIndex = index;
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] method removeChangeListener in class Plot cannot be applied to given types;,,XYPlot.removeChangeListener(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker!= null);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(Marker.isLabelNamed()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol marker,,Preconditions.checkState(this.marker == null);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(Marker.isLocal()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { return null; }
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.foregroundRangeMarkers.containsKey(index)) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers!= null || this.foregroundRangeMarkers.containsKey(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.foregroundRangeMarkers.contains(marker)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers!= null || this.foregroundRangeMarkers.contains(marker)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.foregroundRangeMarkers.contains(index)) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis == null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis == null);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol DEFAULT_CAPACITY,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_CAPACITY);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.WARNING);
compilation error,[CE] cannot find symbol nullPointerException,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, nullPointerException);
compilation error,[CE] cannot find symbol VERTICAL,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.VERTICAL);
compilation error,[CE] cannot find symbol XY_Plot,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XY_Plot.DEFAULT_CAPACITY);
compilation error,[CE] cannot find symbol DEFAULT_ROOT_MARKER,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_ROOT_MARKER);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_MARKER,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_LOAD_MARKER);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = indexOf(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxis();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxis().getIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = indexInList(this.datasetToDomainAxisMap);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = indexInList(this, axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = Integer.valueOf(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxis().getIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,Integer axisIndex = indexInList(this.datasetToDomainAxisMap);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = indexInList(this.datasetToDomainAxisMap, axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,Integer axisIndex = indexInList(this, axisIndex);
patch is same with buggy,,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol renderer,,Preconditions.checkArgument(this.renderer!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation!= PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(getItemRenderer()); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.VERTICAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol renderer,,Preconditions.checkArgument(this.renderer!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation == PlotOrientation.HORIZONTAL); this.dataset = new ObjectList();
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + Color.black;
compilation error,[CE] bad operand types for binary operator '-',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT - 1;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,updateListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(e, new XYPlotChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,fireDatasetChanged();
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYListener(e), this);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYListener(e, this));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this, this));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this, this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYListener(e), true);
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxisPaint = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol,,configureDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxis = new ValueAxis(domainAxis.getDomainAxis());
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxis = DomainAxis.getDomainAxis();
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (marker == null) { ,if(marker == null || marker.getClass()!= this.backgroundRangeMarkers.get(index)) {
compilation error,[CE] cannot find symbol foregroundRangeMarker,if (marker == null) { ,if(marker == null || marker.getClass()!= this.foregroundRangeMarker) {
compilation error,[CE] incomparable types: Class and Map,if (marker == null) { ,if(marker == null || marker.getClass()!= this.foregroundRangeMarkers) {
compilation error,[CE] method get in interface Map cannot be applied to given types;,if (marker == null) { ,if(marker == null || marker.getClass()!= this.foregroundRangeMarkers.get(index)) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || this.marker.isEmpty()) {
compilation error,[CE] cannot find symbol foreground,if (marker == null) { ,if(marker == null || marker.getClass()!= this.foreground) {
compilation error,[CE] cannot find symbol marker,if (marker == null) { ,if(marker == null || this.marker.isNull()) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.isNull()) {
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); if(index < 0) { this.backgroundRangeMarkers.put(index, marker); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(marker); if(index < 0) { this.backgroundRangeMarkers.put(index, marker); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); if(index < 0) { this.backgroundRangeMarkers.remove(index); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker); if(index < 0) { this.backgroundRangeMarkers.put(index, markers); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString(marker); if(index!= 0) { this.backgroundRangeMarkers.put(index, marker); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalToString();
patch is same with buggy,,if (result == null) { ,if(result == null) {
compilation error,[CE] incomparable types: Class and ValueAxis,if (result == null) { ,if(result == null || result.getClass()!= getRangeAxis()) {
compilation error,[CE] cannot find symbol,if (result == null) { ,if(result == null || getValueAxis() == index) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null) {
compilation error,[CE] cannot find symbol,if (result == null) { ,if(result == null || getValueAxis() == null) {
compilation error,[CE] bad operand types for binary operator '<',if (result == null) { ,if(result == null || index < getRangeAxis()) {
compilation error,[CE] bad operand types for binary operator '>=',if (result == null) { ,if(result == null || index >= getRangeAxis()) {
compilation error,[CE] cannot find symbol,if (result == null) { ,if(result == null || getValueAxis()!= index) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent!= null) {
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPostmarkers(marker, Layer.FOREGROUND);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeTheDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPostMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removePositionMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeFromDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllDomainMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPlots(marker, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker.getLowerBound());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); XYPlot.removeChangeListener(index, marker, layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index < 0) { marker.setLength(0); }
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationResources.newBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.Plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("jfree.chart.plot.LocalizationBundle");
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRangeItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxisRenderer();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryItemRenderer <?> renderer = this.dataset.getRangeItemRenderer();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryItemRenderer <?> renderer = this.dataset.getRangeAxisRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryItemRenderer <?> renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeItemRenderer();
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.blue);
compilation error,[CE] cannot find symbol chrono,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.chrono;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.green);
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation(), index + 1); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,AxisLocation location = getLocation(); notifyListeners(new AxisLocation(location));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation(), index + 1); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation(), index + 1); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol markers,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.markers.size());
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), null);
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,this.backgroundRangeMarkers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,this.backgroundRangeMarkers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] cannot find symbol level,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.level);
compilation error,[CE] cannot find symbol labelPath,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.labelPath);
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] cannot find symbol,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), java.util.ArrayList());
compilation error,[CE] cannot find symbol markers,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.markers);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.createParser(event);
compilation error,[CE] cannot find symbol,,EventVisible yAxis = EventVisible.getAxis();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.getParent();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.createParser(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser(this);
compilation error,[CE] cannot find symbol,,Event yAxis = event.getAxis();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.create();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.createParsePlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = PlotChangeEvent.createParser();
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]!= null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] == null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]) { null, null, null, null } ;
compilation error,[CE] '}' expected,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] {, null, null, null } ;
compilation error,[CE] '}' expected,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] {, null, null, null } ;
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis());
compilation error,[CE] illegal start of expression,} ,super(NodeUtil.getCurrentNodePointer());
compilation error,[CE] generics are not supported in -source 1.4,} ,super(DateTimeUtils.currentTimeMillis()); this.plot = new HashMap < K, V>();
compilation error,[CE] illegal start of expression,} ,super(NodeUtil.newInstance(getPlotIndex(), getChronology()));
compilation error,[CE] generics are not supported in -source 1.4,} ,super(); this.plot = new HashMap < K, V>();
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis()); this.plot = new java.util.ArrayList();
compilation error,[CE] illegal start of expression,} ,super(DateTimeUtils.currentTimeMillis(), null);
compilation error,[CE] illegal start of expression,} ,super(NodeUtil.getCurrentNodePointerException(""));
compilation error,[CE] generics are not supported in -source 1.4,} ,super(DateTimeUtils.currentTimeMillis()); this.plot = new HashMap < String,Object>();
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = new XYPlotOrientation();
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = new XYPlotManager();
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = getSeriesRenderingOrder();
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlotImpl());
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlot());
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = getSeriesRenderingOrder(XYPlot.TYPE);
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(new XYPlotItem(""));
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = getSeriesRenderingOrder(XYPlot.DEFAULT);
compilation error,[CE] <identifier> expected,,private final XYPlotUtilities.setXYPlot(this);
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = new XYPlot(XYPlot.START_OBJECT);
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i=0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.length(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol allRangeAxes,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < allRangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(0); i++) {
compilation error,[CE] cannot find symbol I,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); I++) {
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexInList(this.datasetToRangeAxisMap);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeAxis().getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxis().getIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis().getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRange().getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeAxis().getIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeAxisIndex(axisIndex);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index + 1);
compilation error,[CE] no suitable method found for get(int,<null>),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, null);
compilation error,[CE] cannot find symbol,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.getRangeAxis(index);
compilation error,[CE] no suitable method found for get(int,int),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, 0);
compilation error,[CE] no suitable method found for get(int,int),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, index + 1);
compilation error,[CE] cannot find symbol,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.getRange();
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index+1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index-1);
increase failing tests, [FE] NullPointerException,if (markers == null) { ,if(this.backgroundRangeMarkers == null) {
patch is same with buggy,,if (markers == null) { ,if(markers == null) {
compilation error,[CE] bad operand types for binary operator '<=',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers <= null) {
compilation error,[CE] bad operand types for binary operator '<',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers < null) {
compilation error,[CE] bad operand types for binary operator '>=',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers >= null) {
compilation error,[CE] bad operand types for binary operator '<<',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers << null) {
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromDomain(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxisIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxis);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromLocalToString(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromLocalToString(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = getRangeAxis();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromLocalToString(this.rangeAxis);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange().getIndex());
patch is same with buggy,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] no suitable method found for setDomainAxisLocation(AxisLocation,<null>),setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, null);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, true);
compilation error,[CE] cannot find symbol BOOM_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOM_OR_LEFT, true);
patch is same with buggy,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] ';' expected,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false), true);
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasOwnPropertyName("")) {
compilation error,[CE] illegal start of expression,if (renderer != null) { ,if(!(renderer!= null)&& renderer.isEnabled(Feature.QUOTE_FIELD_NAMES))) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol Feature,if (renderer != null) { ,if(!(renderer!= null)&& renderer.isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasChangeListener()) {
compilation error,[CE] cannot find symbol propertyName,if (renderer != null) { ,if(!(renderer!= null)&& renderer.hasOwnPropertyName(propertyName)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(!(renderer!= null)&& renderer.isContainer()) {
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLeftRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol XY_Plot,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, XY_Plot.DEFAULT);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, Integer.MAX_VALUE);
compilation error,[CE] cannot find symbol XY_MARKER,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, XY_MARKER);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 1);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, 0);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeAllRangeMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int),return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND, Integer.MIN_VALUE);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLangeMarker(marker, Layer.FOREGROUND);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.setPaint(this); marker.addRangeMarker(layer, marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.setPaint(this); marker.addRangeMarker(layer); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.addRangeMarker(layer, marker); } else { addRangeMarker(margin); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.setPaint(this); marker.addRangeMarker(layer, marker); } else { addRangeMarker(margin); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastChild(); marker.setPaint(this); marker.addRangeMarker(layer, marker); } else { addRangeMarker(layer, marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLast(); marker.addRangeMarker(layer, marker); } else { addRangeMarker(margin); }
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(dataset);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(dataset);
compilation error,[CE] no suitable method found for set(CategoryDataset,int),this.datasets.set(0, dataset); ,this.datasets.set(dataset, 0);
compilation error,[CE] no suitable method found for set(CategoryDataset,<null>),this.datasets.set(0, dataset); ,this.datasets.set(dataset, null);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.put(dataset, new DefaultDataset());
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(dataset, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(dataset, null);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(0);
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] AssertionFailedError,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HARD : PlotOrientation.VERTICAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] ';' expected,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.BOTTOM;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.DECEMBER;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.DECEMBER : PlotOrientation.VERTICAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.POSITIVE_INFINITY : PlotOrientation.VERTICAL;
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT || this.rangeGridlineStroke = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_BLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_BLIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_GRIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_LOCAL_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.domainAxis =(XYDataset)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDataset); this.domainAxis =(XYDataset)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)super.renderer;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYDataset); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis instanceof XYItemRenderer); this.domainAxis =(XYItemRenderer)getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDataset); this.domainAxis =(XYDataset)getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis); this.annotationRenderer = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkNotNull(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return NodePointer.newNullPointerException("");
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return Collections.emptySet();
compilation error,[CE] illegal start of type,,return Arrays.asList(new RectangleInsets(0, 0, 0, 0));
compilation error,[CE] illegal start of type,,return Arrays.asList(new RectangleInsets(1.0, 1.0, 1.0, 1.0));
compilation error,[CE] illegal start of type,,return Arrays.asList(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
compilation error,[CE] illegal start of type,,return Arrays.asList(new RectangleInsets(0.0, 0.0, 0.0, 0.0));
compilation error,[CE] illegal start of type,,return Arrays.asList(new RectangleInsets(1.0, 1.0, 1.0));
compilation error,[CE] illegal start of type,,return new RectangleInsets(1.0, 1.0, 1.0, 1.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRangeAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowKey(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRange();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRowName();
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATION,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATION;
patch is same with buggy,,this.anchorValue = 0.0; ,this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_ANchor_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATIONS,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATIONS;
compilation error,[CE] cannot find symbol DEFAULT_ARRAY_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ARRAY_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANGER_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANGER_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANACCESS_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANACCESS_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR;
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.foregroundDomainMarkers.containsKey(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.foregroundDomainMarkers.contains(index)) {
compilation error,[CE] method containsKey in interface Map cannot be applied to given types;,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.foregroundDomainMarkers.containsKey(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.foregroundDomainMarkers.contains(index)) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.foregroundDomainMarkers.contains(marker)) {
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap() + 1;
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(This.domainAxis);
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap() ;
compilation error,[CE] cannot find symbol domainAxisEdge,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxisEdge);
compilation error,[CE] cannot find symbol domainAxisName,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxisName);
compilation error,[CE] no suitable constructor found for TreeMap(double,double),this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(0.0, 0.0);
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(This.domainAxisEdge);
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(This.domainAxisNames);
compilation error,[CE] illegal start of expression,,if(index < 0) { Layer layer = getLastLastChange(); if(!notify) { fireChangeEvent(); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = getLastLastChange();
compilation error,[CE] illegal start of expression,,if(index < 0) { Layer layer = getLastChange(); if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { Layer layer = getLastLabel(); if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(index < 0) { Layer layer = getLastLocation(); if(!notify) { fireChangeEvent(); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Layer layer = getLastLastChange(); if(!notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(index < 0) { Layer layer = getLastLastChange(); if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { Layer layer = getLastChange(); if(!notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!hasChanged()) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isSeriesVisibleInLeaf(axisIndex)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getData
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getAutoRange
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getaxisIndex
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); this.axisIndex = index + 1; }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); for(int index = 0
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); this.axisIndex = index; }
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isSeriesVisibleInLeaf(axisIndex)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index
compilation error,[CE] not a statement,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isSeriesVisibleInLeaf(axisIndex)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); data
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainZeroBaselineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '-',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE - 1;
compilation error,[CE] cannot find symbol domainAxisPaint,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainAxisPaint = DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLocalName());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)||(index == 0 && marker.isEmpty());
compilation error,[CE] boolean cannot be dereferenced,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker).marker.isEmpty();
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, this.marker);
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker)&& this.marker.isEmpty();
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!this.marker.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!hasChanged()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!this.marker.equals(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(this.marker.equals(this.marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(this.marker.size() > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!this.marker.isEmpty()) { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!hasChanged()) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!this.marker.isEmpty()) { this.marker.setPosition(1); }
compilation error,[CE] cannot find symbol marker,,Arrays.sort(this.marker);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.rangeAxis = domainAxis;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,Validate.isTrue(this.domainAxis!= null);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = domainAxis;
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(this.marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(layer);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(tag);
compilation error,[CE] cannot find symbol level,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(level);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.rangeAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getEmptyValue();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.itemRenderer.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getSupportedType();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getLocalPart();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol rangeGridline,,this.rangeGridline = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.rangeGridlinePaint.isEmpty()); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol defaultGridlinePaint,,Preconditions.checkNotNull(defaultGridlinePaint); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker =(Marker)this.markers.get(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = this.markers.remove(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = super.removeRangeMarker(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = this.markers.get(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = new Marker(this.markers.get(index), this.foregroundRangeMarkers);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = new Marker(this.markers.get(index));
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker =(Marker)this.markers.remove(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = super.removeRangeMarker();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = new Marker(this.markers.remove(index));
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = new Marker(this.markers.get(index),"Null'marker' argument.");
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(RangeAxis.BOTTOM_OR_RIGHT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.rangeAxisLocations =(ValueAxis)this.dataset.get(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.rangeAxisLocations =(ValueAxis)this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT); this.rangeAxisLocation = domainAxis;
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.rangeAxisLocation =(ValueAxis)this.rangeAxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.rangeAxisLocations =(ValueAxis)this.dataset.get(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(RangeAxis.BOTTOM_OR_RIGHT); this.rangeAxisLocation = domainAxis;
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(RangeAxis.BOTTOM_OR_RIGHT); this.domainAxis = domainAxis;
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); <
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); [Delete]
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); ==
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); >> else { this.domainAxisLocations = new ObjectList(); }
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); >=
compilation error,[CE] illegal start of expression,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); <<
compilation error,[CE] cannot find symbol domainAxislocations,this.domainAxisLocations = new ObjectList(); ,if(this.domainAxisLocations!= null) { this.domainAxisLocations = new ObjectList(); } else { this.domainAxislocations = new ObjectList(); }
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); super.mapToDomainAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); super.mapToDomainAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); axisIndex++;
patch is same with buggy,,markers.add(marker); ,markers.add(marker);
compilation error,[CE] cannot find symbol NOT_OBJECT,markers.add(marker); ,markers.add(Marker.NOT_OBJECT);
compilation error,[CE] cannot find symbol DateTimeUtils,markers.add(marker); ,marker.setAnnotation(DateTimeUtils.currentTimeMillis());
compilation error,[CE] cannot find symbol SECOND_ANNOTATION,markers.add(marker); ,marker.setAnnotation(DateTimeUtils.safeAdd(marker, Layer.SECOND_ANNOTATION));
compilation error,[CE] cannot find symbol Plot,markers.add(marker); ,markers.add(marker, Layer.Plot.newInstance());
compilation error,[CE] method add in interface Collection cannot be applied to given types;,markers.add(marker); ,markers.add(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol FOREGROUND_ANNOTATION,markers.add(marker); ,marker.setAnnotation(DateTimeUtils.safeAdd(marker, Layer.FOREGROUND_ANNOTATION));
compilation error,[CE] cannot find symbol DateTimeUtils,markers.add(marker); ,marker.setAnnotation(DateTimeUtils.currentTimeMillis(), markers.size());
compilation error,[CE] cannot find symbol DateTimeUtils,markers.add(marker); ,marker.setAnnotation(DateTimeUtils.safeAdd(marker, Layer.FOREGROUND));
compilation error,[CE] cannot find symbol,markers.add(marker); ,markers.add(marker, Layer.newInstance());
patch is same with buggy,,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol dominoAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.dominoAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol setToDomainAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.setToDomainAxisMap = new ObjectList();
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList() + 1;
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(This.domainAxis);
compilation error,[CE] cannot find symbol duplicateAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.duplicateAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol baseAxisMap,this.datasetToDomainAxisMap = new ObjectList(); ,this.baseAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_RANGE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_GROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] illegal start of type,,return new ResourceBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.plot.setLocalizationBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.plot.getPlot(); this.plot.setLocalizationBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)getPlot(); this.plot.setLocalizationName("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.plot.getPlot(); this.plot.setLocalizationName("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] no suitable constructor found for CategoryPlot(String),,CategoryPlot plot = new CategoryPlot("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.plot.getPlot(); this.plot.setResources("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,CategoryPlot plot = getPlot();
compilation error,[CE] illegal start of type,,CategoryPlot plot =(CategoryPlot)this.plot.getPlot(); this.plot.setLocalizationBundle("org.jfree.chart.localizationBundle");
patch is same with buggy,,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol rangeAxisLocation,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, this.rangeAxisLocation);
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,if(notify) { setRangeAxisLocation(0, location, notify); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,setAxisLocation(0, location, notify);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,if(notify) { setRangeAxisLocation(0, location, notify); } else { throw new IllegalStateException(""); }
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,if(notify) { setRangeAxisLocation(0, location, notify); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,setRangeAxisLocation(0, location, notify); ,if(notify) { setRangeAxisLocation(0, location, notify); } else { throw new AxisException(""); }
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(0, location, notify); ,setDomainAxisLocation(0, location, notify);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = super.removeRangeMarker(index);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = super.removeRangeMarker(marker);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.NEGATIVE) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.LEFT) { removeRangeMarker(marker); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.LEFT) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundRangeMarkers.containsKey(marker);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.NEGATIVE) { removeRangeMarker(marker); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.NEGROUND) { removeRangeMarker(marker); }
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(); this.rangeAxis = new RangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = Collections.emptySet(); this.rangeAxis = new RangeAxis();
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 0;
compilation error,[CE] no suitable constructor found for BasicStroke(String),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke("NO_CROSSHAIR_STROKE");
compilation error,[CE] cannot find symbol FLAG,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = FLAG;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 4;
compilation error,[CE] '(' or '[' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToRangeAxisMap!= null) { this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToRangeAxisMap.put(new Integer
patch is same with buggy,,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] '(' or '[' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToRangeAxisMap!= null) { this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToRangeAxisMap.put(new Int
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToRangeAxisMap!= null) { this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToRangeAxisMap.put(new Integer(
compilation error,[CE] '(' or '[' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToRangeAxisMap!= null) { this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToRangeAxisMap.put(new Inte
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToRangeAxisMap!= null) { this.datasetToRangeAxisMap.put(new Integer(index, new Integer(axisIndex)); } else { this.datasetToRangeAxisMap.put(new Integer
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(seriesIndex), new Integer(axisIndex));
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToRangeAxisMap!= null) { this.datasetToRangeAxisMap.put(new Integer(index, new Integer(axisIndex)); } else { this.datasetToRangeAxisMap.put(new Integer(
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.itemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getDataset();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(itemRenderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol,,renderer.appendChangeListener(this); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super();
increase failing tests, [FE] NullPointerException,,renderer.addChangeListener(this);
compilation error,[CE] cannot find symbol domainAxis,,renderer.addChangeListener(this); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = java.util.ArrayList();
compilation error,[CE] cannot find symbol,,renderer.appendChangeListener(this); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,renderer.addChangeListener(this); this.domainAxis = new ValueAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] ')' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE &&(this.rangeCrosshairPaint!= null? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_PADD
compilation error,[CE] bad operand types for binary operator '&&',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] ')' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE &&(this.rangeCrosshairPaint!= null? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_PAIN
compilation error,[CE] ')' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE &&(this.rangeCrosshairPaint!= null? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_
compilation error,[CE] ')' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE &&(this.rangeCrosshairPaint!= null? DEFAULT_CROSSHAIR_PADDING : DEFAULT_CROSSHAIR_STROKE
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(valueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol ptr,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(ptr);
compilation error,[CE] cannot find symbol X_SECOND,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(Plot.X_SECOND);
compilation error,[CE] cannot find symbol RangeAxis,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(RangeAxis.SIZE);
compilation error,[CE] cannot find symbol X_ANNOTATION,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(Plot.X_ANNOTATION);
compilation error,[CE] cannot find symbol,,if(e.getDataset()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,if(e.getDataset()!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,if(e.getDataset()!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] IllegalStateException,,if(e.getPlot()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this);
compilation error,[CE] cannot find symbol,,if(e.getDataset()!= null) { throw new DatasetChangeEvent(""); }
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this, getDataset());
compilation error,[CE] cannot find symbol,,if(e.getDataset()!= null) { throw new NullPointerException(""); } else { this.datasetChanged = new DatasetChangeEvent(this, true, false); }
compilation error,[CE] cannot find symbol,,if(e.getDataset()!= null) { throw new NullPointerException(""); } else { this.datasetChanged = new DatasetChangeEvent(this, false); }
compilation error,[CE] cannot find symbol markers,,if(this.markers!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol markers,,if(this.markers!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol markers,,if(this.markers!= null) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.markers!= null) { for(CategoryPlot marker : new CategoryPlot()) { this.markers = new Layer(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.markers!= null) { for(CategoryPlot marker : this.markers) { this.markers = new Layer(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.markers!= null) { for(CategoryPlot marker : this.markers) { super.addRangeMarker(marker); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.markers!= null) { for(CategoryPlot marker : new CategoryPlot()) { this.markers.add(marker); }
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = super.removeRangeMarker(marker);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = super.removeRangeMarker();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = Layer.isWhitespace(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = markers.warning(marker);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = markers.isEmpty();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = Layer.isWhitespace();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = marker.marker();
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final Marker marker = Layer.newMarker(this);
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] &Null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] cuprinsenull, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] &null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] viznull, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]!= null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[], null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null { ;
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapDomainAxis(0, 0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 1);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(1.0);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index < 0 && marker.getLength() > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index < 0 && marker.equals('r')) { throw new IllegalArgumentException(""); }
compilation error,[CE] unclosed character literal,,if(marker!= null) { int index = marker.lastIndexOf('ufffd'); if(index < 0 && marker.getLength() > 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] unclosed character literal,,if(marker!= null) { int index = marker.lastIndexOf('ufffd'); if(index < 0 && marker.getLength() > 0) { marker.append('ufffd'); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index >= 0 && marker.equals('r')) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index < 0 && marker.equals('r')) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalStateException(""); }
patch is same with buggy,,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black;
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.white;
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.red;
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.lightGray;
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.gray;
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.green;
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.blue;
compilation error,[CE] ';' expected,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black);
increase failing tests, [FE] NullPointerException,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.RED;
compilation error,[CE] bad operand types for binary operator '+',this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black + 1;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); Preconditions.checkNotNull(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxis = null;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = null;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol ,,Preconditions.checkNotNull(variableAxis); this.rangeAxis = null;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new java.util.ArrayList();
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new java.util.RangeCrosshairPaint();
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size());
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets);
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getPlot().getValue());
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size(), index);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size() );
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getPlot());
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.baseUri());
patch is same with buggy,,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '&&',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT && this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.domainCrosshairStroke = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol rangeCrosshairFont,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairFont = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '&&',this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT && this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] ';' expected,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT, DEFAULT_LOCAL_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol rangeCrosshairShape,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT || this.rangeCrosshairShape = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new HashMap();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new TreeMap();
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new LinkedList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new TreeList();
compilation error,[CE] List is abstract; cannot be instantiated,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new List();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new HashList();
compilation error,[CE] constructor Class in class Class cannot be applied to given types;,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new Class();
compilation error,[CE] cannot find symbol dataset,return result; ,return this.dataset;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getValue();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getDataset();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.intValue();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result.toString();
compilation error,[CE] cannot find symbol,return result; ,return result!= null? 0 : result.getValue();
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] incompatible types,return result; ,return result == null? 0 : result.getSeriesCount();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,return result; ,return result == null? 0 : result.toArray(new XYDataset());
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
increase failing tests, [FE] IllegalArgumentException,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); }
compilation error,[CE] bad operand type Map for unary operator '!',this.foregroundRangeMarkers = new HashMap(); ,if(!this.foregroundRangeMarkers) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.BackgroundRangeMarkers = new HashMap(); }
increase failing tests, [FE] IllegalArgumentException,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new TreeMap(); }
compilation error,[CE] Map is abstract; cannot be instantiated,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers == null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new Map(); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxis);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxis.indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('/');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 't');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(null);
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(locale); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this, location)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(location); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location);
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this, Location.class)); }
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getLocation();
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(getRange()); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxisLocation!= null) { this.rangeAxisLocation = new AxisLocation(); if(notify) { notifyListeners(new AxisLocationChangeEvent(this, location)); }
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.datasetToDomainAxisMap.get(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.datasetToDomainAxisMap.size();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToDomainAxisMap.put(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToDomainAxisMap.remove(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getDomainAxisIndex(axisIndex); this.datasetToDomainAxisMap.put(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getDomainAxisIndex(axisIndex); this.datasetToDomainAxisMap.remove(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToDomainAxisMap.remove(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxis().getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = this.datasetToDomainAxisMap.size();
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Object marker = super.removeDomainMarker(layer);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Layer marker = super.removeDomainMarker(layer);
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new Marker(layer); if(marker!= null) { marker = new Marker(); }
compilation error,[CE] ')' expected,,if(marker!= null) { Marker marker = new Marker(super.removeDomainMarker(marker, layer); marker.setPaint(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(layer); if(marker == null) { marker = new Marker(); }
compilation error,[CE] ')' expected,,if(marker!= null) { Marker marker = new Marker(super.removeDomainMarker(marker, layer); marker.setPosition(1); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(layer); if(marker!= null) { marker = new Marker(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new Marker(); if(marker!= null) { marker = new Marker(); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Layer marker = super.removeDomainMarker(marker);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselinePaint = new BasicPaint(0.0f); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselinePaint = new XYBaseLinePaint(0.0f); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = new BasicPaint(0.0f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); this.rangeZeroBaselinePaint = new BasicPaint(0.0f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselinePaint = new BasicPaint(1.0f); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselinePaint = new BasicPaint(0.5f); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselinePaint = new BasicPaint(0.0f); this.rangeZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol,,this.rangeZeroBaselinePaint = new XYBaseLinePaint(1.0f); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.size() > 0) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getChangeListener() == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getChangeListener()!= null) {
compilation error,[CE] method getItemCount in interface XYDataset cannot be applied to given types;,if (dataset != null) { ,if(dataset!= null && dataset.getItemCount() > 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.length() > 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getXYDataset() == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getName().length() > 0) {
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisList.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getNext();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRange();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.drawSharedDomainAxis = false;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] unexpected type,,Preconditions.checkArgument(!this.drawSharedDomainAxis = false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.drawSharedDomainAxis = true;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.drawSharedDomainAxis = false);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.drawSharedDomainAxis = false;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.drawSharedDomainAxis = false);
compilation error,[CE] unexpected type,,Preconditions.checkArgument(!this.drawSharedDomainAxis = true);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYItemRenderer(this);
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkState(this.itemRenderer!= null); this.itemRenderer = new XYItemRenderer(this);
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkState(this.itemRenderer!= null); this.itemRenderer = new XYItemRenderer();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(renderer); Preconditions.checkNotNull(renderer);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYItemRenderer();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(!this.itemRenderer.isEmpty());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkArgument(this.rangeAxis!= null);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkArgument(this.renderer!= null);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol defaultGridlinePaint,,Preconditions.checkNotNull(defaultGridlinePaint); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainAxisStroke,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.domainAxisStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis());
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); if(!this.location!= null) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable notify is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,boolean notify = super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation());
compilation error,[CE] variable notify is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,boolean notify = super.setDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); if(!notify) { notifyListeners(new AxisChangeEvent(this)); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); if(!this.location!= null) { notifyListeners(new AxisLocationChangeEvent(this, location)); }
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,this.location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,if(location!= null) { if(!location.isLocation()) { notifyListeners(new AxisChangeEvent(this)); }
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,if(location!= null) { LocationAxisLocation location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,} ,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); } else { location.setAxisLocation(getAxisLocation()); }
compilation error,[CE] illegal start of expression,} ,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this)); }
compilation error,[CE] illegal start of expression,} ,if(location == null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); } else { location.setAxisLocation(getAxisLocation()); }
compilation error,[CE] cannot find symbol registry,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(registry, marker, layer, false);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, false);
compilation error,[CE] no suitable method found for removeDomainMarker(Marker,Layer,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(marker, layer, false);
compilation error,[CE] cannot find symbol PlotLines,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.PlotLines, false);
compilation error,[CE] ')' expected,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(contains(marker, layer, true);
compilation error,[CE] no suitable method found for removeDomainMarker(Marker,int,Layer,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(marker, index, layer, false);
compilation error,[CE] ')' expected,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(contains(marker, layer, false);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] cannot find symbol Location,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(Location.BOTTOM_OR_RIGHT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol,this.mapDatasetToRangeAxis(0, 0); ,this.mapAxisToRangeAxis(0, 0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 1);
compilation error,[CE] cannot find symbol Location,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(Location.BOTTOM_OR_LEFT);
compilation error,[CE] method mapDatasetToRangeAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(1.0);
patch is same with buggy,,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); } else { this.backgroundRangeMarkers.add(marker); marker.addChangeListener(this); }
compilation error,[CE] not a statement,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers); marker
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,markers = new java.util.ArrayList(); ,if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); } else { this.backgroundRangeMarkers.put(new Integer(index), markers); marker.addChangeListener(this, marker); }
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(valueAxis)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol ptr,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(ptr);
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(1);
compilation error,[CE] cannot find symbol plot,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(plot.i);
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(4);
compilation error,[CE] no suitable method found for get(int,<null>),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i, null);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] incompatible types,,this.rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol,,super.setRangeAxes(new ClassKey(this.rangeAxes.size(), this.rangeAxes.size()));
compilation error,[CE] cannot find symbol Arrays,,Arrays.sort(this.rangeAxes);
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] incompatible types,,this.rangeAxes =(CategoryPlot)this.rangeAxes.get(0);
compilation error,[CE] cannot find symbol,,super.setRangeAxes(new CategoryPlot[this.rangeAxes.size() ]);
increase failing tests, [FE] NullPointerException,,this.rangeAxes.clear();
compilation error,[CE] incompatible types,,this.rangeAxes =(CategoryPlot)this.rangeAxes.get(1);
compilation error,[CE] cannot find symbol,,super.setRangeAxes(new ClassKey(this.rangeAxes.size() - 1));
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
increase failing tests, [FE] ClassCastException,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderers);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(1, renderer);
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.rendererers.set(0, this.renderer);
compilation error,[CE] cannot find symbol XYItemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, XYItemRenderer);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.clear();
compilation error,[CE] cannot find symbol,this.renderers.set(0, renderer); ,this.renderers.remove(0, renderer);
compilation error,[CE] no suitable method found for set(<null>,XYItemRenderer),this.renderers.set(0, renderer); ,this.renderers.set(null, renderer);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = this.datasetToRangeAxisMap.get(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToRangeAxisMap.put(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToRangeAxisMap.remove(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex(axisIndex); this.datasetToRangeAxisMap.put(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = Integer.valueOf(axisIndex); this.datasetToRangeAxisMap.put(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex(axisIndex); this.datasetToRangeAxisMap.remove(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = Integer.valueOf(axisIndex); this.datasetToRangeAxisMap.remove(new Integer(axisIndex), new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = this.datasetToRangeAxisMap.size();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex(axisIndex);
compilation error,[CE] incompatible types,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = null;
compilation error,[CE] cannot find symbol drawsharedDomainAxis,this.drawSharedDomainAxis = false; ,this.drawsharedDomainAxis = true;
patch is same with buggy,,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = false;
compilation error,[CE] cannot find symbol real,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = real;
compilation error,[CE] cannot find symbol True,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = True;
compilation error,[CE] cannot find symbol reality,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = reality;
compilation error,[CE] not a statement,this.drawSharedDomainAxis = false; ,this.draw SharedDomainAxis = true;
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxis();
compilation error,[CE] cannot find symbol,,Node axis = getAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getDomainAxis(getPlot());
compilation error,[CE] cannot find symbol,,XYAxis axis = super.configureDomainAxes();
compilation error,[CE] cannot find symbol,,Node axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getPlot();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getXYPlot();
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxis()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxis()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisException(this));
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); getParent().removeChangeEvent(event);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this); event.setChangeEventType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this); event.setDataset(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this); event.setChangeEventType(ChartChangeEventType.UPDATED); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); notifyListeners(e);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this); event.setChangeEventType(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this); event.setChangeEventType(ChartChangeEventType.RANGE);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(layer);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(this.marker);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets.size());
increase failing tests, [FE] ClassCastException,XYDataset result = null; ,XYDataset result =(XYDataset)this.datasets;
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this);
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = new XYDataset[this.datasets.size() ];
compilation error,[CE] XYDataset is abstract; cannot be instantiated,XYDataset result = null; ,XYDataset result = new XYDataset(this.datasets.size() + 1);
compilation error,[CE] incompatible types,XYDataset result = null; ,XYDataset result = this.datasets;
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlot());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.dataset.clone();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = this.dataset.getDataset();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getItemCount());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = DatasetUtilities.findDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBase());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlotIndex());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(series);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainCrosshairVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()).setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainCrosshairVisible = false;
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol EAST,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EAST) {
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer. FOREGROUND) {
compilation error,[CE] cannot find symbol FOR,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOR) {
compilation error,[CE] cannot find symbol NORTH,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.NORTH) {
compilation error,[CE] cannot find symbol EXTENDS,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EXTENDS) {
compilation error,[CE] cannot find symbol REACHABLE,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.REACHABLE) {
compilation error,[CE] cannot find symbol ForEdge,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.ForEdge) {
compilation error,[CE] cannot find symbol ORDER,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.ORDER) {
compilation error,[CE] cannot find symbol EVERY,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EVERY) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.baseZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this, location)); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(location); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(locale); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(located); if(notify) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(locale); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getLocation();
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this, Location.class)); }
compilation error,[CE] illegal start of expression,,if(this.domainAxisLocation!= null) { this.domainAxisLocation = new AxisLocation(location); if(notify) { notifyListeners(new AxisLocationChangeEvent(this), location); }
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] ';' expected,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE, DEFAULT_RANGE_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.domainGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAPPER;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisInfo()); } else { setRangeAxisLocation(location); }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); } else { setRangeAxisLocation(location); }
compilation error,[CE] cannot find symbol,,if(location!= null) { throw new IllegalStateException(""); } else { location.setAxisLocation("RangeAxisLocation", Location.class); }
compilation error,[CE] ,,if(location!= null) { throw new IllegalStateException(""); } else { location.setAxisLocation("RangeAxisLocation,"Undefined")); }
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); } else { throw new JXPathInvalidUseOfError("Unknown class"); }
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); } else { throw new JXPathInvalidUseOfError("Unterminated object"); }
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getItemCount(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getSize(); i++) {
increase failing tests, [FE] NullPointerException,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 1; i < this.rangeAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(0); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i= 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol FOR_GROUND,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOR_GROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerIfNull(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return setRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker.removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerOnly(marker, Layer.FOREGROUND);
compilation error,[CE] bad operand types for binary operator '+',return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND + 1);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerOf(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removerangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(!this.domainAxis.isEmpty());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkArgument(this.domainAxis!= null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisMap = new ObjectList();
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName());
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.newInstance();
compilation error,[CE] illegal start of type,,return Stroke.newStroke("CrOSSHAIR_STROKE");
compilation error,[CE] illegal start of type,,return Stroke.newStroke("CrshAIR_STROKE");
compilation error,[CE] illegal start of type,,return Stroke.newStroke(Token.NAME, Token.NAME);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_CURLHAIR_STROKE);
compilation error,[CE] illegal start of type,,throw new NullPointerException("");
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(1, renderer);
compilation error,[CE] cannot find symbol,this.renderers.set(0, renderer); ,this.renderers.remove(0, renderer);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.clear();
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.rendererers.set(0, this.renderer);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderers);
compilation error,[CE] no suitable method found for set(<null>,CategoryItemRenderer),this.renderers.set(0, renderer); ,this.renderers.set(null, renderer);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = null; this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxislocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT; this.rangeAxisLocation = AxisLocation.BOTTOM_OR_LEFT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT; this.rangeAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = AxisLocation.TOP_OR_RIGHT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT; this.rangeAxisLocation = AxisLocation.TOP_OR_LEFT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.TOP_OR_RIGHT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocation = AxisLocation.TOP_OR_RIGHT;
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,AxisLocation domainAxis = AxisLocation.BOTTOM_OR_RIGHT; this.domainAxisLocation = domainAxis.getLocation();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxes(getPlotType());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxes(getChronology());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis(getChronology());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis(getPlotType());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = plot.getRangeAxisEdge();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = plot.getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxes(this);
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxes(Plot.SECOND);
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis(getPlotInfo());
patch is same with buggy,,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.rangeAxisLocations);
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new DefaultAxisLocation();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new LinkedList();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new DefaultAxisLocations();
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new RegistryList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol,this.rangeAxisLocations = new ObjectList(); ,this.rangeAxisLocations = new FeatureList();
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible!= false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; }
compilation error,[CE] cannot find symbol rangeZeroBaseLineVisible,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaseLineVisible = true; }
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == true) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselineVisible = true; }
compilation error,[CE] cannot find symbol,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselinePaint = new BasicPaint(1.0f); }
compilation error,[CE] cannot find symbol rangeZeroBaseLineVisible,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible!= false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaseLineVisible = true; }
compilation error,[CE] cannot find symbol,this.rangeZeroBaselineVisible = false; ,if(this.rangeZeroBaselineVisible == false) { this.rangeZeroBaselineVisible = false; } else { this.rangeZeroBaselinePaint = new BasicPaint(0.0f); }
compilation error,[CE] <identifier> expected,,private final XYPlotOrientation = XYPlotOrientation.getOrientation();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder seriesRenderingOrder = XYPlotRenderingOrder.FULL;
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder seriesRenderingOrder = new XYPlotRenderingOrder(System.currentTimeMillis());
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder seriesRenderingOrder = new XYPlotRenderingOrder();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder seriesRenderingOrder = new XYPlotRenderingOrder(512);
compilation error,[CE] <identifier> expected,,private final XYPlotManager = XYPlotManager.getPlotManager();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder seriesRenderingOrder = XYPlotRenderingOrder.FIRST;
compilation error,[CE] <identifier> expected,,private final XYPlotOrientation = XYPlotOrientation.VERTICAL;
compilation error,[CE] <identifier> expected,,private final XYPlotRenderingOrder = XYPlotRenderingOrder.FULL;
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder seriesRenderingOrder = new XYPlotRenderingOrder(this);
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol annotationAnnotations,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotationAnnotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); }
increase failing tests, [FE] NullPointerException,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotations.add(null); }
increase failing tests, [FE] NullPointerException,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotations.add(new NullPointerException("")); }
increase failing tests, [FE] NullPointerException,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotations.add(","); }
compilation error,[CE] illegal start of type,,return new Paint(Paint.DOUBLE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DOUBLE);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new Color(Paint.DOUBLE);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DECEMBER, Color.REDEFINITION);
compilation error,[CE] illegal start of type,,return new Paint(this.gridlinePaint);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return new Paint(Color.black);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT, Color.BLACK);
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashList();
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new TreeMap();
compilation error,[CE] incompatible types,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new ArrayList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedValues();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedStandardTicks();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapWithExpectedShape("BackgroundRangeMarkers");
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashArrayList();
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.backgroundRangeMarkers = new HashMap(); ,this.BackgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,setRangeMarker(index, marker, layer, false);
compilation error,[CE] cannot find symbol WARNING,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,_addRangeMarker(index, marker, layer, false);
compilation error,[CE] '.class' expected,addRangeMarker(index, marker, layer, true); ,addRangeMarker(int, marker, layer, false);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,super.addRangeMarker(index, marker, layer, true);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,setRangeMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol PlotLines,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.PlotLines, false);
compilation error,[CE] cannot find symbol,addRangeMarker(index, marker, layer, true); ,appendRangeMarker(index, marker, layer, false);
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] AssertionFailedError,if (this.datasets.size() > index) { ,if(index >= this.datasets.size()) {
compilation error,[CE] ')' expected,if (this.datasets.size() > index) { ,if(this.datasets.size() [BUGGY] index) {
compilation error,[CE] ')' expected,if (this.datasets.size() > index) { ,if(this.datasets.size() [PATCH] index) {
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new TreeSet();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new java.util.ArrayList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new HashSet();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new HashList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new PropertyList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new HashMap();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new DatasetList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new EventList();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] call to super must be first statement in constructor,,renderer.addChangeListener(this); this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey("n"));
compilation error,[CE] call to super must be first statement in constructor,,renderer.addChangeListener(this);
compilation error,[CE] cannot find symbol dataset,,renderer.addChangeListener(this); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,,this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations.set(0, rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol domainGridline,,this.domainGridline = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand type Stroke for unary operator '!',,Preconditions.checkArgument(!this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINE_PAINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_RANGE_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES_PAINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.rangeGridlinePaint = DEFAULT_RANGE_GRIDLINES_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEmptyText(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEmpty(true);
compilation error,[CE] no suitable method found for setRangeAxis(Stroke),configureRangeAxes(); ,setRangeAxis(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEmptyPointer(false);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEquals(rangeAxis);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_ASSIGN,configureRangeAxes(); ,setRangeAxisEquals(DEFAULT_GRIDLINE_ASSIGN);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEmpty(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POINT,configureRangeAxes(); ,setRangeAxisEmptyTextNode(DEFAULT_GRIDLINE_POINT);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_UPDATED);
patch is same with buggy,,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol GENERAL_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.GENERAL_UPDATED);
compilation error,[CE] cannot find symbol CHART,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHANGE);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.GENERAL);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = this.rangeAxes.size();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,Integer index = indexInList(this, getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 't');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeRangeMarker(Layer,Marker),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(layer, marker);
compilation error,[CE] cannot find symbol zone,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(zone, marker);
compilation error,[CE] cannot find symbol latin,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(latin, marker, layer);
compilation error,[CE] cannot find symbol map,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(map, marker, layer);
compilation error,[CE] ')' expected,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(contains(marker, layer);
compilation error,[CE] cannot find symbol permission,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(permission, marker, layer);
compilation error,[CE] no suitable method found for removeRangeMarker(XYPlot,Marker,Layer),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(this, marker, layer);
compilation error,[CE] cannot find symbol,,XYPlotViewer event = new XYPlotViewer(); event.setChangeEventType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] cannot find symbol,,XYPlotViewer event = new XYPlotViewer(this); event.setChangeEventType(ChartChangeEventType.DATASET_UPDATED); notifyListeners(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] cannot find symbol,,XYPlotChangeEvent event = new XYPlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this); notifyListeners(event);
compilation error,[CE] cannot find symbol,,XYPlotViewer event = new XYPlotViewer(); event.setChangeEventType(ChartChangeEventType.FUNCTION_UPDATED); notifyListeners(event);
compilation error,[CE] cannot find symbol,,XYPlotViewer event = new XYPlotViewer(this); event.setChangeEventType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,,XYPlotViewer event = new XYPlotViewer(); event.setChangeEventType(ChartChangeEventType.GENERAL); notifyListeners(event);
compilation error,[CE] cannot find symbol,,XYPlotViewer event = new XYPlotViewer(); event.setChangeEventType(ChartChangeEventType.RANGE); notifyListeners(event);
compilation error,[CE] cannot find symbol,,XYPlotViewer event = new XYPlotViewer(this); event.setChangeEventType(ChartChangeEventType.GENERAL);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
patch is same with buggy,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
increase failing tests, [FE] IllegalArgumentException,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(0.5f - 1);
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] NullPointerException,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] constructor PlotOrientation in class PlotOrientation cannot be applied to given types;,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = new PlotOrientation();
compilation error,[CE] cannot find symbol NEVER,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NEVER;
compilation error,[CE] cannot find symbol JsonOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = JsonOrientation.VERTICAL;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] cannot find symbol Maps,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = Maps.newHashMap();
compilation error,[CE] cannot find symbol POSITIVE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE;
compilation error,[CE] cannot find symbol plotOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = plotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol Orientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = Orientation.VERTICAL;
compilation error,[CE] cannot find symbol dataset,return result; ,return this.dataset;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] no suitable method found for getValue(),return result; ,return result == null? 0 : result.getValue();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result.toString();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.intValue();
compilation error,[CE] no suitable method found for getValue(),return result; ,return result!= null? 0 : result.getValue();
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result!= null? 0 : result.toString();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getDataset();
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getSeriesCount();
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDynamic()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDynamic()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapAxisToDomainAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDynamic()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapOutAxisToDomainAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDynamic()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] generics are not supported in -source 1.4,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new DatasetChangeEvent(this, getDataset(index)); <
compilation error,[CE] generics are not supported in -source 1.4,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDynamic()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToDomainAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); <
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = DEFAULT_RANGE_CROSSHAIR_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_RANGE_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Layer),,addRangeMarker(this, Layer.BACKGROUND); this.anchorValue = DEFAULT_RANGE_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Layer),,addRangeMarker(this, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANchor_VISIBLE;
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Layer),,addRangeMarker(this, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location, notify));
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this));
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this), location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNumberAxisLocation(null, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(getPlotInfo(), location, notify));
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location));
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setStandardAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol registry,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(registry, marker, layer, false);
compilation error,[CE] cannot find symbol PlotLines,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PlotLines, false);
compilation error,[CE] cannot find symbol PEEL,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PEEL, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Layer,Marker,int,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(layer, marker, index, true);
compilation error,[CE] cannot find symbol layers,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, layers, false);
compilation error,[CE] cannot find symbol PlotLines,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PlotLines, true);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol,,XYPlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(); this.rangeAxis = new RangeAxisRenderer();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.rangeAxis = new RangeAxisRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(); this.rangeAxis = new RangeAxisLocation();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.rangeAxis = new RangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYPlotRenderer(); this.rangeAxisLocations = new RangeAxisLocation();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.rangeAxis = new RangeAxisLocation();
compilation error,[CE] cannot find symbol rangeAxis,,renderer.addChangeListener(this); this.rangeAxis = new RangeAxis();
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(this.domainAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { renderer =(XYRenderer)rangeAxis.getRange(); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { renderer = new RangeAxis(rangeAxis); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { renderer =(XYRenderer)renderer.clone(); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { renderer =(XYRenderer)renderer.clone(); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { return new XYDataset(dataset); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { return new XYDataset(dataset, domainAxis); }
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.containsChangeListener()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.containsKey(this)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.features()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.value() > 0) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.getChangeListener() == null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.size() > 0) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.value()) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_CROSSHAIR_PAINT; this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.domainAxis = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = XYDomainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = XYDomainAxis.getDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_LOAD_XY; this.domainAxis = DEFAULT_DOMAIN_AXIS;
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true;
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible!= false) { this.rangeCrosshairVisible = false; } else { this.rangeCrosshairVisible = true; }
compilation error,[CE] ';' expected,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible == false) { this.rangeCrosshairVisible = false; } else { this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; this.rangeCrosshairFont = DEFAULT_CROSSH
compilation error,[CE] ';' expected,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible == false) { this.rangeCrosshairVisible = false; } else { this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; this.rangeCrosshairStroke = DEFAULT_
compilation error,[CE] ';' expected,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible == false) { this.rangeCrosshairVisible = false; } else { this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; this.rangeCrosshairFont = DEFAULT_CROSS
compilation error,[CE] ';' expected,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible == false) { this.rangeCrosshairVisible = false; } else { this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; this.rangeCrosshairPaint = DEFAULT_
compilation error,[CE] ';' expected,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible == false) { this.rangeCrosshairVisible = false; } else { this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; this.rangeCrosshairFont = DEFAULT_CROSSHAIR
compilation error,[CE] cannot find symbol Preconditions,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible == false) { this.rangeCrosshairVisible = false; } else { Preconditions.checkNotNull(this.rangeCrosshairVisible); }
compilation error,[CE] ';' expected,this.rangeCrosshairVisible = false; ,if(this.rangeCrosshairVisible == false) { this.rangeCrosshairVisible = false; } else { this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; this.rangeCrosshairNegative = DEFAULT_
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol,,setAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxisItemLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(renderer!= null && this.domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol annotationListener,if (renderer != null) { ,if(renderer!= null && renderer.annotationListener!= null) {
compilation error,[CE] cannot find symbol annotationListener,if (renderer != null) { ,if(renderer!= null && renderer.annotationListener == null) {
compilation error,[CE] cannot find symbol Renderer,if (renderer != null) { ,if(renderer!= null &&!Renderer.hasChangeListener()) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
compilation error,[CE] cannot find symbol Feature,if (renderer != null) { ,if(renderer!= null && isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,[CE] cannot find symbol Feature,if (renderer != null) { ,if(renderer!= null && isEnabled(Feature.AUTO_CLOSE_TARGET)) {
compilation error,[CE] cannot find symbol Renderer,if (renderer != null) { ,if(renderer!= null &&!Renderer.isNew()) {
compilation error,[CE] cannot find symbol Renderer,if (renderer != null) { ,if(renderer!= null &&!Renderer.isActual()) {
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
increase failing tests, [FE] AssertionFailedError,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; }
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_ZERO_PAINT,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselinePaint = DEFAULT_DOMAIN_ZERO_PAINT; }
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == true) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; }
compilation error,[CE] cannot find symbol domainZeroBaseLineVisible,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaseLineVisible = true; }
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_ZERO_PAINT,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible!= false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselinePaint = DEFAULT_DOMAIN_ZERO_PAINT; }
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselineVisible = true; }
compilation error,[CE] cannot find symbol,this.domainZeroBaselineVisible = false; ,if(this.domainZeroBaselineVisible == false) { this.domainZeroBaselineVisible = false; } else { this.domainZeroBaselinePaint = new BasicPaint(1.0f); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this); this.domainAxis = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.rangeAxis = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,,renderer = new XYItemRenderer(); this.domainAxis = new ObjectList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(); this.domainAxis = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(1);
compilation error,[CE] cannot find symbol,,this.domainAxes = super.configureDomainAxes();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol,,super.setPlotIndex(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes();
compilation error,[CE] cannot find symbol,,super.setPlotIndex(i); this.domainAxes = new CategoryPlot();
compilation error,[CE] cannot find symbol,,this.domainAxes =(CategoryAxis)super.configure();
compilation error,[CE] cannot find symbol annotationListener,if (renderer != null) { ,if(renderer!= null && renderer.annotationListener!= null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(renderer!= null && this.domainAxis!= null) {
compilation error,[CE] cannot find symbol annotationIntrospector,if (renderer != null) { ,if(renderer!= null && renderer.annotationIntrospector!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol annotationListener,if (renderer != null) { ,if(renderer!= null && renderer.annotationListener == null) {
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && renderer.hasChangeListener()) {
compilation error,[CE] cannot find symbol annotationListeners,if (renderer != null) { ,if(renderer!= null && renderer.annotationListeners!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && renderer.this.domainAxis!= null) {
compilation error,[CE] cannot find symbol annotationProblem,if (renderer != null) { ,if(renderer!= null && renderer.annotationProblem) {
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(this.marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(layer);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(tag);
compilation error,[CE] bad operand types for binary operator '+',boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker + 1);
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxis.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisElements,this.domainAxes.set(0, domainAxis); ,this.domainAxisElements.set(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0), domainAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.clear();
increase failing tests, [FE] NullPointerException,this.domainAxes.set(0, domainAxis); ,this.domainAxes.clear();
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0), domainAxis);
compilation error,[CE] cannot find symbol,this.domainAxes.set(0, domainAxis); ,this.domainAxisEquals(domainAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.clone();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.get();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.dataset.getDataset();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = new XYDataset(dataset.size());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)this.dataset.toArray(new XYDataset());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)super.getDataset();
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < index) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDynamic()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] ,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException("")); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,datasetChanged(new DatasetChangeEvent(this, getAxisIndex(axisIndex)));
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalArgumentException(""); } else { marker.append(","); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalStateException(""); } else { marker.append(","); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { marker = new Integer(index); marker.append('n'); } else { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { marker = new Integer(0, marker.length()); marker.append('n'); } else { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { marker = new Integer(index); marker.append('n'); marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { marker = new Layer(); marker.append('n'); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { marker = new Integer(index); marker.append('n'); } else { marker.append('r'); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { marker = new Layer(); marker.append('n'); marker.append(index + 1).append(marker); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported("n");
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(NumberAxis.valueOf(getRangeAxis()));
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(null);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 't');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOfSupported(NumberAxis.valueOf('/'));
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.size() > 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.contains("RangeAxis")) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] bad operand types for binary operator '&&',if (axis != null) { ,if(axis!= null && axis.getLowerBound()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.containsKey("xmlns")) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.containsKey("RangeAxis")) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.contains("xyz")) {
compilation error,[CE] bad operand types for binary operator '==',if (axis != null) { ,if(axis!= null && axis.getLowerBound() == null) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYItemRenderer(this);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.VERTICAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYPlotRenderer();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot assign a value to final variable datasetRenderingOrder,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol FULL,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.FULL;
compilation error,[CE] cannot find symbol NEVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.NEVERSE;
compilation error,[CE] cannot find symbol,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private XYDatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol DOUBLE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DOUBLE;
compilation error,[CE] cannot find symbol EXPECTED,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.EXPECTED;
compilation error,[CE] cannot find symbol DEVERSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.DEVERSE;
compilation error,[CE] cannot find symbol FALSE,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.FALSE;
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index - 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index * 2);
compilation error,[CE] no suitable method found for get(int,int),result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index, 0);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index -1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index+1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index-1);
increase failing tests, [FE] NullPointerException,result = (CategoryDataset) this.datasets.get(index); ,result =(CategoryDataset)this.datasets.get(index+ 1);
patch is same with buggy,,result = (CategoryDataset) this.datasets.get(index); ,result = (CategoryDataset)this.datasets.get(index);
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.setChanged(true, false); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.setChanged(true); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalArgumentException(""); } else { this.event.setChanged(true); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalArgumentException(""); } else { this.event.setChanged(true, false); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.reset(); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.addChangeListener(","); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalArgumentException(""); } else { this.event.reset(); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new NullPointerException(""); } else { this.event.setChanged(true, false); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new NullPointerException(""); } else { this.event.setChanged(true); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalArgumentException(""); } else { super.setChangeEvent(event); }
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlot.DEFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DOUBLE, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlotManager.DEFAULT_CROSSHAIR_PAINT, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DANGLING_CROSSHAIR, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new XYPlot(XYPlotManager.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DANGLING_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_RANGE_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_RANGE_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridline = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeGridlinePaint = DEFAULT_RANGE_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,renderer.appendChangeListener(this); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ValueAxis();
increase failing tests, [FE] NullPointerException,,renderer.addChangeListener(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis.getXYDataset());
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] ')' expected,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE &&(this.rangeCrosshairPaint!= null? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_PADD
compilation error,[CE] bad operand types for binary operator '&&',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_STROKE;
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null && getChronology().equals(getChronology())) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null && getChronology().equals(this.getChronology())) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null && getChronology().canAssignTo(event.getChronology())) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null && getChronology().canAssignTo(event)) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null && getChronology().equals(getPlot().getPlot())) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null && getChronology().iterator().hasNext()) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null && getChronology().isSupported()) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getPlot()!= null) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.size() > 0) {
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.size() > 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getSeriesCount() > 1) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getChangeListener() == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.getItemCount() > 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.length() > 0) {
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] for-each loops are not supported in -source 1.4,} ,if(location!= null) { location = new AxisLocation(); for(AxisLocation location : Location.class) { setRangeAxisLocation(location); }
compilation error,[CE] illegal start of expression,} ,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisInfo()); } else { setRangeAxisLocation(location); }
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,if(location!= null) { throw new IllegalStateException(""); } else { location.setAxisLocation("RangeAxisLocation", Location.class); }
compilation error,[CE] illegal start of expression,} ,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisInfo()); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] ,} ,if(location!= null) { throw new IllegalStateException(""); } else { location.setAxisLocation("RangeAxisLocation,"Undefined")); }
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new ArrayList();
compilation error,[CE] cannot find symbol domainAxisLists,this.domainAxes = new ObjectList(); ,this.domainAxisLists = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new HashMap();
compilation error,[CE] cannot find symbol domainAxisElements,this.domainAxes = new ObjectList(); ,this.domainAxisElements = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxes = new ObjectList(); ,this.domainAxisNames = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisEquals,this.domainAxes = new ObjectList(); ,this.domainAxisEquals = new ObjectList();
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new HashList();
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.size() > 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.isRange()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.containsKey("RangeAxis")) {
compilation error,[CE] cannot find symbol NONE,if (axis != null) { ,if(axis!= null && axis.containsKey("RangeAxis", CategoryPlot.NONE)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.containsKey("RangeAxis")) {
compilation error,[CE] cannot find symbol SIZE,if (axis != null) { ,if(axis!= null && axis.containsKey("RangeAxis", CategoryPlot.SIZE)) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.isLocal()) {
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE;
compilation error,[CE] incompatible types,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_VISIBLE;
patch is same with buggy,,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_SHIFT,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_SHIFT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_SIZE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_SIZE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_SLOT,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_SLOT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_STANDS,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_STANDS;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_STANGE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_STANGE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_STRAKE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINE_STRAKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + getClass());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + this.getName());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + JsonToken.VALUE_EMPTY);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + this.getClass());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + getMessage());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unknown class");
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + JsonToken.VALUE_NULL_OBJECTS);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + JsonToken.VALUE_NUMBER_FLOAT);
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(this);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEventType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DatasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setMode(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol eventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(this, eventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(this, EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DateTimeChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(DateTimeChangeEventType.DATASET_UPDATED);
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashList();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashToolTipSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashCode();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashWrapper();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashWrappedText();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashManager();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashText();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashToolTipGenerator();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); super.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()).setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] '(' or '[' expected,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = new Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = new BasicPaint(2.0f);
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Marker and Layer,if (layer == Layer.FOREGROUND) { ,if(marker == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol FIELD_NAME,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FIELD_NAME) {
compilation error,[CE] 'else' without 'if',if (layer == Layer.FOREGROUND) { ,else if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol FOR_GROUND,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR_GROUND) {
compilation error,[CE] cannot find symbol FOR,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR) {
compilation error,[CE] cannot find symbol FEOREGROUND,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FEOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxisLocations(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxisLocations(); this.rangeAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = XYPlot.getChart();
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = XYPlot.getChart(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = XYPlot.getChart(ChartChangeEventType.TYPE);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = XYPlot.getChart(this);
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = new XYPlotChart(this);
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = new XYPlotChart(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = XYPlot.getChart(ChartChangeEventType.INSTANCE);
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = XYPlot.getChart(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol XYPlotChartChart,,XYPlotChartChart = XYPlot.getChart(ChartChangeEventType.CHART);
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol defaultPlotType,,Preconditions.checkNotNull(defaultPlotType);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, null, null);
compilation error,[CE] cannot find symbol,,Preconditions.checkNotNull(defaultPlot());
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>),,this(null, null, null);
compilation error,[CE] cannot find symbol TYPE_OBJECT,,Preconditions.checkNotNull(Plot.TYPE_OBJECT);
compilation error,[CE] <identifier> expected,,super(); this.null = null;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(this);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.getClass()!= null);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.dataset);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(Category);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlot().getIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getIndex(category);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NAME);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NONE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.CYCLE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,Integer index = indexInList(this, getPlot());
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.rangeAxes = new ObjectList(); }
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.domainAxes = new ObjectList(); >>
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.domainAxisLocations = new ObjectList(); }
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); >> else { this.domainAxes = new ObjectList(); }
compilation error,[CE] generics are not supported in -source 1.4,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.domainAxes = new ObjectList(); <
compilation error,[CE] generics are not supported in -source 1.4,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); < else { this.domainAxes = new ObjectList(); }
increase failing tests, [FE] NullPointerException,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] illegal start of expression,this.domainAxes = new ObjectList(); ,if(this.domainAxes!= null) { this.domainAxes = new ObjectList(); } else { this.domainAxes = new ObjectList(); [Delete]
patch is same with buggy,,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setupRangeAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setAxisLocation(AxisLocation.TOP_OR_LEFT, true);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol TEOP_OR_LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TEOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,ensureRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_RIGHT, false);
compilation error,[CE] cannot find symbol TOP_OR_LeFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LeFT, true);
compilation error,[CE] cannot find symbol RIGHT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.RIGHT, false);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { marker.setAnnotation(range); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,if(axisIndex < 0) { throw new NullPointerException(""); } else { mapDatasetToRangeAxis = new int[axisIndex]; }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,if(axisIndex < 0) { throw new NullPointerException(""); } else { mapDatasetToRangeAxis = new int[axisIndex++]; }
compilation error,[CE] unclosed string literal,,if(axisIndex < 0) { throw new NullPointerException(""); } else { mapDatasetToRangeAxis = new int[axisIndex+"]; }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,if(axisIndex < 0) { throw new IllegalStateException(""); } else { mapDatasetToRangeAxis = new int[axisIndex++]; }
compilation error,[CE] > expected,,map =(Map < K, V >> )getDataset(); this.axisIndex = axisIndex + 1;
compilation error,[CE] cannot find symbol axisIndex,,if(axisIndex < 0) { throw new NullPointerException(""); } else { this.axisIndex = axisIndex; axisIndex++; }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,if(axisIndex < 0) { throw new IllegalStateException(""); } else { mapDatasetToRangeAxis = new int[axisIndex]; }
compilation error,[CE] unclosed string literal,,if(axisIndex < 0) { throw new IllegalStateException(""); } else { mapDatasetToRangeAxis = new int[axisIndex+"]; }
compilation error,[CE] cannot find symbol axisIndex,,if(axisIndex < 0) { throw new NullPointerException(""); } else { this.axisIndex = axisIndex + 1; axisIndex++; }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,,if(axisIndex < 0) { throw new NullPointerException(""); } else { mapDatasetToRangeAxis = new HashMap(); }
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] incompatible types,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOCAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_GLOBAL_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_LOAD_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_LOCAL,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_LOCAL;
compilation error,[CE] cannot find symbol DEFAULT_CLOSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CLOSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_LAST,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_LAST;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_GLOBAL,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_GLOBAL;
compilation error,[CE] cannot find symbol DEFAULT_DOUBLE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_DOUBLE;
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.createParser(this);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = new PlotChangeEvent(this);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis =(PlotChangeEvent)this.getListener();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.createParser();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.createParser(e);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = getPlotChangeEvent(this);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = CategoryPlot.newHashMap();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis =(PlotChangeEvent)this.getParent();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = CategoryPlot.getCurrentPlot();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent yAxis = PlotChangeEvent.createParsePlot();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol rangeGridlineValue,,this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE; this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeGridlineValue = new XYGridlineValue(1.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol rangeGridlineValue,,this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE; this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(itemRenderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.itemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasetToDomainAxis(0, 0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.renderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getVariableAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(null);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,setupDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText("DomainAxis dataset:"); this.domainAxisPaint = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText("DomainAxis dataset:"); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,enableRangeAxis(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new ValueTipGenerator()); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.containsKey(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] ')' expected,,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { marker = this.foregroundDomainMarkers.get(new Integer(index); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size() &&(this.foregroundDomainMarkers.containsKey(marker));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { throw new IllegalStateException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.contains(marker);
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,DomainAxis axis = getDomainAxis();
compilation error,[CE] cannot find symbol,,DomainAxis axis = getDomainAxis();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,Node axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Object axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxes(getPlot());
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getDomainAxis(getPlot());
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.datasetToDomainAxisMap.get(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol,,super.setAxisIndex(axisIndex); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getDomainAxisIndex(axisIndex); this.datasetToDomainAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.datasetToDomainAxisMap.size();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.datasetToDomainAxisMap.indexOf(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getDomainAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToDomainAxisMap.reset(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_CROSSHAIR_PAINT; this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeStroke = new java.util.ArrayList();
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new IllegalStateException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new NullPointerException(""); } else { System.err.println("Unable to parse:" + this); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,if(e.getMillis()!= null) { throw new NullPointerException(""); }
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,,if(e.getPlot()!= null) { throw new DatasetChangeEvent(""); }
compilation error,[CE] cannot find symbol datasetChanged,,if(this.datasetChanged) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { throw new JXPathNotFoundException(""); }
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { throw new JsonMappingException(""); }
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && location.getDomainAxisLocation()!= null) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.getDomainAxisLocation()!= null && this.notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && location.isLocation()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && location.getDomainLocation()!= null) {
compilation error,[CE] cannot find symbol isDomainAxisLocation,if (notify) { ,if(this.isDomainAxisLocation) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol,,XYDomainAxis domainAxes =(XYDomainAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,XYDomainAxis domainAxes =(XYDomainAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,XYDomain domainAxes =(XYDomainAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,XYDomain domainAxes =(XYDomainAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,this.domainAxes =(XYDomainAxis)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,,XYDomainAxis domainAxes =(XYDomainAxis)this.domainAxes.get(1);
compilation error,[CE] cannot find symbol,,XYDomain domainAxes =(XYDomainAxis)this.domainAxes.get(1);
compilation error,[CE] cannot find symbol,,this.domainAxes =(XYDomainAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,XYDomain domainAxes =(XYDomainAxis)this.domainAxes.get(i); this.domainAxes.clear();
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxisLocation,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisLocation);
compilation error,[CE] no suitable constructor found for HashMap(ObjectList),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxis, this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxisLocation,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisLocation, this.domainAxisLocation);
compilation error,[CE] cannot find symbol domainAxisName,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisName, this.domainAxisLocation);
compilation error,[CE] cannot find symbol domainAxis,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxis, this.domainAxisLocation);
compilation error,[CE] cannot find symbol domainAxisName,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisName, this.domainAxisLocations);
compilation error,[CE] cannot find symbol Maps,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap() + Maps.newHashMap();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxis()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisElement()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisEvent(this));
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis = (ValueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol ptr,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(ptr);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(valueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol padding,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(padding);
compilation error,[CE] cannot find symbol plot,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(plot.id);
compilation error,[CE] cannot find symbol plot,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(plot.i);
compilation error,[CE] no suitable method found for get(),ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location =(AxisLocation)this.rangeAxisLocation.get(index);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.get(getRange());
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getRange();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(getRange());
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.get(index);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.rangeAxisLocation);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.getCurrentLocation();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location =(AxisLocation)this.rangeAxisLocation.get(index - 1);
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.rangeAxisLocation.get(getRangeAxisLocation());
compilation error,[CE] illegal start of type,,return new ResourceBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"), LocalizationResources.parse("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"), LocalizationResources.indexOf("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"), LocalizationResources.indexOf("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"), LocalizationResources.valueOf("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.parse("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"), LocalizationResources.indexOf("org.jfree.chart.plot.LocalizationBundle));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"), LocalizationResources.parse("org.jfree.chart.plot.LocalizationBundle));
compilation error,[CE] illegal start of type,,return new ResourceBundle(LocalizationResources.binarySearch("org.jfree.chart.plot.LocalizationBundle"), LocalizationResources.newInstance());
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Marker and Layer,if (layer == Layer.FOREGROUND) { ,if(marker == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol FIELD_NAME,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FIELD_NAME) {
compilation error,[CE] cannot find symbol FOR_GROUND,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR_GROUND) {
compilation error,[CE] 'else' without 'if',if (layer == Layer.FOREGROUND) { ,else if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND || index == 0) {
compilation error,[CE] cannot find symbol FOR,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND || index >= 0) {
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, rangeAxis);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxis);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, 0);
compilation error,[CE] ';' expected,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0), rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxis.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxises.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.domainAxis);
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol plot,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(plot.i);
compilation error,[CE] cannot find symbol plot,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(plot);
patch is same with buggy,,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis = (CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol plot,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(plot.id);
compilation error,[CE] cannot find symbol button,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(button);
compilation error,[CE] cannot find symbol NAME,CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i); ,CategoryAxis axis =(CategoryAxis)this.domainAxes.get(Plot.NAME);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(marker!= null) { for(Marker marker : marker.getLabel()) { super.addRangeMarker(marker); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] incompatible types,,if(marker!= null) { marker = new Integer(index); marker.addChangeListener(this); } else { marker.appendChangeListener(this); }
compilation error,[CE] incompatible types,,if(marker!= null) { marker = new Integer(index); marker.addRangeMarker(this); marker.addChangeListener(this); }
compilation error,[CE] incompatible types,,if(marker!= null) { marker = new Integer(index); marker.addChangeListener(this); } else { marker.detachFromLastPointer(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(marker!= null) { for(Marker marker : marker.getLabel()) { addRangeMarker(marker); }
compilation error,[CE] incompatible types,,if(marker!= null) { marker = new Integer(index); marker.addChangeListener(this); } else { marker.addChangeListener(this); }
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.backgroundRangeMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol forwardRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.forwardRangeMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VISIBLE,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.rangeCrosshairVisible = DEFAULT_RANGE_CROSSHAIR_VISIBLE; }
increase failing tests, [FE] NullPointerException,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; }
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.anchorValue = DEFAULT_RANGE_CROSSHAIR_VISIBLE; addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] illegal start of expression,this.foregroundRangeMarkers = new HashMap(); ,if(this.foregroundRangeMarkers!= null) { this.foregroundRangeMarkers = new HashMap(); } else { this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { throw new NullPointerException(""); } else { mapDatasetToRangeAxis = new int[axisIndex]; }
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getDataset(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { throw new NullPointerException(""); } else { this.axisIndex = axisIndex; axisIndex++; }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { throw new IllegalStateException(""); } else { mapDatasetToRangeAxis = new int[axisIndex++]; }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { throw new NullPointerException(""); } else { mapDatasetToRangeAxis = new int[axisIndex++]; }
compilation error,[CE] unclosed string literal,} ,if(axisIndex < 0) { throw new NullPointerException(""); } else { mapDatasetToRangeAxis = new int[axisIndex+"]; }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { throw new NullPointerException(""); } else { this.axisIndex = axisIndex + 1; axisIndex++; }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { throw new IllegalStateException(""); } else { mapDatasetToRangeAxis = new int[axisIndex]; }
compilation error,[CE] unclosed string literal,} ,if(axisIndex < 0) { throw new IllegalStateException(""); } else { mapDatasetToRangeAxis = new int[axisIndex+"]; }
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getDataset();
compilation error,[CE] ')' expected,,if(layer == Layer.EVERY) { if(this.backgroundRangeMarkers!= null) { markers = new Layer(index, this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] 'else' without 'if',,Layer layer = this.backgroundRangeMarkers.get(index);
compilation error,[CE] ')' expected,,if(layer == Layer.TEXT) { if(this.backgroundRangeMarkers!= null) { markers = new Layer(index, this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,,if(layer == Layer.EVERY) { if(this.backgroundRangeMarkers!= null) { markers = new Layer(index, this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] ')' expected,,if(layer == Layer.TOP) { if(this.backgroundRangeMarkers!= null) { markers = new Layer(index, this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.ATOMIC) { if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); }
compilation error,[CE] ')' expected,,if(layer == Layer.TEXT) { if(this.backgroundRangeMarkers!= null) { markers = new Layer(index, this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] ')' expected,,if(layer == Layer.TOP) { if(this.backgroundRangeMarkers!= null) { markers = new Layer(index, this.backgroundRangeMarkers.get(new Integer(index), markers); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.EVERY) { if(this.backgroundRangeMarkers!= null) { markers = new java.util.ArrayList(); }
compilation error,[CE] illegal start of expression,,if(layer == Layer.EVERY) { if(this.backgroundRangeMarkers!= null) { markers = new Layer(); }
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.rangeAxisLocation);
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol i,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(i, location);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.rangeAxisLocation, location);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, 0);
compilation error,[CE] cannot find symbol NONE,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, AxisLocation.NONE);
patch is same with buggy,,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol axisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.axisLocation);
compilation error,[CE] cannot find symbol NAME,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, AxisLocation.NAME);
compilation error,[CE] cannot find symbol index,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.index, location);
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { marker = new Marker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setRange(true); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker = new Marker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,XYMarker marker = new XYMarker();
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { return null; }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker),,boolean marker = this.marker.isDigits();
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private static boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,private boolean rangeCrosshairLockedOnData = true; ,private static rangeCrosshairLockedOnData = false;
compilation error,[CE] variable domainCrosshairLockedOnData is already defined in class XYPlot,private boolean rangeCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private double rangeCrosshairLockedOnData = false;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new DefaultRenderer();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.renderers = new ObjectList(); ,this.renderers = new ObjectList(this.renderers);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_INT_RenderER);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_NOT_OBJECT);
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new SymbolList();
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_INHERITED);
compilation error,[CE] cannot find symbol Renderer,this.renderers = new ObjectList(); ,this.renderers = new ObjectList(Renderer.TYPE_ROOT);
compilation error,[CE] cannot find symbol registry,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(registry, marker, layer, false);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, false);
compilation error,[CE] ')' expected,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(contains(marker, layer, true);
compilation error,[CE] no suitable method found for removeDomainMarker(Marker,Layer,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(marker, layer, false);
compilation error,[CE] ')' expected,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(contains(marker, layer, false);
compilation error,[CE] cannot find symbol zone,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(zone, marker, layer, false);
compilation error,[CE] cannot find symbol PlotLines,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.PlotLines, false);
compilation error,[CE] cannot find symbol zone,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(zone, marker, layer, true);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getDataset(); this.rangeGridlineValue = new RangeGridlineValue(0.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeGridlineValue = new XYGridlineValue(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.baseGridlineValue = new BaseGridlineValue(1.0f);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getDataset(); this.rangeGridlineValue = new RangeGridlineValue(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.baseGridlineValue = new BaseGridlineValue(1.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeGridlineValue = new RangeGridlineValue(1.0f);
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof Chart) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); }
increase failing tests, [FE] NullPointerException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); >>
compilation error,[CE] generics are not supported in -source 1.4,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); <
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.backgroundRangeMarkers.add(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.foregroundRangeMarkers.add(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.setChanged(true); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.setChanged(true, false); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.addChangeListener(","); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { super.setChangeEvent(event); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalArgumentException(""); } else { super.setChangeEvent(event); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { fireDatasetChanged(); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalArgumentException(""); } else { this.event.setChanged(true); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.reset(); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalArgumentException(""); } else { this.event.setChanged(true, false); }
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.removeChangeListener(","); }
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new XYPlot(this.axisIndex, this.axisIndex + 1); for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis
compilation error,[CE] ')' expected,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new Integer(axisIndex
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetEntry(i, axisIndex); }
compilation error,[CE] '[' expected,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new int(axisIndex
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new XYPlot(this.axisIndex, this.axisIndex + 1); for(int i = 0; i < axisIndex; i++) { mapDatasetToDomain
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new XYPlot(this.axisIndex, this.axisIndex + 1); for(int i = 0; i < axisIndex; i++) { mapDatasetEntry
compilation error,[CE] ')' expected,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new IntElement(axisIndex
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; mapDatasetToDomainAxis.put(axisIndex, new Integer(axisIndex)); }
compilation error,[CE] not a statement,} ,if(axisIndex < 0) { mapDatasetToDomainAxis = new XYPlot(this.axisIndex, this.axisIndex + 1); for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAx
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < XYPlot>)getPlot();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxisMap = new ObjectList();
patch is same with buggy,,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.rangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol seriesToRangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.seriesToRangeAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol setToRangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.setToRangeAxisMap = new ObjectList();
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new ObjectList(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol rangeAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.rangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol axisAxisMap,this.datasetToRangeAxisMap = new ObjectList(); ,this.axisAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol availableDataset,this.datasetToRangeAxisMap = new ObjectList(); ,this.availableDataset = new ObjectList();
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final Layer layer = this.foregroundRangeMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = super.removeRangeMarker(index);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = super.removeRangeMarker(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundRangeMarkers.containsKey(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundRangeMarkers.contains(marker);
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.NEGATIVE) { removeRangeMarker(marker); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.LEFT) { removeRangeMarker(marker); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundRangeMarkers.get(index); if(layer == Layer.NEGROUND) { removeRangeMarker(marker); }
compilation error,[CE] variable layer is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Layer layer = XYPlot.newPlot(this.foregroundRangeMarkers, this.backgroundRangeMarkers.get(index));
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.PLAIN, 10);
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.DEFAULT_VALUE_LABEL_FONT);
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.DEFAULT_VALUE_LABEL_FONT, 10);
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.PLAIN, 11);
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.DEFAULT_VALUE_LABEL_FONT, 11);
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.DEFAULT_VALUE_LABEL_FONT, 1);
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.DEFAULT_VALUE_LABEL_FONT, 12);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.SERIF, 10);
compilation error,[CE] illegal start of type,,return new Font("SansSerif", Font.PAIN, 10);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new ObjectList();
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Marker and Layer,if (layer == Layer.FOREGROUND) { ,if(marker == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol FIELD_NAME,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FIELD_NAME) {
compilation error,[CE] cannot find symbol FOR_GROUND,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR_GROUND) {
compilation error,[CE] 'else' without 'if',if (layer == Layer.FOREGROUND) { ,else if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol FOR,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR) {
compilation error,[CE] cannot find symbol FEOREGROUND,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FEOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index, marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index, marker, layer);
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index >= 0 && marker.equals('t')) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index < 0 && marker.equals('t')) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index >= 0 && marker.equals('r')) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index < 0 && marker.equals('r')) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index >= 0 && marker.isDigits()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.lastIndexOf('n'); if(index >= 0 && marker.equals("n")) { throw new IllegalArgumentException(""); }
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new XYDatasetList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasets = new ObjectList(); ,this.datasets = new XYDataset();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new DefaultDataset();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new SymbolList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new StackList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.renderers);
compilation error,[CE] cannot find symbol domainAxisMap,this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.domainAxisMap);
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerIfNull(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol FOR_GROUND,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOR_GROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerOnly(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return setRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerOf(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] bad operand types for binary operator '+',return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND + 1);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeLineMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol Category,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Category.FOREGROUND);
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.reset(axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol i,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(i, new Integer(axisIndex));
compilation error,[CE] no suitable method found for set(Integer),this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(new Integer(axisIndex));
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToDomainAxisMap.set(axisIndex, new integer(index));
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] no suitable constructor found for Color(Color,Color),public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.BLACK);
compilation error,[CE] cannot find symbol REDEFINITE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.REDEFINITE);
compilation error,[CE] cannot find symbol REDEFINITION,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.REDEFINITION);
compilation error,[CE] ';' expected,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE, Color.BLACK;
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] no suitable constructor found for Color(Color,Color),public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.RED);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] Marker is abstract; cannot be instantiated,,if(marker!= null) { marker = new Marker(layer); marker.addRangeMarker(marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.addRangeMarker(layer, marker); marker.addLabel(layer); }
compilation error,[CE] Marker is abstract; cannot be instantiated,,if(marker!= null) { marker = new Marker(layer); marker.addRangeMarker(marker); } else { marker.addLabel(layer); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.addRangeMarker(layer); marker.addLabel(layer); }
compilation error,[CE] cannot find symbol SuperClass,,if(marker!= null) { marker = new Marker(SuperClass.RANGE_MARKER); marker.addChoose(layer, marker); }
compilation error,[CE] Marker is abstract; cannot be instantiated,,if(marker!= null) { marker = new Marker(layer); marker.addRangeMarker(marker); } else { marker.append("n"); }
compilation error,[CE] Marker is abstract; cannot be instantiated,,if(marker!= null) { marker = new Marker(layer); marker.addRangeMarker(marker); } else { marker.append(","); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.addRangeMarker(layer, marker); marker.addChoose(layer); }
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] cannot find symbol NullPointerException,this(null, null, null, null); ,this(NullPointerException, null, null, null);
compilation error,[CE] cannot find symbol objectCodec,this(null, null, null, null); ,this(objectCodec, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(NullPointerException,<null>,<null>,<null>),this(null, null, null, null); ,this(new NullPointerException(), null, null, null);
compilation error,[CE] cannot find symbol Null,this(null, null, null, null); ,this(Null, null, null, null);
compilation error,[CE] no suitable constructor found for CategoryPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] ')' expected,this(null, null, null, null); ,this(null, null, null, null;
compilation error,[CE] cannot find symbol object,this(null, null, null, null); ,this(object, null, null, null);
compilation error,[CE] ';' expected,this(null, null, null, null); ,this(null, null, null, null));
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.BOTTOM_OR_RIGHT);
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.TOP_OR_LEFT);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.BOTTOM_OR_LEFT);
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.TOP_OR_RIGHT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxisLocations.set(0, rangeAxis);
compilation error,[CE] cannot find symbol RangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, RangeAxis.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxis);
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.CENTER_OR_LEFT);
compilation error,[CE] cannot find symbol AxisRangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisRangeAxis.BOTTOM_OR_RIGHT);
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 0;
increase failing tests, [FE] AssertionFailedError,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = NEW_CROSSHAIR_STROKE;
increase failing tests, [FE] AssertionFailedError,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = NOVATED_GRIDLINE_STROKE;
compilation error,[CE] no suitable constructor found for BasicStroke(String),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke("NO_CROSSHAIR_STROKE");
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 5.0;
increase failing tests, [FE] AssertionFailedError,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = ALL_GRIDLINE_STROKE;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 4;
compilation error,[CE] cannot find symbol,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new XYPlotStroke("");
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getSeriesName());
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getKey());
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; i++) { result += getDataset(i); }
compilation error,[CE] illegal start of expression,,for(CategoryDataset i = getDataset(); i!= null; i++) { if(index == WHOLE_COLLECTION) { result = new CategoryDataset(getPlotIndex()); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < index; i++) { result[i] = getDataset(i); }
compilation error,[CE] illegal start of expression,,for(CategoryDataset i = getDataset(); i!= null; i++) { if(index < WHOLE_COLLECTION) { result = new CategoryDataset(getPlotIndex()); }
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getName());
compilation error,[CE] illegal start of expression,,for(CategoryDataset i = getDataset(); i!= null; i++) { if(index == WHOLE_COLLECTION) { result = new CategoryDataset(i); }
compilation error,[CE] cannot find symbol,,System.err.println("Unable to parse:" + getSeriesCount());
compilation error,[CE] cannot find symbol,,XYMarker marker =(XYMarker)super.removeDomainMarker(marker);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Object marker = super.removeDomainMarker(layer);
compilation error,[CE] cannot find symbol,,XYMarker marker = new XYMarker(super.removeDomainMarker(marker, layer));
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] ')' expected,,XYMarker marker = new XYMarker(super.removeDomainMarker(marker, layer);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Layer marker = super.removeDomainMarker(layer);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,final Marker marker = new Marker(super.removeDomainMarker(marker, layer));
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Layer marker = super.removeDomainMarker(marker);
compilation error,[CE] ')' expected,,final Marker marker = new Marker(super.removeDomainMarker(marker, layer);
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker,Layer),,Marker marker = getDomainMarker(layer);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxises,,this.rangeAxises = Collections.emptySet(); this.rangeAxises.set(0, rangeAxis);
compilation error,[CE] unexpected type,,Preconditions.checkArgument(!this.drawSharedDomainAxis = false); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] unexpected type,,Preconditions.checkArgument(!this.drawSharedDomainAxis = false);
compilation error,[CE] cannot find symbol rangeAxiseListener,,this.rangeAxes.set(0, rangeAxis); this.rangeAxiseListener = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(this.rangeAxes.get(0));
compilation error,[CE] ')' expected,,this.domainAxis = new ValueAxis(this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(this.rangeAxes.set(0, rangeAxis));
compilation error,[CE] generics are not supported in -source 1.4,,this.rangeAxes.set(0, rangeAxis); this.rangeAxiseListener = new ArrayList < CategoryAxis>();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureOrientation();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureSupportedAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePossibleExceptionAttributes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,enableRangeAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePossibleAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureScope();
patch is same with buggy,,super(); ,super();
compilation error,[CE] cannot find symbol PlotManager,super(); ,renderer.addAsItem(PlotManager.NONE, Node.newString(Token.NAME, Token.NAME));
compilation error,[CE] cannot find symbol PlotManager,super(); ,renderer.addAsItem(PlotManager.NONE, Node.newString(Token.NAME, Token.NAME, Token.NAME));
increase failing tests, [FE] NullPointerException,super(); ,renderer.addChangeListener(this);
compilation error,[CE] cannot find symbol,super(); ,checkAlterNullPointers();
compilation error,[CE] cannot find symbol PlotManager,super(); ,renderer.addAsItem(PlotManager.NONE, Node.newString(Token.NAME, Token.NAME, Token.NOT_OBJECT_TYPE));
compilation error,[CE] cannot find symbol PlotManager,super(); ,renderer.addAsItem(PlotManager.NONE, Node.newString(Token.NAME, Token.NOT_OBJECT_TYPE));
compilation error,[CE] cannot find symbol,super(); ,renderer.addAsItem(PlotOrientation.VERTICAL, PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol PlotManager,super(); ,renderer.addAsItem(PlotManager.NONE, Node.newString(Token.NAME, Token.NAME, Token.FUNCTION));
compilation error,[CE] cannot find symbol PlotManager,super(); ,renderer.addAsItem(PlotManager.NONE, Node.newString(Token.NAME, Token.NAME, Token.NOT_NULL));
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEC_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT_CAPACITY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets);
patch is same with buggy,,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getRangeAxis() == index) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getChildCount() < 1) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getRangeAxis()!= index) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getRangeAxis() == getRangeAxis()) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && super.getRangeAxis() == index) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getChildCount() > 1) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getValueAxis() == index) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getChildCount() < 2) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getChildCount() >= 1) {
compilation error,[CE] illegal start of type,,return getPlot().getLowerBound();
compilation error,[CE] illegal start of type,,return getPlot().getAnnotation(JacksonStdImpl.class);
compilation error,[CE] illegal start of type,,return getPlot().getValue();
compilation error,[CE] illegal start of type,,return getPlot().getArgumentException("");
compilation error,[CE] illegal start of type,,return getPlot().getDataItemCount() > 0;
compilation error,[CE] illegal start of type,,return getPlot().getAnnotation(JXPlotContext.TYPE_OBJECT);
compilation error,[CE] illegal start of type,,return getPlot().getAnnotation(JacksonSegment.class);
compilation error,[CE] illegal start of type,,return getPlot().getName();
compilation error,[CE] illegal start of type,,return getPlot().getAnnotation(JXPlot.NONE);
compilation error,[CE] illegal start of type,,return getPlot().getArgumentCount() > 0;
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRangeAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxisEdge();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePaths();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxisElement();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureAxisElements();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureOrientation();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxis = new RangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(); this.rangeAxis = new RangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeAxis = new RangeAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(List)this.foregroundRangeMarkers.get(new Integer(index));
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.foregroundRangeMarkers.get(new Integer(index
compilation error,[CE] no suitable constructor found for String(int),markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new String(index)); }
compilation error,[CE] no suitable constructor found for String(int),markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = this.backgroundRangeMarkers.get(new String(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); }
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(Int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i= 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(0); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i=0; i < this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol I,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); I++) {
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLowerCase();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getSize();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLowerBound();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLength();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = this.categoryPlot.size();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getChronology().getLength();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLocalVariableAxis(axisIndex);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getLowerCase(axisIndex);
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = getItemCount();
compilation error,[CE] variable count is already defined in method datasetChanged(DatasetChangeEvent),,int count = this.categoryPlot.getLength();
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= 0) {
compilation error,[CE] ')' expected,if (index == 0 && location == null) { ,if(location == null && index } 0) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE); this.rangeGridlinePosition = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new ValueTipGenerator()); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText("DomainAxis dataset:"); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,final Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,final Layer layer = this.foregroundDomainMarkers.get(index); if(!this.foregroundDomainMarkers.containsKey(marker)) { throw new NullPointerException(""); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,final Layer layer = this.foregroundDomainMarkers.get(index); if(!this.foregroundDomainMarkers.containsKey(marker)) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.containsKey(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.contains(marker);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index); if(position == 0 && index < this.backgroundDomainMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,final Layer layer = this.foregroundDomainMarkers.get(index); if(!this.foregroundDomainMarkers.containsKey(marker)) { throw new IllegalStateException(""); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index); if(position == 0 && index < this.backgroundDomainMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index); if(!notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); super.mapToRangeAxis(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); axisIndex++;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); axisIndex++;
patch is same with buggy,,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] bad operand types for binary operator '||',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.domainGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] bad operand types for binary operator '&&',this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.domainGridlinePaint = DEFAULT_GRIDLINE_PAPPER;
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] cannot find symbol CHART,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART);
compilation error,[CE] cannot find symbol TYPE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.TYPE);
compilation error,[CE] cannot find symbol categoryPlot,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(categoryPlot);
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this,ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CDATASET_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CDATASET_UPDATED);
compilation error,[CE] cannot find symbol CHART_CHANGE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHANGE);
patch is same with buggy,,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this);
compilation error,[CE] > expected,,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new Integer(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] > expected,,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new Integer(axisIndex);
compilation error,[CE] > expected,,map =(Map < K, V >> )getDataset(); this.axisIndex = axisIndex + 1;
compilation error,[CE] > expected,,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new Integer(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index >= 0) { mapDatasetToDomainAxis = new Integer(axisIndex); }
compilation error,[CE] > expected,,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new Integer(axisIndex);
compilation error,[CE] > expected,,map =(Map < K, V >> )getDataset();
compilation error,[CE] > expected,,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new Integer(axisIndex); for(int i = 0; i < axisIndex; i++) { map.put(i, new Integer(axisIndex)
compilation error,[CE] > expected,,map =(Map < K, V >> )getDataset(); this.axisIndex = axisIndex + 1;
compilation error,[CE] > expected,,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new int[size() ];
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasets.get(0);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.QUOTE_FIELD_NAMES));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET));
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.itemRenderer.clone();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasets.get(dataset);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasets.clone();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.axisListener.clone();
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_SOURCE));
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getChangeListener()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getChangeListener() == null) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPlot()!= null) {
compilation error,[CE] cannot find symbol propertyName,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPropertyName().equals(propertyName)) {
compilation error,[CE] cannot find symbol propertyName,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPropertyNames().contains(propertyName)) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLocalPart()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getDomain()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getSupportedType() == false) {
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_SOURCE));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.XY_VALUE_INIT_ERROR));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.XY_FIELD_NAME));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.XY_VALUE_INITIALIZER));
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, null, null);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.XY_VALUE_NULL_OBJECT));
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = this.dataset.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.get(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = super.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.get(RangeAxis.BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this));
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new EventChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyChangeEvents(e);
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, e);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,updateOnlyNotifyListeners(e);
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this, null));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this, e));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this, event));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(0.5f);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.rangeGridlinesVisible = false;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.rangeGridlinesVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(2.0f);
compilation error,[CE] ';' expected,,for(int i = 0, isRange(); i < null; i++) { ValueAxis valueAxis =(ValueAxis)this.valueAxis.get(i); if(valueAxis.equals(valueAxis.getCategory())) { result
compilation error,[CE] ';' expected,,for(int i = 0, isRange(); i < null; i++) { ValueAxis valueAxis =(ValueAxis)this.getAxis(); if(valueAxis.equals(valueAxis.getLowerBound())) { result
compilation error,[CE] ';' expected,,for(int i = 0, isRange(); i < null; i++) { ValueAxis valueAxis =(ValueAxis)this.getAxis(); if(valueAxis.equals(valueAxis.getCategory())) { result
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < categoryPlot.size(); i++) { result += getRangeAxis().getLowerBound(); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < categoryPlot.size(); i++) { result += getRangeAxis().getIndex(); }
compilation error,[CE] ';' expected,,for(int i = 0, isRange(); i < null; i++) { ValueAxis valueAxis =(ValueAxis)this.valueAxis.get(i); if(valueAxis.equals(valueAxis.getLo
compilation error,[CE] ';' expected,,if(index == WHOLE_COLLECTION) { for(int i = 0, isRange(); i < isEnabled(Feature.QUOTE_FIELD_NAMES); i++) { result += category.getRange().getIndex(); }
compilation error,[CE] ';' expected,,if(index == WHOLE_COLLECTION) { for(int i = 0, isRange(); i < isEnabled(Feature.QUOTE_FIELD_NAMES); i++) { result += category.getRange().getValue(); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0; i < categoryPlot.size(); i++) { result[i] = getRangeAxis(); }
compilation error,[CE] ';' expected,,for(int i = 0, isRange(); i < null; i++) { ValueAxis valueAxis =(ValueAxis)this.getAxis(); if(valueAxis.equals(valueAxis.getLowerCase())) { result
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(layer); if(marker == null) { marker = new Marker(); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,final Marker marker = new Marker(super.removeRangeMarker(marker, layer));
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new Marker(layer); if(marker!= null) { marker = new Marker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(layer); if(marker!= null) { marker = new Marker(); }
compilation error,[CE] ')' expected,,if(marker!= null) { Marker marker = new Marker(super.removeRangeMarker(layer, marker); if(marker == null) { marker = null; }
compilation error,[CE] ')' expected,,final Marker marker = new Marker(super.removeRangeMarker(marker, layer);
compilation error,[CE] ')' expected,,if(marker!= null) { Marker marker = new Marker(super.removeRangeMarker(layer, marker); if(marker!= null) { marker = null; }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(layer); if(marker!= null) { marker = marker.getLabel(); }
compilation error,[CE] ')' expected,,if(marker!= null) { Marker marker = new Marker(super.removeRangeMarker(marker, layer); marker.setPaint(marker); }
patch is same with buggy,,super(); ,super();
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtilities.isNumeric(this.domainAxisLocation));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtilities.isNumeric(this.axisOffset, 4.0, 4.0));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtilities.isNumeric(this.axisOffset, 4.0, 4.0, 4.0));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtilities.isNumeric(this.axisOffset, 0.0, 0.0));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtilities.isNumeric(this.domainAxis, this.rangeAxisLocation));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtilities.isNumeric(this.domainAxis, this.rangeAxis));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtil.isNumericValue(this.domainAxis, this.rangeAxis));
compilation error,[CE] cannot find symbol Feature,super(); ,preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET)); Preconditions.checkArgument(ItemUtilities.isNumeric(this.axisOffset, this.rangeAxisLocation));
compilation error,[CE] ')' expected,,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new Integer(axisIndex
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetEntry(i, axisIndex); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new Integer(axisIndex); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new XYPlot(this, axisIndex, getItemCount()); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new java.util.ArrayList(); }
compilation error,[CE] '[' expected,,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new int(axisIndex
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new XYPlot[i]; }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new int[i]; }
compilation error,[CE] ')' expected,,if(axisIndex < 0) { mapDatasetToDomainAxis = new int[axisIndex]; for(int i = 0; i < axisIndex; i++) { mapDatasetToDomainAxis = new IntElement(axisIndex
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { map.getAxisEdge(); }
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,private static boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] NullPointerException,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,private boolean rangeCrosshairLockedOnData = true; ,private static rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot find symbol rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null rangeCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,private boolean rangeCrosshairLockedOnData = true; ,private static arrayCrosshairLockedOnData = false;
patch is same with buggy,,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = true;
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(double,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.anchorValue, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(this, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,defineRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addAnchorMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,updateRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,validateRangeMarker(baseline, Layer.BACKGROUND);
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxis = new ObjectList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
compilation error,[CE] cannot find symbol rangeAxisEquals,this.rangeAxes = new ObjectList(); ,this.rangeAxisEquals = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisElements,this.rangeAxes = new ObjectList(); ,this.rangeAxisElements = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisTypes,this.rangeAxes = new ObjectList(); ,this.rangeAxisTypes = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisNames,this.rangeAxes = new ObjectList(); ,this.rangeAxisNames = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisMap,this.rangeAxes = new ObjectList(); ,this.rangeAxisMap = new ObjectList();
compilation error,[CE] incompatible types,ValueAxis result = null; ,ValueAxis result = this;
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis();
compilation error,[CE] cannot find symbol rangeAxis,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size(), this.rangeAxis.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size() - 1);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size(), this.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size() );
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = getValueAxis();
compilation error,[CE] cannot find symbol JsonAxis,ValueAxis result = null; ,ValueAxis result = JsonAxis.valueOf(this.rangeAxes.size());
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = this.rangeAxis.getValue();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = getRangeAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(itemRenderer);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = this.rangeAxisLocation.getValue();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis = super.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_LEFT);
compilation error,[CE] variable rangeAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.get(Plot.NEGATIVE);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); setBaseToolTipText(DEFAULT_GRIDLINE_TITLE_FONT);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); setBaseToolTipText(DEFAULT_GRIDLINE_PADD);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); setBaseToolTipText(DEFAULT_GRIDLINE_PADDING);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PADD,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PADD);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)this.getListener();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.changeAsPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)super.datasetChanged();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)super.datasetChanged(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = XYPlot.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this, ChartChangeEventType.GENERAL);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer); this.itemRenderer = new XYItemRenderer(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer); this.itemRenderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer); this.rangeAxis = new RangeAxisRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer); this.rangeAxis = new RangeAxis();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.renderers.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer); this.domainAxis = new ValueAxis();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlotChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = new PlotChangeEvent(this);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)this.getListener();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)super.datasetChanged(event);
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.categoryPlot.getParent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)super.datasetChanged();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event = this.getPlot();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)super.getParent();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)getPlot();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)getPlot().getRowRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.clone();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getPropertyRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getRowRenderingOrder();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)super.getRowRenderingOrder();
compilation error,[CE] illegal start of type,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)getPlot(); this.rowRenderingOrder = Lists.newArrayList();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)this.rowRenderingOrder.getLowerBound();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder = new CategoryPlotRenderingOrder();
compilation error,[CE] illegal start of type,,return new CategoryPlot();
patch is same with buggy,,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10); ,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10);
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] cannot find symbol NullPointerException,this(null, null, null, null); ,this(NullPointerException, null, null, null);
compilation error,[CE] cannot find symbol,this(null, null, null, null); ,this(new JXPathIntrospector(), null, null, null);
compilation error,[CE] cannot find symbol Null,this(null, null, null, null); ,this(Null, null, null, null);
compilation error,[CE] ')' expected,this(null, null, null, null); ,this(null, null, null, null;
compilation error,[CE] cannot find symbol,this(null, null, null, null); ,this(new JXPathIntrospector(), new XYPlotImpl());
compilation error,[CE] cannot find symbol objectCodec,this(null, null, null, null); ,this(objectCodec, null, null, null);
compilation error,[CE] cannot find symbol arbitrary,this(null, null, null, null); ,this(arbitrary, null, null, null);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getParent();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getCurrentIndex();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getValueAxis();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getBaseValue();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getPlot().getIndex();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getPlot();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getParentIndex();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndex(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getValueAxis(index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getRangeAxis();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('.');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', 't');
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index, marker, layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('?', '/')+ 1;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index >= 0) { marker = null; }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('?', '-');
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(index, marker);
compilation error,[CE] unclosed character literal,,int index = marker.lastIndexOf('n', ');
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', '-');
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ARRAY_VALUE;
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCOND;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.anchorValue = DEFAULT_ANACCORD_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeGridlinePaint = new RangeGridlinePaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeGridlinePaint = new RangeGridlinePaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeGridlinePaint = new XYGridlinePaint(1.0f);
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new TreeList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new TreeMap();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRendererList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new EventList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new HashList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new HashSet();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new PropertyList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.rangeAxes.isEmpty());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes.size() == this.rangeAxes.size());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes.size()!= this.rangeAxes.size());
compilation error,[CE] cannot find symbol,,super.configureRangeAxes();
compilation error,[CE] cannot find symbol,,XYPlot.drawRangeAxes(this);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkNotNull(orientation);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.rangeAxes.isActual());
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol marker,if (notify) { ,if(this.marker!= null &&!this.marker.equals(this.marker)) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && marker.getLowerBound()!= null) {
compilation error,[CE] cannot find symbol marker,if (notify) { ,if(this.marker!= null &&!this.marker.isEmpty()) {
compilation error,[CE] cannot find symbol marker,if (notify) { ,if(this.marker!= null && this.marker.equals(this.marker)) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && marker.size() > 0) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && marker.getClass()!= null && marker.tag().equals("")) {
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
patch is same with buggy,,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 2;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(2.0, 4.0, 2.0, 4.0);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_CROSSHAIR_ASCII;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_CROSSHAIR_ASSIGN;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_CROSSHAIR_DOMAIN;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = DEFAULT_CROSSHAIR_ACCESS;
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = DEFAULT_CROSSHAIR_ASCII;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = java.util.ArrayList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = DEFAULT_CROSSHAIR_DOMAIN;
patch is same with buggy,,addRangeMarker(0, marker, layer); ,addRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,_addRangeMarker(0, marker, layer);
increase failing tests, [FE] AssertionFailedError,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,setRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { marker.append(","); }
compilation error,[CE] cannot find symbol LayerUtil,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { LayerUtil.redeclareVars(marker, Layer.FOREGROUND); marker = new Marker(layer); }
compilation error,[CE] cannot find symbol,addRangeMarker(0, marker, layer); ,super.addRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol LayerUtil,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { LayerUtil.redeclareVars(marker, Layer.FOREGROUND); marker = new Marker(10.0, marker, layer); }
compilation error,[CE] cannot find symbol LayerUtils,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { LayerUtils.redeclareVars(marker, Layer.FOREGROUND); marker = new Marker(layer); }
compilation error,[CE] cannot find symbol LayerUtil,addRangeMarker(0, marker, layer); ,if(marker!= null) { addRangeMarker(0, marker, layer); } else { LayerUtil.redeclareVars(marker, Layer.FOREGROUND); marker = new Marker(10, marker, layer); }
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = RangeAxis.getRange();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ValueAxisItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(rangeAxis).getDomainAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlot();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxisEvents();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlotParameters();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxises();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYChangeEvent();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,updateXYPlots();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxis();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,super.setRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlotViews();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYChangeEvents();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = this.datasetToRangeAxisMap.get(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex(axisIndex); this.datasetToRangeAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol,,super.setAxis(axisIndex); this.datasetToRangeAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisToRangeAxisMap,,this.axisToRangeAxisMap.set(axisIndex, new Integer(axisIndex)); this.datasetToRangeAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = Integer.valueOf(axisIndex); this.datasetToRangeAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex(axisIndex); this.datasetToRangeAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisToRangeAxisMap,,this.axisToRangeAxisMap.set(axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisToRangeAxisMap,,this.axisToRangeAxisMap.set(axisIndex, new Integer(axisIndex)); this.datasetToRangeAxisMap.reset(axisIndex, new Integer(axisIndex));
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getRangeAxisIndex(axisIndex);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location =(AxisLocation)this.domainAxisLocation.get(index);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getCurrentLocation();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getOwner();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getChksum();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getRange();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.get(getEventType());
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.get(index);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocation.getScope();
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.remove(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.clear(AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol Top_OR_LEFT,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.Top_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(1, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.add(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol COTTOM_OR_LEFT,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.COTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.CENTER_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(domainAxis));
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getDomain()!= null) {
compilation error,[CE] cannot find symbol PropertyName,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPropertyName().equals(PropertyName.USE_DEFAULT)) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLocals()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getOwner()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPropertyName().isEmpty()) {
compilation error,[CE] cannot find symbol PropertyName,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPropertyName().equals(PropertyName.TYPE_PROPERTY)) {
increase failing tests, [FE] AssertionFailedError,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPlot() == this) {
compilation error,[CE] cannot find symbol PropertyName,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPropertyName().equals(PropertyName.FUNCTION_PROPERTY)) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent!= null) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null || parent.getType()!= Token.EXPR_RESULT) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null || parent.getType()!= Token.VAR) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null || parent.getValue()!= null) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null || parent.getType()!= Token.BLOCK) {
compilation error,[CE] cannot find symbol,if (result == null) { ,if(result == null || getValueAxis()!= null) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null || parent.getType()!= Token.FUNCTION) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null || parent.getType()!= Token.EMPTY) {
compilation error,[CE] parent has private access in Plot,if (result == null) { ,if(parent == null || parent.getType()!= Token.NAME) {
compilation error,[CE] incompatible types,,if(ChartChangeEventType.GENERAL) { throw new IllegalStateException(""); }
compilation error,[CE] incompatible types,,if(ChartChangeEventType.GENERAL) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.TYPE);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.CDATASET_UPDATED);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = CategoryPlot.getCurrentPlot();
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.INSTANCE);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.TYPE_REDEFINITION);
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = this.categoryPlot.getChart();
compilation error,[CE] cannot find symbol CategoryPlotChartChart,,CategoryPlotChartChart = new CategoryPlotChart(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT); this.domainAxisLocation = AxisLocation.BOTTOM_OR_LEFT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocation.BOTTOM_OR_RIGHT; this.rangeAxisLocation.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] incompatible types,,this.domainAxisLocations = Collections.emptySet(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocation.BOTTOM_OR_RIGHT; this.rangeAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = AxisLocation.BOTTOM_OR_RIGHT; this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT); this.domainAxisLocation = AxisLocation.TOP_OR_LEFT;
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.get(BOTTOM_OR_RIGHT); this.rangeAxisLocation = AxisLocation.BOTTOM_OR_LEFT;
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = AxisLocation.BOTTOM_OR_RIGHT; this.domainAxisLocations = new XYDomainAxisLocation(domainAxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = AxisLocation.BOTTOM_OR_RIGHT; this.domainAxisLocations = new XYDomainAxisLocation(domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_AXIS; this.rangeCrosshairPaint = DEFAULT_RANGE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_RANGE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isNull()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isEmpty()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.length() == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isNoMarker()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isSupported()) {
compilation error,[CE] <identifier> expected,if (marker == null) { ,if(marker == null || marker.getClass()!= this.class) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isNoStandard()) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANchorVALUE,,this.anchorValue = DEFAULT_ANchorVALUE; this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANchorVALUE,,this.anchorValue = DEFAULT_ANchorVALUE; this.anchorValue = DEFAULT_ANNOTATION;
compilation error,[CE] cannot find symbol DEFAULT_ANchorVALUE,,this.anchorValue = DEFAULT_ANchorVALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol DEFAULT_ANchorVALUE,,this.anchorValue = DEFAULT_ANchorVALUE; this.anchorValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = new ValueMarker(0.0, new Color(1.0f, 1.0f, 0.5f, 0.5f));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = new ValueMarker(0.0, new Color(1.0f, 0.5f, 0.5f, 0.5f));
compilation error,[CE] cannot find symbol annotationRangeMarkers,,this.annotationRangeMarkers = new HashMap();
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(0); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i=0; i < this.domainAxes.size(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.get(i); i++) {
compilation error,[CE] cannot find symbol I,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); I++) {
compilation error,[CE] illegal start of type,,return new Paint(Paint.DOUBLE);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return Primitives.wrap(Paint.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DOUBLE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DECEMBER, Color.REDEFINITION);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new Paint(Color.black);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return new BasicPaint(Color.black);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DEFAULT_GRIDLINE_PAINT, Color.BLACK);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; this.rangeAxis = new ValueAxis(valueAxis);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; this.rangeAxis = RangeAxis.getRange();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; this.rangeAxis = new ValueAxis(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; this.rangeAxis = ValueAxis.newInstance();
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol axisIndex,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(this.axisIndex < index) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol Feature,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] ,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException("")); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] ,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException("")); }
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = getRangeAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getBaseValue();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = getRangeAxis(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getCurrentIndex();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getValueAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getIndex();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = getValueAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getValue();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getCategoryIndex();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getRangeAxisLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getAxisLocation(); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getAxisLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getRangeAxisLocation(); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getAxisLocation(); notifyListeners(new RangeAxisEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getRangeAxisLocation(); notifyListeners(new NotifyChangeEvent(this));
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getAxisLocation(); notifyListeners(new NotifyChangeEvent(this));
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.rangeGridlinePosition = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol defaultItemRenderer,,Preconditions.checkNotNull(defaultItemRenderer); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinePosition = DEFAULT_GRIDLINE_POPES;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAnchor = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = CategoryAnchor.MIDDLE; this.domainGridlinePosition = DEFAULT_GRIDLINE_POPES;
patch is same with buggy,,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.domainCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.domainCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE? DEFAULT_CROSSHAIR_STROKE : DEFAULT_LOCAL_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainCrosshairFont,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.domainCrosshairFont = DEFAULT_CROSSHAIR_FOR;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new ObjectRenderer();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer = createItemRenderer(renderer); this.dataset = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new ItemRenderer();
patch is same with buggy,,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_ASSIGN,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_CROSSHAIR_ASSIGN;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_FIELD_NAMES,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_CROSSHAIR_FIELD_NAMES;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_FIELD_NAME,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_CROSSHAIR_FIELD_NAME;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE + 1;
compilation error,[CE] cannot find symbol rangeCrosshairFont,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE || this.rangeCrosshairFont = DEFAULT_CROSSHAIR_FLOAT;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_MASK,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_CROSSHAIR_MASK;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_FINAL,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_CROSSHAIR_FINAL;
compilation error,[CE] variable marker is already defined in method removeDomainMarker(int,Marker,Layer),,Object marker = super.removeDomainMarker(index, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,final int index = marker.lastIndexOf('n');
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(index, marker, layer);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', '+');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index >= 0) { marker = null; }
compilation error,[CE] unclosed character literal,,int index = marker.lastIndexOf('n', ');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index < 0) { marker = null; }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(int,Marker,Layer),,Object marker = super.removeDomainMarker(index);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', '-');
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)getPlotManager();
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)this.getPlotManager();
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)super.getPlotManager();
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)getPlotManager().getPlotManager();
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)getPlotManager(); this.renderingOrder =(CategoryPlot)this.renderingOrder.DOUBLE;
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)getPlotManager(); this.renderingOrder =(CategoryPlot)this.renderingOrder.FULL;
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)getPlotManager(); this.renderingOrder =(CategoryPlot)this.renderingOrder.NEVER;
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)getPlotManager(); this.renderingOrder =(CategoryPlot)super.renderingOrder;
compilation error,[CE] <identifier> expected,,private PlotManager instanceof CategoryPlot =(CategoryPlot)getPlotManager(); this.renderingOrder = DatasetRenderingOrder.FULL;
compilation error,[CE] <identifier> expected,,private final CategoryPlot = DatasetUtilities.deepestModuleRenderingOrder();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.isEmpty());
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkNotNull(itemRenderer); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations == null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.domainAxisLocations!= null); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
patch is same with buggy,,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] unexpected type,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE || this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] unexpected type,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE && this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GLIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GLIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GRIDLINES,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_DOUBLE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOUBLE_GRIDLINES_VISIBLE;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeZeroBaselinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselinePaint = new BasicPaint(2.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.rangeZeroBaselinePaint = new BasicPaint(0.0f);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = super.removeRangeMarker();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = super.removeRangeMarker(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = Layer.isWhitespace(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = Layer.isWhitespace();
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = layers.contains(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = layers.isEmpty();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = markers.warning(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = layers.containsKey(marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = markers.isEmpty();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] no suitable method found for get(),,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get();
compilation error,[CE] no suitable constructor found for CategoryPlot(int,int),,super.setRangeAxes(new CategoryPlot(this.rangeAxes.size(), this.rangeAxes.size()));
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get(0); if(plot!= null) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get(0);
compilation error,[CE] no suitable method found for get(),,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get(); if(plot!= null) { throw new NullPointerException(""); }
compilation error,[CE] no suitable constructor found for CategoryPlot(int,int,int),,super.setRangeAxes(new CategoryPlot(this.rangeAxes.size(), this.rangeAxes.size(), this.rangeAxes.size()));
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get(0); if(plot!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get(0); this.rangeAxes.clear();
compilation error,[CE] no suitable method found for get(),,CategoryPlot plot =(CategoryPlot)this.rangeAxes.get(); this.rangeAxes.clear();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NONE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.dataset);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlot().getIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NAME);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.class);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryPlot.SIZES);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f);
compilation error,[CE] '}' expected,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 0.0f, 0.0f, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 0.0f, 0.0f }, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 0.0f, 2.0f }, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, Base64Variants.DEFAULT_GRIDLINE_STROKE, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 2.0f, 0.0f);
compilation error,[CE] illegal start of type,,return Stroke.newInstance();
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 0.0f, 0.0f }, 0.0f);
increase failing tests, [FE] NullPointerException,,static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f);
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ArrayList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new XYDomainAxisLocation();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new XYDomainAxisLocationList();
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisNames);
compilation error,[CE] cannot find symbol domainAxisElements,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisElements);
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new OBList();
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getDomainAxisLocation(); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(getPlot()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getDomainAxisLocation(); notifyListeners(new NotifyChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getDomainAxisLocation(); notifyListeners(new AxisLocationChangeEvent(this, location));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(getPlotInfo()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getDomainAxisLocation(); notifyListeners(new NotificationChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = plot.getDomainAxisLocation(); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.itemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(itemRenderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(null);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(renderer);
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getDataset(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int index = getAxisIndex(); if(index >= 0) { mapDatasetToDomainAxis = new Integer(axisIndex); }
compilation error,[CE] > expected,} ,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new Integer(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] > expected,} ,map =(Map < K, V >> )? super.mapDatasetToDomainAxis : new Integer(axisIndex);
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getDataset();
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getDataset(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int index = getAxisIndex(); if(index >= 0) { mapDatasetToDomainAxis = new java.util.ArrayList(); }
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getAxis(); this.axisIndex = axisIndex + 1;
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int index = getAxisIndex(); if(index >= 0) { mapToDomainAxis = new Integer(axisIndex); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { removeRangeMarker(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundRangeMarkers.containsKey(marker);
compilation error,[CE] ')' expected,,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { marker = this.foregroundRangeMarkers.get(new Integer(index); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { throw new IllegalStateException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index == 0 && index < this.foregroundRangeMarkers.size()) { removeRangeMarker(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index!= 0 && index < this.foregroundRangeMarkers.size()) { removeRangeMarker(marker); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisInsets = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
compilation error,[CE] cannot find symbol baseRenderer,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.baseRenderer = new HashMap();
compilation error,[CE] cannot find symbol domainAxisLocation,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.domainAxisLocation = new ObjectList();
compilation error,[CE] cannot find symbol rangeRangeMarkers,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.rangeRangeMarkers = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] ';' expected,,this.rangeGridlinePaint = Color.black); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeGridlinePaint = new HashMap();
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = new HashMap(); this.rangeGridlinePaint = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new HashMap(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,,this.rangeGridlinePaint = new HashMap();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index == 0 && index < this.foregroundDomainMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index!= 0 && index < this.foregroundDomainMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size() &&(this.foregroundDomainMarkers.containsKey(marker));
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index == 0 && index < this.foregroundDomainMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index!= 0 && index < this.foregroundDomainMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0 && index < this.foregroundDomainMarkers.size()) { fireChangeEvent(); }
compilation error,[CE] cannot find symbol,,XYDomainAxis domainAxes =(XYDomainAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,XYDomainAxis domainAxes =(XYDomainAxis)this.domainAxes.get();
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxes.isEmpty());
compilation error,[CE] cannot find symbol,,this.domainAxes =(XYDomainAxis)this.domainAxes.get();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.domainAxes);
compilation error,[CE] cannot find symbol,,XYDomainAxis domainAxes =(XYDomainAxis)this.domainAxes.get(1);
compilation error,[CE] cannot find symbol,,this.domainAxes =(XYDomainAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,this.domainAxes = new XYDomainAxis(this.domainAxes.size());
compilation error,[CE] cannot find symbol,,XYDomainAxis domainAxes = this.domainAxes.get(0);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = this.rangeAxis.getValue();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(domainAxis); this.mapDatasetToDomainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.domainAxis = DEFAULT_DOMAIN_AGRIDLINES_VISIBLE;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getValueAxis(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = this.valueAxis.getValue();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = this.domainAxis.getValue();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis(); this.domainAxis = domainAxis;
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.red);
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.black);
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.green);
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.blue);
compilation error,[CE] cannot find symbol,,configureItemRenderer(); this.domainAxisLocations = new XYDomainAxisLocation(domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureRangeAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureRangeAxis(); this.domainAxisLocations = new XYDomainAxisLocation(domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = null;
compilation error,[CE] cannot find symbol,,configureItemRenderer(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureItemRenderer(); this.domainAxisLocations = new ValueAxisLocation(domainAxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureRangeAxis(); this.domainAxisLocations = null;
compilation error,[CE] cannot find symbol,,configureRangeAxis();
compilation error,[CE] cannot find symbol,,configureRangeAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { this.rangeAxis = RangeAxis.getRange(); if(rangeAxis == null) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis instanceof ValueAxis) { ValueAxis rangeAxis =(ValueAxis)valueAxis.getRange(); if(rangeAxis instanceof ValueAxis) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis instanceof ValueAxis) { ValueAxis rangeAxis =(ValueAxis)valueAxis.getRange(); if(rangeAxis instanceof Number) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,if(this.rangeAxis!= null) { throw new NullPointerException(""); } else { this.rangeAxis = RangeAxis.getSuperclass(); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis instanceof ValueAxis) { ValueAxis rangeAxis =(ValueAxis)valueAxis.getRange(); if(rangeAxis instanceof ValueAxis) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis instanceof ValueAxis) { ValueAxis rangeAxis =(ValueAxis)valueAxis.getRange(); if(rangeAxis instanceof Number) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis instanceof ValueAxis) { ValueAxis rangeAxis =(ValueAxis)getDomainAxis(); if(rangeAxis instanceof ValueAxis) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,if(rangeAxis instanceof ValueAxis) { ValueAxis rangeAxis =(ValueAxis)getDomainAxis(); if(rangeAxis instanceof ValueAxis) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.domainAxisLocation);
compilation error,[CE] cannot find symbol axisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.axisLocation);
compilation error,[CE] cannot find symbol NAME,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, AxisLocation.NAME);
increase failing tests, [FE] NullPointerException,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol areaXisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.areaXisLocation);
patch is same with buggy,,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol annotationLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.annotationLocation);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocation.set(index, this.domainAxisLocation);
compilation error,[CE] cannot find symbol i,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(i, location);
compilation error,[CE] cannot find symbol NONE,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, AxisLocation.NONE);
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] variable marker is already defined in method addRangeMarker(int,Marker,Layer,boolean),,CategoryMarker marker =(CategoryMarker)this.backgroundRangeMarkers.get(index);
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] generics are not supported in -source 1.4,,ArrayList < String> markers = new ArrayList < String>(this.backgroundRangeMarkers.get(index));
compilation error,[CE] generics are not supported in -source 1.4,,ArrayList < String> markers = new ArrayList < String>(this.backgroundRangeMarkers.get(index), markers);
compilation error,[CE] generics are not supported in -source 1.4,,List < Marker> markers = new ArrayList < String>(this.backgroundRangeMarkers.get(index), markers);
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index));
compilation error,[CE] generics are not supported in -source 1.4,,List < Marker> markers = new ArrayList < String>(this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] generics are not supported in -source 1.4,,List < Marker> markers = new ArrayList < String>(this.backgroundRangeMarkers.get(index));
compilation error,[CE] generics are not supported in -source 1.4,,ArrayList < String> markers = new ArrayList < String>(this.backgroundRangeMarkers.get(index), marker);
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null && yAxis.size() > 0) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null &&!yAxis.isActual()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null && yAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null && yAxis.getMessage()!= null) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null && yAxis.isActual()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null && yAxis.isLabel()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null && yAxis.isSupported()) {
patch is same with buggy,,if (yAxis != null) { ,if(yAxis!= null) {
compilation error,[CE] cannot assign a value to final variable renderingOrder,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol NEVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.NEVERSE;
compilation error,[CE] cannot find symbol DEVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.DEVERSE;
compilation error,[CE] cannot find symbol EVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.EVERSE;
compilation error,[CE] cannot find symbol FULL,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.FULL;
compilation error,[CE] cannot find symbol EXPECTED,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.EXPECTED;
compilation error,[CE] cannot find symbol TEVERSE,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.TEVERSE;
compilation error,[CE] cannot find symbol EVERY,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder renderingOrder = DatasetRenderingOrder.EVERY;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = null;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.TOP_OR_RIGHT; this.rangeAxisLocation = AxisLocation.BOTTOM_OR_LEFT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.TOP_OR_LEFT; this.rangeAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.TOP_OR_LEFT; this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.TOP_OR_RIGHT; this.rangeAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = AxisLocation.TOP_OR_RIGHT;
compilation error,[CE] cannot find symbol Sets,,this.rangeAxisLocations = Sets.newHashSet(); this.rangeAxisLocation.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT; this.rangeAxisLocation = AxisLocation.TOP_OR_LEFT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.TOP_OR_LEFT; this.rangeAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.TOP_OR_RIGHT; this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0, len = index; i < len; i++) { result[i] = XYDataset.getDataset(i); }
compilation error,[CE] ']' expected,,for(XYDataset i = getDataset(); i!= null; i++) { XYDataset dataset =(XYDataset)i.getDataset(index); if(dataset!= null) { result = new XYDataset(int[index]); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0, len = index; i < len; i++) { result.addChangeListener(this); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0, len = index; i < len; ++i) { result[i] = XYDataset.getDataset(i); }
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0, len = index; i < len; i++) { result = new XYDataset(i, null); }
compilation error,[CE] illegal start of expression,,for(XYDataset i = getDataset(); i!= null; i++) { XYDataset i =(XYDataset)i.getDataset(index); if(i > 0) { result = new XYDataset(i.getName()); }
compilation error,[CE] illegal start of expression,,for(XYDataset i = getDataset(); i!= null; i++) { XYDataset dataset =(XYDataset)i.getDataset(index); if(dataset!= null) { result = new XYDataset(this, index); }
compilation error,[CE] not a statement,,for(XYDataset i = getDataset(); i!= null; i) { XYDataset i =(XYDataset)i.getDataset(index); if(i > 0) { result = new XYDataset(i.getName()); }
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result = new XYDataset(getPlot().getValue()); result.addChangeListener(this);
compilation error,[CE] illegal start of expression,,if(index == WHOLE_COLLECTION) { for(int i = 0, len = index; i < len; i++) { result = new XYDataset(); }
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_RANGE_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_ROIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_ROIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_LOCAL_GRIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_LOCAL_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GIDLINE_PAINT;
compilation error,[CE] ';' expected,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol DEFAULT_GIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(axisIndex));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.reset(axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol i,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(i, new Integer(axisIndex));
compilation error,[CE] no suitable method found for set(Integer),this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(new Integer(axisIndex));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(seriesIndex, new Integer(index));
patch is same with buggy,,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] incompatible types,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black? Color.red : Color.red;
compilation error,[CE] incompatible types,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black? Color.white : Color.red;
compilation error,[CE] ';' expected,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + 1;
compilation error,[CE] incompatible types,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black? Color.green : Color.red;
compilation error,[CE] cannot find symbol,,addAnchorMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol,,addAnchor(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol,,addAnchorMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] cannot find symbol,,addAnchor(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_RANGE_VALUE;
compilation error,[CE] cannot find symbol,,baseline = super.addAnchor(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol,,addAnchor(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,,addAnchor(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol,,addAnchorMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANNOTATION;
compilation error,[CE] cannot find symbol,,addAnchorMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.baseline = new java.util.ArrayList();
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker == null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append('r'); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker == null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append('r'); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.append(","); marker.append(layer).append(marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append('t'); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); }
compilation error,[CE] constructor Layer in class Layer cannot be applied to given types;,,if(marker!= null) { marker = new Layer(); marker.append(","); marker.append(layer).append(marker); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(Marker,Layer),,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of type,,return new NullPointerException("");
compilation error,[CE] illegal start of type,,return Collections.emptySet();
compilation error,[CE] illegal start of type,,return Primitives.wrap(Paint.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DOUBLE, DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return new BasicPaint(Color.black);
compilation error,[CE] illegal start of type,,return PlotManager.getPlotManager().getDeepestCommonPlotTypes();
compilation error,[CE] illegal start of type,,return new Paint(Color.black);
compilation error,[CE] illegal start of type,,return new BasicPaint(Color.white);
compilation error,[CE] illegal start of type,,return new Paint(Paint.DOUBLE);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,appendChangeEvent(this);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,updateRangeMarker();
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker();
compilation error,[CE] Marker is abstract; cannot be instantiated,fireChangeEvent(); ,super.addRangeMarker(new Marker());
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,appendChangeEvent("");
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol NOT_ANNOTATION,fireChangeEvent(); ,appendChangeEvent(NOT_ANNOTATION);
compilation error,[CE] cannot find symbol,fireChangeEvent(); ,ensureCapacity(true);
compilation error,[CE] cannot find symbol margin,fireChangeEvent(); ,updateRangeMarker(margin);
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] incomparable types: Marker and Layer,if (layer == Layer.FOREGROUND) { ,if(marker == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol FIELD_NAME,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FIELD_NAME) {
compilation error,[CE] cannot find symbol FOR_GROUND,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR_GROUND) {
compilation error,[CE] 'else' without 'if',if (layer == Layer.FOREGROUND) { ,else if(index == Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol FOR,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOR) {
compilation error,[CE] cannot find symbol FEOREGROUND,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FEOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,this.domainGridlinesVisible = false;
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible!= false) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = false; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible!= true) { this.domainGridlinesVisible = false; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == false) { this.domainGridlinesVisible = false; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible!= false) { this.domainGridlinesVisible = true; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible!= false) { this.domainGridlinesVisible = false; } else { this.domainGridlinesVisible = false; }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(Marker.class.isAssignableFrom(marker.class)) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers.values()) { if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(Marker.class.isAssignableFrom(marker.class)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(Marker.class.isAssignableFrom(marker.class)) { throw new NullPointerException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers.values()) { if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers.values()) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers.values()) { if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setRange(true); }
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParentPointer();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getOwner();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getTreeParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCurrentPlot();
increase failing tests, [FE] AssertionFailedError,Plot parent = getParent(); ,Plot parent = this.getParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getProperty();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getProperty(index);
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getConstructor();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getImmediateParentPlot();
patch is same with buggy,,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
compilation error,[CE] '(' or '[' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToDomainAxisMap!= null) { this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToDomainAxisMap.put(new Integer
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToDomainAxisMap!= null) { this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToDomainAxisMap.put(new Integer(
compilation error,[CE] '(' or '[' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToDomainAxisMap!= null) { this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToDomainAxisMap.put(new Int
compilation error,[CE] '(' or '[' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToDomainAxisMap!= null) { this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); } else { this.datasetToDomainAxisMap.put(new Inte
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToDomainAxisMap!= null) { this.datasetToDomainAxisMap.put(new Integer(index, new Integer(axisIndex)); } else { this.datasetToDomainAxisMap.put(new Integer
compilation error,[CE] ')' expected,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,if(this.datasetToDomainAxisMap!= null) { this.datasetToDomainAxisMap.put(new Integer(index, new Integer(axisIndex)); } else { this.datasetToDomainAxisMap.put(new Integer(
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(seriesIndex), new Integer(axisIndex));
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(this);
compilation error,[CE] cannot find symbol annotationIntrospector,marker.addChangeListener(this); ,marker.annotationIntrospector.appendChangeListener(this);
compilation error,[CE] cannot find symbol DateTimeUtils,marker.addChangeListener(this); ,marker.setAnnotation(DateTimeUtils.currentTimeMillis());
patch is same with buggy,,marker.addChangeListener(this); ,marker.addChangeListener(this);
compilation error,[CE] cannot find symbol DateTimeFieldType,marker.addChangeListener(this); ,marker.setAnnotation(DateTimeFieldType.RANGE_MARKER);
compilation error,[CE] cannot find symbol DateTimeZone,marker.addChangeListener(this); ,marker.setAnnotation(DateTimeZone.UTF8);
compilation error,[CE] cannot find symbol DateTimeUtils,marker.addChangeListener(this); ,marker.setAnnotation(DateTimeUtils.currentTimeMillis(), this);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.setItem(this);
compilation error,[CE] cannot find symbol DateTimeFieldType,marker.addChangeListener(this); ,marker.setAnnotation(DateTimeFieldType.RANGE_EMPTY_LIST);
compilation error,[CE] Marker is abstract; cannot be instantiated,marker.addChangeListener(this); ,marker.addChangeListener(new Marker(this, layer));
compilation error,[CE] cannot find symbol rangeAxis,return result; ,return this.rangeAxis;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.VALUE_NUMBER_INT : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.RANGE : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.value();
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.VALUE_NULL : result;
compilation error,[CE] cannot find symbol,return result; ,return result == null? 0 : result.getValue();
compilation error,[CE] cannot find symbol result,return result; ,return this.result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? null : result.getValue();
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? null : result.value();
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(8.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 2.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
increase failing tests, [FE] AssertionFailedError,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0, 4.0);
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0, 3.0);
compilation error,[CE] no suitable constructor found for RectangleInsets(double,double,double),this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] '(' or '[' expected,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = new Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = DEFAULT_DOMAIN_ZERO_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol XYToolTipGenerator,,renderer.setBaseToolTipGenerator(XYToolTipGenerator.defaultToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()).setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker == null) { throw new NullPointerException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : getDomainMarker()) { if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!marker.isLabelName()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setPosition(1); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setDomainMarker(null); }
compilation error,[CE] variable marker is already defined in method removeDomainMarker(Marker),,Marker marker = getDomainMarker();
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(List)this.foregroundRangeMarkers.get(new Integer(index));
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.foregroundRangeMarkers.get(new Integer(index
compilation error,[CE] no suitable constructor found for String(int),markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new String(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(List)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.annotationList = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.annotations = new java.util.ArrayList();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainCrosshairVisible = true;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.rangeCrosshairVisible = true;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainAxis = null;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainCrosshairValue = DEFAULT_CLOSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '==',else if (layer == Layer.BACKGROUND) { ,else if(index == Layer.BACKGROUND) {
patch is same with buggy,,else if (layer == Layer.BACKGROUND) { ,else if(layer == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol layer,else if (layer == Layer.BACKGROUND) { ,else if(this.layer == Layer.BACKGROUND) {
increase failing tests, [FE] NullPointerException,else if (layer == Layer.BACKGROUND) { ,else if(this.backgroundRangeMarkers == null) {
compilation error,[CE] cannot find symbol collection,else if (layer == Layer.BACKGROUND) { ,else if(this.collection == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol lastCategory,else if (layer == Layer.BACKGROUND) { ,else if(this.lastCategory == Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol labelOffset,else if (layer == Layer.BACKGROUND) { ,else if(this.labelOffset!= Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol NodeUtil,else if (layer == Layer.BACKGROUND) { ,else if(NodeUtil.isBackgroundPlotName(layer)) {
compilation error,[CE] cannot find symbol NodeUtil,else if (layer == Layer.BACKGROUND) { ,else if(NodeUtil.isBackgroundPath(layer)) {
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.backgroundRangeMarkers);
compilation error,[CE] variable notify is already defined in method addRangeMarker(int,Marker,Layer,boolean),,boolean notify = this.backgroundRangeMarkers.isEmpty();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf('n', 't');
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index!= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.indexOf("n");
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] bad operand types for binary operator '+',markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)+ 1);
compilation error,[CE] cannot find symbol markers,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.markers.size());
compilation error,[CE] cannot find symbol markers,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.markers);
compilation error,[CE] variable markers is already defined in method addRangeMarker(int,Marker,Layer,boolean),markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,ArrayList markers =(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,marker =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers = (Collection)this.backgroundRangeMarkers.get(new Integer(index));
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol border,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(border);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(layer);
compilation error,[CE] cannot find symbol marker,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(this.marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker);
compilation error,[CE] cannot find symbol zone,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(zone);
compilation error,[CE] no suitable method found for remove(Marker,Layer),boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker, layer);
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(tag);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis); this.rangeAxis = new RangeAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis(); this.rangeAxis = new RangeAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = super.removeChangeEvent();
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = super.removeChangeEvent(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.isEmpty(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.annotation(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = super.removeChangeEvent(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = markers.isOn(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = markers.warning(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = super.removeChangeEvent(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.isLocal(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.isOn(); if(notify) { fireChangeEvent(); }
patch is same with buggy,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.CENTER_OR_LEFT);
compilation error,[CE] cannot find symbol Top_OR_LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.Top_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(1, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol Top_Or_Left,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.Top_Or_Left);
compilation error,[CE] cannot find symbol LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.LEFT);
compilation error,[CE] cannot find symbol top_Or_Left,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.top_Or_Left);
compilation error,[CE] cannot find symbol RIGHT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.RIGHT);
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + Color.red;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + Color.black;
compilation error,[CE] bad operand types for binary operator '-',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT - 1;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT +"";
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(List)this.foregroundDomainMarkers.get(new Integer(index));
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(List)this.backgroundDomainMarkers.get(new Integer(index));
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = super.removeChangeEvent(marker);
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = super.removeChangeEvent();
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.annotation(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = markers.isOn(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = markers.warning(marker); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.isOn(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable notify is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean notify = Layer.isWhitespace(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.isLabel(); if(notify) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { boolean notify = marker.getMessage(); if(notify) { fireChangeEvent(); }
compilation error,[CE] incompatible types,,this.rangeAxes =(XYPlot)this.rangeAxes.get(i);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
increase failing tests, [FE] AssertionFailedError,,this.rangeAxes.clear();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] incompatible types,,this.rangeAxes =(XYPlot)this.rangeAxes.get(0);
compilation error,[CE] cannot find symbol,,XYPlot.drawRangeAxes(this, new XYPlotImpl());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes); this.rangeAxes.clear();
compilation error,[CE] cannot find symbol,,XYPlot.drawRangeAxes(this, null);
increase failing tests, [FE] AssertionFailedError,,this.rangeAxes.set(i, null);
compilation error,[CE] cannot find symbol,,this.rangeAxes.set(i, new XYPlotImpl());
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] AssertionFailedError,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol JXPlotOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = JXPlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol Orientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = Orientation.VERTICAL;
compilation error,[CE] cannot find symbol RenderContext,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = RenderContext.VERTICAL;
compilation error,[CE] cannot find symbol POSITIVE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE;
compilation error,[CE] cannot find symbol PlanningOrientation,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlanningOrientation.VERTICAL;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] cannot find symbol NEVER,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NEVER;
compilation error,[CE] cannot find symbol Maps,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = Maps.VERTICAL;
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol location,,this.location.setAxisLocation(true); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); } else { location.setAxisLocation(getAxisLocation()); }
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,if(location == null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); } else { location.setAxisLocation(getAxisLocation()); }
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,,if(location!= null) { location = new AxisLocation(); location.setAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this)); }
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 && index < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 || index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 && index <= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index >= this.rangeAxes.size()) {
patch is same with buggy,,if (index < this.rangeAxes.size()) { ,if(index < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index <= 0 && index < this.rangeAxes.size()) {
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = new XYPlot(this.dataset);
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap(); this.rangeAxis = new RangeAxis(this.rangeAxisLocations);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.plot = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.weight = 0;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.plot = new XYPlotTextNode();
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= null); this.plot = new XYPlotTextNode();
compilation error,[CE] cannot find symbol plot,,Preconditions.checkArgument(this.plot!= null); this.plot = new XYPlot();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap(); this.rangeAxisLocations = new ArrayList();
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] AssertionFailedError,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected final ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static LinkedHashMap localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourcesBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static LocalizationBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static TreeLocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(".org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxis(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxisLocation(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkState(this.domainAxis!= null); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append(","); marker.append(layer.getLowerBound()).append('n'); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append("n"); marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append("n"); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append(","); marker.append(layer.getLowerBound()).append('n'); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append(","); marker.append(layer.getLowerBound()); } else { marker.append('n'); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); }
compilation error,[CE] unclosed character literal,} ,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append(","); marker.append(layer.getLowerBound()).append('Range'); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = getLastLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && location.isLocation()) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && location.getAxisLocation()!= null) {
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.getRangeAxisLocation()!= null && this.notify) {
compilation error,[CE] cannot find symbol annotation,if (notify) { ,if(this.annotation) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(notify && Location.isLocation(getPlotInfo())) {
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new Integer(axisIndex); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new java.util.ArrayList(); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new HashMap(); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new int[i]; }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new XYPlot(this, axisIndex, getItemCount()); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { map.getAxisRange(); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new XYPlot[i]; }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new XYPlot(this, axisIndex, getImpl()); }
compilation error,[CE] 'else' without 'if',,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new java.util.ArrayList(); } else { mapDatasetToRangeAxis = new java.
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { for(int i = 0; i < axisIndex; i++) { mapDatasetToRangeAxis = new XYPlot(this, axisIndex, getAxisEdge()); }
patch is same with buggy,,if (markers == null) { ,if(markers == null) {
compilation error,[CE] bad operand types for binary operator '<=',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers <= null) {
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.backgroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxis);
compilation error,[CE] cannot find symbol outlineDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.outlineDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol BackgroundDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.BackgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol pathDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.pathDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol overgroundDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.overgroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol fieldDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.fieldDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol baseDomainMarkers,this.backgroundDomainMarkers = new HashMap(); ,this.baseDomainMarkers = new HashMap();
compilation error,[CE] no suitable constructor found for HashMap(String),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap("BackgroundDomain");
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n');
compilation error,[CE] variable marker is already defined in method removeDomainMarker(int,Marker,Layer),,Object marker = super.removeDomainMarker(index, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index >= 0 && marker.equals('r')) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,final int index = marker.lastIndexOf('n');
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index >= 0 && marker.equals('r')) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index < 0 && marker.equals('r')) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index >= 0) { marker = null; }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index < 0 && marker.equals('r')) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index >= 0 && marker.equals('_')) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n'); if(index < 0) { marker = null; }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = this.markers.remove(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker =(Marker)this.markers.get(index);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers.get(index)) { if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = super.removeRangeMarker(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = this.markers.get(index);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers.get(index)) { if(marker == null) { throw new IllegalArgumentException("Null'marker' argument."); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = new Marker(this.markers.get(index), this.foregroundRangeMarkers); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker =(Marker)this.markers.remove(index);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers.get(index)) { if(marker == null) { throw new IllegalArgumentException("Ullegal'marker' argument."); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = new Marker(this.markers.get(index), this.foregroundRangeMarkers);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairValue = new XYDomainCrosshairValue(1.0f);
increase failing tests, [FE] NullPointerException,,renderer.addChangeListener(this);
increase failing tests, [FE] NullPointerException,,renderer.append(XYItemRenderer.DEFAULT_CROSSHAIR_STROKE); this.domainCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,int axisIndex = getRangeAxis(axisIndex);
compilation error,[CE] cannot find symbol,,CategoryIndex axisIndex = getCategoryIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,int axisIndex = getDomainAxis(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent axisIndex = PlotChangeEvent.getAxis();
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex = getCategoryPlot().getIndex();
compilation error,[CE] generics are not supported in -source 1.4,,Class <?> axisIndex = getRangeAxis(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent axisIndex = PlotChangeEvent.createChangeEvent(axisIndex);
compilation error,[CE] incompatible types,,axisIndex = getDomainAxis(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot axisIndex = getCategoryPlot();
compilation error,[CE] variable axisIndex is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent axisIndex = PlotChangeEvent.createParser(axisIndex);
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder = new XYPlotRenderingOrder();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder =(XYPlotRenderingOrder)super.getDatasetRenderingOrder();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder = new XYPlotRenderingOrder(Sets.newHashSet());
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.FULL;
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder =(XYPlotRenderingOrder)getPlotRenderingOrder();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder = XYPlotRenderingOrder.FULL;
compilation error,[CE] cannot find symbol,,private XYPlotRenderingOrder datasetRenderingOrder = new XYPlotRenderingOrder();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder = new XYPlotRenderingOrder(512);
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder = Maps.newHashMap();
compilation error,[CE] cannot find symbol,,private final XYPlotRenderingOrder datasetRenderingOrder = new XYPlotRenderingOrder(Arrays.asList(10));
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,private boolean domainCrosshairLockedOnData = true; ,private static domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean domainCrosshairLockedOnData = true; ,private null domainCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private double domainCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = null;
patch is same with buggy,,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = true;
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPPER;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADD;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADD;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPPER;
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] no suitable constructor found for Color(Color,Color),public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.BLACK);
compilation error,[CE] cannot find symbol REDEFINITION,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.REDEFINITION);
compilation error,[CE] ';' expected,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE, Color.BLACK;
compilation error,[CE] cannot find symbol REDEFINITE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.REDEFINITE);
compilation error,[CE] cannot find symbol DOUBLE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.DOUBLE;
compilation error,[CE] ';' expected,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE, Color.REDEFINITION;
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() < index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() <= index) {
patch is same with buggy,,if (this.datasets.size() > index) { ,if(this.datasets.size() > index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(this.datasets.size() == index) {
increase failing tests, [FE] NullPointerException,if (this.datasets.size() > index) { ,if(index >= this.datasets.size()) {
compilation error,[CE] ')' expected,if (this.datasets.size() > index) { ,if(this.datasets.size() } index) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (rangeAxis != null) { ,if(rangeAxis!= null && this.rangeAxisLocation!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.containsChangeListener()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.containsKey(this)) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.getLocale()!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.value() > 0) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.getLocation() == null) {
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removePossibleMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNonDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeOmainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeTopMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLowerMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPlotMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToRangeAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,updateAxis(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index - 1);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index * 2);
compilation error,[CE] no suitable method found for get(int,<null>),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, null);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index+1);
compilation error,[CE] no suitable method found for get(int,int),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, index + 1);
compilation error,[CE] cannot find symbol nullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, nullPointerException);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index+ 1);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,if(marker!= null) { throw new IllegalArgumentException(""); } else { marker.append(","); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,if(marker == null) { throw new IllegalArgumentException(""); } else { marker.append(","); }
compilation error,[CE] cannot find symbol,,if(marker!= null) { throw new IllegalStateException(""); } else { marker.append(","); }
compilation error,[CE] constructor Layer in class Layer cannot be applied to given types;,,if(marker!= null) { throw new IllegalArgumentException(""); } else { marker = new Layer(); marker.append(","); }
compilation error,[CE] constructor Layer in class Layer cannot be applied to given types;,,if(marker!= null) { marker = new Layer(); marker.append('n'); marker.append(index + 1).append(marker); }
compilation error,[CE] constructor Layer in class Layer cannot be applied to given types;,,if(marker!= null) { marker = new Layer(); marker.append('n'); marker.append(index + 1).append(margin); }
compilation error,[CE] cannot find symbol,,if(marker!= null) { throw new IllegalArgumentException(""); } else { marker.appendText(","); }
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.red);
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.black);
compilation error,[CE] cannot find symbol chrono,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.chrono;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.green);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Layer marker = super.removeRangeMarker(layer);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers()) { if(marker == null) { marker = new Marker(super.removeRangeMarker(marker, layer); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers()) { if(marker == null) { removeRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(layer); if(marker == null) { marker = new Marker(); }
compilation error,[CE] ')' expected,,if(marker!= null) { Marker marker = new Marker(super.removeRangeMarker(layer, marker); if(marker == null) { marker = null; }
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new Marker(layer); if(marker!= null) { marker = new Marker(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : this.markers()) { if(marker == null) { marker = new Marker(layer); }
compilation error,[CE] variable marker is already defined in method removeRangeMarker(Marker,Layer),,Marker marker = new Marker(super.removeRangeMarker(marker, layer));
compilation error,[CE] ')' expected,,Marker marker = new Marker(super.removeRangeMarker(marker, layer);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); this.rangeAxis = new ValueAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText("DomainAxis dataset:"); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE); setBaseToolTipText(DEFAULT_GRIDLINE_PADDING);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new ValueAxisToolTipGenerator()); this.domainAxis = domainAxis.getDomainAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new ValueAxisToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipText("DomainAxis dataset:"); this.domainAxis = new ValueAxis();
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected final ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static LinkedHashMap localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static urlBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static urlLocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] <identifier> expected,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static TreeLocalizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourcesBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
increase failing tests, [FE] IllegalArgumentException,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers!= null) { this.foregroundDomainMarkers = new HashMap(); } else { this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof XYDomainMarker) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.backgroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof XYDomainMarker) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof XYDomainMarker) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations = new ObjectList(); }
compilation error,[CE] cannot find symbol domainAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.domainAxis instanceof XYDomainMarker) { this.foregroundDomainMarkers = new HashMap(); } else { this.domainAxisLocations = new ObjectList(); this.fieldAxisLocations = new ObjectList(); }
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSIZE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSIZE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POINT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POP,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POP;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POLICY,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POLICY;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_NAME,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_NAME;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_FONT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_FONT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSITIVE,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSITIVE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POSIENT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POSIENT;
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PADD;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '&&',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAPPER;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAP;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol,,renderer.appendChangeListener(this); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getDataset(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol,,renderer.appendChangeListener(this); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.renderer(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_START,,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_START); this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_START,,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_START); this.baseGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new java.util.ArrayList();
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = new java.util.RangeCrosshairPaint();
compilation error,[CE] incompatible types,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = 0;
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
increase failing tests, [FE] AssertionFailedError,this.domainAxes.set(0, domainAxis); ,this.domainAxisLocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxisLocation.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation);
compilation error,[CE] cannot find symbol domainAxislocations,this.domainAxes.set(0, domainAxis); ,this.domainAxislocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol DomainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, DomainAxis.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisElements,this.domainAxes.set(0, domainAxis); ,this.domainAxisElements.set(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxisLocations.set(0), domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0), domainAxis);
increase failing tests, [FE] AssertionFailedError,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(1, domainAxis);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { removeRangeMarker(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index == 0 && index < this.foregroundRangeMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index!= 0 && index < this.foregroundRangeMarkers.size()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { throw new IllegalStateException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index == 0 && index < this.foregroundRangeMarkers.size()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.foregroundRangeMarkers.size(); if(index >= 0 && index < this.foregroundRangeMarkers.size()) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); super.mapDatasetToRangeAxis(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); super.mapToRangeAxis(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(this);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex-- = axisIndex;
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.size() > 0) {
compilation error,[CE] bad operand types for binary operator '&&',if (axis != null) { ,if(axis!= null && axis.getLowerBound()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.containsKey("xmlns")) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.getPlot().getDomainAxis()!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.isEmpty()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
compilation error,[CE] bad operand types for binary operator '==',if (axis != null) { ,if(axis!= null && axis.getLowerBound() == null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.isLocal()) {
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation());
compilation error,[CE] cannot find symbol,,super.setAxisLocation(getRange());
compilation error,[CE] variable notify is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,boolean notify = super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxis());
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); if(!this.location!= null) { notifyListeners(new AxisLocationChangeEvent(this)); }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxisLocation()); if(!this.location!= null) { notifyListeners(new AxisLocationChangeEvent(this, location)); }
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.renderers.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.renderers.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasets.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.renderers.get(0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getDataset();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = super.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getValueAxis();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getValueAxis(domainAxis);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = this.getValueAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getValueAxis(this);
compilation error,[CE] variable domainAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis domainAxis = getValueAxis(getItemVisible());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.COMMA);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SYSTEM);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.NAME_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT_CAPACITY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEC_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.annotationValue = new HashMap();
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new DomainAxis(domainAxis); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol baseline,,addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = 0.0;
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { domainCrosshairLockedOnData = false; DomainCrosshairLockedOnData = false; }
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { domainCrosshairLockedOnData = false; this.domainCrosshairLockedOnData = false; }
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { DomainCrosshairLockedOnData = false; DomainCrosshairLockedOnData = false; }
compilation error,[CE] illegal start of type,,return getPlot().getDomainCrosshairLockedOnData();
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData == false) { domainCrosshairLockedOnData = false; DomainCrosshairLockedOnData = false; }
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { domainCrosshairLockedOnData = false; this.domainCrosshairLockedOnData = true; }
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { domainCrosshairLockedOnData = false; } else { return false; }
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { domainCrosshairLockedOnData = false; }
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { domainCrosshairLockedOnData = false; this.domainCrosshairLockedOnData = false; } else { return false; }
compilation error,[CE] illegal start of type,,if(domainCrosshairLockedOnData!= false) { domainCrosshairLockedOnData = false; DomainCrosshairLockedOnData = true; }
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapAxisToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol,this.mapDatasetToDomainAxis(0, 0); ,this.mapToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(1.0);
compilation error,[CE] illegal start of type,,return new Point2D.Double(NumberInput.parseDouble(0.0, 0.0));
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.exp(0.0, 0.0));
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.max(0.0, 0.0));
compilation error,[CE] illegal start of type,,return new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.exp(-1.0), Math.exp(-1.0));
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.exp(-1.0), Math.exp(-1));
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.max(10.0, 0.0));
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.exp(-1), Math.exp(-1));
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.exp(-1), Math.exp(-2));
compilation error,[CE] illegal start of type,,return new Point2D.Double(Math.exp(-1), Math.exp(-4));
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + getClass());
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + this.getName());
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + JsonToken.VALUE_EMPTY);
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + this.getClass());
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + this);
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + getMessage());
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + JsonToken.VALUE_NULL_OBJECTS);
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:"+getClass().getName());
compilation error,[CE] illegal start of expression,} ,super(); this.nextNullPointerException = System.err.println("Unable to parse:" + JsonToken.VALUE_NUMBER_FLOAT);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(itemRenderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(item);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.itemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.get(Dataset.class);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_ROOT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] illegal start of expression,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f >>, 0.0f);
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_REASON,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_REASON;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_QUOTE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_QUOTE;
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers);
patch is same with buggy,,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers);
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] cannot find symbol marker,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.marker);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.markers);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.backgroundRangeMarkers);
compilation error,[CE] cannot find symbol markERS,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markERS);
compilation error,[CE] ')' expected,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index, marker);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers, marker);
compilation error,[CE] bad operand types for binary operator '+',this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index)+ 1, markers);
patch is same with buggy,,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new XYDataset(this.domainAxis);
compilation error,[CE] incompatible types,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new ArrayList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedSize(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new JsonDataset();
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap2D(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedValues();
compilation error,[CE] illegal start of type,,return ExceptionUtils.getCrosshairLockedOnData(this);
compilation error,[CE] illegal start of type,,return getPlot().getLowerBound();
compilation error,[CE] illegal start of type,,return getPlot().getAnnotation(JacksonStdImpl.class);
compilation error,[CE] illegal start of type,,return getPlot().getValue();
compilation error,[CE] illegal start of type,,return getDataItem(categoryPlot.getPlotCount() - 1);
compilation error,[CE] illegal start of type,,return ExceptionUtils.getCrosshairLockedOnData(this, false);
compilation error,[CE] illegal start of type,,return getPlot().getAnnotation(JacksonSegment.class);
compilation error,[CE] illegal start of type,,return getPlot().getAnnotation(JacksonStandardDeviation.class);
compilation error,[CE] illegal start of type,,return getDataItem(categoryPlot.getPlotCount());
compilation error,[CE] illegal start of type,,return getPlot();
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(dataset);
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets = new XYDataset(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.update(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(1, dataset);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(this);
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append("n"); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append('r'); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append('r'); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.append(","); marker.append(layer).append(marker); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { marker.append('t'); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { Layer layer = new Layer(); marker.append(layer); marker.append('n'); } else { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { marker = new Layer(); marker.append(","); marker.append(layer).append(marker); }
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeDomainMarker(Layer,Marker),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(layer, marker);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeftDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeCategoryMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, layer, marker);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPaths(marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeOmainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeIndent(0, marker, layer);
patch is same with buggy,,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f,  0.5f), new BasicStroke(1.0f), 0.6f); ,Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 0.5f), new BasicStroke(1.0f), 0.6f);
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= 0) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index == 0) {
compilation error,[CE] ')' expected,if (index == 0 && location == null) { ,if(location == null && index } 0) {
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxis();
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEmpty(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setDomainAxisEmpty(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxisEmpty(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setDomainAxisEmpty(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setDomainAxis(boolean,boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setDomainAxis(boolean,boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot columnRenderingOrder =(CategoryPlot)getPlot().getColumnRenderingOrder();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot columnRenderingOrder =(CategoryPlot)getPlot();
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)getPlot();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot columnRenderingOrder =(CategoryPlot)super.getColumnRenderingOrder();
compilation error,[CE] illegal start of type,,return new CategoryPlot();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot columnRenderingOrder =(CategoryPlot)getPlot().getValue();
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlot().getColumnRenderingOrder());
compilation error,[CE] variable rowRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot rowRenderingOrder =(CategoryPlot)getPlot().getValue();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot columnRenderingOrder =(CategoryPlot)this.columnRenderingOrder.clone();
compilation error,[CE] variable columnRenderingOrder is already defined in class CategoryPlot,,private final CategoryPlot columnRenderingOrder = Collections.emptyOrder();
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxis = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisElements,this.rangeAxes = new ObjectList(); ,this.rangeAxisElements = new ObjectList();
compilation error,[CE] cannot find symbol rangeAxisEquals,this.rangeAxes = new ObjectList(); ,this.rangeAxisEquals = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new DefaultAxis();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new LinkedList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new HashList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new StackList();
compilation error,[CE] cannot find symbol,,e.setChangeEvent(this);
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setDataset(ChartChangeEventType.GENERAL); } else { e.setChangeEvent(ChartChangeEventType.DATASET_UPDATED); }
compilation error,[CE] ')' expected,,if(e.getCurrentToken()!= null) { e.setChangeEvent(ChartChangeEventType.GENERAL); e.setDataset(ChartChangeEventType.DATASET_UPDATED); e.setAnnotation(ChartChangeEventType.
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setDataset(ChartChangeEventType.DATASET_UPDATED); } else { e.setChangeEvent(ChartChangeEventType.ANNOTATION); }
compilation error,[CE] ')' expected,,if(e.getPlot()!= null) { e.setChangeEvent(ChartChangeEventType.GENERAL); e.setAnnotation(DateTimeFieldType.ANNOTATION); } else { e.setChangeEvent(DateTimeFieldType.
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setDataset(ChartChangeEventType.DATASET_UPDATED); } else { e.setAnnotation(DateTimeFieldType.ANNOTATION); }
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setDataset(ChartChangeEventType.GENERAL); } else { e.setChangeEvent(ChartChangeEventType.ANNOTATION); }
compilation error,[CE] ')' expected,,if(e.getCurrentToken()!= null) { e.setChangeEvent(ChartChangeEventType.GENERAL); e.setAnnotation(DateTimeFieldType.ANNOTATION); } else { e.setChangeEvent(DateTime
compilation error,[CE] cannot find symbol,,if(e.getCurrentToken()!= null) { e.setChangeEvent(ChartChangeEventType.GENERAL); e.setDataset(ChartChangeEventType.DATASET_UPDATED); notifyListeners(e); }
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(itemRenderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.datasets.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(null);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(new XYDataset());
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.clone();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.clone();
compilation error,[CE] cannot assign a value to final variable seriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol XYSeriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = XYSeriesRenderingOrder.REVERSE;
compilation error,[CE] cannot find symbol NEVERSE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.NEVERSE;
compilation error,[CE] constructor SeriesRenderingOrder in class SeriesRenderingOrder cannot be applied to given types;,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = new SeriesRenderingOrder();
compilation error,[CE] cannot find symbol FULL,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.FULL;
compilation error,[CE] cannot find symbol FULL,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.FULL;
compilation error,[CE] cannot find symbol DOUBLE,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.DOUBLE;
compilation error,[CE] cannot find symbol SerialSeriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SerialSeriesRenderingOrder.FULL;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeAxis = new RangeAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis = new RangeAxisView();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ValueAxis(domainAxis); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,final Layer layer = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.containsKey(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.contains(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,boolean index = this.foregroundDomainMarkers.isEmpty();
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = super.removeDomainMarker(index);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index); if(layer == Layer.NEGROUND) { removeDomainMarker(marker); }
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index); boolean notify = this.foregroundDomainMarkers.get(index);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = super.removeDomainMarker(marker);
compilation error,[CE] variable layer is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,Layer layer = this.foregroundDomainMarkers.get(index); boolean notify = this.foregroundDomainMarkers.containsKey(marker);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size()); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size()); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size()); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size()); if(index < 0) { result = new CategoryDataset(this.datasets.size()); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size()); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size()); if(index >= 0) { result = new CategoryDataset(this.datasets.size()); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size()); if(index < 0) { throw new IllegalStateException(""); }
patch is same with buggy,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol BOOLEAN_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOLEAN_OR_LEFT, true);
compilation error,[CE] cannot find symbol BOOLEAN_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOLEAN_OR_LEFT, false);
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.TOP_OR_RIGHT, false);
compilation error,[CE] cannot find symbol CENTER_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.CENTER_OR_LEFT, false);
compilation error,[CE] cannot find symbol COTTOM_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.COTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < size; axisIndex++) {
compilation error,[CE] cannot find symbol count,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.count; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.size; axisIndex++) {
compilation error,[CE] cannot find symbol index,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.index; axisIndex++) {
compilation error,[CE] cannot find symbol width,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < width; axisIndex++) {
compilation error,[CE] cannot find symbol area,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < area; axisIndex++) {
compilation error,[CE] cannot find symbol itemCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < itemCount; axisIndex++) {
compilation error,[CE] cannot find symbol CategoryCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < CategoryCount; axisIndex++) {
compilation error,[CE] cannot find symbol Category,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < Category.SIZES; axisIndex++) {
compilation error,[CE] cannot find symbol SHORT_EXPECTED,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < SHORT_EXPECTED; axisIndex++) {
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getPlot()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getChronology()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getChronology().equals(getChronology())) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getValue()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getChildCount() == 2) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext() == null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getChronology().equals(getPlot())) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] incompatible types,,this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE; this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
increase failing tests, [FE] NullPointerException,,renderer.append(XYItemRenderer.DEFAULT_CROSSHAIR_STROKE); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] incompatible types,,this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE; this.domainCrosshairValue = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol,,renderer.appendChangeListener(this); this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] incompatible types,,this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE; this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] incompatible types,,this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE; this.domainCrosshairValue = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] cannot find symbol,,renderer.appendChangeListener(this); this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlot();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotParameters();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureLocalFileAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotViews();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotType();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureExpressionAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotTypes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureXYPlotText();
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(List)this.foregroundDomainMarkers.get(new Integer(index));
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.foregroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.foregroundDomainMarkers.get(new Integer(index
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = this.foregroundDomainMarkers.get(new Integer(index)); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf("n"); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] unclosed character literal,,if(marker!= null) { int index = marker.indexOf('ufffd'); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { fireChangeEvent(); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Layer marker = new Layer(); if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { throw new IllegalStateException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalStateException(""); }
increase failing tests, [FE] NullPointerException,this.domainCrosshairVisible = false; ,this.domainCrosshairVisible = true;
increase failing tests, [FE] NullPointerException,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { this.domainCrosshairVisible = true; }
increase failing tests, [FE] NullPointerException,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible!= false) { this.domainCrosshairVisible = false; } else { this.domainCrosshairVisible = true; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkNotNull(this.domainCrosshairVisible); }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkNotNull(this.domainCrosshairVisible, true); }
increase failing tests, [FE] NullPointerException,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { this.domainCrosshairVisible = false; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible!= false) { this.domainCrosshairVisible = false; } else { Preconditions.checkNotNull(this.domainCrosshairVisible); }
increase failing tests, [FE] NullPointerException,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == true) { this.domainCrosshairVisible = false; } else { this.domainCrosshairVisible = true; }
increase failing tests, [FE] NullPointerException,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible!= false) { this.domainCrosshairVisible = false; } else { Preconditions.checkNotNull(this.domainCrosshairVisible, true); }
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = new HashMap();
compilation error,[CE] cannot find symbol,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = new RangeGridlinePaint();
compilation error,[CE] ';' expected,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = Color.blue);
compilation error,[CE] cannot find symbol DOUBLE,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = Color.DOUBLE;
compilation error,[CE] cannot find symbol,,EventBounds event = new EventBounds(this.rangeAxes.size(), this.axisIndex);
compilation error,[CE] cannot find symbol,,super.setValueAxis(this.rangeAxes);
compilation error,[CE] cannot find symbol,,EventBounds event = new EventBounds(this.rangeAxes.size(), this.axisIndex++);
compilation error,[CE] cannot find symbol,,EventBounds event = new EventBounds(this.rangeAxes.size(), this.axisIndex + 1);
compilation error,[CE] cannot find symbol,,EventBounds event = this.rangeAxes.get();
compilation error,[CE] cannot find symbol,,EventBounds event = this.rangeAxes.get(axisIndex);
compilation error,[CE] cannot find symbol,,EventBounds event = new EventBounds(this.rangeAxes.size(), this.angleAxis.getWidth());
compilation error,[CE] cannot find symbol,,EventBounds event = new EventBounds(this.rangeAxes.size());
compilation error,[CE] cannot find symbol,,EventBounds event = new EventBounds(this.rangeAxes.size(), this.centerFrames.size());
increase failing tests, [FE] NullPointerException,,this.rangeAxes.clear();
compilation error,[CE] illegal start of type,,super();
compilation error,[CE] illegal start of type,,super.setPaint(null); this.quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] illegal start of type,,super.setPaint(null, null, null, null);
compilation error,[CE] illegal start of type,,super.setPaint(null, null, null, null); return new Paint[] { null, null, null, null } ;
compilation error,[CE] illegal start of type,,super.setPaint(Color.black); this.quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] illegal start of type,,super.setPaint(null, null, null, null); this.quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] illegal start of type,,super.setPaint(null, null, null, null); this.quadrantPaint = new QuadrantPaint(0, 0, 0, 0);
compilation error,[CE] illegal start of type,,super.setPaint(null); this.quadrantPaint = new Paint[0];
compilation error,[CE] illegal start of type,,super.setPaint(null, null, null, null); this.quadrantPaint = new Paint[0];
compilation error,[CE] illegal start of type,,super.setPaint(null, null, null, null); return new Paint[] { null, null, null, null } ;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxes = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxes = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxes = new ObjectList();
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
patch is same with buggy,,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_GROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_GROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ROSSHAIR_VALUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_ROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_REASON,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_REASON;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_QUOTE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_QUOTE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VUE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VOLATILE,this.rangeCrosshairValue = 0.0; ,this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VOLATILE;
patch is same with buggy,,notifyListeners(e); ,notifyListeners(e);
compilation error,[CE] method notifyListeners in class Plot cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, e);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(e, new XYPlotChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new EventChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYListener(e), nullPointerException);
compilation error,[CE] cannot find symbol,notifyListeners(e); ,notifyListeners(new XYPlotChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,updateOnlyNotifyListeners(e);
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(new DatasetChangeEvent(this, e));
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(this);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); super.mapToDomainAxis();
compilation error,[CE] cannot find symbol,,super.mapDatasetToDomainAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); super.mapToDomainAxis();
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] ')' expected,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 2.0f, 2.0f }, 0.0f);
compilation error,[CE] '}' expected,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0
compilation error,[CE] ')' expected,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, 0.0f, 2.0f }, 0.0f);
compilation error,[CE] '}' expected,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 0.0
compilation error,[CE] illegal start of expression,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] {
patch is same with buggy,,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] no suitable constructor found for RectangleInsets(double,double,double),this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(3.0, 3.0, 3.0);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Layer(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable notify is already defined in method addRangeMarker(int,Marker,Layer,boolean),,boolean notify = super.addRangeMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Layer(); if(notify) { notifyListeners(new RangeMarkerChangeEvent(this)); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] ')' expected,,if(marker!= null) { marker = new Layer(); if(notify) { notifyListeners(new RangeMarker(this, marker); }
compilation error,[CE] variable notify is already defined in method addRangeMarker(int,Marker,Layer,boolean),,boolean notify = super.addRangeMarker(layer);
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Layer(); if(notify) { notifyListeners(new RangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Layer(); if(notify) { notifyListeners(new RangeMarker(this)); }
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isNull()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isEmpty()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.length() == 0) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isSupported()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isNoMarker()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isNoStandard()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null ||!marker.isNoSerializer()) {
compilation error,[CE] cannot find symbol DEFAULT_ANCORDHAIR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCORDHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANNOTATION,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANNOTATION;
compilation error,[CE] cannot find symbol DEFAULT_ANCROSSHAIR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCOND,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCOND;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_CROSSHAIR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_RANGE_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCHAIR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHAIR_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ARRAY_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ARRAY_VALUE;
compilation error,[CE] cannot find symbol DEFAULT_ANCHOR_VALUE,this.anchorValue = 0.0; ,this.anchorValue = DEFAULT_ANCHOR_VALUE;
patch is same with buggy,,this.anchorValue = 0.0; ,this.anchorValue = 0.0;
compilation error,[CE] > expected,} ,map =(Map < K, V >> )getDataset(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int axisIndex = getAxisBounds(); if(axisIndex > 0) { mapDatasetToRangeAxis = new Integer(axisIndex); }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int axisIndex = getAxisBounds(); if(axisIndex > 0) { mapDatasetToRangeAxis = new java.util.ArrayList(); }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int axisIndex = getAxisBounds(); if(axisIndex < 0) { mapDatasetToRangeAxis = new Integer(axisIndex); }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int axisIndex = getAxisBounds(); if(axisIndex < 0) { mapDatasetToRangeAxis = new java.util.ArrayList(); }
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < XYPlot>)getPlot(); this.axisIndex = axisIndex + 1;
compilation error,[CE] illegal start of expression,} ,for(int i = 0; i < mapIndex; i++) { XYPlotOrientation orientation = plot.getOrientation(); if(orientation!= PlotOrientation.HORIZONTAL) { mapDatasetEntry(i, axisIndex); }
compilation error,[CE] generics are not supported in -source 1.4,} ,map =(Map < XYPlot>)getPlot();
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int axisIndex = getAxisBounds(); if(axisIndex < 0) { mapDatasetToRangeAxis = new XYPlot[axisIndex]; }
compilation error,[CE] illegal start of expression,} ,if(axisIndex < 0) { int axisIndex = getAxisBounds(); if(axisIndex < 0) { mapDatasetToRangeAxis = new XYPlot[axisIndex++]; }
compilation error,[CE] cannot assign a value to final variable columnRenderingOrder,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder columnRenderingOrder = SortOrder.ASCENDING;
patch is same with buggy,,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol SCENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.SCENDING;
compilation error,[CE] cannot find symbol SECENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.SECENDING;
compilation error,[CE] cannot find symbol ASCIENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCIENDING;
compilation error,[CE] cannot find symbol DECENDING,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.DECENDING;
compilation error,[CE] cannot find symbol ASCII,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.ASCII;
compilation error,[CE] cannot find symbol START,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.START;
compilation error,[CE] cannot find symbol DOCUMENT,private SortOrder columnRenderingOrder = SortOrder.ASCENDING; ,private SortOrder columnRenderingOrder = SortOrder.DOCUMENT;
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeDomainMarker(Layer,Marker),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(layer, marker);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLocalMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeftDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeIndent(0, marker, layer);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, layer, marker);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPaths(marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllStrings(marker, layer);
compilation error,[CE] cannot find symbol zone,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(zone, marker);
patch is same with buggy,,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f + this.domainCrosshairVisible);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f + this.domainCrosshairVisible? DEFAULT_DOMAIN_ZERO_BADLINE_STROKE : 2.0f);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f + this.domainCrosshairVisible? DEFAULT_DOMAIN_ZERO_BASED_STROKE : 2.0f);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f + this.domainCrosshairVisible? DEFAULT_DOMAIN_ZERO_BASED_STROKE : 0.5f);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f + this.domainCrosshairVisible? DEFAULT_DOMAIN_ZERO_BADLINE_STROKE : 0.5f);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f + this.domainCrosshairVisible? DEFAULT_DOMAIN_ZERO_BASELINE_STROKE : 2.0f);
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f + this.domainCrosshairVisible? DEFAULT_DOMAIN_ZERO_BASELINE_STROKE : 0.5f);
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new XYDataset();
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new DoubleMap();
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new IntegerMap();
compilation error,[CE] cannot find symbol domainAxisMap,this.datasetToDomainAxisMap = new TreeMap(); ,this.domainAxisMap = new TreeMap();
compilation error,[CE] Map is abstract; cannot be instantiated,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new Map();
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new LocaleMap();
compilation error,[CE] cannot find symbol,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new DecimalMap();
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new ArrayList();
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBeanAxis(axisIndex);
compilation error,[CE] cannot find symbol axisIndex,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(this.axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getOffsetAxis(axisIndex);
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxis();
patch is same with buggy,,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(axisIndex);
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxisEdge(axisIndex);
compilation error,[CE] ';' expected,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomain Axis(axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = valueAxis(axisIndex);
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxisEdge();
compilation error,[CE] cannot find symbol,,e.setChangeEvent(this);
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.GENERAL);
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setChart(ChartChangeEventType.GENERAL); } else { e.setChangeEvent(ChartChangeEventType.DATASET_UPDATED); }
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setChart(ChartChangeEventType.GENERAL); } else { e.setAnnotation(ChartChangeEventType.ANNOTATION); }
compilation error,[CE] cannot find symbol,,e.setChange(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setChart(ChartChangeEventType.GENERAL); } else { e.setAnnotation(ChartChangeEventType.DATE); }
compilation error,[CE] cannot find symbol,,if(e.getPlot()!= null) { e.setChangeEvent(this); e.setChart(ChartChangeEventType.GENERAL); } else { e.setChangeEvent(ChartChangeEventType.ANNOTATION); }
compilation error,[CE] ')' expected,,if(e.getCurrentToken()!= null) { e.setChangeEvent(ChartChangeEventType.GENERAL); e.setAnnotation(ChartChangeEventType.ANNOTATION); e.setPlot(ChartChangeEventType.
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName());
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_CURLHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_GLIDLINE_STROKE);
compilation error,[CE] illegal start of type,,return Stroke.newStroke("CrOSSHAIR_STROKE");
compilation error,[CE] illegal start of type,,return new Stroke(System.err.println("Failed to parse:" + getClass().getName()));
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.class.getName(), DEFAULT_CROSSHAIR_STROKE, DEFAULT_PLAIN_STROKE);
compilation error,[CE] illegal start of type,,return new Stroke(System.err.println());
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlinePaint = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROK
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT_GRIDLINE_
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT_GRIDLINE_S
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlinePaint = DEFAULT_GRIDLINE_
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT_GRIDLINE_STRO
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT_GRIDLINE
compilation error,[CE] ';' expected,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; this.rangeGridlineStroke = DEFAULT_GRIDLINE_ST
patch is same with buggy,,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size();
compilation error,[CE] bad operand types for binary operator '||',int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() ||(this.rangeAxes!= null? this.rangeAxes.size() : 0);
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() ||(this.rangeAxes!= null? this.rangeAxes.getLowerBound() : this.rangeAxes.getRange().getUpperBound());
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() ||(this.rangeAxes!= null? this.rangeAxes.getLowerBound() : this.rangeAxes.getUpperBound());
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() ||(this.rangeAxes!= null? this.rangeAxes.getLowerBound() : new Range(this.rangeAxes.getUpperBound()));
compilation error,[CE] ';' expected,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() ||(this.rangeAxes!= null? this.rangeAxes.size() : 0));
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() ||(this.rangeAxes!= null? this.rangeAxes.getLowerBound() : null);
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() ||(this.rangeAxes!= null? this.rangeAxes.getLowerBound() : new Range(this.rangeAxes.getRange()));
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationAnnotations,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotationAnnotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationAnnotations,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationAnnotations = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationList,this.annotations = new java.util.ArrayList(); ,if(this.annotations == null) { this.annotations = new java.util.ArrayList(); } else { this.annotationList = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationSets,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotationSets = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol annotationAnnotations,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotationAnnotations = Collections.emptySet(); }
compilation error,[CE] cannot find symbol annotationSet,this.annotations = new java.util.ArrayList(); ,if(this.annotations!= null) { this.annotations = new java.util.ArrayList(); } else { this.annotationSet = new java.util.ArrayList(); }
compilation error,[CE] cannot find symbol DatasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEventType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DateTimeChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(DateTimeChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DatasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEventType(DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(this);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DateTimeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setChangeEvent(DateTimeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DateTimeChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(DateTimeChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DateTimeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(DateTimeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol markers,,if(this.markers!= null) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,if(this.backgroundRangeMarkers!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol markers,,if(this.markers!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(this.backgroundRangeMarkers!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.backgroundRangeMarkers!= null) { for(CategoryPlot marker : new CategoryPlot()) { this.markers = new Layer(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.backgroundRangeMarkers!= null) { for(CategoryPlot marker : new CategoryPlot()) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol markers,,if(this.markers!= null) { throw new IllegalStateException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.markers!= null) { for(CategoryPlot marker : new CategoryPlot()) { this.markers = new Layer(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.backgroundRangeMarkers!= null) { for(CategoryPlot marker : new CategoryPlot()) { this.marker = new Layer(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,if(this.backgroundRangeMarkers!= null) { for(CategoryPlot marker : new CategoryPlot()) { this.edgeRangeMarkers = new Layer(); }
compilation error,[CE] cannot assign a value to final variable rowRenderingOrder,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private final SortOrder rowRenderingOrder = SortOrder.ASCENDING;
patch is same with buggy,,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
compilation error,[CE] cannot find symbol SCENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.SCENDING;
compilation error,[CE] cannot find symbol ASCII,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCII;
compilation error,[CE] cannot find symbol START,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.START;
compilation error,[CE] cannot find symbol ASCIENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ASCIENDING;
compilation error,[CE] cannot find symbol SECENDING,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.SECENDING;
compilation error,[CE] cannot find symbol ARRAYLIT,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.ARRAYLIT;
compilation error,[CE] cannot find symbol DOCUMENT,private SortOrder rowRenderingOrder = SortOrder.ASCENDING; ,private SortOrder rowRenderingOrder = SortOrder.DOCUMENT;
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index - 1);
increase failing tests, [FE] AssertionFailedError,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index + 1);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index * 2);
compilation error,[CE] no suitable method found for get(int,int),result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, 0);
compilation error,[CE] cannot find symbol WHOLE_COLLECTION,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, WHOLE_COLLECTION);
compilation error,[CE] cannot find symbol DEC,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.DEC);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index+1);
compilation error,[CE] cannot find symbol NONE,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.NONE);
compilation error,[CE] cannot find symbol DEFAULT,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.DEFAULT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = CategoryAnchor.MIDDLE; this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol defaultItemRenderer,,Preconditions.checkNotNull(defaultItemRenderer); this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol defaultItemRenderer,,Preconditions.checkNotNull(defaultItemRenderer); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAnchor,,this.domainAnchor = CategoryAnchor.MIDDLE; this.domainGridlinePosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol defaultItemRenderer,,Preconditions.checkNotNull(defaultItemRenderer); this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = CategoryAnchor.MIDDLE;
compilation error,[CE] illegal start of expression,,if(this.rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(this.domainAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYItemRenderer) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { return(XYRenderer)this.rangeAxis; }
compilation error,[CE] illegal start of expression,,if(rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { renderer =(XYRenderer)rangeAxis.getRange(); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis == null) { renderer = new RangeAxis(rangeAxis); }
compilation error,[CE] illegal start of expression,,if(this.rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { return(XYRenderer)dataset.getValueAxis(); }
compilation error,[CE] illegal start of expression,,if(rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { renderer =(XYRenderer)renderer.getLowerBound(); }
compilation error,[CE] illegal start of expression,,if(this.domainAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYItemRenderer) { renderer =(XYItemRenderer)super.getRangeAxis(); }
compilation error,[CE] illegal start of expression,,if(this.domainAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYItemRenderer) { renderer =(XYItemRenderer)super.renderer; }
compilation error,[CE] ';' expected,,if(this.rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof XYRenderer) { renderer =(XYRenderer)RANGE_ARRAY
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(-1, -1);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0000);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(-1, 1);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(1);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(0.0, 5.0, 5.0, 5.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] NullPointerException,,renderer.addChangeListener(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.axisOffset = new RectangleInsets(2.0, 2.0, 2.0);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNonDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeOmainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLowerMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllDomainMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { marker = new Marker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setOrientation(PlotOrientation.VERTICAL); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker = new Marker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setDomainMarker(null); }
compilation error,[CE] illegal start of expression,,if(marker == null) { Marker marker = new Marker(); if(marker!= null) { marker = new Marker(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setMarker(null); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { Marker marker = new Marker(); if(marker == null) { marker.setDomainMarker(false); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { marker = new Marker(); if(marker == null) { return null; }
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] generics are not supported in -source 1.4,} ,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,} ,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,} ,return new XYPlot(System.err.println("Unable to parse:" + getClass().getName()));
compilation error,[CE] generics are not supported in -source 1.4,} ,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,throw new IllegalStateException("");
compilation error,[CE] generics are not supported in -source 1.4,} ,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new JXPathNotFoundException(""); }
compilation error,[CE] ,} ,return new XYPlot(System.err.println("Unable to parse:" + getClass().getName());
compilation error,[CE] illegal start of expression,} ,return new XYPlot(System.currentTimeMillis());
compilation error,[CE] illegal start of expression,} ,return new XYPlot(System.err.println("Unable to parse:" + getClass().getName()), null, null);
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis(getXYPlot());
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis(getChronology());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis(Locale.getDefault());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = getRangeAxis(getPlotType());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Range axis = plot.getRangeAxisEdge();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis(getXYPlot());
compilation error,[CE] cannot find symbol,,XYAxis axis = getAxis();
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets = new CategoryDataset(dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset, false));
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(dataset);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset, axisOffset));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset, null));
compilation error,[CE] cannot find symbol NEGATIVE_INSETS,this.datasets.set(0, dataset); ,this.datasets.add(Dataset.NEGATIVE_INSETS);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(rangeAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(rangeAxis).getValueAxis();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol,,java.util.ArrayList(); this.domainAxis = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ValueAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = RangeAxis.getRange();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.domainAxis = new ValueAxisItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(rangeAxis).getDomainAxis();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] no suitable method found for get(),,this.domainAxes =(CategoryAxis)this.domainAxes.get();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(1);
compilation error,[CE] cannot find symbol,,this.domainAxes = super.configureDomainAxes();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryPlot)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation(); Preconditions.checkNotNull(orientation);
compilation error,[CE] no suitable method found for get(),,this.domainAxes =(CategoryPlot)this.domainAxes.get();
compilation error,[CE] no suitable constructor found for CategoryPlot(int),,this.domainAxes = new CategoryPlot(this.domainAxes.size());
compilation error,[CE] cannot find symbol,,this.domainAxes = super.configureDomainAxes(this.domainAxes);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocation = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = new XYRangeAxisLocation(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocation = new ValueAxisLocation(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocation = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocation = new ValueAxisLocation(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = new XYRangeAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations = new XYRangeAxisLocation(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.itemRenderer();
compilation error,[CE] <identifier> expected,,CategoryItemRenderer renderer = this.domainAxisLocation.TOP_OR_RIGHT, false);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.domainAxisLocation.TOP_OR_RIGHT;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRangeItemRenderer();
compilation error,[CE] <identifier> expected,,CategoryItemRenderer renderer = this.domainAxisLocation.TOP_OR_RIGHT, true;
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getDataset();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.domainAxisLocation.TOP_OR_LEFT;
compilation error,[CE] <identifier> expected,,CategoryItemRenderer renderer = this.domainAxisLocation.TOP_OR_RIGHT, false;
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getItemCount(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getLength(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(i); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getSize(); i++) {
compilation error,[CE] bad operand types for binary operator '<',for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.get(0); i++) {
compilation error,[CE] cannot find symbol,,addAnchorMarker(this, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,,addAnchorMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,,addAnchorMarker(this, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol,,addAnchorMarker(this.anchorValue, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol baseline,,addAnchorMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] cannot find symbol baseline,,addAnchorMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol,,addAnchorMarker(this, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol baseline,,addAnchorMarker(baseline, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANACCORD_VALUE;
compilation error,[CE] no suitable method found for addDomainMarker(CategoryPlot,Layer),,addDomainMarker(this, Layer.BACKGROUND); this.anchorValue = DEFAULT_ANchor_VALUE;
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxis()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(getAxisLocation()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(getAxis(), location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(getAxisLocation()); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(getAxis()); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisEvent(this));
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append(","); marker.append(layer.getLowerBound()).append('n'); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append("n"); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append("n"); marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker == null) { Layer layer = getLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLast(); marker.append(","); marker.append(layer.getLowerBound()); } else { marker.append('n'); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLastLast(); marker.append(","); marker.append('n'); } else { marker.append('r'); }
compilation error,[CE] variable layer is already defined in method addRangeMarker(int,Marker,Layer),,if(marker!= null) { Layer layer = getLastLastLastLastLastLastLocation(); marker.append("n"); marker.append("n"); } else { marker.append("n"); }
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Layer,Marker,int,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(layer, marker, index, true);
compilation error,[CE] cannot find symbol registry,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(registry, marker, layer, false);
compilation error,[CE] cannot find symbol PEEL,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PEEL, false);
compilation error,[CE] cannot find symbol PlotLines,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PlotLines, false);
compilation error,[CE] cannot find symbol zone,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(zone, marker, layer, false);
compilation error,[CE] cannot find symbol PlotLines,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.PlotLines, true);
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + Color.black;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + Color.red;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] generics are not supported in -source 1.4,,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] IllegalStateException,,throw new IllegalStateException("");
compilation error,[CE] generics are not supported in -source 1.4,,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new IllegalStateException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,for(XYPlot <?> : XYPlot.START_OF_CONSTRUCTOR) { if(containsKey(key)) { throw new IllegalArgumentException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,for(XYPlot <?> : XYPlot.START_OF_CONSTRUCTOR) { if(containsKey(key)) { throw new IllegalStateException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new NullPointerException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new JXPathNotFoundException(""); }
compilation error,[CE] generics are not supported in -source 1.4,,for(XYPlot <?> : XYPlot.START_ARRAY) { if(!isVisible()) { throw new RuntimeException(""); }
compilation error,[CE] cannot find symbol,,throw new JXPathInvalidAccessException("");
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.isEmpty()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null || axis.size() == 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.size() > 0) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.containsKey("DomainAxis")) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.getDomainAxis()!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null && axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null &&!axis.isDefine()) {
increase failing tests, [FE] NullPointerException,,if(rangeAxis!= null) { throw new IllegalArgumentException(""); } else { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof Number) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,throw new NullPointerException("");
compilation error,[CE] cannot find symbol rangeAxis,,if(rangeAxis!= null) { throw new NullPointerException(""); } else { this.rangeAxis = RangeAxis.getSuperclass(); }
compilation error,[CE] cannot find symbol Preconditions,,if(rangeAxis!= null) { throw new NullPointerException(""); } else { Preconditions.checkNotNull(rangeAxis, renderer); }
increase failing tests, [FE] NullPointerException,,if(rangeAxis!= null) { throw new NullPointerException(""); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,if(rangeAxis!= null) { throw new NullPointerException(""); } else { Preconditions.checkState(rangeAxis.getType() == Token.FUNCTION); }
compilation error,[CE] illegal start of expression,,if(rangeAxis!= null) { RangeAxis rangeAxis = getRangeAxis(); if(rangeAxis instanceof Number) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol rangeAxis,,if(rangeAxis!= null) { throw new NullPointerException(""); } else { this.rangeAxis = RangeAxis.getRange(); }
compilation error,[CE] cannot find symbol Preconditions,,if(rangeAxis!= null) { throw new IllegalArgumentException(""); } else { Preconditions.checkNotNull(rangeAxis, renderer); }
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getDataset();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.domainAxisLocation.getPlot();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get(0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(getPlot());
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.get();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = super.getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.domainAxises.get(0);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('/');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', 'r');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.')+ 1;
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ')+ 1;
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ')- 1;
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', '+');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ', '-');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n', '/');
patch is same with buggy,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeRangeMarker(Layer,Marker),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(layer, marker);
compilation error,[CE] cannot find symbol latin,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(latin, marker, layer);
compilation error,[CE] ')' expected,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(contains(marker, layer);
compilation error,[CE] cannot find symbol map,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(map, marker, layer);
compilation error,[CE] cannot find symbol registry,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(registry, marker, layer);
compilation error,[CE] cannot find symbol permission,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(permission, marker, layer);
compilation error,[CE] cannot find symbol zone,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(zone, marker);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SYSTEM);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.COMMA);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.START_OBJECT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.SYSTEM);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.XY_PLOT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECTION_TYPE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT_CAPACITY);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = super.findValueAxis(dataset, renderer);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = ValueAxis.getValue(dataset, renderer);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getValue(0);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis = super.getValueAxis();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.prependChangeListener(this);
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)this.dataset.getValue();
compilation error,[CE] variable rangeAxis is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,ValueAxis rangeAxis =(ValueAxis)super.getValue();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = CategoryPlot.getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> yAxis = EventUtilities.getCurrentPlot(event);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCurrentPlot(event);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> yAxis = EventUtilities.unwrapAndThrowAsIAE(event);
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = categoryPlot.getAxis();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryAxis yAxis = getAxis();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> yAxis = getCurrentPlot();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = EventUtilities.getCurrentPlot(getEventType());
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> yAxis = getAxis();
compilation error,[CE] variable yAxis is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot yAxis = getCurrentPlot();
patch is same with buggy,,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(this.domainAxis);
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList() + 1;
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0);
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0);
compilation error,[CE] no suitable constructor found for ObjectList(double),this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0.0);
compilation error,[CE] incompatible types,this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ArrayList();
compilation error,[CE] no suitable constructor found for ObjectList(float),this.datasetToDomainAxisMap = new ObjectList(); ,this.datasetToDomainAxisMap = new ObjectList(0.0f);
patch is same with buggy,,if (yAxis != null) { ,if(yAxis!= null) {
increase failing tests, [FE] NullPointerException,if (yAxis != null) { ,if(yAxis == null) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.size()!= 0) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.isOptionalArg()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.isConstructor()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null ||!yAxis.isOptionalArg()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.isStatic()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null || yAxis.size() == 0) {
compilation error,[CE] cannot find symbol,if (yAxis != null) { ,if(yAxis!= null ||!yAxis.isRequired()) {
patch is same with buggy,,this.datasets = new ObjectList(); ,this.datasets = new ObjectList();
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] XYDataset is abstract; cannot be instantiated,this.datasets = new ObjectList(); ,this.datasets = new XYDataset();
compilation error,[CE] cannot find symbol Token,this.datasets = new ObjectList(); ,this.datasets = new XYDataset(Node.newString(Token.NAME, Node.newNumber(0)));
compilation error,[CE] cannot find symbol Token,this.datasets = new ObjectList(); ,this.datasets = new XYDataset(Node.newString(Token.NAME, Token.NAME));
compilation error,[CE] cannot find symbol Token,this.datasets = new ObjectList(); ,this.datasets = new XYDataset(Node.newString(Token.NAME, Token.FUNCTION));
compilation error,[CE] cannot find symbol Token,this.datasets = new ObjectList(); ,this.datasets = new XYDataset(Node.newString(Token.NAME, Node.newName()));
compilation error,[CE] cannot find symbol Token,this.datasets = new ObjectList(); ,this.datasets = new XYDataset(Node.newString(Token.NAME, Node.newHashCode()));
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.datasets = new ObjectList(); ,this.datasets = new ObjectList(this.datasets);
compilation error,[CE] cannot find symbol domainAxisMap,this.datasets = new ObjectList(); ,this.datasets = new XYDataset(this.domainAxisMap);
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.get(0); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.get(0); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.get(0); this.rangeAxisLocations.set(0, 0);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.get(0); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)domainAxis.clone(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol,,this.domainAxisLocations =(ValueAxis)domainAxis.getLocation(); this.rangeAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)domainAxis.clone(); this.rangeAxisLocations = new ValueAxisLocation(domainAxis);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations =(ValueAxis)domainAxis.getLocation(); this.rangeAxisLocations = new ValueAxisLocation(domainAxis);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations =(ValueAxis)domainAxis.getLocation();
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,this.location.setAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationException(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,this.location.setAxisLocation(null); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationException(this));
compilation error,[CE] illegal start of expression,,if(index < 0) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!hasChanged()) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { int index = marker.indexOf('n'); if(index < 0) { marker.addChangeListener(this); }
compilation error,[CE] incompatible types,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = null;
compilation error,[CE] cannot find symbol real,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = real;
compilation error,[CE] cannot find symbol reality,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = reality;
compilation error,[CE] cannot find symbol truth,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = truth;
compilation error,[CE] cannot find symbol,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = current();
compilation error,[CE] cannot find symbol True,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = True;
compilation error,[CE] cannot find symbol actual,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = actual;
compilation error,[CE] cannot find symbol right,this.drawSharedDomainAxis = false; ,this.drawSharedDomainAxis = right;
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,axisIndexChanged(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapPlotChanged(); datasetChanged(new DatasetChangeEvent(this, getDataset(axisIndex))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapPlotChanged(); datasetChanged(new DatasetChangeEvent(this, getDataset(axisIndex))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapReachable(); datasetChanged(new DatasetChangeEvent(this, getDataset(axisIndex))); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isRange()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.axisIndex = new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol mapDatasetToRangeAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final int index = indexOf(layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocalFileMarker(this, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.SECOND_INT_ARGB, marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this, Layer.SECOND)+ 1;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final int index = indexOf(this.markers);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.setPaint(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.redeclareVarsInsideBranch(marker);
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.redeclareVarsInsideBranch(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol SEPARATOR,,super.addRangeMarker(marker, Layer.SEPARATOR);
compilation error,[CE] cannot find symbol LayerUtil,,if(marker!= null) { LayerUtil.setPaint(marker); } else { LayerUtil.setPaint(marker); marker = new CategoryPlot(); }
compilation error,[CE] cannot find symbol BOTTOM,,LayerUtilities.setPaint(marker, Layer.BOTTOM);
compilation error,[CE] cannot find symbol LayerUtil,,if(marker!= null) { LayerUtil.setPaint(marker); } else { LayerUtil.setPaint(marker); }
compilation error,[CE] cannot find symbol LayerUtil,,if(marker!= null) { LayerUtil.setPaint(marker); } else { LayerUtil.setPaint(marker); marker = new Layer(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new UnsupportedOperationException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new UnsupportedOperationException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { return null; }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { return null; }
compilation error,[CE] cannot find symbol SECOND,,LayerUtilities.removeCategoryRangeMarker(marker, Layer.SECOND);
compilation error,[CE] cannot find symbol,,Layer.removeLast();
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.removeCategoryRangeMarker(marker);
compilation error,[CE] cannot find symbol SECOND,,LayerUtilities.removeCategoryMarker(marker, Layer.SECOND);
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.removeCategoryRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,,super.removeRangeMarker(marker);
compilation error,[CE] cannot find symbol SEPARATOR,,LayerUtilities.removeCategoryRangeMarker(marker, Layer.SEPARATOR);
compilation error,[CE] cannot find symbol SIZE,,LayerUtilities.removeCategoryRangeMarker(marker, Layer.SIZE);
compilation error,[CE] cannot find symbol BOTTOM,,LayerUtilities.removeCategoryRangeMarker(marker, Layer.BOTTOM);
compilation error,[CE] cannot find symbol SIZES,,LayerUtilities.removeCategoryRangeMarker(marker, Layer.SIZES);
patch is same with buggy,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] ';' expected,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0), AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] ';' expected,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT), DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] bad operand types for binary operator '+',this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT + 1);
compilation error,[CE] cannot find symbol BOOLEAN_OR_LEFT,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOOLEAN_OR_LEFT);
increase failing tests, [FE] AssertionFailedError,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(1, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] not a statement,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT)+ 1;
patch is same with buggy,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)XYDataset.getDataset(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.newInstance();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.getDataset(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.itemRenderer.clone();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = new XYDataset(dataset.size());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)ObjectUtilities.getDataset(dataset);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxisIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.categoryPlot.size();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxis();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = CategoryPlot.getAxisIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.categoryPlot.indexOf(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = getAxis().getIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.categoryPlot.getAxis();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = this.categoryPlot.getIndex();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = indexOf(getAxis());
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToDomainAxis(int,int),,int axisIndex = indexInList(this, getAxis());
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, dataset, domainAxis, rangeAxis);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, renderer.getDataset(), dataset, domainAxis, rangeAxis);
compilation error,[CE] call to this must be first statement in constructor,,this(null, dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] call to this must be first statement in constructor,,this(null, new XYDataset(dataset, domainAxis));
compilation error,[CE] call to this must be first statement in constructor,,this(null, dataset, domainAxis, rangeAxis);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, renderer);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null);
compilation error,[CE] call to this must be first statement in constructor,,this(null);
compilation error,[CE] call to this must be first statement in constructor,,this(new XYDataset(dataset, domainAxis));
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxisLocation);
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.BOTTOM_OR_RIGHT);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxis);
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxisLocations);
compilation error,[CE] cannot find symbol DomainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, DomainAxis.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.domainAxis);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, new AxisLocation(domainAxis));
increase failing tests, [FE] ClassCastException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxisLocation(domainAxis); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryDataset)ObjectUtilities.deepClone(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxisLocation(domainAxis); this.rangeAxis = rangeAxis.getRangeAxis();
compilation error,[CE] no suitable method found for getValue(),,Preconditions.checkArgument(!this.datasets.containsKey(dataset.getValue()));
compilation error,[CE] no suitable method found for getValue(),,Preconditions.checkArgument(!this.datasets.containsKey(dataset.getValue())); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxisLocation(domainAxis); this.rangeAxis = rangeAxis.getDestination();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxisLocation(domainAxis); this.axisOffset = new RectangleInsets(0.0, 1.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryDataset)ObjectUtilities.deepClone(this.domainAxis); this.seriesOffset = new ArrayList();
compilation error,[CE] illegal start of expression,,for(int index = 0; index < getLength(); index++) { XYDataset.getDataset(index); if(index == 0) { result = new XYDataset(index, 0); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < getLength(); index++) { XYDataset.getDataset(index); if(index == 0) { result = new XYDatasetImpl(); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < getLength(); index++) { XYDataset.getDataset(index); if(index!= 0) { result = new XYDataset(index, 0); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < getLength(); index++) { XYDataset.getDataset(index); if(index >= 0) { result = new XYDataset(index, 0); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < getLength(); index++) { XYDataset.getDataset(index); if(index == 0) { result = new XYDataset(index, null); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < getLength(); index++) { XYDataset.getDataset(index); if(index == 0) { result = new XYDataset(index, true, false); }
compilation error,[CE] variable result is already defined in method getDataset(int),,XYDataset result =(XYDataset)getDataset(index); result.addChangeListener(this);
compilation error,[CE] illegal start of expression,,for(int index = 0; index < getLength(); index++) { XYDataset.getDataset(index); if(index!= 0) { result = new XYDataset(index, null); }
compilation error,[CE] variable index is already defined in method getDataset(int),,for(int index = 0; index < getLength(); index++) { XYDataset.put(index, new XYDataset(index, false)); }
compilation error,[CE] variable index is already defined in method getDataset(int),,for(int index = 0; index < getLength(); index++) { XYDataset.put(index, new XYDataset(index, true)); }
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(8.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 8.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(4.0, 5.0, 5.0, 5.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 2.0, 4.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(2.0, 4.0, 8.0, 8.0);
increase failing tests, [FE] NullPointerException,this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.axisOffset = new RectangleInsets(7.0, 7.0, 7.0, 8.0);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(this);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addRangeMarker(null);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addChangeListener(new RangeRangeMarker(this, layer));
patch is same with buggy,,marker.addChangeListener(this); ,marker.addChangeListener(this);
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addChangeListener(new RangeRangeMarker(this, layer, false));
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addChangeListener(new RangeRangeMarker(this, layer, null, index));
compilation error,[CE] Marker is abstract; cannot be instantiated,marker.addChangeListener(this); ,marker.addChangeListener(new Marker(this, layer));
compilation error,[CE] cannot find symbol,marker.addChangeListener(this); ,marker.addChangeListener(new RangeRangeMarker(this, layer, null));
compilation error,[CE] method addChangeListener in class Marker cannot be applied to given types;,marker.addChangeListener(this); ,marker.addChangeListener(this, marker);
compilation error,[CE] cannot find symbol FOR_INITIALIZER,marker.addChangeListener(this); ,marker.addChangeListener(new Marker(this, Layer.FOR_INITIALIZER));
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = Color.black;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainCrosshairPaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.baseZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainCrosshairPaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = Color.white;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.baseZeroBaselinePaint = Color.white;
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isUnknownType()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLocals()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isArray()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLocalVisible()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isSupported()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.getLocals()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLocalPart()!= null) {
increase failing tests, [FE] NullPointerException,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getPlot()!= null) {
compilation error,[CE] cannot find symbol,,e.setChangeEvent(this);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(CategoryPlot e : this.categoryPlots.keySet()) { if(!ChartChangeEvent.isLive()) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(CategoryPlot e : this.categoryPlots.keySet()) { if(!ChartChangeEvent.isLive()) { notifyListeners(e); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(CategoryPlot e : this.categoryPlots.keySet()) { if(!ChartChangeEvent.isUpdated()) { notifyListeners(e); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(CategoryPlot e : this.categoryPlots.keySet()) { if(!ChartChangeEvent.isUpdated()) { notifyListeners(e); }
compilation error,[CE] variable e is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot e =(CategoryPlot)getPlot();
compilation error,[CE] variable e is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot e =(CategoryPlot)getPlot(); event.setChangeEventType(ChartChangeEventType.END_UPDATED);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(CategoryPlot e : this.categoryPlots.keySet()) { if(!ChartChangeEvent.isUpdated()) { e.setActionCommand("DatasetChanged", e); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(CategoryPlot e : this.categoryPlots.keySet()) { if(!ChartChangeEvent.isUpdated()) { e.setActionCommand("DatasetChange event"); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(CategoryPlot e : this.categoryPlots.keySet()) { if(!ChartChangeEvent.isUpdated()) { e.setCurrentName(ChartChangeEvent.KEY_DELETE); }
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= null) { throw new IllegalStateException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,if(e.getCurrentToken()!= null) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable e is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot e =(CategoryPlot)getPlot(); if(e!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable e is already defined in method datasetChanged(DatasetChangeEvent),,CategoryPlot e =(CategoryPlot)getPlot(); if(e!= null) { e.addChangeListener(e); }
increase failing tests, [FE] NullPointerException,,if(e.getPlot()!= null) { throw new NullPointerException(""); }
increase failing tests, [FE] NullPointerException,,if(e.getClass()!= null) { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,,if(e.getCurrentToken()!= null) { throw new IllegalStateException(""); }
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), marker);
patch is same with buggy,,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.size());
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.values());
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), markers);
compilation error,[CE] cannot find symbol,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), java.util.ArrayList());
compilation error,[CE] bad operand types for binary operator '+',markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index)+ 1);
compilation error,[CE] cannot find symbol edge,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.edge);
compilation error,[CE] cannot find symbol markers,markers = (Collection) this.backgroundRangeMarkers.get(  new Integer(index)); ,markers =(Collection)this.backgroundRangeMarkers.get(new Integer(index), this.markers.size());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = Color.white;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new DatasetTipGenerator();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); setBaseToolTipGenerator(new BasicTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,setBaseToolTipGenerator(new XYBaseToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] cannot find symbol,,setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainZeroBaselinePaint = Color.white;
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isRange()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isLenient()) {
compilation error,[CE] cannot find symbol axis,if (axis != null) { ,if(this.axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.hasOptionalArg()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isStatic()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isArray()) {
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(0, this);
compilation error,[CE] cannot find symbol rangeAxis,this.renderers.set(0, renderer); ,this.renderers.set(0, this.rangeAxis);
increase failing tests, [FE] NullPointerException,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderers);
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer(this));
compilation error,[CE] CategoryItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new CategoryItemRenderer());
compilation error,[CE] no suitable method found for set(int,int),this.renderers.set(0, renderer); ,this.renderers.set(0, 0);
compilation error,[CE] cannot find symbol instance,this.renderers.set(0, renderer); ,this.renderers.set(0, this.instance);
patch is same with buggy,,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_LOAD_FACTOR;
compilation error,[CE] cannot find symbol DEFAULT_EMPTY,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_EMPTY;
compilation error,[CE] cannot find symbol DEFAULT_FIELD_NAME,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_FIELD_NAME;
compilation error,[CE] cannot find symbol DEFAULT_FIELD_NAMES,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_FIELD_NAMES;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_USE_DEFAULT_CROSSHAIR_FIELD,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_USE_DEFAULT_CROSSHAIR_FIELD;
compilation error,[CE] incompatible types,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = 0;
compilation error,[CE] cannot find symbol DEFAULT_MASK,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_MASK;
compilation error,[CE] cannot find symbol DEFAULT_GLOBAL,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE; ,this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE? DEFAULT_CROSSHAIR_VISIBLE : DEFAULT_GLOBAL;
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new HashMap();
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisNames);
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new IllegalArgumentException("");
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.rangeAxisLocations);
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ArrayList();
compilation error,[CE] cannot find symbol,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new hashMap();
compilation error,[CE] incompatible types,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new IllegalArgumentException();
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
patch is same with buggy,,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex));
increase failing tests, [FE] AssertionFailedError,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex - 1));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(this.axisIndex), new Integer(index));
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex + 2));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(seriesIndex), new Integer(index));
compilation error,[CE] cannot find symbol axisCount,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex * axisCount));
increase failing tests, [FE] NullPointerException,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToDomainAxisMap.put(new Integer(index), new Integer(axisIndex - 1));
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
increase failing tests, [FE] NullPointerException,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(this.backgroundRangeMarkers);
compilation error,[CE] cannot find symbol domainAxis,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(this.domainAxis);
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMapWithExpectedValues();
compilation error,[CE] cannot find symbol plot,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(this.plot);
compilation error,[CE] bad operand types for binary operator '+',this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap() + 1;
compilation error,[CE] cannot find symbol BackgroundRangeMarkers,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(this.BackgroundRangeMarkers);
compilation error,[CE] illegal start of expression,,if(index < 0) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(marker == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index == 0) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index < 0 && marker.isLabelVisible()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!hasChanged()) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index), this.backgroundDomainMarkers.size());
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList(this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index)); marker
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,this.rangeGridlinesVisible = false;
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible!= false) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; }
compilation error,[CE] cannot find symbol Preconditions,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { Preconditions.checkNotNull(this.rangeGridlinesVisible); }
compilation error,[CE] cannot find symbol Preconditions,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == false) { this.rangeGridlinesVisible = true; } else { Preconditions.checkState(this.rangeGridlinesVisible); }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible == true) { this.rangeGridlinesVisible = false; } else { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.rangeGridlinesVisible = true; ,if(this.rangeGridlinesVisible) { this.rangeGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = true;
compilation error,[CE] incompatible types,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = null;
compilation error,[CE] cannot find symbol real,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = real;
increase failing tests, [FE] AssertionFailedError,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible =true;
compilation error,[CE] cannot find symbol True,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = True;
compilation error,[CE] cannot find symbol reality,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = reality;
compilation error,[CE] cannot find symbol True,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible =True;
compilation error,[CE] cannot find symbol TRUE,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = TRUE;
compilation error,[CE] cannot find symbol truth,this.rangeCrosshairVisible = false; ,this.rangeCrosshairVisible = truth;
compilation error,[CE] cannot find symbol setRangeCrosshairVisible,this.rangeCrosshairVisible = false; ,setRangeCrosshairVisible = true;
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis = (ValueAxis)this.domainAxes.get(i);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.contains(i);
compilation error,[CE] cannot find symbol ptr,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(ptr);
compilation error,[CE] no suitable method found for get(int,int),ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.get(0, 1);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.domainAxes.get(i); ,ValueAxis axis =(ValueAxis)this.domainAxes.getAll();
patch is same with buggy,,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(axisIndex);
compilation error,[CE] incompatible types,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getDomainAxis(axisIndex);
compilation error,[CE] cannot find symbol axisIndex,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(this.axisIndex);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(getChildCount());
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(getScope());
compilation error,[CE] cannot find symbol locale,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(locale);
compilation error,[CE] cannot find symbol,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getBaseValueAxis(axisIndex);
compilation error,[CE] cannot find symbol axisType,ValueAxis yAxis = getRangeAxis(axisIndex); ,ValueAxis yAxis = getRangeAxis(axisIndex, axisType);
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= this.rangeAxisLocations.size()) {
compilation error,[CE] bad operand types for binary operator '==',if (index == 0 && location == null) { ,if(!(index < 0 && location == this.rangeAxisLocations.size() > 0)) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(!(index < 0 && location == null)) {
compilation error,[CE] cannot find symbol rangeAxisLocation,if (index == 0 && location == null) { ,if(location == null && index < this.rangeAxisLocation.getLength()) {
compilation error,[CE] illegal start of expression,} ,if(marker == null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,if(marker == null) { LayerUtil.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,if(this.marker!= null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,if(marker!= null) { LayerUtil.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(marker);
compilation error,[CE] not a statement,} ,if(marker == null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); } else { LayerUtils.redetectBounds(marker, Layer.FOREGROUND); marker
compilation error,[CE] illegal start of expression,} ,if(this.marker!= null) { LayerUtilities.setPaint(this.marker); marker.addChangeListener(this); } else { addRangeMarker(this, marker); }
compilation error,[CE] not a statement,} ,if(marker == null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); } else { LayerUtilities.redeclare(this.marker, Layer.FOREGROUND); marker
compilation error,[CE] illegal start of expression,} ,if(marker == null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); } else { LayerUtils.redetectBounds(marker, Layer.FOREGROUND);
compilation error,[CE] not a statement,} ,if(marker == null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); } else { LayerUtils.redeclareVars(marker, Layer.FOREGROUND); marker
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getScope());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxis);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromValue(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, index + 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = this.rangeAxes.indexOf(',');
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getDataset()!= null) { notifyListeners(e); } else { fireDatasetChanged(); }
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getDataset()!= null) { notifyListeners(e); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getDataset()!= null) { notifyListeners(e); } else { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getDataset()!= null) { notifyListeners(e); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getList()!= null) { notifyListeners(e); } else { fireDatasetChanged(); }
compilation error,[CE] cannot find symbol datasetChangeEvent,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(datasetChangeEvent, event));
compilation error,[CE] cannot find symbol datasetChangeEvent,notifyListeners(e); ,notifyListeners(e, new DatasetChangeEvent(datasetChangeEvent));
compilation error,[CE] cannot find symbol,notifyListeners(e); ,if(e.getDataset()!= null) { notifyListeners(e); } else { EventBounds.redeclare(e.getDataset(), event); }
compilation error,[CE] cannot find symbol,notifyListeners(e); ,updateListeners(e);
patch is same with buggy,,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < count; axisIndex++) {
compilation error,[CE] cannot find symbol count,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.count; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < size; axisIndex++) {
compilation error,[CE] cannot find symbol size,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < this.size; axisIndex++) {
compilation error,[CE] cannot find symbol categoryCount,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < categoryCount; axisIndex++) {
compilation error,[CE] cannot find symbol indent,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < indent; axisIndex++) {
compilation error,[CE] cannot find symbol count,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < super.count; axisIndex++) {
compilation error,[CE] cannot find symbol number,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < number; axisIndex++) {
compilation error,[CE] cannot find symbol period,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < period; axisIndex++) {
compilation error,[CE] cannot find symbol area,for (int axisIndex = 0; axisIndex < count; axisIndex++) { ,for(int axisIndex = 0; axisIndex < area; axisIndex++) {
compilation error,[CE] cannot find symbol marker,,if(marker == null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol marker,,if(marker == null) { LayerUtil.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol marker,,if(this.marker!= null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol marker,,if(marker == null) { LayerUtilities.setPaint(this.marker); marker.addChangeListener(this); } else { addRangeMarker(this, marker); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(marker);
compilation error,[CE] not a statement,,if(marker == null) { LayerUtilities.setPaint(this.marker); marker = new Layer(); marker.addChangeListener(this); } else { LayerUtilities.redeclare(this.marker, Layer.FOREGROUND); marker
compilation error,[CE] not a statement,,if(marker == null) { LayerUtilities.setPaint(this.marker); marker.addChangeListener(this); } else { LayerUtils.redetectBounds(marker, Layer.SRC_OVER, marker); marker.addRange
compilation error,[CE] not a statement,,if(marker == null) { LayerUtilities.setPaint(this.marker); marker.addChangeListener(this); } else { LayerUtils.redetectBounds(marker, Layer.FOREGROUND); marker.addA
compilation error,[CE] not a statement,,if(marker == null) { LayerUtilities.setPaint(this.marker); marker.addChangeListener(this); } else { LayerUtils.redetectBounds(marker, Layer.FOREGROUND); marker.addRange
compilation error,[CE] cannot find symbol marker,,if(marker == null) { LayerUtilities.setPaint(this.marker); marker.addChangeListener(this); } else { LayerUtils.redetectBounds(marker, Layer.FOREGROUND); marker.addAll(layer); }
patch is same with buggy,,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE);
compilation error,[CE] cannot find symbol GRIDLINE,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.GRIDLINE;
compilation error,[CE] no suitable constructor found for Color(Color,Color),public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.BLACK);
compilation error,[CE] no suitable constructor found for Color(Color,Color),public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Color.RED);
compilation error,[CE] cannot find symbol Gray,public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE; ,public static final Paint DEFAULT_GRIDLINE_PAINT = new Color(Color.WHITE, Gray.blue);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_GRIDLINE_PAINT, Color.BLACK);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.RED);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_GRIDLINE_PAINT, Color.BLACK);
compilation error,[CE] illegal start of type,,return Collections.emptySet();
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_GRIDLINE_PAINT, Color.OFFSET);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_GRIDLINE_PAINT, Color.black);
compilation error,[CE] illegal start of type,,return new CategoryPlot(Color.green);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PADDING); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_ASSIGN); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_VALUE); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.indexOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.markers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.indexOf(markers, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.layer.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(notify) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index < 0) { fireChangeEvent(); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,,super.removeDomainMarker(marker);
compilation error,[CE] cannot find symbol LayerUtil,,if(marker == null) { LayerUtil.removeDomainMarker(marker, layer); } else { LayerUtilities.removeCategory(marker, Layer.SECOND); marker = null; }
compilation error,[CE] cannot find symbol SECOND,,LayerUtilities.removeCategoryMarker(marker, Layer.SECOND);
compilation error,[CE] cannot find symbol,,Layer.removeLast();
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.removeCategoryMarker(marker);
compilation error,[CE] cannot find symbol LayerUtil,,if(marker == null) { LayerUtil.removeDomainMarker(marker, layer); } else { LayerUtilities.removeCategory(marker, Layer.BOTTOM); marker = null; }
compilation error,[CE] cannot find symbol SEPARATOR,,if(marker == null) { LayerUtil.removeDomainMarker(marker, Layer.SEPARATOR); } else { LayerUtilities.removeCategory(marker, layer); marker = null; }
compilation error,[CE] cannot find symbol SECOND,,if(marker == null) { LayerUtil.removeDomainMarker(marker, Layer.SECOND); } else { LayerUtilities.removeCategory(marker, Layer.SECOND); marker = null; }
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.removeCategoryMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.removeLastAnnotation(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this.axisIndex, new Integer(index));
compilation error,[CE] no suitable method found for set(CategoryPlot,Integer),this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(this, new Integer(axisIndex));
patch is same with buggy,,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(axisIndex, new Integer(index));
compilation error,[CE] cannot find symbol i,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(i, new Integer(axisIndex));
compilation error,[CE] cannot find symbol locale,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(locale, new Integer(axisIndex));
compilation error,[CE] cannot find symbol key,this.datasetToRangeAxisMap.set(index, new Integer(axisIndex)); ,this.datasetToRangeAxisMap.set(key, new Integer(axisIndex));
patch is same with buggy,,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot) {
compilation error,[CE] cannot find symbol Feature,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && isEnabled(Feature.QUOTE_FIELD_NAMES)) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && super.getRangeAxis(index) == ValueAxis.Equals(( CategoryPlot)parent).getRangeAxis()) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && super.getRangeAxis(index)!= ValueAxis.Equals(( CategoryPlot)parent).getRangeAxis()) {
compilation error,[CE] cannot find symbol Feature,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && parent.getRangeAxis() instanceof CategoryPlot) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && super.getRangeAxis(index) == ValueAxis.EXPR_RESULT) {
compilation error,[CE] cannot find symbol Feature,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot && isEnabled(Feature.AUTO_CLOSE_TARGET)) {
compilation error,[CE] cannot find symbol,if (parent instanceof CategoryPlot) { ,if(parent instanceof CategoryPlot || parent.getRangeAxis() instanceof CategoryPlot) {
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE] NullPointerException,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(".org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourcesBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol ResourcesBundle,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourcesBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] incompatible types,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ArrayList localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] non-static method getString(String) cannot be referenced from a static context,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(  "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getString("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = Integer.valueOf(marker.getLowerBound());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', index + 1);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = Integer.valueOf(marker.getLowerBound()); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = Integer.valueOf(marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = Integer.valueOf(marker.getLowerBound()); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.lastIndexOf('n', index + 1); if(index!= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = marker.getLength();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer),,int index = Integer.valueOf(marker.getLowerBound(), Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_ERROR, DEFAULT_CROSSHAIR_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_ERROR, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_ERROR, DEFAULT_LOAD_FACTOR); this.domainAxis = domainAxis;
compilation error,[CE] '(' or '[' expected,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = new domainAxis;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYObjectRenderer.newInstance();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CROSSHAIR_ERROR, DEFAULT_LOAD_FACTOR);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.domainAxisLocation);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.domainAxisLocation, this.domainAxisLocation);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocations.size();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.size();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.getLength();
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.domainAxisLocation, this.axisLocation);
compilation error,[CE] variable location is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,AxisLocation location = this.domainAxisLocations.get(index);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.domainAxisLocation, this.location);
compilation error,[CE] variable index is already defined in method setDomainAxisLocation(int,AxisLocation,boolean),,int index = this.domainAxisLocation.indexOf(',');
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, 0);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, this.rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxises.set(0, this.rangeAxis);
increase failing tests, [FE] NullPointerException,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, domainAxis);
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxises.set(0, 0);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxises.set(0, this.domainAxis);
patch is same with buggy,,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.clear(0, rangeAxis);
compilation error,[CE] cannot find symbol,this.rangeAxes.set(0, rangeAxis); ,this.rangeAxes.add(0, rangeAxis);
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol Locale,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(Locale.FOREGROUND);
compilation error,[CE] cannot find symbol layer,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(layer, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerId(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol marker,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(this.marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerIfNull(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol Label,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(Label.FOREGROUND);
compilation error,[CE] cannot find symbol registry,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(registry, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol zone,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(zone, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol label,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(label, Layer.FOREGROUND);
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isEmpty()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isDefine()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isContainer()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isLenient()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.hasOptionalArg()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isStatic()) {
compilation error,[CE] cannot find symbol map,,map =(Map)getDataset(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] 'else' without 'if',,for(int i = axisIndex; i < axisCount; i++) { map.put(i, new Integer(axisIndex)); } else { map.put(i, new Integer(axisIndex)); }
compilation error,[CE] 'else' without 'if',,for(int i = axisIndex; i < 0; i++) { map.put(i, new Integer(i)); } else { map.put(i, new Integer(i)); }
compilation error,[CE] illegal start of expression,,for(int i = axisIndex; i < axisCount; i++) { if(isRange()) { mapDataset(i); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index < 0) { mapDataset(axisIndex); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index >= 0) { mapDataset(axisIndex); }
compilation error,[CE] illegal start of expression,,for(int i = axisIndex; i < axisCount; i++) { if(isRange()) { mapDataset(i, axisIndex); }
compilation error,[CE] cannot find symbol map,,map =(Map)getDataset(axisIndex);
compilation error,[CE] ';' expected,,if(axisIndex < 0) { mapDatasetToRangeAxis = new Integer(axisIndex); for(int index = axisIndex; index++) { mapDatasetEntry(index, data.size(), axisIndex); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index < 0) { mapDatasetToRangeAxis = new XYPlot(index, axisIndex + 1); }
compilation error,[CE] cannot find symbol map,,map =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of expression,,for(int axisIndex = 0; axisIndex < map.getAxis(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int axisIndex = 0; axisIndex < map.size(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,for(int axisIndex = 0; axisIndex < mapDatasetUtilities.size(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol map,,map =(Map)this.data.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] ';' expected,,if(axisIndex < 0) { for(int index = axisIndex; index < -1) { mapDatasetToDomainAxis =(CategoryPlot)this.axisIndex.get(index); }
compilation error,[CE] illegal start of expression,,for(int axisIndex = 0; axisIndex < map.getAxis(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,for(int axisIndex = 0; axisIndex < mapDatasetUtilities.size(); axisIndex++) { if(axisIndex == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] ';' expected,,if(axisIndex < 0) { for(int index = axisIndex; index < -1) { mapDatasetToDomainAxis =(CategoryPlot)this.axisIndex.get(index); } else { mapDatasetUtilities.set(index, new CategoryPlot
compilation error,[CE] ';' expected,,if(axisIndex < 0) { for(int index = axisIndex; index < -1) { mapDatasetToDomainAxis =(CategoryPlot)this.axisIndex.get(index); } else { mapDatasetUtilities.putAll(this); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainAxisLocations = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty());
compilation error,[CE] cannot find symbol data,,Preconditions.checkNotNull(this.data); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index = axisIndex + 1; }
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index = axisIndex++; }
compilation error,[CE] cannot find symbol Maps,,this.drawSharedDomainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol rangeAxis,,this.rangeAxises.set(0, this.rangeAxis);
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)this.dataset.get(0); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,,this.rangeAxises.set(0, this.rangeAxis); this.mapDatasetToRangeAxis = new CategoryDataset(this);
compilation error,[CE] cannot find symbol rangeAxis,,this.rangeAxes.set(0, this.rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,,this.rangeAxises.set(0, this.rangeAxis); this.mapDatasetToRangeAxis = new CategoryDatasetItemRenderer(this);
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)this.dataset.get(0); this.rangeAxes.set(0, this);
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)this.domainAxises.get(0); this.rangeAxises.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxis,,this.rangeAxises.set(0, this.rangeAxis); this.mapDatasetToRangeAxis = new CategoryDatasetItemRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxes.set(0, rangeAxis);
compilation error,[CE] cannot find symbol rangeAxisLocation,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.rangeAxisLocation.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol rangeAxislocations,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.rangeAxislocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol BOTTOM_OR_FLOAT,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_FLOAT);
compilation error,[CE] cannot find symbol rangeAxisLocation,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.rangeAxisLocation.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol BOTTOM_OR_FLOAT,,this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_FLOAT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeAxisLocations = new ObjectList();
increase failing tests, [FE] NullPointerException,,this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations.set(0, dataset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)ObjectList.newInstance(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
increase failing tests, [FE] NullPointerException,,this.domainAxisLocations = new ObjectList(); this.rangeAxisLocations.set(0, domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)ObjectList.newInstance();
compilation error,[CE] cannot assign a value to final variable domainCrosshairLockedOnData,private boolean domainCrosshairLockedOnData = true; ,private final boolean domainCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private boolean domainCrosshairLockedOnData = null;
compilation error,[CE] illegal start of type,private boolean domainCrosshairLockedOnData = true; ,private, boolean domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean domainCrosshairLockedOnData = true; ,private null domainCrosshairLockedOnData = true;
compilation error,[CE] incompatible types,private boolean domainCrosshairLockedOnData = true; ,private double domainCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,private boolean domainCrosshairLockedOnData = true; ,private static domainCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,,return new Stroke("");
compilation error,[CE] illegal start of type,,return Stroke.newStroke("NO_CROSSHAIR_STROKE");
compilation error,[CE] illegal start of type,,return Plot.newStroke("NO_CROSSHAIR_STROKE");
compilation error,[CE] illegal start of type,,return Stroke.null;
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.NO_OBJECT_TYPE);
compilation error,[CE] illegal start of type,,return Sets.newHashSet();
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.NO_OBJECT_ERROR);
compilation error,[CE] illegal start of type,,return Stroke.null();
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.NONEMPTY_OBJECT_ERROR);
compilation error,[CE] illegal start of type,,return new Stroke(Stroke.NO_OBJECT_ERROR, Color.black);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeNullMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeTopMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeOmainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeOverrideMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeImplicitReturnMarker(marker, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers.size() - 1);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = this.indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundRangeMarkers, this.backgroundRangeMarkers); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.layer.keySet(), this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers.size()); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundRangeMarkers, this.backgroundRangeMarkers); if(index >= 0) { removeRangeMarker(marker); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers.size()); if(index < 0) { removeRangeMarker(marker); }
compilation error,[CE] variable result is already defined in method getDataset(int),,CategoryDataset result =(CategoryDataset)getDataset(index); result.addChangeListener(this);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getCategory().getIndex(); if(index >= 0) { result = new CategoryDataset(index); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = getCategory().getIndex(); if(index < 0) { result = new CategoryDataset(index); }
compilation error,[CE] not a statement,,for(int index = 0; index < this.dataset.size(); i++) { CategoryDataset int index = getCategoryDataset(index); if(index >= 0) { result = new CategoryDataset(index); }
compilation error,[CE] not a statement,,for(int index = 0; index < this.dataset.size(); i++) { CategoryDataset int index = getCategoryDataset(index); if(index >= 0) { result = new CategoryDataset(index, dataset.size()); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.dataset.size(); i++) { CategoryDataset dataset =(CategoryDataset)getDataset(index); if(dataset!= null) { result = new CategoryDataset(index, dataset.size()); }
compilation error,[CE] not a statement,,for(int index = 0; index < this.dataset.size(); i++) { CategoryDataset int index = getCategoryDataset(index); if(index >= 0) { result = new CategoryDataset(index, null); }
compilation error,[CE] not a statement,,for(int index = 0; index < this.dataset.size(); i++) { CategoryDataset int index = getDataset(index); if(index >= 0) { result = new CategoryDataset(index); }
compilation error,[CE] not a statement,,for(int index = 0; index < this.dataset.size(); i++) { CategoryDataset int index = getDatasetIndex(index); if(index >= 0) { result = new CategoryDataset(index); }
compilation error,[CE] illegal start of expression,,for(int index = 0; index < this.dataset.size(); i++) { CategoryDataset dataset =(CategoryDataset)getDataset(index); if(dataset!= null) { result = new Dataset(index); }
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new XYDomainAxisLocations(); this.rangeAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new HashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations = new HashMap(); this.rangeAxisLocations = new ObjectList();
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] no suitable constructor found for HashMap(double),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(0.0);
compilation error,[CE] cannot find symbol domainAxis,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxis);
increase failing tests, [FE] NullPointerException,this.backgroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] no suitable constructor found for HashMap(String),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap("Background_markers");
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(Node.class);
compilation error,[CE] cannot find symbol BackgroundPosition,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.BackgroundPosition);
compilation error,[CE] cannot find symbol,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMapWithExpectedSize(0.0, 1.0);
compilation error,[CE] no suitable constructor found for HashMap(String),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap("BackgroundDomain");
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.size(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.getAxis(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.size(); axisIndex++) { if(isInverted()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.size(); axisIndex++) { if(isRange()) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.getAxis(); axisIndex++) { if(this.axisIndex == axisIndex) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.getAxis(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.size(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.getAxis(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(ValueAxis)getDomainAxis(); this.rangeAxis =(ValueAxis)getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = RangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = ValueAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = ValueAxis.getDomainAxis(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(ValueAxis)DomainAxis.getRootAxis(); this.rangeAxis =(ValueAxis)RangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = ValueAxis.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(ValueAxis)DomainAxis.getRootAxis(); this.rangeAxis =(ValueAxis)domainAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(ValueAxis)getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(ValueAxis)getDomainAxis(); this.rangeAxis =(ValueAxis)getRootAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryAxis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryAxis axis = getDomainAxes(getPlotType());
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = this.getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = getDomainAxes(getPlotType());
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryAxis axis = getDomainAxes(category);
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryPlot axis = super.getDomainAxes();
compilation error,[CE] cannot find symbol,,CategoryPlotaxes axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,CategoryPlotAxis axis = getDomainAxes();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,CategoryAxis axis = getDomainAxes(categoryPlot);
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis =(DefaultDomainAxis)this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis = new HashMap();
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis =(DefaultDomainAxis)this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis =(DefaultDomainAxis)this.datasetToDomainAxis(0, 0);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis =(DefaultDomainAxis)this.mapDatasetToDomainAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis = 0;
compilation error,[CE] illegal start of expression,} ,fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.addChangeListener(new DatasetChangeEvent(this)); }
compilation error,[CE] ,} ,if(event!= null) { throw new IllegalStateException(""); } else { EventUtilities.redeclareVarsInsideEvent(event, false)); }
compilation error,[CE] illegal start of expression,} ,throw new IllegalStateException("");
compilation error,[CE] illegal start of expression,} ,this.event.setChangeEvent(getDataset()); fireDatasetChanged();
compilation error,[CE] ,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { EventUtilities.redeclareVarsInsideEvent(event, false)); }
compilation error,[CE] illegal start of expression,} ,super.setChangeEvent(event); fireDatasetChanged();
compilation error,[CE] illegal start of expression,} ,if(this.event!= null) { throw new IllegalStateException(""); } else { this.event.addChangeListener(new DatasetChangeEvent(this, this)); }
compilation error,[CE] ,} ,if(event!= null) { throw new IllegalStateException(""); } else { EventUtilities.redeclareVarsInsideBranch(event, false)); }
compilation error,[CE] ,} ,if(event!= null) { throw new IllegalStateException(""); } else { EventUtilities.redeclareVarsInsideExpression(event, false)); }
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)ObjectUtilities.unwrapAndThrowAsItemRenderer(this);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(renderer); this.dataset = new XYDataset();
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer =(XYItemRenderer)XYDataset.getDataset(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.getDataset(dataset);
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer =(XYItemRenderer)XYDataset.newInstance();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(renderer); this.dataset = new XYDataset(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(renderer);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.getDataset(renderer);
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i= 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] ';' expected,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < the this.domainAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.length(); i++) {
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) }
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++)!=
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationException(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,this.location.setAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationEvent(this));
compilation error,[CE] illegal start of expression,} ,this.location.setAxisLocation(null); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationError(getMissingName(), location));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationError(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location);
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationError(getPlotInfo(), location));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetItemRenderer(this);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); setBaseToolTipGenerator(new XYItemTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetEntry(this, null);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = new XYItemRenderer(this);
compilation error,[CE] generics are not supported in -source 1.4,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetEntry < K, V>();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinesVisible = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)this.domainAxis.clone(); this.rangeGridlinesVisible = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinePaint = DEFAULT_RANGE_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINESVISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = createDomainAxis(domainAxis); this.rangeGridlinePaint = new HashMap();
patch is same with buggy,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] no suitable constructor found for Double(double,double,double),private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0, 0.0);
compilation error,[CE] cannot assign a value to final variable quadrantOrigin,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0); ,private final transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.itemRenderer = new CategoryItemRenderer();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty());
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.itemRenderer = new ItemRenderer();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.itemRenderer = new ObjectList();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.itemRenderer = new CategoryItemRenderer();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.itemRenderer = new CategoryPlotItemRenderer();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.itemPlot = new CategoryPlot();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(this.itemRenderer!= null); this.itemPlot = new ObjectList();
patch is same with buggy,,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(0.5f);
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineStroke = new BasicStroke(0.5f); ,this.rangeZeroBaselineStroke = new BasicStroke(2.0f);
patch is same with buggy,,if (domainAxis != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLength() > 0) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLocation()!= null) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.getLocation() == null) {
compilation error,[CE] ')' expected,if (domainAxis != null) { ,if(domainAxis!= null, this.domainAxisLocation) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.size() > 0) {
compilation error,[CE] cannot find symbol,if (domainAxis != null) { ,if(domainAxis!= null || domainAxis.isArray()) {
increase failing tests, [FE] AssertionFailedError,if (domainAxis != null) { ,if(domainAxis!= null && domainAxis.equals("")) {
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getDataset(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getOwner();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getVariables();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.dataset.getVariablePointer();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.parseInt(index, marker); if(index == 0 && marker.isEmpty()) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = getIndex(index); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1); if(index == 0 && marker.isEmpty()) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = 0; if(index == Layer.BOTTOM) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = 0; if(index == Layer.WARNING) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.parseInt(index, marker); if(index == 0 && marker.getLength() > 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.getLength(); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('.');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(parent);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromValue(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromValue(getPlotIndex(), getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(' ');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getComparable());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(getIndex(), getChronology());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getScope());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromValue(getPlotIndex(), getColumnIndex());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetItemRenderer(this);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBase64Variants(true); this.dataset = new XYDatasetItemRenderer(new XYDatasetItemRenderer());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYItemTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYItemTipGenerator()); this.dataset = new XYDataset(this, null);
compilation error,[CE] generics are not supported in -source 1.4,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator()); this.dataset = new XYDatasetEntry < K, V>();
increase failing tests, [FE] NullPointerException,,if(notify) { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,,if(notify) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol Notify,,if(Notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol location,,if(this.location!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location);
compilation error,[CE] cannot find symbol annotation,,if(this.annotation!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol range,,if(this.range!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol Notify,,if(Notify) { throw new IllegalStateException(""); }
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(AxisLocation,boolean),,AxisLocation location = super.setAxisLocation(location); notify = null;
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notify = null;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new DatasetTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); setBaseToolTipGenerator(new BasicTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = new BasicStroke(1.0f);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainZeroBaselinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainZeroBaselinePaint = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol DEFAULT_BLKSIZE,,renderer.setBaseToolTipGenerator(DEFAULT_BLKSIZE); this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
patch is same with buggy,,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10); ,public static final Font DEFAULT_VALUE_LABEL_FONT = new Font("SansSerif", Font.PLAIN, 10);
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new ArrayList();
compilation error,[CE] incompatible types,this.renderers = new ObjectList(); ,this.renderers = new TreeMap();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRendererList();
patch is same with buggy,,this.renderers = new ObjectList(); ,this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRenderingsList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRenderer();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRenderers();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new LinkedList();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRendererItemRenderer();
compilation error,[CE] cannot find symbol,this.renderers = new ObjectList(); ,this.renderers = new XYRenderingList();
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_THRESHOLD);
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_LOAD_FACTOR, DEFAULT_THRESHOLD);
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_ERROR);
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_NAME);
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_LOAD_FACTOR, DEFAULT_NAME);
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_EXTERN_THRESHOLD);
compilation error,[CE] ';' expected,} ,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_THRESHOLD));
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_LOAD_FACTOR, DEFAULT_CAPACITY);
compilation error,[CE] illegal start of expression,} ,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_ENUM);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); setBaseToolTipGenerator(new BasicTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = new BasicPaint(0.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.rangeZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new DatasetTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxisPaint = new BasicPaint(0.5f);
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis);
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes = new ObjectList(); ,this.rangeAxises = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.rangeAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis, this.rangeAxisLocations);
increase failing tests, [FE] NullPointerException,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis, this.rangeAxis);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] generics are not supported in -source 1.4,return result; ,return result == null? Collections. < Category>result : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result!= null? 0 : result;
compilation error,[CE] cannot find symbol dataset,return result; ,return this.dataset;
increase failing tests, [FE] NullPointerException,return result; ,return result == null? getDataset() : result;
compilation error,[CE] generics are not supported in -source 1.4,return result; ,return result == null? Collections. < Category>emptyList() : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? index : Collections.emptySet();
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_SOURCE));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_JSON_OBJECT_TYPE));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_JSON_OBJECT));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_JSON_AS_NULL_OBJECT));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_JSON_ARRAY));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_JSON_CONTENT));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_JSON_OBJECT_ARRAY));
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]) { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,  new float[] {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() == 4) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() == 3) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount()!= 4) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount()!= 3) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getChildCount()!= 3) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getParent()!= null || getChildCount() == 2) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getValue()!= null) {
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol RangeAxisLocation,,this.location.setAxisLocation(RangeAxisLocation.CENTER); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,this.location.setAxisLocation(getAxis(), getRangeLocation());
compilation error,[CE] cannot find symbol RangeAxisLocation,,this.location.setAxisLocation(RangeAxisLocation.CENTER);
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocation(getPlotInfo(), location));
compilation error,[CE] cannot find symbol,,this.location.setAxisLocation(getAxis());
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(getAxis());
compilation error,[CE] cannot find symbol RangeAxisLocation,,this.location.setAxisLocation(RangeAxisLocation.CENTER); notifyListeners(new AxisLocation(this, location));
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.ENTRY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getItemCount());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.NAME_VALUE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SIZE);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getScope());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(getIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getScope(), getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = Collections.binarySearch(this.rangeAxes, getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(getIndex(), getChronology());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromCategory(getPlotIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromCategory(getPlotIndex(), getPlotIndex());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getSuperclass();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = new ValueMarker(0.0, 0.0, 0.0, 0.0);
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.axisIndex = new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,axisIndexChanged(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] cannot find symbol plot,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { plot.addChangeAxis(axisIndex, new DatasetChangeEvent(this, getDataset(index))); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isSeriesVisible()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(index)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isSeriesVisible()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToRangeAxis = new DatasetChangeEvent(this, getDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isSeriesVisible()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); setBaseToolTipGenerator(DEFAULT_GRIDLINE_GENERATOR);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); setBaseToolTipGenerator(DEFAULT_GRIDLINE_STANDARD);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxis = domainAxis;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainAxis = RangeAxis.getLowerBound();
increase failing tests, [FE] AssertionFailedError,,this.rangeAxes.clear();
compilation error,[CE] incompatible types,,this.rangeAxes =(XYPlot)this.rangeAxes.get(0);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.rangeAxes!= null);
compilation error,[CE] cannot find symbol i,,this.rangeAxes =(XYPlot)this.rangeAxes.get(i);
compilation error,[CE] no suitable method found for get(),,this.rangeAxes =(XYPlot)this.rangeAxes.get();
compilation error,[CE] cannot find symbol,,super.configureRangeAxes();
compilation error,[CE] cannot find symbol,,super.setRangeAxes(new XYPlotItem(this.rangeAxes.size(), this.rangeAxes.size()));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this.rangeAxes);
compilation error,[CE] incompatible types,,this.rangeAxes =(XYPlot)this.rangeAxes.clone();
compilation error,[CE] cannot find symbol SECOND_ARRAY,,this.rangeAxes = getRangeAxes(XYPlot.SECOND_ARRAY);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,configureXYPlot();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateAnswer(new XYPlotChangeEvent(this, getXYPlotType()));
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateAnswer(new XYPlotChangeEvent(getXYPlotType(), getXYPlotType()));
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateAnswer(new JXPathIntrospector());
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateAnswer(new XYPlotChangeEvent(this));
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateAnswer(new XYPlotChangeEvent(getXYPlot(), getXYPlotType()));
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateRangeAxes();
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateAnswer(new XYPlotChangeEvent(this, getXYPlot()));
compilation error,[CE] constructor DatasetChangeEvent in class DatasetChangeEvent cannot be applied to given types;,configureRangeAxes(); ,validateAnswer(new DatasetChangeEvent(this));
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,validateAnswer(new XYPlotChangeEvent(getXYPlotStart(), getXYPlotType()));
patch is same with buggy,,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList();
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(this.domainAxis);
compilation error,[CE] incompatible types,this.domainAxes = new ObjectList(); ,this.domainAxes = new ArrayList();
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(0);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList() + 1;
compilation error,[CE] cannot find symbol rangeAxis,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(this.rangeAxis);
compilation error,[CE] cannot find symbol,this.domainAxes = new ObjectList(); ,this.domainAxes = new OBJECTList();
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes = new ObjectList(); ,this.domainAxises = new ObjectList();
compilation error,[CE] cannot find symbol domainNameAxis,this.domainAxes = new ObjectList(); ,this.domainAxes = new ObjectList(this.domainNameAxis);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(getScope(), this.rangeAxisLocation);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this, Location.getDefault());
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getIndex();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(CategoryPlot.SOURCEFILE_INITIALIZER);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(getScope(), location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.rangeAxisLocations, location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(CategoryPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(CategoryPlot.SIZE);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = Validate.notNull(domainAxis); this.rangeAxis = Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = Maps.newHashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = ValueAxis.getDomainAxis(); this.rangeAxis = RangeAxis.getRangeAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = ValueAxis.getDomainAxis(); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.clone(); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)getDomainAxis(); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)this.domainAxis.getRangeAxis(); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange()); if(index < 0) { result = new Integer(index); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis()); if(index < 0) { result = new Integer(index); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, index + 1); if(index < 0) { result = new Integer(index); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange()); if(index < 0) { result = new Integer(index + 1); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis()); result = new Integer(index + 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis()); if(index < 0) { result = new Integer(index + 1); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this, index + 1); result = new Integer(index + 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRange()); if(index < 0) { result = new Integer(index, Integer.MAX_VALUE); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(CategoryPlot.SECOND_ARRAY); if(index < 0) { result = new Integer(index); }
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getChronology()); result.add(getRangeAxis());
compilation error,[CE] ';' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,this.axisIndex = new DatasetChangeEvent(this, getDataset(index)));
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new NullPointerException(""); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,axisIndexChanged(new DatasetChangeEvent(this, getDataset(index)));
compilation error,[CE] ')' expected,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getAxis()); datasetChanged(new DatasetChangeEvent(this, get
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(isDomainAxis()) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
increase failing tests, [FE] NullPointerException,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol mapDatasetToDomainAxis,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,if(axisIndex < 0) { datasetChanged(new DatasetChangeEvent(this, getDataset(index))); } else { mapDatasetToDomainAxis = new DatasetChangeEvent(this, getAutoRangeDataset(axisIndex)); }
compilation error,[CE] cannot find symbol,datasetChanged(new DatasetChangeEvent(this, getDataset(index))); ,dataChanged(new DatasetChangeEvent(this, getDataset(axisIndex)));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
patch is same with buggy,,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex - 1));
compilation error,[CE] cannot find symbol axisIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.axisIndex), new Integer(index));
compilation error,[CE] cannot find symbol index,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(this.index), new Integer(axisIndex));
compilation error,[CE] cannot find symbol seriesIndex,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(seriesIndex), new Integer(index));
increase failing tests, [FE] NullPointerException,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex + 1));
compilation error,[CE] ')' expected,this.datasetToRangeAxisMap.put(new Integer(index), new Integer(axisIndex)); ,this.datasetToRangeAxisMap.put(new Integer(0, new Integer(axisIndex));
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null || this.backgroundRangeMarkers.contains(marker)) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers!= null || this.backgroundRangeMarkers.contains(marker)) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.anchorValue = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = new ValueMarker(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.anchorValue = new Color(0.0f, 0.0f, 0.0f, 0.0f, 0.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = 0.0;
patch is same with buggy,,super(); ,super();
compilation error,[CE] cannot find symbol,super(); ,checkAlterNullPointers();
compilation error,[CE] cannot find symbol,super(); ,checkInvariant();
compilation error,[CE] cannot find symbol,super(); ,checkAlterNullPointer();
compilation error,[CE] cannot find symbol,super(); ,checkAlternative();
compilation error,[CE] cannot find symbol,super(); ,checkAlternate();
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super("n");
compilation error,[CE] cannot find symbol,super(); ,checkAlternates();
compilation error,[CE] cannot find symbol,super(); ,checkAlterNulls();
compilation error,[CE] cannot find symbol,super(); ,checkPermission();
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index + 1);
compilation error,[CE] no suitable method found for get(int,<null>),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, null);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index-1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index+1);
increase failing tests, [FE] NullPointerException,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index - 1);
compilation error,[CE] no suitable method found for get(int,int),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, index);
compilation error,[CE] no suitable method found for get(int,int),result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, index + 1);
compilation error,[CE] cannot find symbol NEW,result = (ValueAxis) this.rangeAxes.get(index); ,result =(ValueAxis)this.rangeAxes.get(index, CategoryPlot.NEW);
patch is same with buggy,,result = (ValueAxis) this.rangeAxes.get(index); ,result = (ValueAxis)this.rangeAxes.get(index);
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable constructor found for BasicStroke(String),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke("NO_CROSSHAIR_STROKE");
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 0;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 5.0;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new HashMap();
compilation error,[CE] no suitable constructor found for BasicStroke(Class,Stroke),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke(XYPlot.class, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 123;
compilation error,[CE] no suitable constructor found for BasicStroke(Stroke),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke(XYPlot.DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)Renderer.newInstance();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.getDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)super.renderer; this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] illegal start of expression,,this.domainAxis =(CategoryAxis)super.getDomainAxis(); this.domainAxis = = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)dataset.getRootAxis(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.renderer.newInstance();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.getDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_ACCESSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.getDomainAxis(); this.domainAxis = DEFAULT_DOMAIN_ACXIS;
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
increase failing tests, [FE] AssertionFailedError,if (rangeAxis != null) { ,if(rangeAxis!= null && this.rangeAxisLocations == null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.isLocation()) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(this.rangeAxisLocations!= null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.isLocal()) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.getLocation() == null) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.size() == 0) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null || rangeAxis.getLocation() == null) {
compilation error,[CE] <identifier> expected,,private CategoryPlot =(CategoryPlot)getPlot();
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> renderingOrder = new CategoryPlot();
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> renderingOrder = new CategoryPlot(DatasetRenderingOrder.NONE);
compilation error,[CE] <identifier> expected,,private CategoryPlot = new CategoryPlot(getPlotIndex(), getPlotType());
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> renderingOrder = new CategoryPlot(DatasetRenderingOrder.FALSE);
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> = new CategoryPlot(DatasetRenderingOrder.NONE);
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> = new CategoryPlot();
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> renderingOrder = new CategoryPlot("DatasetRenderingOrder.NONE");
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> = new CategoryPlot(CategoryPlot.ZERO);
compilation error,[CE] generics are not supported in -source 1.4,,private final CategoryPlot < DatasetRenderingOrder> renderingOrder = new CategoryPlot(DatasetRenderingOrder.FULL);
patch is same with buggy,,this(null, null, null, null); ,this(null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,<null>),this(null, null, null, null); ,this(null, null, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,XYPlot),this(null, null, null, null); ,this(null, null, null, new XYPlot());
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, null, 0);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,int),this(null, null, null, null); ,this(null, null, null, 0);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,XYPlot),this(null, null, null, null); ,this(null, null, null, null, new XYPlot());
compilation error,[CE] no suitable constructor found for XYPlot(boolean,boolean,<null>,<null>,<null>),this(null, null, null, null); ,this(false, false, null, null, null);
compilation error,[CE] cannot find symbol compiler,this(null, null, null, null); ,this(compiler, null, null, null);
compilation error,[CE] no suitable constructor found for XYPlot(<null>,<null>,<null>,<null>,boolean),this(null, null, null, null); ,this(null, null, null, null, false);
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = true;
compilation error,[CE] incompatible types,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = null;
compilation error,[CE] cannot find symbol real,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = real;
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible =true;
compilation error,[CE] cannot find symbol rangeZeroBaseLineVisible,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaseLineVisible = true;
compilation error,[CE] cannot find symbol truth,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = truth;
increase failing tests, [FE] AssertionFailedError,this.rangeZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol setRangeZeroBaselineVisible,this.rangeZeroBaselineVisible = false; ,setRangeZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol True,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = True;
compilation error,[CE] cannot find symbol actual,this.rangeZeroBaselineVisible = false; ,this.rangeZeroBaselineVisible = actual;
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getRangeAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(getIndex(), index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getCategory());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getSeriesIndex());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getValueAxis());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(getIndex(), getChronology());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(getIndex(), index + 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf('n');
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getValue());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexFromPlot(getIndex(), getChildCount());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)super.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)getDomainAxisLocation();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis = this.dataset.getValueAxis();
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty());
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)getDomainAxis();
compilation error,[CE] variable domainAxis is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,ValueAxis domainAxis =(ValueAxis)this.dataset.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)this.dataset.getOwner();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,setDomainAxis(new RangeAxis());
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,enableRootAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,setupDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,defineDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,enableDomainAxis();
increase failing tests, [FE] NullPointerException,setDomainAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setRemoteAxisLocation(0, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setStandardAxisLocation(0, location, notify);
compilation error,[CE] ')' expected,setDomainAxisLocation(0, location, notify); ,setNotifyListeners(new AxisLocation(this, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setPosition(0, location, notify);
compilation error,[CE] no suitable method found for setDomainAxisLocation(int,AxisLocation,int),setDomainAxisLocation(0, location, notify); ,setDomainAxisLocation(0, location, 1);
compilation error,[CE] ')' expected,setDomainAxisLocation(0, location, notify); ,setNotifyListener(new AxisLocation(this, location, notify);
compilation error,[CE] no suitable method found for setDomainAxisLocation(<null>,AxisLocation,boolean),setDomainAxisLocation(0, location, notify); ,setDomainAxisLocation(null, location, notify);
compilation error,[CE] cannot find symbol,setDomainAxisLocation(0, location, notify); ,setLocation(null, location, notify);
compilation error,[CE] constructor AxisLocation in class AxisLocation cannot be applied to given types;,setDomainAxisLocation(0, location, notify); ,setNotifyListener(new AxisLocation(this, location, notify));
patch is same with buggy,,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT + 1);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, this.domainAxisLocation);
compilation error,[CE] ';' expected,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0), AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] bad operand types for binary operator '-',this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT - 1);
compilation error,[CE] not a statement,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT)- 1;
compilation error,[CE] no suitable method found for set(int,AxisLocation,ValueAxis),this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT, domainAxis);
compilation error,[CE] cannot find symbol AnxisLocation,this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT); ,this.domainAxisLocations.set(0, AnxisLocation.BOTTOM_OR_LEFT);
patch is same with buggy,,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size();
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() || this.rangeAxes.getLowerBound();
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() || this.rangeAxes.contains("-");
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() || this.rangeAxes.contains("0.0");
compilation error,[CE] ,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() || this.rangeAxes.contains(""));
compilation error,[CE] cannot find symbol,int count = this.rangeAxes.size(); ,int count = this.rangeAxes.size() || this.rangeAxes.isStatic();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocations.size();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.categoryPlot.size();
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.rangeAxisLocations, this.axisLocation);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.rangeAxisLocations, location);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.rangeAxisLocations, new AxisLocation(location));
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = indexOf(this.categoryPlot);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = Collections.binarySearch(this.rangeAxisLocations, this.index);
compilation error,[CE] variable index is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,int index = this.rangeAxisLocation.getIndex();
compilation error,[CE] variable location is already defined in method setRangeAxisLocation(int,AxisLocation,boolean),,CategoryPlot location =(CategoryPlot)getPlot();
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.put(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.contains(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.set(1, dataset);
patch is same with buggy,,this.datasets.set(0, dataset); ,this.datasets.set(0, dataset);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.update(dataset);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.clear(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] no suitable method found for set(int),,this.domainAxisLocations.set(0); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(0, dataset);
increase failing tests, [FE] NullPointerException,this.datasets.set(0, dataset); ,this.datasets.clear();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset, false));
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.remove(dataset);
compilation error,[CE] Dataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new Dataset(dataset, false));
compilation error,[CE] method toString in class Object cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.add(DatasetUtilities.toString(dataset));
compilation error,[CE] method toString in class Object cannot be applied to given types;,this.datasets.set(0, dataset); ,this.datasets.add(DatasetUtilities.toString(dataset, false));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,this.datasets.set(0, dataset); ,this.datasets.add(new CategoryDataset(dataset, null));
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.add(DatasetUtilities.newInstance(this.axisOffset, dataset));
compilation error,[CE] cannot find symbol,this.datasets.set(0, dataset); ,this.datasets.put(0, dataset);
compilation error,[CE] cannot find symbol marker,,this.marker.setItem(index);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] ,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!notifyListeners(new RendererChangeEvent(this)) { throw new IllegalArgumentException(""); }
compilation error,[CE] ')' expected,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!notifyListeners(new RendererChangeEvent(this)) { notifyListeners(new RendererChangeEvent(this)); }
compilation error,[CE] ')' expected,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!notifyListeners(new RendererChangeEvent(this)) { notifyListeners(new Event(this)); }
compilation error,[CE] ')' expected,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!notifyListeners(new RendererChangeEvent(this)) { notifyListeners(new ChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!NotifyMember()) { notifyListeners(new MemberChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!notify) { notifyListeners(new ChangeEvent(this)); }
compilation error,[CE] illegal start of expression,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!NotifyMember()) { notifyListeners(new ChangeEvent(this)); }
compilation error,[CE] ,,if(index < 0) { LayerUtilities.redeclareVarsInsideBranch(marker); if(!notifyListeners(new RendererChangeEvent(this)) { throw new IllegalStateException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SINGLE_QUOTES);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromProperty("category");
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryPlot.SECOND_ARRAY);
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker.getLowerBound());
compilation error,[CE] cannot find symbol tag,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker.tag);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLabel());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker.getLength());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLowerBound());
compilation error,[CE] cannot find symbol zone,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(zone);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlotIndex());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getItemCount());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlotCount());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(renderer);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlot());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getBaseValue());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureRootAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureRangeAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureRootAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol,,configureRangeAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ValueAxisLocation(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol,,configureRangeAxis();
compilation error,[CE] cannot find symbol,,configureRootAxis(); this.domainAxisLocations = new ValueAxisLocation(domainAxis);
compilation error,[CE] cannot find symbol,,configureRootAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.TOP_OR_LEFT);
compilation error,[CE] cannot find symbol,,configureRootAxis(); this.domainAxisLocations = new XYDomainAxisLocation(0, AxisLocation.BOTTOM);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToDomainAxis(int,int),,int index = indexFromDomain(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.contains(domainAxis)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)|| this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)&& this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof ValueAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDomainAxisLocations); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation = AxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)this.domainAxisLocation.BOTTOM_OR_RIGHT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)getDomainAxisLocation(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)this.domainAxisLocation.BOOLEAN; this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] <identifier> expected,,this.domainAxisLocation =(ValueAxis)this.domainAxisLocation.BOTTOM_OR_RIGHT; this.rangeAxisLocation =(ValueAxisLocation)this.rangeAxisLocation.
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)getDomainAxisLocation(); this.rangeAxisLocation =(ValueAxisLocation)getParent();
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)getDomainAxisLocation(); this.rangeAxisLocation =(ValueAxisLocation)getRangeAxisLocation();
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)this.domainAxisLocation.BOTTOM_OR_RIGHT? ValueAxisLocation.BOTTOM_OR_LEFT : null;
compilation error,[CE] cannot find symbol domainAxisLocation,,this.domainAxisLocation =(ValueAxis)getDomainAxisLocation(); this.rangeAxisLocation =(ValueAxisLocation)getNullPointer();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Collections.binarySearch(this.backgroundRangeMarkers, marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(this.backgroundRangeMarkers.size(), this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(this.backgroundRangeMarkers.size() - 1);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(indexOf(this.backgroundRangeMarkers.size(), this.backgroundRangeMarkers.size()));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size(); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(indexOf(this.backgroundRangeMarkers.size() - 1));
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, true);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, true);
compilation error,[CE] cannot find symbol NOT_IMPLEMENTED,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.NOT_IMPLEMENTED, true);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, false);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, true);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,int,Layer,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, index, layer, true);
compilation error,[CE] cannot find symbol WARNING,return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(index, layer, marker, false);
compilation error,[CE] no suitable method found for removeRangeMarker(Marker,Layer,int,boolean),return removeRangeMarker(index, marker, layer, true); ,return removeRangeMarker(marker, layer, index, true);
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result == null? valueAxis.getRange() : result;
compilation error,[CE] cannot find symbol RANGE,return result; ,return result == null? ValueAxis.RANGE : result;
compilation error,[CE] cannot find symbol VALUE_NULL,return result; ,return result == null? ValueAxis.VALUE_NULL : result;
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? ValueAxis.RANGE : result;
compilation error,[CE] cannot find symbol VALUE_NUMBER_INT,return result; ,return result == null? ValueAxis.VALUE_NUMBER_INT : result;
compilation error,[CE] bad operand types for binary operator '==',return result; ,return result == 0? null : result;
compilation error,[CE] cannot find symbol valueAxis,return result; ,return result == null? valueAxis.getValue() : result;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeTopMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllMarker(marker, Layer.FOREGROUND);
patch is same with buggy,,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeDomainMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPaths(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removePossibleMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeLocalMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPossibleMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllDomainMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeDomainMarker(marker, Layer.FOREGROUND); ,return removeAllPlotMarkers(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE;
patch is same with buggy,,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_RANGE_GRIDLINES,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES;
compilation error,[CE] cannot find symbol DEFAULT_ROIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_ROIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GLIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINES_VISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol rangeGridlineVisible,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlineVisible = DEFAULT_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINESVISIBLE,this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE; ,this.rangeGridlinesVisible = DEFAULT_GRIDLINESVISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = DatasetUtilities.iterateCategoryDataset(this);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(boolean),,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = DatasetUtilities.iterateCategoryDataset(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = DatasetUtilities.iterateDataset(dataset);
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GRIDLINES,,renderer.setBaseToolTipGenerator(DEFAULT_DOMAIN_GRIDLINES);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicItemTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new CategoryItemTipGenerator());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = DatasetUtilities.iterator().next();
patch is same with buggy,,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
increase failing tests, [FE] NullPointerException,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_DOMAIN_GRIDLINES_VISIBLE : DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOUBLE_GRIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOUBLE_GRIDLINES_VISIBLE;
compilation error,[CE] ';' expected,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE, DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GLIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE? DEFAULT_RANGE_GRIDLINES_VISIBLE : DEFAULT_DOMAIN_GLIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GLIDLINES_VISIBLE,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GLIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '/',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE / DEFAULT_RANGE_GRIDLINES_VISIBLE;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE; ,this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE + 1;
compilation error,[CE] cannot find symbol key,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey(key)); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey("")); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] ,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey(")"); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] ,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey(")");
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.datasetToDomainAxisMap!= null); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey("")|| this.datasetToDomainAxisMap.containsKey(""));
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey("=")); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol key,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey(key));
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.datasetToDomainAxisMap.containsKey("*")); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] illegal start of expression,} ,this(null);
compilation error,[CE] illegal start of expression,} ,this(new Dataset(dataset, domainAxis), RangeAxis.STANDARD);
compilation error,[CE] illegal start of expression,} ,this(null, null, dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,this(null, null);
compilation error,[CE] illegal start of expression,} ,this(null, null, dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] illegal start of expression,} ,this(new Dataset(dataset, domainAxis), rangeAxis, renderer);
compilation error,[CE] illegal start of expression,} ,this(null, dataset, domainAxis, rangeAxis);
compilation error,[CE] illegal start of expression,} ,this(new Dataset(dataset, domainAxis), new ValueAxis(rangeAxis));
compilation error,[CE] illegal start of expression,} ,this(null, dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] illegal start of expression,} ,this(new Dataset(dataset, domainAxis));
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.rangeAxisLocations = new RangeAxisLocations();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.rangeAxis = new RangeAxisLocations();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.rangeAxis = new RangeAxisLocations();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.rangeAxisLocations = new RangeAxisLocations();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isNull()); this.rangeAxis = new RangeAxisLocations();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty());
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer = createItemRenderer(new XYDataset(0.0, 0.0, 0.0));
compilation error,[CE] cannot find symbol dataset,,this.dataset = Sets.newHashSet();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.rangeAxisLocations = new RangeAxisLocation();
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer = createItemRenderer(new XYDataset(dataset, domainAxis, rangeAxis));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new DatasetTipGenerator();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.dataset = new DatasetTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(1.0f);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = Color.white;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = Color.black;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineStrip = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(0.5f);
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.setDomainAxisLocation(getAxisLocation())) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getDomainAxisLocation()!= null || this.getDomainAxisLocation().getLocation().getLocation().getType()!= Token.EXPR_RESULT) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getDomainAxisLocation()!= null || this.getDomainAxisLocation().getLocation().getLocation().getName()!= null) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getDomainAxisLocation()!= null || this.getDomainAxisLocation().getLocation().getLocation().getLocation().getName()!= null) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getDomainAxisLocation()!= null || this.getDomainAxisLocation().getLocation().getScope()!= null) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getDomainAxisLocation()!= null || this.getDomainAxisLocation().getLocation().getName()!= null) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getDomainAxisLocation()!= null || this.getDomainAxisLocation().getLocation().getLocation().getScope()!= null) {
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getDomainAxisLocation()!= null || this.getDomainAxisLocation().getLocation().getLocation().getLocation().getScope()!= null) {
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isEmpty()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.hasOptionalArg()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isDefine()) {
compilation error,[CE] cannot find symbol axis,if (axis != null) { ,if(this.axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isSelected()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isContainer()) {
compilation error,[CE] <identifier> expected,,private ListRenderingOrder = Lists.newArrayList();
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotIndex(), getPlotType());
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotType());
compilation error,[CE] <identifier> expected,,private ListRenderingOrder =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotType(), getPlotType());
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlot(), getPlotType());
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotIndex(), getPlotIndex());
compilation error,[CE] <identifier> expected,,private ListRenderingOrder =(CategoryPlot)getPlotType();
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlot().getValue());
compilation error,[CE] illegal start of type,,return Collections.emptySet();
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.iterateCategoryDataset(this); this.domainAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.iterateCategoryDataset(getItemRenderer());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeAxis = new ValueAxis(domainAxis);
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.iterateCategoryDataset(dataset);
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.iterateCategoryDataset(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(ValueAxis)getDomainAxis(); this.rangeAxis = new ValueAxis(valueAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(ValueAxis)getDomainAxis(); this.rangeAxis = new RangeAxisListener(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)getDomainAxis(); this.rangeAxis = new ValueAxis(valueAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeAxis = new RangeAxisListener(this);
compilation error,[CE] illegal start of type,,return new ResourceBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"), localizationResources.get("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.size(), localizationResources.size());
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"), localizationResources.get("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"), localizationResources.get("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.categoryPlot.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), marker);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(index).intValue();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.markers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index));
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(this.markers.size());
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexInList(this, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = java.util.ArrayList(); this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.markers);
compilation error,[CE] call to this must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol KEY_ANTIALIASING,,Preconditions.checkArgument(CategoryPlot.KEY_ANTIALIASING, CategoryPlot.NONE);
compilation error,[CE] cannot find symbol,,super.setPlotIndex(getPlotIndex());
compilation error,[CE] cannot find symbol KEY_ANTIALIASING,,Preconditions.checkArgument(CategoryPlot.KEY_ANTIALIASING, CategoryPlot.NAME_ANTIALIASING);
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(NodeUtil.isName(getPlotIndex()));
compilation error,[CE] cannot find symbol NodeUtil,,Preconditions.checkArgument(NodeUtil.isStatement(getPlotType()));
compilation error,[CE] cannot find symbol KEY_ANTIALIASING,,Preconditions.checkArgument(CategoryPlot.KEY_ANTIALIASING, CategoryPlot.START_ARRAY);
compilation error,[CE] cannot find symbol KEY_ANTIALIASING,,Preconditions.checkArgument(CategoryPlot.KEY_ANTIALIASING, CategoryPlot.NO_ANTIALIASING);
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(NodeUtil.isStatement(getPlotIndex()));
compilation error,[CE] cannot find symbol KEY_ANTIALIASING,,Preconditions.checkArgument(CategoryPlot.KEY_ANTIALIASING, CategoryPlot.NAME_ARRAY);
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] AssertionFailedError,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.POSITIVE_INFINITY;
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INFINITY;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.FALSE : PlotOrientation.VERTICAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.FALSE;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.BOTTOM;
compilation error,[CE] cannot find symbol map,,map =(Map)this.data.get(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index < 0) { mapDatasetToDomainAxis = new XYPlot(index, axisIndex); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index < 0) { mapDatasetToDomainAxis = new XYPlot(index, axisIndex + 1); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index >= 0) { mapDatasetToDomainAxis = new XYPlot(index, axisIndex); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = getAxisIndex(); if(index >= 0) { mapDatasetToDomainAxis = new XYPlot(index, axisIndex + 1); }
compilation error,[CE] illegal start of expression,,if(this.axisIndex < axisIndex) { int index = getAxisIndex(); if(index < 0) { mapDatasetToDomainAxis = new XYPlot(index, axisIndex); }
compilation error,[CE] illegal start of expression,,if(this.axisIndex < axisIndex) { int index = getAxisIndex(); if(index < 0) { mapDatasetToDomainAxis = new XYPlot(index, axisIndex + 1); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = mapIndexToDomainAxis(); if(index < axisIndex) { this.axisIndex = axisIndex; }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = mapIndexToDomainAxis(); if(index < axisIndex) { map.put(axisIndex, index + 1); }
compilation error,[CE] illegal start of expression,,if(axisIndex < 0) { int index = mapIndexToDomainAxis(); if(index >= axisIndex) { this.axisIndex = axisIndex; }
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationException(this));
compilation error,[CE] cannot find symbol location,,this.location.setAxisLocation(true); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] cannot find symbol,,super.setRangeAxisLocation(location); notifyListeners(new AxisChangeEvent(this));
compilation error,[CE] cannot find symbol location,,this.location.setAxisLocation(true); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location); notifyListeners(new AxisLocationException(this));
compilation error,[CE] cannot find symbol location,,if(this.location!= null) { throw new IllegalArgumentException(""); }
patch is same with buggy,,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { marker = this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index), this.backgroundDomainMarkers.size());
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index), marker);
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList(this.backgroundDomainMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundDomainMarkers.get(new Integer(index)); marker
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(  index)); ,if(this.foregroundDomainMarkers!= null) { markers =(ArrayList)this.foregroundDomainMarkers.get(new Integer(index)); } else { markers = this.backgroundDomainMarkers.get(new Integer(index)); }
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(renderer!= null && this.domainAxis!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && renderer.getChangeListener() == null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && isDomainAxisEmpty()) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && renderer.hasChangeListener()) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && isDomainAxisVisible(false)) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && isDomainAxisVisible(this)) {
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.get(0);
compilation error,[CE] no suitable method found for get(),,this.domainAxes =(XYPlot)this.domainAxes.get();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxes!= null);
compilation error,[CE] cannot find symbol,,this.domainAxes =(XYDomainAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,super.configureXYPlot();
compilation error,[CE] cannot find symbol,,this.domainAxes = getDomainAxes();
compilation error,[CE] cannot find symbol,,this.domainAxes =(XYDomainAxis)this.domainAxes.clone();
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,,super.configureXYPlot(XYPlot.DEFAULT_LOAD_FACTOR, false);
compilation error,[CE] incompatible types,,this.domainAxes =(XYPlot)this.domainAxes.clone();
compilation error,[CE] cannot find symbol,,this.domainAxes =(XYPlot)getDomainAxes();
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
compilation error,[CE] bad operand types for binary operator '-',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT - 1;
compilation error,[CE] incompatible types,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = 0;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + Color.black;
patch is same with buggy,,if (getParent() != null) { ,if(getParent()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext()!= null) {
increase failing tests, [FE] NullPointerException,if (getParent() != null) { ,if(getParent() == null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getChildCount()!= 3) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getChildCount()!= 4) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getValue()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getGuaranteed()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getNext() == null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getList()!= null) {
compilation error,[CE] cannot find symbol,if (getParent() != null) { ,if(getMillis()!= null) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(location == null || index >= this.domainAxisLocations.size()) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(index == 0 || location == null) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(location == null && index < this.domainAxisLocation) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(location == null && index < this.domainAxisLocation.getLength()) {
compilation error,[CE] cannot find symbol domainAxisLocation,if (index == 0 && location == null) { ,if(location == null && index < this.domainAxisLocation.length) {
increase failing tests, [FE] NullPointerException,if (index == 0 && location == null) { ,if(!(index < 0 && location == null)) {
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDomainAxis.clone(); this.domainAxis = DEFAULT_DOMAIN_AXIS;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYObjectRenderer.newInstance();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDataset.newInstance();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDomainAxis.clone(); this.rangeCrosshairPaint = DEFAULT_ROOT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDomainAxis.clone(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDomainAxis.getDomainAxis(); this.domainAxis =(VariableAxis)DOUBLE_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDomainAxis.clone(); this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(VariableAxis)XYDomainAxis.clone(); this.domainAxis =(VariableAxis)DOUBLE_CROSSHAIR_PAINT;
compilation error,[CE] illegal start of expression,} ,this.marker.setItem(index); notifyListeners(new Event(this));
compilation error,[CE] unclosed string literal,} ,this.marker.setItem(index); notifyListeners(new UnsupportedOperationException("));
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,this.marker.setItem(index); notifyListeners(new ChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,this.marker.setItem(index); notifyListeners(new ErrorEvent(this));
compilation error,[CE] illegal start of expression,} ,if(index < 0) { Layer.append(marker); marker = null; } else { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,} ,this.marker.setItem(index); notifyListeners(new UnsupportedOperationException(""));
compilation error,[CE] ,} ,this.marker.setItem(index); notifyListeners(new UnsupportedOperationException("Color does not exist:" + this);
compilation error,[CE] illegal start of expression,} ,this.marker.setItem(index); notifyListeners(new ErrorElement(this));
compilation error,[CE] ,} ,this.marker.setItem(index); notifyListeners(new UnsupportedOperationException("Circular annotations not allowed here:");
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.renderers = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)this.domainAxisMap.get(new ClassKey(domainAxis)); this.axisOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this); this.axisOffset = new ObjectList();
compilation error,[CE] '(' or '[' expected,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this); this.rangeAxis = new RangeAxisMap;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this); this.domainAxis = new ValueAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this);
compilation error,[CE] '(' or '[' expected,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxis = new RangeAxisMap;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlinePaint = new BasicPaint(0.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlinePaint = Color.white;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlinePaint = Color.black;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlinePaint = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlinePaint = new BasicPaint(0.5f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this);
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol LayerUtilities,,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol LayerUtilities,,if(index == 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol LayerUtilities,,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol LayerUtilities,,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addRangeMarker(this); }
compilation error,[CE] cannot find symbol LayerUtilities,,if(index == 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addRangeMarker(this); }
compilation error,[CE] cannot find symbol LayerUtilities,,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); } else { addRangeMarker(index, marker); }
compilation error,[CE] cannot find symbol SEPARATOR,,if(index < 0) { LayerUtilities.setPaint(marker, Layer.SEPARATOR); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol LayerUtilities,,if(index == 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); } else { addRangeMarker(index, marker); }
compilation error,[CE] cannot find symbol SECOND_OVER,,if(index < 0) { LayerUtilities.setPaint(marker, Layer.SECOND_OVER, marker); } else { LayerUtilities.setPaint(index, marker); marker = new Layer(layer, marker); }
patch is same with buggy,,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT + 1;
compilation error,[CE] cannot find symbol NEW_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = NEW_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = SerialUtilities.DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol USE_CROSSHAIR_PAINT,this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT; ,this.rangeCrosshairPaint = SerialUtilities.USE_CROSSHAIR_PAINT;
patch is same with buggy,,this.foregroundDomainMarkers = new HashMap(); ,this.foregroundDomainMarkers = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { Preconditions.checkState(this.foregroundDomainMarkers!= null); this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.setBackgroundPosition(RectangleEdge.BOTTOM); this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol markers,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.markers = new HashMap(); }
compilation error,[CE] cannot find symbol fieldAxis,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.fieldAxis = new RangeAxis(); this.foregroundDomainMarkers = new HashMap(); }
compilation error,[CE] cannot find symbol Preconditions,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { Preconditions.checkState(this.foregroundDomainMarkers!= null); }
compilation error,[CE] ')' expected,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.setBackgroundPosition(RectangleEdge.BOTTOM); setBackgroundPosition(RectangleEdge.BOTT
compilation error,[CE] illegal start of expression,this.foregroundDomainMarkers = new HashMap(); ,if(this.foregroundDomainMarkers == null) { this.foregroundDomainMarkers = new HashMap(); } else { this.foregroundDomainMarkers = new HashMap(); >>
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers.size() - 1);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.layer.keySet(), this.backgroundRangeMarkers.size());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundRangeMarkers, marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundRangeMarkers, this.backgroundRangeMarkers.keySet());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this, layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundRangeMarkers);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(this.layer.getItemCount(), this.backgroundRangeMarkers.size());
compilation error,[CE] incompatible types,ValueAxis result = null; ,ValueAxis result = this;
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size(), this.rangeAxes.size());
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis();
compilation error,[CE] cannot find symbol DateTimeUtils,ValueAxis result = null; ,ValueAxis result = DateTimeUtils.getValueAxis(this.rangeAxes);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size());
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = ObjectUtilities.getValueAxis(this.rangeAxes);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes!= null? null : this.rangeAxes.get(index));
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes.size() - 1);
compilation error,[CE] cannot find symbol,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes!= null? null : this.rangeAxes.get(index).getValue());
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,ValueAxis result = null; ,ValueAxis result = new ValueAxis(this.rangeAxes!= null? null : this.rangeAxes.size());
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index = axisIndex + 1; }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index = axisIndex++; }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index = axisIndex.getLength(); }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index = axisIndex; }
compilation error,[CE] incompatible types,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_VALUE,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] incompatible types,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_STROKE;
patch is same with buggy,,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_BLOCK,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_BLOCK;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_COLLEC,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_COLLEC;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_BOOLEAN,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_BOOLEAN;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_KNOWN,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_KNOWN;
compilation error,[CE] cannot find symbol DEFAULT_CROSSHAIR_FLOAT,this.domainCrosshairValue = 0.0; ,this.domainCrosshairValue = DEFAULT_CROSSHAIR_FLOAT;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] &null, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] &Null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] } null, null, null, null } ;
patch is same with buggy,,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] { null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] == null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[], null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[]!= null, null, null, null } ;
compilation error,[CE] array dimension missing,private transient Paint[] quadrantPaint = new Paint[] {null, null, null, null}; ,private transient Paint[] quadrantPaint = new Paint[] &isDrawnull, null, null, null } ;
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxis(new RangeAxis());
compilation error,[CE] no suitable method found for setDomainAxis(boolean),configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] no suitable method found for setRangeAxis(boolean),configureRangeAxes(); ,setRangeAxis(DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GRIDLINES,configureRangeAxes(); ,setDomainAxis(DEFAULT_DOMAIN_GRIDLINES);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,enableRangeAxis();
compilation error,[CE] cannot find symbol DEFAULT_DOMAIN_GRIDLINES,configureRangeAxes(); ,setRangeAxis(DEFAULT_DOMAIN_GRIDLINES);
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxis(new RangeAxisItemRenderer());
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setDomainAxis(new RangeAxis());
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setDomainAxis(new RangeAxis(domainAxis));
compilation error,[CE] cannot find symbol,configureRangeAxes(); ,setRangeAxis(new RangeAxis(domainAxis));
patch is same with buggy,,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol DateTimeZone,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeZone.getDefault(), DEFAULT_CROSSHAIR_VISIBLE);
compilation error,[CE] cannot find symbol DateTimeZone,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeZone.getDefault());
compilation error,[CE] cannot find symbol backgroundStroke,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(this.backgroundStroke);
compilation error,[CE] cannot find symbol,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMapWithExpectedValues();
compilation error,[CE] cannot find symbol DateTimeZone,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeZone.getDefault(), DEFAULT_CROSSHAIR_MARKER);
compilation error,[CE] no suitable constructor found for HashMap(double),this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(0.0);
compilation error,[CE] cannot find symbol domainAxis,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(this.domainAxis);
compilation error,[CE] cannot find symbol DateTimeZone,this.foregroundRangeMarkers = new HashMap(); ,this.foregroundRangeMarkers = new HashMap(DateTimeZone.getDefault(), TimeZone.getDefault());
patch is same with buggy,,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black;
compilation error,[CE] bad operand types for binary operator '+',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black + 1;
compilation error,[CE] ';' expected,this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black);
compilation error,[CE] bad operand types for binary operator '-',this.domainZeroBaselinePaint = Color.black; ,this.domainZeroBaselinePaint = Color.black - 1;
compilation error,[CE] illegal start of expression,} ,super.addRangeMarker(index, marker);
compilation error,[CE] illegal start of expression,} ,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); } else { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); } else { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,} ,if(index < 0) { LayerUtilities.setPaint(marker, Layer.SEPARATOR); marker = new Layer(); marker.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,if(index < 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addRangeMarker(this); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addChangeListener(this); } else { addRangeMarker(index, marker); }
compilation error,[CE] illegal start of expression,} ,if(index == 0) { LayerUtilities.setPaint(marker, Layer.FOREGROUND); marker = new Layer(); marker.addRangeMarker(this); }
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_SOURCE));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainAxis = new DomainAxisMap();
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET));
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainAxis = new ValueAxisMap();
compilation error,[CE] cannot find symbol itemRenderer,,Preconditions.checkArgument(!this.itemRenderer.isEmpty());
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty());
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainAxis = null;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(dataset); this.domainAxis = new DomainAxis();
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis, DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(domainAxis, 0);
compilation error,[CE] cannot find symbol defaultAxis,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(defaultAxis);
patch is same with buggy,,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0, 0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(-1, 0);
compilation error,[CE] method mapDatasetToRangeAxis in class CategoryPlot cannot be applied to given types;,this.mapDatasetToRangeAxis(0, 0); ,this.mapDatasetToRangeAxis(0000);
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarkerId(); if(marker!= null) { marker.setOrientation(PlotOrientation.HORIZONTAL); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarkerId(); if(marker!= null) { marker = new XYMarkerId(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalStateException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { return null; }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarkerId(); if(marker == null) { marker = new XYMarkerId(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarkerId(); if(marker!= null) { marker.setOrientation(PlotOrientation.VERTICAL); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { return false; }
compilation error,[CE] method removeChangeListener in class Plot cannot be applied to given types;,,if(marker == null) { XYPlot.removeChangeListener(marker); } else { Preconditions.checkNotNull(marker, Layer.FOREGROUND); marker = null; }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY); if(index < 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromDataset(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromPlot();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY); if(index >= 0) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY); if(index < 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromDataset(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY); if(index >= 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY); if(index < 0) { result = new XYDataset(index, null); }
compilation error,[CE] cannot find symbol EventChartChangeEvent,,EventChartChangeEvent = getChartChangeEvent();
compilation error,[CE] cannot find symbol EventChartChangeEvent,,EventChartChangeEvent = this.getChartChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getParent();
compilation error,[CE] cannot find symbol UPDATED,,event.setChangeEventType(ChartChangeEventType.UPDATED); notifyListeners(event);
compilation error,[CE] cannot find symbol EventChartChangeEvent,,EventChartChangeEvent =(XYPlot)getChartChangeEvent();
compilation error,[CE] variable event is already defined in method datasetChanged(DatasetChangeEvent),,PlotChangeEvent event =(PlotChangeEvent)getConfig();
compilation error,[CE] cannot find symbol EventChartChangeEvent,,EventChartChangeEvent = getChartChangeEvent(event);
compilation error,[CE] cannot find symbol,,event.setChangeEventType(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol,,event.setChangeEventType(ChartChangeEventType.GENERAL); notifyListeners(event);
compilation error,[CE] cannot find symbol EventChartChangeEvent,,EventChartChangeEvent = this.getDatasetChangeEvent();
patch is same with buggy,,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(",org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourcesBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(".org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] cannot find symbol ResourcesBundle,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourcesBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] non-static method getString(String) cannot be referenced from a static context,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getString("org.jfree.chart.plot.LocalizationBundle");
increase failing tests, [FE]  locale en,protected static ResourceBundle localizationResources = ResourceBundle.getBundle(   "org.jfree.chart.plot.LocalizationBundle"); ,protected static ResourceBundle localizationResources = ResourceBundle.getBundle("org.jfree.chart.localizationBundle");
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DOMAIN_CROSSHAIR_ASSIGN); this.domainAxis = renderer.getDomainAxis(DOMAIN_CROSSHAIR_ASSIGN);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DOMAIN_CROSSHAIR_ASSIGN); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis =(CategoryAxis)super.getItemRenderer();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DOMAIN_CROSSHAIR_ASSIGN); this.domainAxis = renderer.getDomainAxis(DOMAIN_CROSSHAIR_IS_OBJECT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DOMAIN_CROSSHAIR_ASSIGN); this.domainAxis = renderer.getDomainAxis(DOMAIN_CROSSHAIR_OBJECT);
patch is same with buggy,,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList();
increase failing tests, [FE]  locale en,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList(this.backgroundRangeMarkers.size());
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers.size());
compilation error,[CE] ')' expected,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList(this.backgroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.size());
compilation error,[CE] ')' expected,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.size());
compilation error,[CE] ')' expected,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.get(new Integer(index)));
compilation error,[CE] no suitable constructor found for ArrayList(Object),markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList(this.backgroundRangeMarkers.get(new Integer(index)));
compilation error,[CE] ')' expected,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList(this.backgroundRangeMarkers.get(new Integer(index));
compilation error,[CE] ')' expected,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayList(this.backgroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.get(new Integer(index)));
compilation error,[CE] cannot find symbol,markers = new java.util.ArrayList(); ,markers = new java.util.ArrayListWithCapacity(this.backgroundRangeMarkers.get(new Integer(index)));
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
increase failing tests, [FE]  locale en,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] } 2.0f, 2.0f }, 0.0f);
increase failing tests, [FE]  locale en,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
increase failing tests, [FE]  locale en,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] >> 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] < 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]) { 2.0f, 2.0f }, 0.0f);
compilation error,[CE] array dimension missing,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]  {2.0f, 2.0f}, 0.0f); ,public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]!= 2.0f, 2.0f }, 0.0f);
patch is same with buggy,,if (renderer != null) { ,if(renderer!= null) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(renderer == null) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(renderer!= null && this.domainAxis!= null) {
compilation error,[CE] cannot find symbol Feature,if (renderer != null) { ,if(renderer!= null && isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,[CE] cannot find symbol domainAxis,if (renderer != null) { ,if(this.domainAxis!= null) {
compilation error,[CE] cannot find symbol,if (renderer != null) { ,if(renderer!= null && isDomainAxisEmpty()) {
compilation error,[CE] cannot find symbol RendererChangeHelper,if (renderer != null) { ,if(renderer!= null && RendererChangeHelper.isOn()) {
increase failing tests, [FE] NullPointerException,if (renderer != null) { ,if(domainAxis!= null) {
compilation error,[CE] cannot find symbol Feature,if (renderer != null) { ,if(renderer!= null && isEnabled(Feature.AUTO_CLOSE_TARGET)) {
compilation error,[CE] cannot find symbol Renderer,if (renderer != null) { ,if(renderer!= null && Renderer.isLocal()) {
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { if(!setPosition(1)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { if(!setPosition(1)) { throw new NullPointerException(""); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new XYMarkerId(); if(marker!= null) { marker = new XYMarkerId(); }
compilation error,[CE] illegal start of expression,,if(marker!= null) { XYMarker marker = new XYMarkerId(); if(marker == null) { marker = new XYMarkerId(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYPlot.removeDomainMarker(marker, Layer.FOREGROUND); if(marker == null) { marker = new Marker(); }
compilation error,[CE] non-static method removeDomainMarker(Marker,Layer) cannot be referenced from a static context,,if(marker == null) { XYPlot.removeDomainMarker(marker, Layer.FOREGROUND); marker = null; }
compilation error,[CE] illegal start of expression,,if(marker!= null) { XYPlot.removeDomainMarker(marker, Layer.FOREGROUND); if(marker == null) { marker = new Marker(); }
compilation error,[CE] non-static method removeDomainMarker(Marker,Layer) cannot be referenced from a static context,,if(marker!= null) { XYPlot.removeDomainMarker(marker, Layer.FOREGROUND); marker = null; }
compilation error,[CE] non-static method removeDomainMarker(Marker,Layer) cannot be referenced from a static context,,if(marker == null) { XYPlot.removeDomainMarker(marker, Layer.FOREGROUND); marker = null; } else { XYPlot.removeChangeListener(marker); }
compilation error,[CE] incompatible types,return result; ,return index;
compilation error,[CE] cannot find symbol index,return result; ,return this.index;
compilation error,[CE] incompatible types for ?: neither is a subtype of the other,return result; ,return result == null? 0 : result;
compilation error,[CE] cannot find symbol JXPathIntrospector,return result; ,return result == null? JXPathIntrospector.getPercentile(index): result;
compilation error,[CE] cannot find symbol JXPathIntrospector,return result; ,return result == null? JXPathIntrospector.getReturnType(index): result;
compilation error,[CE] cannot find symbol index,return result; ,return result == null? JXPathIntrospector.getPercentile(this.index): result;
compilation error,[CE] cannot find symbol JXPathIntrospector,return result; ,return result == null? JXPathIntrospector.getDataset(index): result;
compilation error,[CE] cannot find symbol JXPathIntrospector,return result; ,return result == null? JXPathIntrospector.getReturnType() : result;
compilation error,[CE] cannot find symbol JXPathIntrospector,return result; ,return result == null? JXPathIntrospector.getLength() : result;
compilation error,[CE] cannot find symbol JXPathIntrospector,return result; ,return result == null? JXPathIntrospector.getOwnerDataset(this): result;
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, event);
compilation error,[CE] cannot find symbol COMMA,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.COMMA);
compilation error,[CE] cannot find symbol NONE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol CHART,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART);
compilation error,[CE] cannot find symbol GENERAL_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.GENERAL_UPDATED);
compilation error,[CE] cannot find symbol GENERAL,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(XYPlot.GENERAL);
compilation error,[CE] cannot find symbol ChartChangeEvent,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEvent.GENERAL);
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_ANNOTATIONS)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_OBJECT)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSC_ANNOTATIONS)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_TARGET)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_FONT)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_ANNOTATIONS)? new java.util.ArrayList() : null;
patch is same with buggy,,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol layer,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(layer, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol zone,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(zone, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol Label,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(Label.FOREGROUND);
compilation error,[CE] cannot find symbol Locale,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(Locale.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerId(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarkerIfNull(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol label,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(label, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol Last,return removeRangeMarker(marker, Layer.FOREGROUND); ,return marker == null? null : marker.removeRangeMarker(Last.FOREGROUND);
compilation error,[CE] cannot find symbol FOREGROUND_NOT_IMPLEMENTED,return removeRangeMarker(marker, Layer.FOREGROUND); ,return removeRangeMarker(marker, Layer.FOREGROUND_NOT_IMPLEMENTED);
compilation error,[CE] cannot find symbol XYChartChartChart,,XYChartChartChart = XYChart.getChart(this);
compilation error,[CE] cannot find symbol ChartChangeEvent,,this.ChartChangeEvent = ChartChangeEvent.createChangeListener(this);
compilation error,[CE] cannot find symbol chartChangeEvent,,this.chartChangeEvent = ChartChangeEvent.createChangeListener(this);
compilation error,[CE] cannot find symbol XYChartChartChart,,XYChartChartChart = getChart();
compilation error,[CE] cannot find symbol XYChartChartChart,,XYChartChartChart = XYChart.getChart(0, Chart.DEFAULT);
compilation error,[CE] cannot find symbol XYChartChartChart,,XYChartChartChart = new XYChart(this.getXYChart());
compilation error,[CE] cannot find symbol XYChartChartChart,,XYChartChartChart = new XYChart(XYPlot.TYPE_ARRAY);
compilation error,[CE] cannot find symbol XYChartChartChart,,XYChartChartChart = XYChart.getPlot();
compilation error,[CE] cannot find symbol XYChartChart,,XYChartChart = XYChart.getChart(this);
compilation error,[CE] cannot find symbol XYChartChartChart,,XYChartChartChart = XYChart.getDateChart(this);
compilation error,[CE] illegal start of type,,return Stroke.DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] illegal start of type,,return new Stroke(0.0f, BasicStroke.DEFAULT_GRIDLINE_STROKE, 0.0f);
compilation error,[CE] illegal start of type,,return new Stroke(1.0f, BasicStroke.DEFAULT_GRIDLINE_STROKE, 0.0f);
compilation error,[CE] illegal start of type,,return new Stroke(1.0f, BasicStroke.DEFAULT_GRIDLINE_STROKE, 2.0f, 0.0f);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(0.0f);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(1.0f);
compilation error,[CE] illegal start of type,,return new Stroke(1.0f, BasicStroke.DEFAULT_GRIDLINE_STROKE, 2.0f);
compilation error,[CE] illegal start of type,,return new Stroke(1.0f, BasicStroke.DEFAULT_GRIDLINE_STROKE, 1.0f);
compilation error,[CE] illegal start of type,,return Stroke.newStroke(Token.NAME, Token.FUNCTION);
compilation error,[CE] illegal start of type,,return Stroke.newInstance();
patch is same with buggy,,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] incompatible types,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '-',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT - 1;
compilation error,[CE] bad operand types for binary operator '+',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT + 2;
compilation error,[CE] cannot find symbol DEFAULT_GLIDLINE_PAINT,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GLIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '*',this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT * 2;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this); this.rangeAxis = new ValueAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)this.domainAxis.clone(); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.rangeAxis = new RangeAxisMap();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(!this.domainAxis.isArray()); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)ObjectUtilities.unwrapAndThrowAsItem(this);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryItemRenderer)this.domainAxis.getClass(); this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] not a statement,,Event.NOT_IMPLEMENTED: Event.NOT_GLOBAL_WARNING;
compilation error,[CE] cannot find symbol,,EventUtilities.setAxis(getChildCount(), event);
compilation error,[CE] cannot find symbol,,event.setDataset(this);
compilation error,[CE] cannot find symbol,,EventUtilities.setAxis(getChildCount(), getMaximumNonNull());
compilation error,[CE] cannot find symbol EventUtilities,,EventUtilities.setAxis(this.rangeAxes);
compilation error,[CE] cannot find symbol Event,,Event.isStatic();
compilation error,[CE] cannot find symbol,,EventUtilities.setAxis(getChildCount(), getMaximumNumber());
compilation error,[CE] not a statement,,Event.NOT_IMPLEMENTED : Event.NOT_GLOBAL_WARNING;
compilation error,[CE] cannot find symbol,,EventUtilities.setAxis(getChildCount(), getMaximumItemCount());
compilation error,[CE] cannot find symbol,,EventUtilities.setAxis(getChildCount(), getUnitMillis());
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty());
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYItemRenderer();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainAxisLocations = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYItemRenderer(new XYItemRenderer());
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer = createItemRenderer(new XYItemRenderer());
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYItemRenderer(this);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new XYItemRenderer(new ItemRenderer());
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.size());
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); marker
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList(this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index), null);
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index), marker);
compilation error,[CE] cannot find symbol,,e.setChangeEvent(this);
compilation error,[CE] cannot find symbol NO_RESULT,,e.setChangeEventType(ChartChangeEventType.NO_RESULT);
compilation error,[CE] cannot find symbol,,e.setChangeEventType(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol,,e.setChangeEventType(this);
compilation error,[CE] cannot find symbol NEW,,e.setChangeEventType(ChartChangeEventType.NEW);
compilation error,[CE] cannot find symbol FULL,,e.setChangeEventType(ChartChangeEventType.FULL);
compilation error,[CE] cannot find symbol TYPE_REDEFINITION,,e.setChange(XYPlot.TYPE_REDEFINITION);
compilation error,[CE] cannot find symbol ON_UPDATED,,e.setChangeEventType(ChartChangeEventType.ON_UPDATED);
compilation error,[CE] cannot find symbol Event,,Event.ChartChangeEvent = event.getDatasetChangeEvent();
compilation error,[CE] cannot find symbol Event,,Event.ChartChangeEvent = event.getDataset();
patch is same with buggy,,super(); ,super();
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(0);
compilation error,[CE] cannot find symbol,super(); ,checkAlterNullPointers();
compilation error,[CE] cannot find symbol,super(); ,checkAlternative();
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(1.0, 1.0);
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(0.0, 0.0);
compilation error,[CE] cannot find symbol,super(); ,checkInvariant();
compilation error,[CE] cannot find symbol,super(); ,checkAlternate();
compilation error,[CE] cannot find symbol,super(); ,checkAlternates();
compilation error,[CE] constructor Plot in class Plot cannot be applied to given types;,super(); ,super(null);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker.getLowerBound());
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker, Layer.SECOND_ARGB, marker); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker.getLowerBound(), layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker, Layer.SECOND_ARGB, marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1); if(index == 0 && marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker, Layer.FOREGROUND); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker.getLowerBound()); if(index == 0) { removeRangeMarker(index, marker, layer); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker.getLowerBound()); if(index == 0) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot assign a value to final variable datasetRenderingOrder,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private final DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE? null : DatasetRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE? super.datasetRenderingOrder : DatasetRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE? DatasetRenderingOrder.FALSE : DatasetRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE? new DatasetRenderingOrder() : DatasetRenderingOrder.FALSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE? new DatasetRenderingOrder() : DatasetRenderingOrder.NEVERSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE? DatasetRenderingOrder.FULL : DatasetRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE; ,private DatasetRenderingOrder datasetRenderingOrder = DatasetRenderingOrder.REVERSE? new DatasetRenderingOrder() : DatasetRenderingOrder.FULL;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset(dataset);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(dataset);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(dataset instanceof CategoryDataset);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset = getDataset(getPlotIndex());
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)this.datasets.get(0);
compilation error,[CE] ';' expected,,Preconditions.checkArgument(dataset instanceof CategoryDataset));
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryDataset dataset =(CategoryDataset)getDataset(renderer);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new CategoryDataset(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_TECNOM,,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_TECNOM); this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlinePaint = new BasicPaint(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineStroke = new BasicStroke(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlinePaint = new BasicPaint(0.0f);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinePaint = BaseGridlinePaint.getDefaultPaint();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineStrip = new BasicStroke(1.0f);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlinePaint = BaseGridlinePaint.defaultPaint;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new DatasetTipGenerator();
patch is same with buggy,,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol domainAxis,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] bad operand types for binary operator '+',this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap() + 1;
compilation error,[CE] no suitable constructor found for TreeMap(double),this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(0.0);
compilation error,[CE] cannot find symbol This,this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(This.DomainAxis);
compilation error,[CE] bad operand types for binary operator '&&',this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap() &&
compilation error,[CE] no suitable constructor found for TreeMap(float),this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(0.0f);
compilation error,[CE] bad operand types for binary operator '*',this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap() * 2;
compilation error,[CE] no suitable constructor found for TreeMap(XYPlot),this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(this);
compilation error,[CE] no suitable constructor found for TreeMap(int),this.datasetToDomainAxisMap = new TreeMap(); ,this.datasetToDomainAxisMap = new TreeMap(0);
compilation error,[CE] no suitable method found for setRangeAxisLocation(int,AxisLocation,int),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, 1);
patch is same with buggy,,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(<null>,AxisLocation,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(null, location, notify);
compilation error,[CE] cannot find symbol renderingHints,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, this.renderingHints);
compilation error,[CE] no suitable method found for setRangeAxisLocation(int,AxisLocation,int),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, +1);
compilation error,[CE] no suitable method found for setRangeAxisLocation(int,AxisLocation,int,boolean),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, +1, notify);
compilation error,[CE] no suitable method found for setRangeAxisLocation(int,AxisLocation,int),setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, 2);
compilation error,[CE] cannot find symbol notify,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, this.notify);
compilation error,[CE] cannot find symbol renderer,setRangeAxisLocation(0, location, notify); ,setRangeAxisLocation(0, location, this.renderer);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator()); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator()); this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValues = new HashMap();
compilation error,[CE] cannot find symbol anchorValues,,this.anchorValues = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis);
compilation error,[CE] cannot find symbol anchorValues,,this.anchorValues = Sets.newHashSet();
compilation error,[CE] cannot find symbol anchorValues,,this.anchorValues = Collections.emptySet();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
compilation error,[CE] cannot find symbol anchorValues,,this.anchorValues = Collections.emptyList();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = domainAxis.getSuperclass();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromDataset(XYPlot.getIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.getIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromDataset(XYPlot.getIndexOf(this));
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.class);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromDataset(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE_ERROR);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.rangeGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.domainGridlineValue = DEFAULT_GRIDLINE_VALUE;
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineValue = new BasicGridlineValue(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineValue = new BasicStroke(1.0f);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.baseGridlineValue = new BaseGridlineValue(1.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlineValue = new BasicGridlineValue(0.0f);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.baseGridlineValue = new BaseGridlineValue(1.0f);
compilation error,[CE] no suitable method found for setBaseToolTipGenerator(Stroke),,renderer.setBaseToolTipGenerator(DEFAULT_GRIDLINE_STROKE); this.rangeGridlineValue = new RangeGridlineValue(1.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.rangeGridlineValue = new BasicStroke(0.0f);
compilation error,[CE] illegal start of type,,return new BasicStroke(1.0f);
compilation error,[CE] illegal start of type,,return new Color(Color.black);
compilation error,[CE] illegal start of type,,return new Color(Color.green);
compilation error,[CE] illegal start of type,,return new Color(Color.blue);
compilation error,[CE] illegal start of type,,return UnsupportedOperation.getInstance();
compilation error,[CE] illegal start of type,,return new Paint(Color.black);
compilation error,[CE] illegal start of type,,return new Color(Color.white);
compilation error,[CE] illegal start of type,,return new Color(Paint.black);
compilation error,[CE] illegal start of type,,return new Color(Paint.DOUBLE);
compilation error,[CE] illegal start of type,,return new Paint(Color.green);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> i = plot.getRangeAxisEdge();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> rangeAxes =(CategoryPlot)this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> rangeAxes = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes = getRangeAxes();
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> i = this.rangeAxes.get(i);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes =(CategoryPlot)this.rangeAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot < K, V> rangeAxes =(CategoryPlot)this.rangeAxes.get(0);
compilation error,[CE] generics are not supported in -source 1.4,,CategoryPlot <?> rangeAxes = new CategoryPlot(this.rangeAxes.size() - 1);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.newInstance();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.datasets.get(dataset.size());
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.getDataset(renderer);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.datasets.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset = this.datasets.iterator().next();
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.get(dataset);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.getDataset(this);
compilation error,[CE] variable dataset is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYDataset dataset =(XYDataset)XYDataset.clone();
compilation error,[CE] bad operand types for binary operator '==',else if (layer == Layer.BACKGROUND) { ,else if(index == Layer.BACKGROUND) {
increase failing tests, [FE] NullPointerException,else if (layer == Layer.BACKGROUND) { ,else if(this.backgroundRangeMarkers == null) {
compilation error,[CE] bad operand types for binary operator '<',else if (layer == Layer.BACKGROUND) { ,else if(index < Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '!=',else if (layer == Layer.BACKGROUND) { ,else if(index!= Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol layer,else if (layer == Layer.BACKGROUND) { ,else if(this.layer == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '>=',else if (layer == Layer.BACKGROUND) { ,else if(index >= Layer.BACKGROUND) {
compilation error,[CE] cannot find symbol collection,else if (layer == Layer.BACKGROUND) { ,else if(this.collection == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '==',else if (layer == Layer.BACKGROUND) { ,else if (index == Layer.BACKGROUND) {
compilation error,[CE] bad operand types for binary operator '<=',else if (layer == Layer.BACKGROUND) { ,else if(index <= Layer.BACKGROUND) {
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.FOREGROUND);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = this.markers.remove(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker =(Marker)this.markers.get(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Object marker = this.markers.remove(index);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.SECOND_INT_ARGB, marker);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = this.markers.isEmpty();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = this.marker!= null;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.SEPARATOR);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.BOTTOM);
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return marker == null? null : marker.removeDomainMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeDomainMarker(Layer,Marker),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(layer, marker);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPaths(marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return marker == null? null : marker.remove(layer, marker);
compilation error,[CE] cannot find symbol zone,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(zone, marker);
compilation error,[CE] cannot find symbol demarker,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(demarker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return marker == null? null : marker.detachFromParam();
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeTopMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return marker == null? null : marker.moveDomainMarker(0, marker, layer);
patch is same with buggy,,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList();
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisNames,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisNames);
compilation error,[CE] cannot find symbol This,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(This.DOMAIN_AXIS_LOCATIONS);
compilation error,[CE] cannot find symbol domainAxisMap,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisMap);
compilation error,[CE] cannot find symbol This,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(This.DOMAIN_AXIS_LOCATIONS);
compilation error,[CE] cannot find symbol domainAxisElement,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisElement);
increase failing tests, [FE] NullPointerException,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(0);
compilation error,[CE] cannot find symbol domainAxisElements,this.domainAxisLocations = new ObjectList(); ,this.domainAxisLocations = new ObjectList(this.domainAxisElements);
increase failing tests, [FE] NullPointerException,,if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol marker,,this.marker = marker.getLabel(); if(notify) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol marker,,this.marker.setItem(index); notifyListeners(new Event(this));
compilation error,[CE] unclosed string literal,,this.marker.setItem(index); notifyListeners(new UnsupportedOperationException("));
compilation error,[CE] cannot find symbol PlotOrientation,,if(marker == null) { throw new IllegalArgumentException(""); } else { Layer.PlotOrientation.RangeMarker = marker.getOrientation(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol PlotOrientation,,if(marker!= null) { throw new IllegalArgumentException(""); } else { Layer.PlotOrientation.RangeMarker = marker.getOrientation(); marker.addChangeListener(this); }
compilation error,[CE] cannot find symbol,,super.addRangeMarker(index, marker);
compilation error,[CE] cannot find symbol PlotOrientation,,if(marker == null) { throw new IllegalArgumentException(""); } else { Layer.PlotOrientation.RangeMarker = marker.getOrientation(); marker.setItem(index); marker.addRangeMarker(this); }
compilation error,[CE] cannot find symbol PlotOrientation,,if(marker!= null) { throw new IllegalArgumentException(""); } else { Layer.PlotOrientation.RangeMarker = marker.getOrientation(); marker.setItem(index); marker.addRangeMarker(this); }
compilation error,[CE] <identifier> expected,,private ListRenderingOrder = Lists.newArrayList();
compilation error,[CE] <identifier> expected,,private final CategoryPlot =(CategoryPlot)getPlot();
compilation error,[CE] cannot find symbol,,private ListOrder columnRenderingOrder = Lists.newArrayList();
compilation error,[CE] cannot find symbol,,private ListOrder columnRenderingOrder =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotType());
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotIndex(), getColumnRenderingOrder());
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotIndex(), getPlotType());
compilation error,[CE] illegal start of type,,return new CategoryPlot(getPlotType(), getPlotType());
compilation error,[CE] cannot find symbol,,private ListOrder columnRenderingOrder =(CategoryPlot)listOrder.newArrayList();
compilation error,[CE] cannot find symbol,,private ListOrder columnRenderingOrder =(CategoryPlot)listOrder.newInstance();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(i);
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(0);
compilation error,[CE] cannot find symbol,,super.setPlotIndex(i);
compilation error,[CE] cannot find symbol,,this.domainAxes =(CategoryAxis)getDomainAxesImpl();
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.get(1);
compilation error,[CE] cannot find symbol,,this.domainAxes =(CategoryAxis)super.configure();
increase failing tests, [FE] NullPointerException,,this.domainAxes.clear();
compilation error,[CE] no suitable constructor found for CategoryPlot(int),,this.domainAxes.set(i, new CategoryPlot(this.domainAxes.size() - 1));
compilation error,[CE] incompatible types,,this.domainAxes =(CategoryAxis)this.domainAxes.clone();
compilation error,[CE] cannot find symbol getDomainAxes,,this.domainAxes =(CategoryAxis)getDomainAxes.get(i);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers.size());
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers.size() - 1);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundDomainMarkers, this.backgroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers.keySet());
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.foregroundDomainMarkers.size(); if(index >= 0) { this.foregroundDomainMarkers.add(marker); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundDomainMarkers, marker); if(index >= 0) { this.foregroundDomainMarkers.add(marker); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable marker is already defined in method addRangeMarker(int,Marker,Layer,boolean),,CategoryPlot marker =(CategoryPlot)layer.getPlot();
compilation error,[CE] variable markers is already defined in method addRangeMarker(int,Marker,Layer,boolean),,CategoryPlot markers =(CategoryPlot)this.backgroundRangeMarkers.get(index);
compilation error,[CE] variable markers is already defined in method addRangeMarker(int,Marker,Layer,boolean),,CategoryPlot markers = this.backgroundRangeMarkers.get(index);
compilation error,[CE] variable marker is already defined in method addRangeMarker(int,Marker,Layer,boolean),,CategoryPlot marker =(CategoryPlot)layer.getPlot(); if(marker!= null) { this.backgroundRangeMarkers = new java.util.ArrayList(); }
compilation error,[CE] variable marker is already defined in method addRangeMarker(int,Marker,Layer,boolean),,CategoryPlot marker =(CategoryPlot)layer.getPlot(); if(marker!= null) { this.backgroundRangeMarkers.put(new Integer(index), marker); }
compilation error,[CE] variable marker is already defined in method addRangeMarker(int,Marker,Layer,boolean),,CategoryPlot marker =(CategoryPlot)layer.getPlot(); if(marker!= null) { this.backgroundRangeMarkers.add(marker); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = this.backgroundRangeMarkers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.FOREGROUND_MARKS);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(" < ");
compilation error,[CE] call to super must be first statement in constructor,,super("n");
compilation error,[CE] call to super must be first statement in constructor,,super(" { ");
compilation error,[CE] call to super must be first statement in constructor,,super(null);
compilation error,[CE] call to this must be first statement in constructor,,this(null);
compilation error,[CE] call to super must be first statement in constructor,,super("", null);
compilation error,[CE] call to super must be first statement in constructor,,super(",");
compilation error,[CE] call to super must be first statement in constructor,,super(" >> ");
compilation error,[CE] call to super must be first statement in constructor,,super(" } ");
compilation error,[CE] cannot find symbol baseline,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] no suitable method found for addRangeMarker(double,Layer),addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.anchorValue, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,renderer.addRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,validateRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol anchor,addRangeMarker(baseline, Layer.BACKGROUND); ,addRangeMarker(this.anchor, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,defineRangeMarker(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,setBaseToolTipGenerator(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol,addRangeMarker(baseline, Layer.BACKGROUND); ,addAnchor(baseline, Layer.BACKGROUND);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.domainAxisLocation);
patch is same with buggy,,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, location);
compilation error,[CE] cannot find symbol locale,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.locale);
compilation error,[CE] cannot find symbol location,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.location);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.domainAxisLocation, location);
compilation error,[CE] cannot find symbol locale,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(locale, index);
compilation error,[CE] cannot find symbol areaXml,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.areaXml);
compilation error,[CE] cannot find symbol index,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(this.index, location);
compilation error,[CE] cannot find symbol destination,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.destination);
increase failing tests, [FE] NullPointerException,this.domainAxisLocations.set(index, location); ,this.domainAxisLocations.set(index, this.orientation);
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layer.keySet()) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layers.keySet()) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layer.keySet()) { if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layers.keySet()) { if(marker!= null) { fireChangeEvent(); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(!notify) { fireChangeEvent(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layer.keySet()) { if(marker!= null) { removeRangeMarker(marker); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layers.keySet()) { if(marker!= null) { removeRangeMarker(marker); }
compilation error,[CE] illegal start of expression,,if(markers!= null) { if(notify) { fireChangeEvent(); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layer.keySet()) { if(marker!= null) { throw new NullPointerException(""); }
compilation error,[CE] for-each loops are not supported in -source 1.4,,for(Marker marker : layer.keySet()) { if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.SIZE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromDataset(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.COMMA);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.INSTANCE);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE_ERROR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.DEFAULT);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYDataset.class);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(XYPlot.INSTANCE_ARRAY);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(i);
patch is same with buggy,,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis = (ValueAxis)this.rangeAxes.get(i);
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(1);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getRange();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.contains(i);
compilation error,[CE] no suitable method found for get(int,int),ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(0, 1);
increase failing tests, [FE] NullPointerException,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.get(4);
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getAll();
compilation error,[CE] cannot find symbol,ValueAxis axis = (ValueAxis) this.rangeAxes.get(i); ,ValueAxis axis =(ValueAxis)this.rangeAxes.getDefault();
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,this.domainGridlinesVisible = false;
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible!= false) { this.domainGridlinesVisible = true; } else { this.domainGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; } else { this.rangeGridlinesVisible = false; }
increase failing tests, [FE] AssertionFailedError,this.domainGridlinesVisible = true; ,if(this.domainGridlinesVisible == true) { this.domainGridlinesVisible = true; }
compilation error,[CE] cannot find symbol,this.domainGridlinesVisible = true; ,setBaseToolTipGenerator(new BasicToolTipGenerator()); this.domainGridlinesVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainCrosshairVisible = false;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(DEFAULT_GRIDLINE_STROKE, DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.domainCrosshairVisible = true;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ValueAxis(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(this); this.domainCrosshairVisible = false;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(XYItemRenderer)XYDataset.getDataset(dataset); this.domainCrosshairVisible = true;
patch is same with buggy,,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT; ,this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT + 1;
compilation error,[CE] illegal start of type,,return new ResourceBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return LocalizationBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"), localizationResources.get("org.jfree.chart.plot.LocalizationBundle");
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.size(), localizationResources.size());
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"), localizationResources.get("org.jfree.chart.plot.LocalizationBundle"));
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"), localizationResources);
compilation error,[CE] illegal start of type,,return new ResourceBundle(localizationResources.getBundle("org.jfree.chart.plot.LocalizationBundle"), localizationResources.get("org.jfree.chart.plot.LocalizationBundle"));
patch is same with buggy,,if (marker == null) { ,if(marker == null) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getValue()!= null) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.isNull()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getLowerBound()!= null) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getImplicitReturn()!= null) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getClass()!= getRangeMarker()) {
compilation error,[CE] cannot find symbol,if (marker == null) { ,if(marker == null || marker.getLowerBound()!= 0) {
compilation error,[CE] cannot find symbol length,if (marker == null) { ,if(marker == null || marker.length == 0) {
compilation error,[CE] cannot find symbol Maps,,this.drawSharedDomainAxis = Maps.newHashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.drawSharedDomainAxis = false;
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)super.getDomainAxis();
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)super.getDomainAxis(); this.mapDatasetToRangeAxis = false;
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)createPlot();
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)this.dataset.getAllPlots();
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)super.getDomainAxis(); this.setPlot(this);
compilation error,[CE] cannot find symbol,,this.drawSharedDomainAxis =(DefaultDomainAxis)createPlot(this); this.mapDatasetToRangeAxis = new HashMap();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getRangePlot();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = this.getRangePlot();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = plot.getRangeAxes();
compilation error,[CE] cannot find symbol,,CategoryRangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryAxis axis = getRangeAxes(getPlotType());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryAxis axis = getRangeAxes(category);
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryAxis axis = getRangeAxis(getPlotType());
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = plot.getAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,CategoryPlot axis = getAutoRangePlot();
patch is same with buggy,,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
compilation error,[CE] method get in interface Map cannot be applied to given types;,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index), this.backgroundRangeMarkers.size());
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] ')' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList(this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] '(' or '[' expected,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = new ArrayList)this.backgroundRangeMarkers.get(new Integer(index)); marker
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { markers = this.backgroundRangeMarkers.get(new Integer(index)); }
compilation error,[CE] incompatible types,markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(  index)); ,if(this.foregroundRangeMarkers!= null) { markers =(ArrayList)this.foregroundRangeMarkers.get(new Integer(index)); } else { marker = this.backgroundRangeMarkers.remove(marker); }
increase failing tests, [FE] NullPointerException,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol real,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = real;
increase failing tests, [FE] AssertionFailedError,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible =true;
compilation error,[CE] cannot find symbol truth,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = truth;
compilation error,[CE] incompatible types,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = null;
compilation error,[CE] cannot find symbol domainZeroBaseLineVisible,this.domainZeroBaselineVisible = false; ,this.domainZeroBaseLineVisible = true;
compilation error,[CE] cannot find symbol setDomainZeroBaselineVisible,this.domainZeroBaselineVisible = false; ,setDomainZeroBaselineVisible = true;
compilation error,[CE] cannot find symbol reality,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = reality;
compilation error,[CE] cannot find symbol True,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = True;
compilation error,[CE] cannot find symbol right,this.domainZeroBaselineVisible = false; ,this.domainZeroBaselineVisible = right;
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(getPlotIndex());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = this.datasets.size();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory();
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexFromCategory(getPlot());
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SEPARATOR);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(CategoryDataset.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = indexOf(this.datasets.size() - 1);
compilation error,[CE] variable index is already defined in method getDataset(int),,int index = Collections.binarySearch(this.datasets, 0);
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureDomainAxis();
patch is same with buggy,,configureDomainAxes(); ,configureDomainAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,setDomainAxis(new RangeAxis());
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configureRootAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,configurePositionAxes();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,enableDomainAxis();
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,setDomainAxis(new DomainAxis());
compilation error,[CE] cannot find symbol,configureDomainAxes(); ,defineDomainAxis();
compilation error,[CE] cannot find symbol WARNING,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] cannot find symbol WARNING,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] cannot find symbol NOT_IMPLEMENTED,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.NOT_IMPLEMENTED);
compilation error,[CE] cannot find symbol NOT_OBJECT,addRangeMarker(index, marker, layer, true); ,addRangeMarker(index, marker, Layer.NOT_OBJECT, true);
compilation error,[CE] no suitable method found for addRangeMarker(Marker,Layer,boolean),addRangeMarker(index, marker, layer, true); ,addRangeMarker(marker, layer, true);
compilation error,[CE] no suitable method found for addRangeMarker(CategoryPlot,Marker,Layer,boolean),addRangeMarker(index, marker, layer, true); ,addRangeMarker(this, marker, layer, true);
compilation error,[CE] cannot find symbol,,configureDomainAxis(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol,,setupDomainAxis(); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] no suitable method found for setDomainAxis(ValueAxis),,setDomainAxis(rangeAxis); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] no suitable method found for setDomainAxis(ValueAxis),,setDomainAxis(getRangeAxis()); this.domainAxisPosition = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] no suitable method found for setDomainAxis(ValueAxis),,setDomainAxis(rangeAxis); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] no suitable method found for setDomainAxis(ValueAxis),,setDomainAxis(getRangeAxis()); this.domainAxisPosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol rangeAxis,,setDomainAxis(domainAxis); this.rangeAxis = rangeAxis;
compilation error,[CE] cannot find symbol rangeAxis,,setDomainAxis(domainAxis); this.rangeAxis = RangeAxis.getUpperBound();
patch is same with buggy,,this.annotations = new java.util.ArrayList(); ,this.annotations = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_ANNOTATIONS)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_OBJECT)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_ANNOTATIONS)? new java.util.ArrayList() : null;
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_FONT)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSC_ANNOTATIONS)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_TARGET)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_ANTIALIAS_ERROR)? null : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_ANNOTATIONS)? FULL : new java.util.ArrayList();
compilation error,[CE] cannot find symbol Feature,this.annotations = new java.util.ArrayList(); ,this.annotations = isEnabled(Feature.AUTO_CLOSE_JSON_ANNOTATIONS)? new java.util.ArrayList() : Collections.unknownConstants();
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.backgroundDomainMarkers.contains(marker)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers == null || this.backgroundDomainMarkers.contains(marker)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.foregroundDomainMarkers.contains(index)) {
compilation error,[CE] cannot find symbol,if (layer == Layer.FOREGROUND) { ,if(this.foregroundDomainMarkers!= null || this.foregroundDomainMarkers.contains(marker)) {
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); if(index < 0) { index++; }
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOfSupported(axisIndex); this.axisIndex = axisIndex;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexOf(axisIndex); this.axisIndex = axisIndex + 1;
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexInList(this, axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexFromAxis(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = indexInList(this, getAxis());
patch is same with buggy,,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.blue);
compilation error,[CE] no suitable constructor found for Color(Color),public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = new Color(Color.green);
compilation error,[CE] cannot find symbol grey,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue; ,public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.grey;
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers.size());
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers.size() - 1);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundDomainMarkers, this.backgroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, this.backgroundDomainMarkers.keySet());
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLastPointer(marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexOf(this.foregroundDomainMarkers, marker);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = indexFromLocal(this.foregroundDomainMarkers);
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer,boolean),,int index = this.backgroundDomainMarkers.size();
patch is same with buggy,,if (dataset != null) { ,if(dataset!= null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null && dataset.size() > 0) {
increase failing tests, [FE] NullPointerException,if (dataset != null) { ,if(dataset == null) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || DatasetUtilities.isAssignableFrom(dataset)) {
compilation error,[CE] cannot find symbol Feature,if (dataset != null) { ,if(dataset!= null || isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
compilation error,[CE] cannot find symbol length,if (dataset != null) { ,if(dataset!= null || dataset.length == 0) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size() == 0) {
compilation error,[CE] cannot find symbol Feature,if (dataset != null) { ,if(dataset!= null || isEnabled(Feature.AUTO_CLOSE_TARGET)) {
compilation error,[CE] cannot find symbol,if (dataset != null) { ,if(dataset!= null || dataset.size()!= 0) {
compilation error,[CE] cannot find symbol,,XYAxis axis = getAxis();
compilation error,[CE] variable axis is already defined in method configureDomainAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getPlotAxis();
compilation error,[CE] cannot find symbol,,Node axis = getAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getDomainAxes();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getPlot();
compilation error,[CE] cannot find symbol,,NodeAxis axis = getAxis();
compilation error,[CE] cannot find symbol DomainAxes,,DomainAxes = getDomainAxes();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getDomainAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getOwnProperties();
compilation error,[CE] illegal start of expression,} ,super();
compilation error,[CE] illegal start of expression,} ,super(Node.newString(Token.NAME, Token.NAME));
compilation error,[CE] illegal start of expression,} ,super(" < ");
compilation error,[CE] illegal start of expression,} ,super(Node.newString(Token.NAME, SerialUtilities.newInstance()));
compilation error,[CE] generics are not supported in -source 1.4,} ,super(" < "); this.plot = new LinkedHashMap < CategoryPlot>();
compilation error,[CE] illegal start of expression,} ,super(Node.newString(Token.NAME, Token.FUNCTION));
compilation error,[CE] illegal start of expression,} ,super(" < "); this.plot = new java.util.ArrayList();
compilation error,[CE] illegal start of expression,} ,super(Node.newString(Token.NAME, SerialUtilities.EMPTY_ARRAY));
compilation error,[CE] illegal start of expression,} ,super(Node.newString(Token.NAME, SerialUtilities.newHashCode(this)));
compilation error,[CE] illegal start of expression,} ,super(Node.newString("xmlns"));
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index < 0 && index < this.rangeAxes.size()) {
patch is same with buggy,,if (index < this.rangeAxes.size()) { ,if(index < this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index >= this.rangeAxes.size()) {
increase failing tests, [FE] NullPointerException,if (index < this.rangeAxes.size()) { ,if(index <= 0 && index < this.rangeAxes.size()) {
compilation error,[CE] cannot find symbol,if (index < this.rangeAxes.size()) { ,if(!this.rangeAxes.contains(index)&& index < this.rangeAxes.size()) {
compilation error,[CE] cannot find symbol,if (index < this.rangeAxes.size()) { ,if(!this.rangeAxes.contains(index)) {
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker); if(index == 0 && marker.getLength() > 0) { removeRangeMarker(index, marker, layer); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = 0;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = getIndex(index); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1); if(index == 0 && marker instanceof XYPlot) { marker =(XYPlot)marker; }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = 0; if(index == Layer.BOTTOM) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker); if(index == 0 && marker.isEmpty()) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1); if(index == 0 && marker!= null) { marker = new Integer(index, marker.getLowerBound()); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker); if(index == 0 && marker.getLength() > 0) { marker.detachFromLastPointer(); }
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for (int i = 0; i < this.domainAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i= 0; i < this.domainAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i >> this.domainAxes.size(); i++) {
compilation error,[CE] ';' expected,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < the this.domainAxes.size(); i++) {
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++) }
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.length(); i++) {
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.domainAxes.size(); i++) { ,for(int i = 0; i < this.domainAxes.size(); i++)!=
patch is same with buggy,,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = CategoryAnchor.MIDDLE;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POSITION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POSITION;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_POP,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_POP;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POLICY,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POLICY;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POINT,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POINT;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPS,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPS;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIMIZATION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIMIZATION;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_PONSITION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_PONSITION;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTIONAL_POSITION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTIONAL_POSITION;
compilation error,[CE] cannot find symbol DEFAULT_GRIDLINE_OPTION,this.domainGridlinePosition = CategoryAnchor.MIDDLE; ,this.domainGridlinePosition = DEFAULT_GRIDLINE_OPTION;
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location);
compilation error,[CE] cannot find symbol,,this.location.setAxisLocation(getAxis());
compilation error,[CE] cannot find symbol,,this.location.setAxisLocation(FieldUtils.safeMultiply(getAxis(), getAxisLocation()));
compilation error,[CE] cannot find symbol,,super.setAxisLocation(location);
compilation error,[CE] cannot find symbol,,this.location.setAxisLocation(getAxis(), location);
compilation error,[CE] cannot find symbol,,this.location.setAxisLocation(getAxis()); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol locale,,this.location.setAxisLocation(locale); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(getPlotInfo(), location));
compilation error,[CE] cannot find symbol,,super.setDomainAxisLocation(location); notifyListeners(new AxisLocation(this));
compilation error,[CE] cannot find symbol,,this.location.setAxisLocation(getAxis(), location); notifyListeners(new AxisLocation(this));
compilation error,[CE] illegal start of expression,,if(index == 0) { if(marker!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = layers.isEmpty();
compilation error,[CE] cannot find symbol,,XYMarker marker =(XYMarker)layer.getLastPointer();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = layers.contains(marker.getLabel());
compilation error,[CE] cannot find symbol,,XYMarker marker =(XYMarker)layer.getValue(index);
compilation error,[CE] illegal start of expression,,if(index == 0) { if(marker!= null) { removeRangeMarker(); }
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = layers.contains(marker);
compilation error,[CE] illegal start of expression,,if(index == 0) { if(marker!= null) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol,,XYMarker marker =(XYMarker)layer.getLastChange();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = Layer.isRemoved(marker.getLabel(), marker);
compilation error,[CE] illegal start of type,,return getDataItemCount() > 0;
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(series, XYPlot.DEFAULT_LOCKED_ON_DATA));
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(XYPlot.DEFAULT_LOAD_FACTOR, false));
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(XYPlot.DEFAULT_LOCKED_ON_DATA));
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(series, XYPlot.DEFAULT_LOAD_FACTOR));
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(XYPlot.DEFAULT_LOAD_FACTOR));
compilation error,[CE] illegal start of type,,return XYPlot.newInstance();
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(XYPlot.SECOND_ARRAY));
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(series, item));
compilation error,[CE] illegal start of type,,return getDataItem(idFromValue(XYPlot.NONE_OBJECT_TYPE));
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkNotNull(this.domainCrosshairVisible); this.domainCrosshairVisible = false; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkState(this.domainCrosshairVisible); this.domainCrosshairVisible = false; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkArgument(this.domainCrosshairVisible, false); this.domainCrosshairVisible = false; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkArgument(this.domainCrosshairVisible, false); this.domainCrosshairVisible = true; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkNotNull(this.domainCrosshairVisible); this.domainCrosshairVisible = true; }
compilation error,[CE] cannot find symbol Preconditions,this.domainCrosshairVisible = false; ,if(this.domainCrosshairVisible == false) { this.domainCrosshairVisible = false; } else { Preconditions.checkState(this.domainCrosshairVisible, false); this.domainCrosshairVisible = false; }
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_CROSSHAIR_PAINT, Color.green);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.green);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.red);
compilation error,[CE] illegal start of type,,return Collections.emptySet();
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.CREATED_NOT_CROSSHAIR_PAINT);
compilation error,[CE] illegal start of type,,return new CategoryPlot(DeFAULT_CROSSHAIR_PAINT, Color.black);
compilation error,[CE] illegal start of type,,return new CategoryPlot(CategoryPlot.DEFAULT_CROSSHAIR_PAINT, Color.black);
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i= 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] ';' expected,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < the this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getLength(); i++) {
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) }
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++)!=
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol ChartChangeEvent,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEvent.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DatasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] method setType in class ChartChangeEvent cannot be applied to given types;,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED, this);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setPrototypeBasedOn(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol NEW_DATASET_UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.NEW_DATASET_UPDATED);
compilation error,[CE] cannot find symbol UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.UPDATED);
patch is same with buggy,,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
compilation error,[CE] cannot find symbol BOOLEAN_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOLEAN_OR_LEFT, true);
compilation error,[CE] cannot find symbol BOOLEAN_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOLEAN_OR_LEFT, false);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, true);
compilation error,[CE] cannot find symbol BOTTOM_OR_LeFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LeFT, true);
compilation error,[CE] cannot find symbol BOTH_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOTH_OR_LEFT, false);
compilation error,[CE] cannot find symbol BOOM_OR_LEFT,setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false); ,setDomainAxisLocation(AxisLocation.BOOM_OR_LEFT, true);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.rangeAxisLocation);
patch is same with buggy,,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, location);
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(0, location);
compilation error,[CE] cannot find symbol areaAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.areaAxisLocation);
compilation error,[CE] cannot find symbol axisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.axisLocation);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.rangeAxisLocation);
compilation error,[CE] cannot find symbol axisLocation,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.axisLocation);
compilation error,[CE] no suitable method found for set(int,int),this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, 0);
increase failing tests, [FE] NullPointerException,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(index, this.orientation);
compilation error,[CE] cannot find symbol index,this.rangeAxisLocations.set(index, location); ,this.rangeAxisLocations.set(this.index, location);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), this.markers);
increase failing tests, [FE] NullPointerException,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), marker);
patch is same with buggy,,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers);
compilation error,[CE] cannot find symbol markers,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.markers);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.backgroundRangeMarkers);
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.backgroundRangeMarkers.size());
compilation error,[CE] method put in interface Map cannot be applied to given types;,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, this.backgroundRangeMarkers.values());
compilation error,[CE] cannot find symbol NOT_IMPLEMENTED,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, Layer.NOT_IMPLEMENTED);
compilation error,[CE] cannot find symbol WARNING,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, Layer.WARNING);
compilation error,[CE] cannot find symbol State,this.backgroundRangeMarkers.put(new Integer(index), markers); ,this.backgroundRangeMarkers.put(new Integer(index), markers, Layer.State);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasets.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasetToDomainAxis(0.0, 0.0);
patch is same with buggy,,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '!=',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairValue!= null? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairStroke!= null? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '==',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairValue == null? DEFAULT_CROSSHAIR_STROKE : DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '&&',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE && this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol rangeCrosshairValid,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairValid = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, true);
compilation error,[CE] no suitable method found for removeDomainMarker(int,Layer,Marker,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, layer, marker, false);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, false);
compilation error,[CE] no suitable method found for removeDomainMarker(Marker,Layer,int,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(marker, layer, index, true);
compilation error,[CE] cannot find symbol WARNING,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, Layer.WARNING, true);
compilation error,[CE] cannot find symbol layers,return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(index, marker, layers, false);
compilation error,[CE] no suitable method found for removeDomainMarker(Marker,int,Layer,boolean),return removeDomainMarker(index, marker, layer, true); ,return removeDomainMarker(marker, index, layer, false);
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol EventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(EventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DatasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.DatasetChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol ChartChangeEvent,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEvent.DATASET_UPDATED);
patch is same with buggy,,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol DATASET_UPDATED,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.DATASET_UPDATED);
compilation error,[CE] cannot find symbol This,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(This.DATASET_UPDATED);
compilation error,[CE] cannot find symbol datasetChangeEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetChangeEventType.DataSET_UPDATED);
compilation error,[CE] cannot find symbol,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setProperty(ChartChangeEventType.DATASET_UPDATED);
compilation error,[CE] cannot find symbol datasetEventType,e.setType(ChartChangeEventType.DATASET_UPDATED); ,e.setType(this.datasetEventType.DATASET_UPDATED);
patch is same with buggy,,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f);
compilation error,[CE] no suitable constructor found for BasicStroke(float,Stroke),this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f, DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,this.domainZeroBaselineStroke = new BasicStroke(0.5f); ,this.domainZeroBaselineStroke = new BasicStroke(0.5f, DEFAULT_LOAD_FACTOR);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKES;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKES;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.getDomainAxis(); this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairPaint = new java.util.ArrayList();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetItemRenderer(this);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairValue = new XYDatasetItemRenderer(this);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetEntry(this, null);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainCrosshairValue = new XYDatasetItemVisible(true);
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicXYToolTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.dataset = new XYDatasetEntry(this, false);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(domainAxis); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.anchorValue = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new CategoryAxis();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new DomainAxis(domainAxis);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.anchorValue = new Color(0.0f, 0.0f, 0.0f, 0.0f, 0.0f);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = null;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis();
patch is same with buggy,,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOREGROUND) {
increase failing tests, [FE] NullPointerException,if (layer == Layer.FOREGROUND) { ,if(this.foregroundRangeMarkers == null) {
compilation error,[CE] cannot find symbol EXTENDS,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EXTENDS) {
compilation error,[CE] cannot find symbol FOR,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOR) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
increase failing tests, [FE] NullPointerException,if (layer == Layer.FOREGROUND) { ,if(index < 0) {
compilation error,[CE] cannot find symbol ERROR,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.ERROR) {
compilation error,[CE] cannot find symbol EXTERN,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.EXTERN) {
compilation error,[CE] cannot find symbol FOR_EXTENDS,if (layer == Layer.FOREGROUND) { ,if(layer == Layer.FOR_EXTENDS) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty()); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAnchor)super.getDomainAxis(); this.rangeGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINESVISIBLE;
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINESVISIBLE;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAnchor)super.getDomainAxis(); this.rangeGridlinesVisible = DEFAULT_DOMAIN_GRIDLINESVISIBLE;
compilation error,[CE] cannot find symbol dataset,,Preconditions.checkArgument(!this.dataset.isEmpty()); this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINESVISIBLE;
increase failing tests, [FE] NullPointerException,if (axis != null) { ,if(axis == null) {
patch is same with buggy,,if (axis != null) { ,if(axis!= null) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isRange()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isLocal()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isLenient()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.contains("")) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isSupported()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isRequired()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.hasOptionalArg()) {
compilation error,[CE] cannot find symbol,if (axis != null) { ,if(axis!= null ||!axis.isStatic()) {
patch is same with buggy,,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap();
compilation error,[CE] cannot find symbol rangeAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.rangeAxis);
compilation error,[CE] cannot find symbol domainAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedSize(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap2D(this.domainAxis, this.rangeAxis);
compilation error,[CE] cannot find symbol RangeAxis,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap(RangeAxis.getLowerBound());
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMapWithExpectedValue(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap2D(this.domainAxis);
compilation error,[CE] cannot find symbol,this.datasetToRangeAxisMap = new TreeMap(); ,this.datasetToRangeAxisMap = new TreeMap2D(this.rangeAxis);
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0), domainAxis);
compilation error,[CE] cannot find symbol rangeAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, this.rangeAxis);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis), this.rangeAxis);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.rangeAxis.set(0, rangeAxis);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis + 1);
compilation error,[CE] <identifier> expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis).this.mapDatasetToDomainAxis = new HashMap();
compilation error,[CE] bad operand types for binary operator '-',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis - 1);
compilation error,[CE] method clear in class AbstractObjectList cannot be applied to given types;,this.domainAxes.set(0, domainAxis); ,this.domainAxes.clear(0, domainAxis);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.contains(domainAxis)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.contains(domainAxis));
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)&& this.rangeAxisLocations = new ObjectList();
compilation error,[CE] not a statement,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)|| this.rangeAxisLocations!= null;
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.containsKey(domainAxis)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer));
patch is same with buggy,,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black;
compilation error,[CE] ';' expected,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black);
compilation error,[CE] cannot find symbol schwarz,this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.schwarz;
compilation error,[CE] bad operand types for binary operator '+',this.rangeZeroBaselinePaint = Color.black; ,this.rangeZeroBaselinePaint = Color.black + 1;
compilation error,[CE] cannot assign a value to final variable seriesRenderingOrder,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] method getSeriesRenderingOrder in class XYPlot cannot be applied to given types;,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = getSeriesRenderingOrder(SeriesRenderingOrder.REVERSE);
compilation error,[CE] cannot find symbol,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private XYSeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE? super.getPropertyRenderingOrder() : SeriesRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE? super.getPropertyRenderingOrder(series): SeriesRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE? super.random() : SeriesRenderingOrder.REVERSE;
compilation error,[CE] ';' expected,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private Final SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE;
compilation error,[CE] incompatible types,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE; ,private SeriesRenderingOrder seriesRenderingOrder = SeriesRenderingOrder.REVERSE? super.getPropertyRenderingOrder("series"): SeriesRenderingOrder.REVERSE;
compilation error,[CE] generics are not supported in -source 1.4,,private final XYPlotEntry < K, V> = new XYPlotEntry < K, V>();
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = getSeriesRenderingOrder();
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = new HashSet < XYPlot>();
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = new XYPlot(XYPlot.DEFAULT_ENCODING);
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = getSeriesRenderingOrder(XYPlot.class);
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = new XYPlot(XYPlot.getClass().getName());
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = getSeriesRenderingOrder(getPlotType()));
compilation error,[CE] generics are not supported in -source 1.4,,private final XYPlotEntry < K, V> = new XYPlotEntry < K, V>(XYPlot.END_ARRAY);
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = new XYPlot(XYPlot.class);
compilation error,[CE] generics are not supported in -source 1.4,,private final Class <?> seriesRenderingOrder = getSeriesRenderingOrder(getPlotType());
compilation error,[CE] incompatible types,this.datasets = new ObjectList(); ,this.datasets = new ArrayList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new LinkedList();
compilation error,[CE] cannot find symbol,this.datasets = new ObjectList(); ,this.datasets = new TreeSet();
compilation error,[CE] cannot find symbol NullPointer,this.datasets = new ObjectList(); ,this.datasets = new ArrayList(NullPointer.NO_OBJECT_INSETS);
compilation error,[CE] cannot find symbol NullPointer,this.datasets = new ObjectList(); ,this.datasets = new ArrayList(NullPointer.NO_OBJECT_TYPE);
compilation error,[CE] cannot find symbol NullPointer,this.datasets = new ObjectList(); ,this.datasets = new ArrayList(NullPointer.instance);
compilation error,[CE] cannot find symbol NullPointer,this.datasets = new ObjectList(); ,this.datasets = new ArrayList(NullPointer.NO_OBJECT_STANDARD);
compilation error,[CE] cannot find symbol NO_OBJECT_TYPE,this.datasets = new ObjectList(); ,this.datasets = new ArrayList(NullPointerException.NO_OBJECT_TYPE);
compilation error,[CE] cannot find symbol NullPointer,this.datasets = new ObjectList(); ,this.datasets = new ArrayList(NullPointer.NO_OBJECT_ERROR);
compilation error,[CE] cannot find symbol NullPointer,this.datasets = new ObjectList(); ,this.datasets = new ArrayList(NullPointer.NO_OBJECT_ARRAY);
patch is same with buggy,,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap();
compilation error,[CE] no suitable constructor found for HashMap(ObjectList),this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxis,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxis);
compilation error,[CE] cannot find symbol domainAxis,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxis, this.domainAxisLocations);
compilation error,[CE] cannot find symbol domainAxisLocation,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisLocation);
compilation error,[CE] cannot find symbol domainAxis,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxis, this.domainAxis);
compilation error,[CE] cannot find symbol domainAxisName,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(this.domainAxisName, this.domainAxisLocations);
compilation error,[CE] incompatible types,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new ObjectList();
compilation error,[CE] package This does not exist,this.backgroundDomainMarkers = new HashMap(); ,this.backgroundDomainMarkers = new HashMap(This.BackgroundObjects.KEY_ANTIALIASING);
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for (int i = 0; i < this.rangeAxes.size(); i++) {
patch is same with buggy,,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i= 0; i < this.rangeAxes.size(); i++) {
compilation error,[CE] incompatible types,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i >> this.rangeAxes.size(); i++) {
compilation error,[CE] cannot find symbol,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.getLength(); i++) {
compilation error,[CE] ';' expected,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < the this.rangeAxes.size(); i++) {
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++) }
compilation error,[CE] illegal start of expression,for (int i = 0; i < this.rangeAxes.size(); i++) { ,for(int i = 0; i < this.rangeAxes.size(); i++)!=
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation()!= null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().getLo
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation()!= null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().getL
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation() == null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().getLo
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation()!= null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().get
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation()!= null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().getS
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation()!= null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().getCh
compilation error,[CE] cannot find symbol,if (notify) { ,if(this.getRangeAxisLocation()!= null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getScope()!= null) {
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation() == null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().getL
compilation error,[CE] ')' expected,if (notify) { ,if(this.getRangeAxisLocation()!= null || this.getRangeAxisLocation().getLocation().getLocation().getLocation().getLocation().getLocation().getUpperBo
compilation error,[CE] cannot find symbol notify,if (notify) { ,if(this.notify) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.getLength() > 0) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.isNull() && marker.equals("n" + marker.toString())) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.isNull() && marker.tag.equals("n" + marker.toString())) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.isNull() && marker.marker.annotationInstantiationOnScreen(this)) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.isNull() && marker.marker.equals("")) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.isNull() && marker.tag.equals("")) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.getLanguage()!= null) {
compilation error,[CE] illegal start of expression,if (notify) { ,if(notify)&& marker.isNull() && marker.annotation.setRange(0, 1); if(notify)) {
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationException(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationException(getMillis(), location));
compilation error,[CE] illegal start of expression,} ,this.location.setAxisLocation(getAxis()); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationEvent(this));
compilation error,[CE] illegal start of expression,} ,this.location.setIndex(index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationException(getPlotInfo(), location));
compilation error,[CE] illegal start of expression,} ,this.location.setAxisLocation(getAxis()); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setDomainAxisLocation(location); notifyListeners(new AxisLocationManagerException(getPlotInfo(), location));
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol annotationIntrospector,,this.annotationIntrospector = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.getDomainAxis(); this.anchorValue = 0.0;
compilation error,[CE] incompatible types,,this.anchorValue = new java.util.ArrayList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.getItemRenderer(); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DOMAIN_CROSSHAIR_ASSIGN); this.anchorValue = 0.0;
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DOMAIN_ARRAY); this.anchorValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAxis)super.renderer.newInstance(); this.anchorValue = 0.0;
compilation error,[CE] illegal start of expression,} ,this.location.setIndex(index); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,this.location.setIndex(index); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationException(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationChangeEvent(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(getAxis(), location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setAxisLocation(location); notifyListeners(new AxisLocationManagerException(this));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new UnsupportedOperationException(""));
compilation error,[CE] illegal start of expression,} ,super.setRangeAxisLocation(location); notifyListeners(new AxisLocationException(getMillis(), location));
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getIndex();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = ValueAxis.valueOf(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = ValueAxis.valueOf(getBaseValue());
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = ValueAxis.getIndex(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,Integer result = ValueAxis.getInteger(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getValueAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = ValueAxis.getRange(index);
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = indexOf(getValueAxis());
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = getRangeAxis();
compilation error,[CE] variable result is already defined in method getRangeAxis(int),,int result = valueAxis.getRange();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getPropertyRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasetToDomainAxis(0.0, 0.0);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasets.get(itemRenderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)getDefaultItemRenderer();
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot();
compilation error,[CE] illegal start of expression,} ,for(int index = axisIndex; index < 0; itemCount++) { CategoryPlot map =(CategoryPlot)getPlot(); if(map.containsKey(axisIndex)) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.getAxis(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,for(int axisIndex = 0; axisIndex < map.size(); axisIndex++) { if(this.axisIndex instanceof CategoryPlot) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,} ,for(int index = axisIndex; index < 0; itemCount++) { CategoryPlot map =(CategoryPlot)getPlot(); if(map.containsKey(axisIndex)) { this.axisIndex = axisIndex; }
compilation error,[CE] illegal start of expression,} ,map =(CategoryPlot)getPlot(); this.axisIndex = axisIndex;
compilation error,[CE] ';' expected,} ,if(axisIndex < 0) { for(int index = axisIndex; index < -1) { mapDatasetToDomainAxis =(CategoryPlot)this.axisIndex.get(index); }
compilation error,[CE] illegal start of expression,} ,for(int index = axisIndex; index < 0; itemCount++) { CategoryPlot map =(CategoryPlot)getPlot(); if(map.containsKey(axisIndex)) { map.putAll(axisIndex); }
compilation error,[CE] illegal start of expression,} ,for(int index = axisIndex; index < 0; itemCount++) { CategoryPlot map =(CategoryPlot)getPlot(); if(map.containsKey(axisIndex)) { this.map.addChangeListener(this); }
compilation error,[CE] illegal start of expression,} ,for(int index = axisIndex; index < 0; itemCount++) { CategoryPlot map =(CategoryPlot)getPlot(); if(map.containsKey(axisIndex) == 0) { map.putAll(axisIndex); }
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<',if (layer == Layer.FOREGROUND) { ,if(index < Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '>=',if (layer == Layer.FOREGROUND) { ,if(index >= Layer.FOREGROUND) {
compilation error,[CE] 'else' without 'if',if (layer == Layer.FOREGROUND) { ,else if(index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '!=',if (layer == Layer.FOREGROUND) { ,if(index!= Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '==',if (layer == Layer.FOREGROUND) { ,if (index == Layer.FOREGROUND) {
compilation error,[CE] bad operand types for binary operator '<=',if (layer == Layer.FOREGROUND) { ,if(index <= Layer.FOREGROUND) {
compilation error,[CE] illegal start of expression,if (layer == Layer.FOREGROUND) { ,if(index == Layer.FOREGROUND) }
compilation error,[CE] cannot find symbol Feature,if (markers == null) { ,if(markers == null || isEnabled(Feature.AUTO_CLOSE_SOURCE)) {
patch is same with buggy,,if (markers == null) { ,if(markers == null) {
compilation error,[CE] cannot find symbol Feature,if (markers == null) { ,if(markers == null || isEnabled(Feature.AUTO_CLOSE_JSON_ARRAY)) {
compilation error,[CE] bad operand types for binary operator '<=',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers <= null) {
compilation error,[CE] cannot find symbol Feature,if (markers == null) { ,if(markers == null || isEnabled(Feature.AUTO_CLOSE_JSON_OBJECT)) {
compilation error,[CE] bad operand types for binary operator '>=',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers >= null) {
compilation error,[CE] bad operand types for binary operator '<',if (markers == null) { ,if(markers == null || this.backgroundRangeMarkers < null) {
compilation error,[CE] cannot find symbol CHART_CHECKED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CHECKED);
compilation error,[CE] cannot find symbol CHART_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_UPDATED);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.GENERAL);
compilation error,[CE] cannot find symbol CHART,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART);
compilation error,[CE] cannot find symbol COMMA,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.COMMA);
compilation error,[CE] cannot find symbol CDATASET_UPDATED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CDATASET_UPDATED);
compilation error,[CE] constructor PlotChangeEvent in class PlotChangeEvent cannot be applied to given types;,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(this, event);
compilation error,[CE] cannot find symbol CHART_INVALID,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_INVALID);
compilation error,[CE] cannot find symbol NONE,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.NONE);
compilation error,[CE] cannot find symbol CHART_CLOSED,PlotChangeEvent e = new PlotChangeEvent(this); ,PlotChangeEvent e = new PlotChangeEvent(ChartChangeEventType.CHART_CLOSED);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)domainAxis.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)XYDataset.getDataset(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)super.renderingHint();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this.domainAxis);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.domainAxisMap.get();
compilation error,[CE] cannot find symbol renderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderer);
compilation error,[CE] cannot find symbol rangeAxis,this.renderers.set(0, renderer); ,this.renderers.set(0, this.rangeAxis);
patch is same with buggy,,this.renderers.set(0, renderer); ,this.renderers.set(0, renderer);
increase failing tests, [FE] ClassCastException,this.renderers.set(0, renderer); ,this.renderers.set(0, this);
compilation error,[CE] cannot find symbol itemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, this.itemRenderer);
increase failing tests, [FE] ClassCastException,this.renderers.set(0, renderer); ,this.renderers.set(0, this.renderers);
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer(this));
compilation error,[CE] cannot find symbol dataset,this.renderers.set(0, renderer); ,this.renderers.set(0, this.dataset);
compilation error,[CE] cannot find symbol xYItemRenderer,this.renderers.set(0, renderer); ,this.renderers.set(0, xYItemRenderer);
compilation error,[CE] XYItemRenderer is abstract; cannot be instantiated,this.renderers.set(0, renderer); ,this.renderers.set(0, new XYItemRenderer());
patch is same with buggy,,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ArrayList();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new HashMap();
compilation error,[CE] incompatible types,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new TreeMap();
compilation error,[CE] cannot find symbol domainAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.domainAxis);
compilation error,[CE] no suitable constructor found for ObjectList(ObjectList),this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.rangeAxisLocations);
compilation error,[CE] cannot find symbol rangeAxises,this.rangeAxes = new ObjectList(); ,this.rangeAxises = new ObjectList();
compilation error,[CE] cannot find symbol,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new XYArrayList();
increase failing tests, [FE] ArrayIndexOutOfBoundsException,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(0);
compilation error,[CE] cannot find symbol rangeAxis,this.rangeAxes = new ObjectList(); ,this.rangeAxes = new ObjectList(this.rangeAxis);
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] cannot assign a value to final variable rangeCrosshairLockedOnData,private boolean rangeCrosshairLockedOnData = true; ,private final boolean rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,public boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] incompatible types,private boolean rangeCrosshairLockedOnData = true; ,private boolean rangeCrosshairLockedOnData = null;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,private static boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private, boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] <identifier> expected,private boolean rangeCrosshairLockedOnData = true; ,private static rangeCrosshairLockedOnData = false;
increase failing tests, [FE] AssertionFailedError,private boolean rangeCrosshairLockedOnData = true; ,protected boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private super boolean rangeCrosshairLockedOnData = false;
compilation error,[CE] illegal start of type,private boolean rangeCrosshairLockedOnData = true; ,private null rangeCrosshairLockedOnData = true;
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndex();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(getIndex(), index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getIndex(index);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(getPlotIndex(), index);
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getValueAxis();
compilation error,[CE] variable parent is already defined in method getRangeAxis(int),,int parent = getParent();
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexOf(getChildCount());
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(getIndex(), index + 1);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(this);
compilation error,[CE] variable index is already defined in method getRangeAxis(int),,int index = indexInList(getScope(), index);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
patch is same with buggy,,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.5;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
compilation error,[CE] possible loss of precision,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 1.0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 5.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(5.0, 5.0, 5.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 5.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(2.0, 4.0, 4.0, 4.0);
increase failing tests, [FE] AssertionFailedError,this.weight = 1;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); ,this.weight = 0;// only relevant when this is a subplot this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 5.0);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,addAnchorMarker(this, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCROSSHAIR_STROKE;
compilation error,[CE] cannot find symbol Sets,,this.anchorValue = Sets.newHashSet();
compilation error,[CE] double cannot be dereferenced,,this.anchorValue =(CategoryItemRenderer)this.anchorValue.clone();
compilation error,[CE] cannot find symbol Sets,,this.anchorValue = Sets.newHashSet(0.0, 0.0);
compilation error,[CE] cannot find symbol,,this.anchorValue =(CategoryItemRenderer)super.getAnnotationIntrospector();
compilation error,[CE] cannot find symbol Sets,,this.anchorValue = Sets.newHashSet(0.0, 0.0, 0.0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.anchorValue = DEFAULT_ANCROSSHAIR_PAINT;
compilation error,[CE] cannot find symbol BaselineVisible,,this.anchorValue = BaselineVisible.getDefaultAnchor();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_THRESHOLD);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_LOAD_FACTOR, DEFAULT_THRESHOLD);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_ERROR);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_SOURCE));
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_NAME);
compilation error,[CE] call to super must be first statement in constructor,,super(DEFAULT_LOAD_FACTOR, DEFAULT_NAME);
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_TARGET));
compilation error,[CE] ';' expected,,super(DEFAULT_CAPACITY, DEFAULT_LOAD_FACTOR, DEFAULT_THRESHOLD));
compilation error,[CE] cannot find symbol Feature,,Preconditions.checkArgument(isEnabled(Feature.AUTO_CLOSE_JSON_ARRAY));
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(getItemRenderer());
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.datasets.get(renderer);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasets.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,baseline = java.util.ArrayList(); this.anchorValue = new java.util.ArrayList();
compilation error,[CE] cannot find symbol Baseline,,Baseline.Paint = baseline.getPaint(); this.anchorValue = baseline.getPaint();
compilation error,[CE] cannot find symbol,,baseline = java.util.ArrayList();
compilation error,[CE] cannot find symbol Baseline,,Baseline.Paint = baseline.getPaint();
compilation error,[CE] cannot find symbol,,baseline = getItemLineVisible(baseline); this.anchorValue = baseline.getAnnotation(Renderer.class);
compilation error,[CE] cannot find symbol,,baseline = getItemLineVisible(baseline); this.anchorValue = baseline.getValue();
compilation error,[CE] cannot find symbol Baseline,,Baseline.Paint = baseline.getPaint(); this.anchorValue = baseline.getAxis();
compilation error,[CE] cannot find symbol,,baseline = BaselineUtilities.getCategoryBaseline(getItemRenderer());
compilation error,[CE] cannot find symbol baseline,,baseline = BaselineUtilities.getBounds(this.baseline, Layer.BACKGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation!= PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation!= PlotOrientation.HORIZONTAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.orientation!= PlotOrientation.HORIZONTAL);
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation!= PlotOrientation.HORIZONTAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation!= PlotOrientation.VERTICAL); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation!= PlotOrientation.HORIZONTAL); this.dataset = new ObjectList();
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(this.data.size()!= 0); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty()); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkState(this.orientation == PlotOrientation.HORIZONTAL);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final int index = indexOf(layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.SECOND_ARRAY)+ 1;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(layer);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.SECOND_ARRAY);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexFromLastPointer(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.SECOND_ARRAY, marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,final int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(XYPlot.INSTANCE);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.FOREGROUND);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.iterateDataset(dataset);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAnchor)super.mappingException("");
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty());
compilation error,[CE] cannot find symbol dataset,,this.dataset = DatasetUtilities.iterateCategoryDataset(dataset);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAnchor)super.getItemRenderer();
compilation error,[CE] cannot find symbol dataset,,this.dataset = Sets.newHashSet();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis =(CategoryAnchor)dataset.clone();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new TreeMap();
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)); this.domainAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.contains(domainAxis)); this.domainAxisLocations = new TreeMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkArgument(this.domainAxisLocations!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol,,Preconditions.checkArgument(!this.domainAxisLocations.contains(domainAxis)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof XYDomainAxisLocations); this.domainAxisLocations = new TreeMap();
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof XYItemRenderer)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[XYPlot.INSTANCE_OUTLINE_PAINT];
compilation error,[CE] illegal start of type,,return new Paint[] { null, null, null, null } ;
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[XYPlot.INSTANCE_ERROR];
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[XYPlot.ENSHOLD];
compilation error,[CE] <identifier> expected,,private transient Paint[] quadrantPaint = new Paint[XYPlot.DEFAULT_CAPACITY], null, null, null, null } ;
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[XYPlot.INSTANCE_UPPER_PADDING];
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[XYPlot.INSTANCE_PAINT];
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = Color.black;
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[XYPlot.INSTANCE_UPPER_PAINT];
compilation error,[CE] variable quadrantPaint is already defined in class XYPlot,,private transient Paint[] quadrantPaint = new Paint[0];
compilation error,[CE] call to this must be first statement in constructor,,this(null);
compilation error,[CE] call to this must be first statement in constructor,,this(new Dataset(dataset, domainAxis), RangeAxis.STANDARD);
compilation error,[CE] call to this must be first statement in constructor,,this(null, dataset, domainAxis, rangeAxis);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] call to this must be first statement in constructor,,this(null, dataset, domainAxis, rangeAxis, renderer);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null);
compilation error,[CE] call to this must be first statement in constructor,,this(null, null, dataset, domainAxis, rangeAxis);
compilation error,[CE] call to this must be first statement in constructor,,this(new Dataset(dataset, domainAxis));
compilation error,[CE] call to this must be first statement in constructor,,this(new Dataset(dataset, domainAxis), rangeAxis, renderer);
compilation error,[CE] call to this must be first statement in constructor,,this(new Dataset(dataset, domainAxis), new RangeAxisItemRenderer());
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)XYDataset.getDataset(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = new XYItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(dataset);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)XYDataset.newInstance();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)XYDataset.getDataset(this);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)this.datasets.get(0);
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer = this.getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer),,XYItemRenderer renderer =(XYItemRenderer)XYDataset.clone();
patch is same with buggy,,return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return marker == null? null : marker.removeDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeTopMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeCategoryMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPaths(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeAllPaths(marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return removeLeftDomainMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return marker == null? null : marker.remove(layer, marker);
compilation error,[CE] cannot find symbol,return removeDomainMarker(0, marker, layer); ,return marker == null? null : marker.detachFromParam();
compilation error,[CE] no suitable method found for removeDomainMarker(Layer,Marker),return removeDomainMarker(0, marker, layer); ,return removeDomainMarker(layer, marker);
patch is same with buggy,,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] no suitable constructor found for BasicStroke(String),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke("NO_CROSSHAIR_STROKE");
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 0;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new HashMap();
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 5.0;
compilation error,[CE] incompatible types,public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = 123;
compilation error,[CE] no suitable constructor found for BasicStroke(String),public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE; ,public static final Stroke DEFAULT_CROSSHAIR_STROKE = new BasicStroke("JavaScript.AsPath");
patch is same with buggy,,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '+',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE + 2;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAP;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADDING;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PADD;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint += DEFAULT_CROSSHAIR_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAPPER;
compilation error,[CE] bad operand types for binary operator '||',this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE; ,this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE || this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAPINT;
patch is same with buggy,,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);
compilation error,[CE] cannot find symbol,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setupRangeAxisLocation(AxisLocation.TOP_OR_LEFT, true);
compilation error,[CE] cannot find symbol TEP_OR_LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TEP_OR_LEFT, true);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,<null>),setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, null);
compilation error,[CE] cannot find symbol TEOP_OR_LEFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TEOP_OR_LEFT, true);
compilation error,[CE] no suitable method found for setRangeAxisLocation(AxisLocation,CategoryPlot),setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, this);
increase failing tests, [FE] NullPointerException,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_RIGHT, true);
compilation error,[CE] cannot find symbol TOP_OR_LeFT,setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false); ,setRangeAxisLocation(AxisLocation.TOP_OR_LeFT, true);
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,this.setValueAxis(domainAxis); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0, 0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol,,this.setValueAxis(domainAxis); this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] cannot find symbol,,this.setValueAxis(domainAxis); this.mapDatasetToRangeAxis(0.0, 0.0);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.mapDatasetToRangeAxis(0.0, 0);
compilation error,[CE] method getRowKey in interface KeyedValues2D cannot be applied to given types;,,this.setSeriesKey(dataset.getRowKey(null)); this.setSeriesIndex(series);
compilation error,[CE] ValueAxis is abstract; cannot be instantiated,,this.setValueAxis(new ValueAxis(domainAxis));
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeAxis = new RangeAxisListener(this);
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = createDomainAxisLocations();
compilation error,[CE] cannot find symbol Sets,,this.domainAxisLocations = Sets.newHashSet();
compilation error,[CE] cannot find symbol Maps,,this.rangeAxisLocations = Maps.newHashMap();
compilation error,[CE] cannot find symbol Lists,,this.domainAxisLocations = Lists.newArrayList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = Collections.emptyList();
compilation error,[CE] incompatible types,,this.domainAxisLocations = Collections.emptySet();
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.clone();
compilation error,[CE] cannot find symbol,,this.domainAxisLocations = new ValueAxisLocation(this.dataset);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 1);
patch is same with buggy,,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 0);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 4);
compilation error,[CE] method mapDatasetToDomainAxis in class XYPlot cannot be applied to given types;,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0.0, 0.0);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 3);
increase failing tests, [FE] AssertionFailedError,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 2);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 7);
increase failing tests, [FE] NullPointerException,this.mapDatasetToDomainAxis(0, 0); ,this.mapDatasetToDomainAxis(0, 10);
patch is same with buggy,,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL;
increase failing tests, [FE] NullPointerException,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.HORIZONTAL? PlotOrientation.VERTICAL : PlotOrientation.HORIZONTAL;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.FALSE : PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol NONE,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.NONE;
compilation error,[CE] incompatible types,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL? PlotOrientation.POSITIVE : PlotOrientation.HORIZONTAL;
compilation error,[CE] bad operand types for binary operator '&&',this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.VERTICAL && PlotOrientation.HORIZONTAL!= PlotOrientation.VERTICAL;
compilation error,[CE] cannot find symbol POSITIVE_INFINITY,this.orientation = PlotOrientation.VERTICAL; ,this.orientation = PlotOrientation.POSITIVE_INFINITY;
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setOrientation(PlotOrientation.HORIZONTAL); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setOrientation(PlotOrientation.VERTICAL); }
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.removeBounds(marker, Layer.FOREGROUND);
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.detachFromLastPointer(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setLength(0); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setItem(layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.detachFromLabel(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { marker = new HashMap(); if(marker!= null) { marker.detachFromLastPointer(); }
compilation error,[CE] cannot find symbol LayerUtilities,,LayerUtilities.removeLastAnnotation(marker, Layer.FOREGROUND);
compilation error,[CE] cannot find symbol SECOND,,LayerUtilities.removeBounds(marker, Layer.SECOND);
compilation error,[CE] cannot find symbol,,XYMarker marker =(XYMarker)super.removeDomainMarker(marker, layer);
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setOrientation(PlotOrientation.HORIZONTAL); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setOrientation(PlotOrientation.VERTICAL); }
compilation error,[CE] cannot find symbol,,XYMarker marker =(XYMarker)super.removeDomainMarker(marker);
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setAliased(true); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setItem(layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setDomainMarker(marker); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.detachFromLastPointer(); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setLabel(layer); }
compilation error,[CE] illegal start of expression,,if(marker == null) { XYMarker marker = new HashMap(); if(marker!= null) { marker.setLabel(null); }
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,int index = indexOf(marker);
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.FOREGROUND);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = this.markers.remove(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Object marker = this.markers.remove(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker =(Marker)this.markers.get(index);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Marker marker = this.markers.get(index);
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = this.markers.isEmpty();
compilation error,[CE] variable notify is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,boolean notify = this.marker!= null;
compilation error,[CE] variable index is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Integer index = indexInList(this, Layer.SEPARATOR);
compilation error,[CE] variable marker is already defined in method removeRangeMarker(int,Marker,Layer,boolean),,Object marker = this.markers.get(index);
compilation error,[CE] cannot find symbol Validate,,Validate.notNull(domainAxis); Validate.notNull(rangeAxis);
compilation error,[CE] cannot find symbol Maps,,this.domainAxisLocations = Maps.newHashMap();
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.get(0); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.get(0); this.rangeAxisLocations.set(0, 0);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.clone(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)domainAxis.clone(); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.clone(); this.rangeAxisLocations.set(0, 0);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)this.domainAxisLocations.get(0); this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);
compilation error,[CE] incompatible types,,this.domainAxisLocations =(ValueAxis)domainAxis.clone(); this.rangeAxisLocations.set(0, 0);
compilation error,[CE] cannot find symbol,,this.domainAxisLocations =(ValueAxis)domainAxis.getLocation(); this.rangeAxisLocations.set(0, 0);
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0); this.plot = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.itemRenderer = new HashMap();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0); this.itemRenderer = new HashMap();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(0.0, 0.0, 0.0, 0.0); this.plot = new HashMap();
compilation error,[CE] cannot find symbol labelOffset,,this.labelOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0); this.plot = new HashMap();
compilation error,[CE] cannot find symbol itemRenderer,,this.itemRenderer = createItemRenderer(new XYItemRenderer()); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol dataset,,this.dataset = new HashMap();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset();
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size());
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this);
compilation error,[CE] incompatible types,CategoryDataset result = null; ,CategoryDataset result = this;
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size() - index);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size() + index);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size(), index);
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(getDataset(index));
compilation error,[CE] CategoryDataset is abstract; cannot be instantiated,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(this.datasets.size() * index);
compilation error,[CE] cannot find symbol,CategoryDataset result = null; ,CategoryDataset result = new CategoryDataset(NullPointerException.getValue());
compilation error,[CE] illegal start of type,,return new Point2D.Double(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Boolean(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Integer(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Value(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Float(0.0, 0.0);
compilation error,[CE] illegal start of type,,return new Point2D.Double(0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.0f, 0.0f);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Integer(0.0, 0.0);
compilation error,[CE] variable quadrantOrigin is already defined in class XYPlot,,private transient Point2D quadrantOrigin = new Point2D.Double(0.00, 0.0);
increase failing tests, [FE] AssertionFailedError,,this.rangeAxes.clear();
compilation error,[CE] cannot find symbol,,this.rangeAxes.set(i, new XYPlotId());
compilation error,[CE] cannot find symbol,,this.rangeAxes.set(i, new XYPlotImpl());
compilation error,[CE] cannot find symbol,,this.rangeAxes.put(i, new XYPlotId());
compilation error,[CE] cannot find symbol,,initRangeAxes();
compilation error,[CE] no suitable constructor found for XYPlot(XYPlot),,this.rangeAxes.put(i, new XYPlot(this));
compilation error,[CE] cannot find symbol plot,,PlotOrientation orientation = plot.getOrientation();
compilation error,[CE] cannot find symbol RangeAxis,,XYPlot.setAxis(RangeAxis.getLowerBound());
compilation error,[CE] cannot find symbol,,XYPlot.setAutoRange(true);
compilation error,[CE] cannot find symbol RangeAxis,,XYPlot.setAxis(RangeAxis.getLowerBound);
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getAxis();
compilation error,[CE] cannot find symbol,,XYAxis axis = getAxis();
compilation error,[CE] cannot find symbol,,RangeAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol RangeAxises,,RangeAxises = getRangeAxis();
compilation error,[CE] variable axis is already defined in method configureRangeAxes(),,Axis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,NumberAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,Anxis axis = getRangeAxis();
compilation error,[CE] cannot find symbol,,XYPlotAxis axis = getPlotAxis();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getProperty(index);
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPropertyPlot();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getOwner();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPlotParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getCodingContext();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getProperty();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPropertyParent();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getPosition();
compilation error,[CE] cannot find symbol,Plot parent = getParent(); ,Plot parent = getConstructor();
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1); if(index == 0 && marker.isEmpty()) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.parseInt(index, marker); if(index == 0 && marker.isEmpty()) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.toHexString(index, marker.getLowerBound());
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.parseInt(index, marker); if(index == 0 && marker.isEmpty()) { throw new NullPointerException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.toHexString(index + 1); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.parseInt(index, marker); if(index == 0 && marker.isEmpty()) { removeDomainMarker(index, marker, layer); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = Integer.parseInt(index, marker); if(index == 0 && marker.isEmpty()) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = indexOf(marker, Layer.FOREGROUND); if(index == 0) { marker.setLength(0); }
compilation error,[CE] variable index is already defined in method removeDomainMarker(int,Marker,Layer),,int index = marker.getLength(); if(index == 0) { marker.setLength(0); }
patch is same with buggy,,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return marker == null? null : marker.removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return marker!= null? null : marker.removeRangeMarker(0, marker, layer);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Marker,Layer,<null>),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, null);
compilation error,[CE] cannot find symbol,return removeRangeMarker(0, marker, layer); ,return marker.removeRangeMarker(0, marker, layer);
compilation error,[CE] cannot find symbol DEFAULT_LOAD_FACTOR,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_LOAD_FACTOR);
compilation error,[CE] cannot find symbol DEFAULT_CAPACITY,return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, marker, layer, XYPlot.DEFAULT_CAPACITY);
compilation error,[CE] no suitable method found for removeRangeMarker(int,Layer,Marker),return removeRangeMarker(0, marker, layer); ,return removeRangeMarker(0, layer, marker);
compilation error,[CE] cannot find symbol,,fireDatasetChanged();
compilation error,[CE] no suitable method found for isJavaIdentifierPart(XYPlot),,if(!Character.isJavaIdentifierPart(this)) { event.setChangeEvent(getDatasetChangeEvent()); } else { fireDatasetChanged(); }
compilation error,[CE] no suitable method found for isJavaIdentifierPart(XYPlot),,if(!Character.isJavaIdentifierPart(this)) { throw new IllegalArgumentException(""); }
compilation error,[CE] ,,if(event!= null) { throw new IllegalStateException(""); } else { EventUtilities.redeclareVarsInsideEvent(event, false)); }
compilation error,[CE] no suitable method found for isJavaIdentifierPart(XYPlot),,if(!Character.isJavaIdentifierPart(this)) { throw new IllegalStateException(""); } else { this.event.addChangeListener(new DatasetChangeEvent(this)); }
compilation error,[CE] no suitable method found for isJavaIdentifierPart(XYPlot),,if(!Character.isJavaIdentifierPart(this)) { throw new IllegalStateException(""); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] cannot find symbol event,,if(this.event!= null) { throw new IllegalStateException(""); }
compilation error,[CE] ,,if(event!= null) { throw new IllegalStateException(""); } else { EventUtilities.redeclareVarsInsideBranch(event, false)); }
compilation error,[CE] no suitable method found for isJavaIdentifierPart(XYPlot),,if(!Character.isJavaIdentifierPart(this)) { throw new IllegalStateException(""); } else { this.event.addChangeEvent(getDataset(), event); }
patch is same with buggy,,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapper();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashSet();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMappedToLastCycle();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapAdapter("BackgroundRangeMarkers");
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapTraversal();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMappedToLastHashMap();
compilation error,[CE] cannot find symbol anchorValues,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMap(this.anchorValues);
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMappedToLastPointer();
compilation error,[CE] cannot find symbol,this.backgroundRangeMarkers = new HashMap(); ,this.backgroundRangeMarkers = new HashMapAdapter(DEFAULT_BACKGROUND);
compilation error,[CE] illegal start of expression,,if(index < 0) { if(this.markers!= null) { throw new IllegalArgumentException(""); }
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.markers.size();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.indexOf(markers.size() - 1);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = 0;
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(index).intValue();
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = this.indexOf(markers, Layer.FOREGROUND);
compilation error,[CE] variable index is already defined in method addRangeMarker(int,Marker,Layer,boolean),,int index = Integer.valueOf(index).intValue(); this.markers.add(marker);
compilation error,[CE] illegal start of expression,,if(index < 0) { if(this.markers!= null) { throw new UnsupportedOperationException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(this.markers == null) { throw new IllegalArgumentException(""); }
compilation error,[CE] illegal start of expression,,if(index < 0) { if(this.markers!= null) { throw new IllegalStateException(""); }
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis == null) {
compilation error,[CE] bad operand types for binary operator '==',if (rangeAxis != null) { ,if(rangeAxis!= null && this.domainGridlinePosition == DEFAULT_DOMAIN_GRIDLINES_VISIBLE) {
compilation error,[CE] cannot find symbol domainAxisPosition,if (rangeAxis != null) { ,if(rangeAxis!= null && this.domainAxisPosition == DEFAULT_DOMAIN_GRIDLINES_VISIBLE) {
patch is same with buggy,,if (rangeAxis != null) { ,if(rangeAxis!= null) {
compilation error,[CE] cannot find symbol domainAxisPosition,if (rangeAxis != null) { ,if(rangeAxis!= null && this.domainAxisPosition == CategoryAnchor.MIDDLE) {
increase failing tests, [FE] NullPointerException,if (rangeAxis != null) { ,if(rangeAxis!= null && this.domainGridlinePosition == CategoryAnchor.MIDDLE) {
compilation error,[CE] cannot find symbol MIN_VALUE,if (rangeAxis != null) { ,if(rangeAxis!= null && this.domainGridlinePosition == CategoryDataset.MIN_VALUE) {
compilation error,[CE] cannot find symbol DEFAULT,if (rangeAxis != null) { ,if(rangeAxis!= null && this.domainGridlinePosition == CategoryDataset.DEFAULT) {
compilation error,[CE] cannot find symbol,if (rangeAxis != null) { ,if(rangeAxis!= null && rangeAxis.containsChangeListener()) {
compilation error,[CE] cannot find symbol domainAxisPosition,if (rangeAxis != null) { ,if(rangeAxis!= null && this.domainAxisPosition == CategoryDataset.DEFAULT) {
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); setBaseToolTipGenerator(new BasicTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new DatasetTipGenerator();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); setBaseToolTipGenerator(new BasicTipGenerator()).setBaseToolTipGenerator(new BasicTipGenerator());
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new XYDatasetItemTipGenerator();
compilation error,[CE] ')' expected,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new XYDataset(this.datasetGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGenerator
compilation error,[CE] ')' expected,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new XYDataset(this.datasetGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGen
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); setBaseToolTipGenerator(new BasicTipGenerator(), new BasicTipGenerator());
compilation error,[CE] ')' expected,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new XYDataset(this.datasetGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGen
compilation error,[CE] ')' expected,,renderer.setBaseToolTipGenerator(new BasicToolTipGenerator()); this.dataset = new XYDataset(this.datasetGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGeneratorGenerator
patch is same with buggy,,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis);
compilation error,[CE] no suitable method found for set(int,ValueAxis,AxisLocation),this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol DomainAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, DomainAxis.BOTTOM_OR_RIGHT);
compilation error,[CE] cannot find symbol rangeAxis,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, this.rangeAxis);
compilation error,[CE] cannot find symbol domainAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxisLocation);
compilation error,[CE] ';' expected,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0), domainAxis);
compilation error,[CE] cannot find symbol BOTTOM_OR_CENTER,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, AxisLocation.BOTTOM_OR_CENTER);
compilation error,[CE] cannot find symbol rangeAxisLocation,this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis, this.rangeAxisLocation);
compilation error,[CE] cannot find symbol domainAxises,this.domainAxes.set(0, domainAxis); ,this.domainAxises.set(0, domainAxis);
compilation error,[CE] bad operand types for binary operator '+',this.domainAxes.set(0, domainAxis); ,this.domainAxes.set(0, domainAxis + 1);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,Integer axisIndex = indexInList(this, getAxis());
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = XYPlot.getIndex(axisIndex);
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getAxisIndex();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getRangeIndex(axisIndex);
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,int axisIndex = getAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = getIndex(axisIndex).intValue();
compilation error,[CE] variable axisIndex is already defined in method mapDatasetToRangeAxis(int,int),,Integer axisIndex = getAxis();
compilation error,[CE] variable index is already defined in method mapDatasetToRangeAxis(int,int),,int index = XYPlot.getIndex();
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = new ObjectList();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.domainAxisLocations = new ObjectList();
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof CategoryItemRenderer)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] ';' expected,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAxis)); this.domainAxisLocations = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis!= null); this.domainAxis = new ObjectList();
compilation error,[CE] cannot find symbol domainAxis,,Preconditions.checkArgument(this.domainAxis instanceof CategoryAxis); this.domainAxisLocations = new ObjectList();
compilation error,[CE] incompatible types,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(index);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(index);
patch is same with buggy,,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker);
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker.getLowerBound());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLabel());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker.getName());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = marker.remove(marker.getLowerBound());
compilation error,[CE] cannot find symbol,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(marker.getLocation());
compilation error,[CE] cannot find symbol zone,boolean removed = markers.remove(marker); ,boolean removed = markers.remove(zone);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = this.datasets.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)getItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getValueRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = new CategoryItemRenderer(this);
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)this.dataset.getRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer = getDefaultItemRenderer();
compilation error,[CE] variable renderer is already defined in constructor CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer),,CategoryItemRenderer renderer =(CategoryItemRenderer)super.getRenderer();
patch is same with buggy,,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index);
compilation error,[CE] cannot find symbol WHOLE_COLLECTION,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, WHOLE_COLLECTION);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index-1);
compilation error,[CE] cannot find symbol DEFAULT,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.DEFAULT);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index + 1);
compilation error,[CE] cannot find symbol NAME_ARRAY,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, XYPlot.NAME_ARRAY);
increase failing tests, [FE] NullPointerException,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index - 1);
compilation error,[CE] cannot find symbol JXPathContext,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, JXPathContext.TYPE_OBJECT);
compilation error,[CE] cannot find symbol JXPathContext,result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, JXPathContext.XY_VALUE);
compilation error,[CE] no suitable method found for get(int,<null>),result = (XYDataset) this.datasets.get(index); ,result =(XYDataset)this.datasets.get(index, null);
patch is same with buggy,,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 1;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;
compilation error,[CE] cannot find symbol,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE && isStandardStroke(DEFAULT_GRIDLINE_STROKE);
compilation error,[CE] bad operand types for binary operator '+',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE + 2;
compilation error,[CE] bad operand types for binary operator ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE &&"goog".equals(this.rangeGridlinePaint);
compilation error,[CE] ';' expected,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT);
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_OPTIONAL_PAINT;
compilation error,[CE] bad operand types for binary operator '||',this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE || this.rangeGridlinePaint = DEFAULT_GRIDLINE_APPROP;
compilation error,[CE] incompatible types,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE; ,this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE? DEFAULT_GRIDLINE_STROKE : NEW;
compilation error,[CE] call to super must be first statement in constructor,,super();
compilation error,[CE] call to super must be first statement in constructor,,super(); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(XYDataset.TYPE_OBJECT); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] call to super must be first statement in constructor,,super(XYDataset.TYPE_INT_ARRAY); this.orientation = PlotOrientation.HORIZONTAL;
compilation error,[CE] cannot find symbol data,,Preconditions.checkArgument(!this.data.isEmpty());
compilation error,[CE] call to super must be first statement in constructor,,super(XYDataset.TYPE_INT_ARRAY); this.dataset = new HashMap();
compilation error,[CE] cannot find symbol Preconditions,,Preconditions.checkNotNull(this); this.dataset = new HashMap();
compilation error,[CE] call to super must be first statement in constructor,,super(XYDataset.TYPE_OBJECT); this.plot = new HashMap();
compilation error,[CE] cannot find symbol plot,,this.plot = new XYPlot(DatasetUtilities.toString(0.0, 0.0, 0.0));
compilation error,[CE] call to super must be first statement in constructor,,super(XYDataset.TYPE_OBJECT); this.plot = new XYPlot();
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f);
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f);
compilation error,[CE] cannot find symbol,,CategoryPlot plot =(CategoryPlot)getPlot();
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f);
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 2.0f, 0.0f);
compilation error,[CE] invalid method declaration; return type required,,CategoryPlot plot =(CategoryPlot)getPlot(); getPlot().setValue(Stroke.DEFAULT_GRIDLINE_STROKE);
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 2.0f);
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 2.0f, 0.0f);
increase failing tests, [FE] AssertionFailedError,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 1.0f);
increase failing tests, [FE] NullPointerException,,CategoryPlot plot =(CategoryPlot)getPlot(); static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 2.0f, 0.0f);
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = getDomainAxis(); this.rangeCrosshairValue = DEFAULT_CROSSHAIR_VALUE;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator()); this.domainAxis = domainAxis;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_DOMAIN_AXIS); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_ASSIGN); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.rangeCrosshairValue = 0.0;
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PADDING); this.domainAxis = renderer.getDomainAxis();
compilation error,[CE] cannot find symbol,,renderer.setBaseToolTipGenerator(new XYToolTipGenerator());
compilation error,[CE] cannot find symbol domainAxis,,this.domainAxis = renderer.findDomainAxis(DEFAULT_CROSSHAIR_STROKE, DEFAULT_CROSSHAIR_PAINT); this.domainAxis = getDomainAxis();
