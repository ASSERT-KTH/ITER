projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239returnx1;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239returninverted?x0:x1;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239returninverted?x1:x0;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239returninverted?x1,x0:x1;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239returnf1?x0:x1;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239inverted?x0:x1;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239returninverted?x0:x0;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239inverted?x1:x0;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239if(f1<=0){returnx0;}
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239returninverted?x0:x;
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239x0=Math.max(relativeAccuracy*FastMath.abs(x1),absoluteAccuracy);
projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java239x0=Math.max(relativeAccuracy*FastMath.abs(x1),absoluteAccuracy);break;
