bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.length);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.length);  [BUGGY]    [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.length);	}  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.doubleValue());  [BUGGY]    [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.doubleValue());	}  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask());  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask());  [BUGGY]    [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask());	}  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getValue());  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getValue());  [BUGGY]    [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getValue());	}  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    [BUGGY]    [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
6	[BUG]  [BUGGY]    ILLINOIS  =  method.getAllowedSolutions();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getAllowedSolutions();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getAllowedSolutions();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
7	[BUG]  [BUGGY]    ILLINOIS  =  method.getAllowSolutions();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getAllowSolutions();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getAllowSolutions();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
8	[BUG]  [BUGGY]    ILLINOIS  =  method.getMillis();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getMillis();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getMillis();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
9	[BUG]  [BUGGY]    ILLINOIS  =  method.getInitializingSolution();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getInitializingSolution();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getInitializingSolution();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
10	[BUG]  [BUGGY]    ILLINOIS  =  method.getAllowedSolutions().size();  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getAllowedSolutions().size();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getAllowedSolutions().size();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
11	[BUG]  [BUGGY]    ILLINOIS  =  method.getAllowSecantSolutions();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getAllowSecantSolutions();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getAllowSecantSolutions();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
12	[BUG]  [BUGGY]    ILLINOIS  =  method.getInitialValue();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getInitialValue();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getInitialValue();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
13	[BUG]  [BUGGY]    ILLINOIS  =  method.getAllowSolver();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getAllowSolver();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getAllowSolver();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
14	[BUG]  [BUGGY]    ILLINOIS  =  method.getAllowSecants();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getAllowSecants();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getAllowSecants();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
15	[BUG]  [BUGGY]    ILLINOIS  =  method.getMean();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]    ILLINOIS  =  method.getMean();  [BUGGY]  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	    ILLINOIS  =  method.getMean();		non-compiled	[CE]  illegal  start  of  expression	55	None	add
16	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSeconds();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;  [BUGGY]  ILLINOIS  =  method.getInitializingSeconds();  [BUGGY]    [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSeconds();	}  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
