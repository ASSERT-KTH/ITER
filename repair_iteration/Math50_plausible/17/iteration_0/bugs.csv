bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
33	[BUG] [BUGGY] switch (method) { [FE] AssertionError [CONTEXT] if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; } else { [BUGGY] switch (method) { [BUGGY] case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break; case REGULA_FALSI:  if (x == x1) { x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol)); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	178	178	1	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; } else { [BUGGY] [BUGGY] switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break; case REGULA_FALSI:  if (x == x1) { x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol)); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	178	178	1	add	
