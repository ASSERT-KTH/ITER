bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  f0  =  Math.min(0.0,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.min(0.0,  inverted  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.min(0.0,  inverted  +  1);	  f0    =    Math.min(0.0,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2	[BUG]  [BUGGY]  f0  =  Math.min(0.0,  inverted  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.min(0.0,  inverted  +  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.min(0.0,  inverted  +  2);	  f0    =    Math.min(0.0,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
3	[BUG]  [BUGGY]  final  double  f1  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeFunctionValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeFunctionValue(x0);	  final    double    f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
4	[BUG]  [BUGGY]  final  double  f1  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeObjectiveValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeObjectiveValue(x1);	  final    double    f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
5	[BUG]  [BUGGY]  final  double  f1  =  computeIntegerValue(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeIntegerValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeIntegerValue(x0);	  final    double    f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
6	[BUG]  [BUGGY]  f1  =  Math.max(fx,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(fx,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(fx,  fx  +  1);	  f1    =    Math.max(f1,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  f1  =  Math.max(f0,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(f0,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(f0,  fx  +  1);	  f1    =    Math.max(f1,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  f1  =  Math.max(f1,  fx  *  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(f1,  fx  *  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(f1,  fx  *  1);	  f1    =    Math.max(f1,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  f1  =  Math.max(fx,  f0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(fx,  f0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(fx,  f0);	  f1    =    Math.max(f0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  fx  =  computeFloatValue(x,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFloatValue(x,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFloatValue(x,  fx  +  1);	  fx    =    computeFloatValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
11	[BUG]  [BUGGY]  fx  =  computeIntValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeIntValue(x,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeIntValue(x,  fx);	  fx    =    computeFloatValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
12	[BUG]  [BUGGY]  final  double  f1  =  computeLongValue(x);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeLongValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeLongValue(x);	  final    double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
13	[BUG]  [BUGGY]  final  double  f1  =  computeFloatValue(x);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeFloatValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeFloatValue(x);	  final    double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
14	[BUG]  [BUGGY]  if  (fx  *  f0  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  f0  >  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  f0  >  0)  {	  if    (fx    *    f1    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  fx  =  computeLongValue(x);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeLongValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeLongValue(x);	  fx    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
16	[BUG]  [BUGGY]  fx  =  computeIntegerValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeIntegerValue(x  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeIntegerValue(x  +  1);	  fx    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
17	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFunctionValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFunctionValue(x0);	  fx    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  fx  *  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  fx  *  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  fx  *  1);	  f1    =    Math.min(0.0,    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
19	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.0,  fx  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.0,  fx  -  1);	  f1    =    Math.min(0.0,    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
20	[BUG]  [BUGGY]  if  (fx  *  f0!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  f0!=  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  f0!=  0)  {	  if    (fx    *    f1!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
21	[BUG]  [BUGGY]  if  (f0  *  fx  >=  0.5)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (f0  *  fx  >=  0.5)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (f0  *  fx  >=  0.5)  {	  if    (f0    *    fx    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  if  (f0  *  fx  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (f0  *  fx  ==  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (f0  *  fx  ==  0)  {	  if    (f0    *    fx    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  if  (f0  *  fx  >  0.5)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (f0  *  fx  >  0.5)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (f0  *  fx  >  0.5)  {	  if    (f0    *    fx    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  f0  =  Math.max(relativeAccuracy,  computeObjectiveValue(x));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(relativeAccuracy,  computeObjectiveValue(x));  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(relativeAccuracy,  computeObjectiveValue(x));	  f0    =    Math.max(fx,    computeObjectiveValue(x));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  f0  =  Math.min(fx,  computeObjectiveValue(x));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.min(fx,  computeObjectiveValue(x));  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.min(fx,  computeObjectiveValue(x));	  f0    =    Math.max(fx,    computeObjectiveValue(x));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
26	[BUG]  [BUGGY]  f0  =  Math.max(f0,  computeObjectiveValue(x));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(f0,  computeObjectiveValue(x));  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(f0,  computeObjectiveValue(x));	  f0    =    Math.max(fx,    computeObjectiveValue(x));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
27	[BUG]  [BUGGY]  f0  =  Math.max(fx,  computeObjectiveValue(x),  inverted);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  computeObjectiveValue(x),  inverted);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  computeObjectiveValue(x),  inverted);	  f0    =    Math.max(fx,    computeObjectiveValue(x));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
28	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFunctionValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFunctionValue(x0);	  double    f1    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
29	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.0,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.0,  fx  +  1);	  f0    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
30	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.0,  fx  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.0,  fx  -  1);	  f0    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
31	[BUG]  [BUGGY]  f0  =  Math.min(0.0,  fx);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.min(0.0,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.min(0.0,  fx);	  f0    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
32	[BUG]  [BUGGY]  fx  =  computeNullValue(x);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeNullValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeNullValue(x);	  fx    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  f0  =  Math.min(fx,  getValue()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.min(fx,  getValue()  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.min(fx,  getValue()  -  1);	  f0    =    Math.max(fx,    getValue()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  f0  =  Math.max(fx,  getValue()  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  getValue()  *  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  getValue()  *  1);	  f0    =    Math.max(fx,    getValue()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  f0  =  Math.max(x,  getValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(x,  getValue()  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(x,  getValue()  -  1);	  f0    =    Math.max(fx,    getValue()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  if  (fx  *  fx  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  fx  ==  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  fx  ==  0)  {	  if    (fx    *    fx    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
37	[BUG]  [BUGGY]  if  (fx  *  fx  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  fx  >=  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  fx  >=  0)  {	  if    (fx    *    fx    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  if  (fx  *  fx  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  fx  <  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  fx  <  0)  {	  if    (fx    *    fx    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
39	[BUG]  [BUGGY]  double  f1  =  computeObjectiveValue(x,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeObjectiveValue(x,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeObjectiveValue(x,  fx  +  1);	  double    f1    =    computeObjectiveValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
40	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFunctionValue(x,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFunctionValue(x,  fx);	  double    f1    =    computeObjectiveValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
41	[BUG]  [BUGGY]  final  double  f1  =  computeObjectiveValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeObjectiveValue(x,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeObjectiveValue(x,  fx);	  double    f1    =    computeObjectiveValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
42	[BUG]  [BUGGY]  f1  =  Math.min(f0,  fx);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(f0,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(f0,  fx);	  f1    =    Math.min(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
43	[BUG]  [BUGGY]  f1  =  Math.min(fx,  f1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(fx,  f1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(fx,  f1);	  f1    =    Math.min(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
44	[BUG]  [BUGGY]  f1  =  Math.max(fx,  fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(fx,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(fx,  fx);	  f1    =    Math.min(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
45	[BUG]  [BUGGY]  if  (fx  *  f0  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  f0  ==  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  f0  ==  0)  {	  if    (fx    *    f1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
46	[BUG]  [BUGGY]  if  (fx  /  f1  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  /  f1  ==  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  /  f1  ==  0)  {	  if    (fx    *    f1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
47	[BUG]  [BUGGY]  if  (x0  *  f1  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (x0  *  f1  ==  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (x0  *  f1  ==  0)  {	  if    (fx    *    f1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
48	[BUG]  [BUGGY]  if  (f0  *  f1  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (f0  *  f1  >  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (f0  *  f1  >  0)  {	  if    (f0    *    f1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
49	[BUG]  [BUGGY]  if  (f0  *  f1  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (f0  *  f1  <  =  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (f0  *  f1  <  =  0)  {	  if    (f0    *    f1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
50	[BUG]  [BUGGY]  if  (f0  *  f1  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (f0  *  f1  >=  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (f0  *  f1  >=  0)  {	  if    (f0    *    f1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
51	[BUG]  [BUGGY]  if  (fx  /  f1  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  /  f1  >  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  /  f1  >  0)  {	  if    (fx    /    f1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  if  (fx  /  f1  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  /  f1  >=  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  /  f1  >=  0)  {	  if    (fx    /    f1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
53	[BUG]  [BUGGY]  fx  =  computeIntegerValue(x0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeIntegerValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeIntegerValue(x0);	  fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
54	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  inverted  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  inverted  +  1);	  f1    =    Math.min(0.0,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
55	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  inverted  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  inverted  +  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  inverted  +  2);	  f1    =    Math.min(0.0,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
56	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  inverted  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.0,  inverted  *  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.0,  inverted  *  1);	  f1    =    Math.max(0.0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
57	[BUG]  [BUGGY]  f0  =  Math.min(fx,  getFunctionValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.min(fx,  getFunctionValue());  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.min(fx,  getFunctionValue());	  f0    =    Math.max(fx,    getFunctionValue());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  f0  =  Math.max(fx,  getFunctionValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  getFunctionValue()  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  getFunctionValue()  -  1);	  f0    =    Math.max(fx,    getFunctionValue());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  f0  =  Math.max(fx,  getFunctionValue()  /  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  getFunctionValue()  /  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  getFunctionValue()  /  2);	  f0    =    Math.max(fx,    getFunctionValue());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  f0  =  Math.max(fx,  getFunctionValue()  /  2.0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  getFunctionValue()  /  2.0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  getFunctionValue()  /  2.0);	  f0    =    Math.max(fx,    getFunctionValue());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  fx  *  fx);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  fx  *  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  fx  *  fx);	  f1    =    Math.min(0.0,    fx    *    max);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  max  *  fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  max  *  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  max  *  fx);	  f1    =    Math.min(0.0,    fx    *    max);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
63	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  min  *  fx);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  min  *  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  min  *  fx);	  f1    =    Math.min(0.0,    fx    *    max);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
64	[BUG]  [BUGGY]  final  double  f1  =  computeFullValue(x0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeFullValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeFullValue(x0);	  final    double    f1    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
65	[BUG]  [BUGGY]  f1  =  Math.max(fx,  max);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(fx,  max);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(fx,  max);	  f1    =    Math.max(fx,    f1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  f1  =  Math.max(0.5,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.5,  inverted  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.5,  inverted  +  1);	  f1    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
67	[BUG]  [BUGGY]  f1  =  Math.max(1.0,  inverted);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(1.0,  inverted);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(1.0,  inverted);	  f1    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
68	[BUG]  [BUGGY]  f1  =  Math.min(fx,  max);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(fx,  max);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(fx,  max);	  f1    =    Math.min(fx,    fx);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
69	[BUG]  [BUGGY]  f1  =  Math.min(fx,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(fx,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(fx,  fx  +  1);	  f1    =    Math.min(fx,    fx);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
70	[BUG]  [BUGGY]  f0  =  Math.max(0.5,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.5,  inverted  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.5,  inverted  +  1);	  f0    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
71	[BUG]  [BUGGY]  f0  =  Math.max(0.5,  inverted  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.5,  inverted  +  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.5,  inverted  +  2);	  f0    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
72	[BUG]  [BUGGY]  if  (fx  /  f1!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  /  f1!=  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  /  f1!=  0)  {	  if    (fx    /    f1    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
73	[BUG]  [BUGGY]  if  (fx  *  f0  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  f0  >=  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  f0  >=  0)  {	  if    (fx    *    f1    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
74	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  inverted  +  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.0,  inverted  +  3);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.0,  inverted  +  3);	  f1    =    Math.max(0.0,    inverted    +    2);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
75	[BUG]  [BUGGY]  fx  =  computeIntegerValue(x,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeIntegerValue(x,  0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeIntegerValue(x,  0);	  fx    =    computeIntegerValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
76	[BUG]  [BUGGY]  fx  =  computeIntegerValue(x,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeIntegerValue(x,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeIntegerValue(x,  fx  +  1);	  fx    =    computeIntegerValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  fx  =  computeLongValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeLongValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeLongValue(x1);	  fx    =    computeIntegerValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
78	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFunctionValue(x,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFunctionValue(x,  fx  +  1);	  fx    =    computeObjectiveValue(x,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
79	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x,  fx  *  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeObjectiveValue(x,  fx  *  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeObjectiveValue(x,  fx  *  1);	  fx    =    computeObjectiveValue(x,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
80	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x,  fx  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeObjectiveValue(x,  fx  +  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeObjectiveValue(x,  fx  +  2);	  fx    =    computeObjectiveValue(x,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  if  (fx  *  f0  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  f0  <  =  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  f0  <  =  0)  {	  if    (fx    *    f0    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
82	[BUG]  [BUGGY]  fx  =  computeFullValue(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFullValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFullValue(x0);	  fx    =    computeFullValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
83	[BUG]  [BUGGY]  fx  =  computeFullValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFullValue(x,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFullValue(x,  fx);	  fx    =    computeFullValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
84	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  inverted  +  3);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.0,  inverted  +  3);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.0,  inverted  +  3);	  f0    =    Math.max(0.0,    inverted    +    2);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
85	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.0,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.0,  fx  +  1);	  f1    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
86	[BUG]  [BUGGY]  f1  =  Math.max(1.0,  fx);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(1.0,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(1.0,  fx);	  f1    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x,  fx,  inverted);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFunctionValue(x,  fx,  inverted);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFunctionValue(x,  fx,  inverted);	  fx    =    computeFunctionValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  if  (fx  *  f0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  f0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  f0)  {	  if    (fx    *    f1)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
89	[BUG]  [BUGGY]  if  (fx  *  f0  <  =  0.5)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  f0  <  =  0.5)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  f0  <  =  0.5)  {	  if    (fx    *    f1)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
90	[BUG]  [BUGGY]  double  f1  =  computeIntegerValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeIntegerValue(x  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeIntegerValue(x  +  1);	  double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
91	[BUG]  [BUGGY]  double  f1  =  computeLongValue(x);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeLongValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeLongValue(x);	  double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
92	[BUG]  [BUGGY]  double  f1  =  computeFullValue(x0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFullValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFullValue(x0);	  double    f1    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
93	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  fx  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  fx  +  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  fx  +  2);	  f1    =    Math.min(0.0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
94	[BUG]  [BUGGY]  fx  =  computeIntValue(x);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeIntValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeIntValue(x);	  fx    =    computeFloatValue(x);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
95	[BUG]  [BUGGY]  if(fx  *  fx  >  0.5)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if(fx  *  fx  >  0.5)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if(fx  *  fx  >  0.5)  {	  if(fx    *    fx    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
96	[BUG]  [BUGGY]  if(fx  *  fx  >  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if(fx  *  fx  >  1)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if(fx  *  fx  >  1)  {	  if(fx    *    fx    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
97	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  inverted  *  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.0,  inverted  *  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.0,  inverted  *  1);	  f0    =    Math.max(0.0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
98	[BUG]  [BUGGY]  fx  =  computeFloatValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFloatValue(x  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFloatValue(x  +  1);	  fx    =    computeFloatValue(x);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
99	[BUG]  [BUGGY]  final  double  f1  =  computeIntegerValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeIntegerValue(x  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeIntegerValue(x  +  1);	  final    double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
100	[BUG]  [BUGGY]  f0  =  Math.min(0.0,  inverted  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.min(0.0,  inverted  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.min(0.0,  inverted  -  1);	  f0    =    Math.min(0.0,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
101	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  fx  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  fx  -  1  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  fx  -  1  +  1);	  f1    =    Math.min(0.0,    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
102	[BUG]  [BUGGY]  f0  =  Math.max(0.5,  inverted,  fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.5,  inverted,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.5,  inverted,  fx);	  f0    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
103	[BUG]  [BUGGY]  final  double  f1  =  computeNullValue(x);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeNullValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeNullValue(x);	  final    double    f1    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
104	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  inverted  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  inverted  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  inverted  -  1);	  f1    =    Math.min(0.0,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
105	[BUG]  [BUGGY]  if  (fx  /  fx  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  /  fx  <  =  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  /  fx  <  =  0)  {	  if    (fx    *    fx    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
106	[BUG]  [BUGGY]  f0  =  Math.max(fx,  computeObjectiveValue(x)-  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  computeObjectiveValue(x)-  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  computeObjectiveValue(x)-  1);	  f0    =    Math.max(fx,    getValue()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
107	[BUG]  [BUGGY]  if  (fx  /  f0  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  /  f0  <  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  /  f0  <  0)  {	  if    (fx    *    f0    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
108	[BUG]  [BUGGY]  f0  =  Math.max(fx,  computeObjectiveValue(x)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  computeObjectiveValue(x)+  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  computeObjectiveValue(x)+  1);	  f0    =    Math.max(fx,    computeObjectiveValue(x));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
109	[BUG]  [BUGGY]  f1  =  Math.min(f1,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(f1,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(f1,  fx  +  1);	  f1    =    Math.min(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
110	[BUG]  [BUGGY]  f1  =  Math.max(fx,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(fx,  0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(fx,  0);	  f1    =    Math.max(fx,    f1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
111	[BUG]  [BUGGY]  double  f1  =  computeFullValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFullValue(x  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFullValue(x  +  1);	  double    f1    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
112	[BUG]  [BUGGY]  if(fx  /  fx  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if(fx  /  fx  >  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if(fx  /  fx  >  0)  {	  if(fx    *    fx    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
113	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  inverted  +  1  -  fx);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.0,  inverted  +  1  -  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.0,  inverted  +  1  -  fx);	  f0    =    Math.max(0.0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
114	[BUG]  [BUGGY]  if  (fx  *  0.5)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (fx  *  0.5)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (fx  *  0.5)  {	  if    (fx    *    f1)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
115	[BUG]  [BUGGY]  f1  =  Math.max(0.5,  inverted,  fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.5,  inverted,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.5,  inverted,  fx);	  f1    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
116	[BUG]  [BUGGY]  double  f1  =  computeObjectiveValue(x,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeObjectiveValue(x,  fx  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeObjectiveValue(x,  fx  -  1);	  double    f1    =    computeObjectiveValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
117	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFunctionValue(x  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFunctionValue(x  +  1);	  double    f1    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
118	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  inverted  +  1  -  fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.0,  inverted  +  1  -  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.0,  inverted  +  1  -  fx);	  f1    =    Math.max(0.0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
119	[BUG]  [BUGGY]  double  f1  =  computeFloatValue(x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFloatValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFloatValue(x);	  double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
120	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  fx  /  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  fx  /  max);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  fx  /  max);	  f1    =    Math.min(0.0,    fx    *    max);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
121	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  inverted  *  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.0,  inverted  *  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.0,  inverted  *  2);	  f1    =    Math.max(0.0,    inverted    +    2);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
122	[BUG]  [BUGGY]  if  (f1  *  fx  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if  (f1  *  fx  >=  0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if  (f1  *  fx  >=  0)  {	  if    (f0    *    fx    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
123	[BUG]  [BUGGY]  final  double  f1  =  computeFunctionValue(fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeFunctionValue(fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeFunctionValue(fx);	  final    double    f1    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
124	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFunctionValue(x  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFunctionValue(x  +  1);	  fx    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
125	[BUG]  [BUGGY]  fx  =  computeRelativeValue(x,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeRelativeValue(x,  fx  +  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeRelativeValue(x,  fx  +  1);	  fx    =    computeObjectiveValue(x,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  inverted  *  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.0,  inverted  *  2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.0,  inverted  *  2);	  f0    =    Math.max(0.0,    inverted    +    2);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
127	[BUG]  [BUGGY]  f1  =  Math.max(fx,  inverted);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(fx,  inverted);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(fx,  inverted);	  f1    =    Math.max(fx,    f1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
128	[BUG]  [BUGGY]  f1  =  Math.max(fx,  f2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(fx,  f2);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(fx,  f2);	  f1    =    Math.max(fx,    f1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
129	[BUG]  [BUGGY]  f0  =  Math.max(0.5,  fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.5,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.5,  fx);	  f0    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
130	[BUG]  [BUGGY]  float  f1  =  computeObjectiveValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  float  f1  =  computeObjectiveValue(x,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	float  f1  =  computeObjectiveValue(x,  fx);	  double    f1    =    computeObjectiveValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
131	[BUG]  [BUGGY]  f1  =  Math.max(0.5,  fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.5,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.5,  fx);	  f1    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
132	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  inverted  +  1,  fx);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(0.0,  inverted  +  1,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(0.0,  inverted  +  1,  fx);	  f0    =    Math.max(0.0,    inverted    +    2);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
133	[BUG]  [BUGGY]  fx  =  computeFloatValue(x,  fx)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFloatValue(x,  fx)-  1;  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFloatValue(x,  fx)-  1;	  fx    =    computeFloatValue(x,    fx);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
134	[BUG]  [BUGGY]  fx  =  computeFloatValue(x1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeFloatValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeFloatValue(x1);	  fx    =    computeFloatValue(x);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
135	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFunctionValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFunctionValue(x1);	  double    f1    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
136	[BUG]  [BUGGY]  f1  =  Math.min(0.5,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.5,  fx  -  1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.5,  fx  -  1);	  f1    =    Math.min(0.0,    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
137	[BUG]  [BUGGY]  double  f1  =  computeFullValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFullValue(x,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFullValue(x,  fx);	  double    f1    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
138	[BUG]  [BUGGY]  double  f1  =  computeFullValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeFullValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeFullValue(x1);	  double    f1    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
139	[BUG]  [BUGGY]  final  double  f1  =  computeFullValue(x1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeFullValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeFullValue(x1);	  final    double    f1    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
140	[BUG]  [BUGGY]  final  double  f1  =  computeObjectiveValue(x0,  fx);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeObjectiveValue(x0,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeObjectiveValue(x0,  fx);	  final    double    f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
141	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x0,  fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeObjectiveValue(x0,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeObjectiveValue(x0,  fx);	  fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
142	[BUG]  [BUGGY]  if(fx  *  f1  >  0.5)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if(fx  *  f1  >  0.5)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if(fx  *  f1  >  0.5)  {	  if    (fx    *    f1    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
143	[BUG]  [BUGGY]  float  f1  =  computeIntegerValue(x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  float  f1  =  computeIntegerValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	float  f1  =  computeIntegerValue(x);	  double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
144	[BUG]  [BUGGY]  double  f1  =  computeDoubleValue(x);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  double  f1  =  computeDoubleValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	double  f1  =  computeDoubleValue(x);	  double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
145	[BUG]  [BUGGY]  final  double  f1  =  computeBigIntegerValue(x);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeBigIntegerValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeBigIntegerValue(x);	  final    double    f1    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
146	[BUG]  [BUGGY]  if(fx  *  f1  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  if(fx  *  f1  ==  0.0)  {  [BUGGY]        x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	if(fx  *  f1  ==  0.0)  {	  if    (fx    *    f1)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
147	[BUG]  [BUGGY]  final  double  f1  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeFunctionValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeFunctionValue(x1);	  final    double    f1    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
148	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f0  =  computeFunctionValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f0  =  computeFunctionValue(x);	  final    double    f1    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
149	[BUG]  [BUGGY]  f0  =  Math.max(fx,  getBaseValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f0  =  Math.max(fx,  getBaseValue());  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f0  =  Math.max(fx,  getBaseValue());	  f0    =    Math.max(fx,    getFunctionValue());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
150	[BUG]  [BUGGY]  fx  =  computeDoubleValue(x);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  fx  =  computeDoubleValue(x);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	fx  =  computeDoubleValue(x);	  fx    =    computeIntegerValue(x);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
151	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  inverted  +  1,  fx);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.max(0.0,  inverted  +  1,  fx);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.max(0.0,  inverted  +  1,  fx);	  f1    =    Math.max(0.0,    inverted    +    2);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
152	[BUG]  [BUGGY]  f1  =  Math.min(0.0,  fx  +  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  f1  =  Math.min(0.0,  fx  +  max);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	f1  =  Math.min(0.0,  fx  +  max);	  f1    =    Math.min(0.0,    fx    *    max);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
153	[BUG]  [BUGGY]  final  double  f1  =  computeValue(x1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeValue(x1);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeValue(x1);	  final    double    f1    =    computeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
154	[BUG]  [BUGGY]  final  double  f1  =  computeValue(x0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }        [BUGGY]  final  double  f1  =  computeValue(x0);  [BUGGY]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	final  double  f1  =  computeValue(x0);	  final    double    f1    =    computeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
