bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    f0  =  f1;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    f0  =  f1;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    f0  =  f1;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
2	[BUG]  [BUGGY]    f0  =  f1  *  fx;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    f0  =  f1  *  fx;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    f0  =  f1  *  fx;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
3	[BUG]  [BUGGY]    x0  =  f1;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    x0  =  f1;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    x0  =  f1;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
4	[BUG]  [BUGGY]    x0  =  x1;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    x0  =  x1;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    x0  =  x1;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
5	[BUG]  [BUGGY]    x1  =  f0;  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    x1  =  f0;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    x1  =  f0;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
6	[BUG]  [BUGGY]  x0  =  fx;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  fx;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  fx;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  x0  =  0.5;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  0.5;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  0.5;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  x0  =  fx1;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  fx1;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  fx1;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]    x  =  f1  *  fx;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    x  =  f1  *  fx;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    x  =  f1  *  fx;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
10	[BUG]  [BUGGY]    f1  =  fx;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    f1  =  fx;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    f1  =  fx;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
11	[BUG]  [BUGGY]    x1  =  f1;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    x1  =  f1;  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    x1  =  f1;		non-compiled	[CE]  illegal  start  of  expression	28	None	add
12	[BUG]  [BUGGY]  x0  =  1.0;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  1.0;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  1.0;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
13	[BUG]  [BUGGY]  x0  =  0.0;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  0.0;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  0.0;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
14	[BUG]  [BUGGY]  x0  =  f0;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  f0;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  f0;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
15	[BUG]  [BUGGY]  x0  =  f2;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  f2;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  f2;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
16	[BUG]  [BUGGY]  x0  =  f1.x;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]  x0  =  f1.x;  [BUGGY]  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	x0  =  f1.x;	x0  =  x1;  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
17	[BUG]  [BUGGY]    if(f1  *  fx  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    if(f1  *  fx  <  0)  {  return  x;  }  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    if(f1  *  fx  <  0)  {  return  x;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
18	[BUG]  [BUGGY]    if(f1  *  fx  <  =  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    if(f1  *  fx  <  =  0)  {  return  x;  }  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    if(f1  *  fx  <  =  0)  {  return  x;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
19	[BUG]  [BUGGY]    if(f1  *  fx  <  1)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    if(f1  *  fx  <  1)  {  return  x;  }  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    if(f1  *  fx  <  1)  {  return  x;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
20	[BUG]  [BUGGY]    if(f1  *  fx  >  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    [BUGGY]    if(f1  *  fx  >  0)  {  return  x;  }  [BUGGY]  x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	    if(f1  *  fx  >  0)  {  return  x;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
