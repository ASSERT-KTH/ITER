bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  f0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(fx.length,  f0);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(fx.length,  f0);	      fx    =    Math.min(fx.length,    f1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  f1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(fx.length,  f1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(fx.length,  f1);	      fx    =    Math.min(fx.length,    f1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  x0  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  x0  =  computeObjectiveValue(x1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	x0  =  computeObjectiveValue(x1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  x1  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  x1  =  computeObjectiveValue(x0);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	x1  =  computeObjectiveValue(x0);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  x1  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  x1  =  computeObjectiveValue(x1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	x1  =  computeObjectiveValue(x1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  x1  =  Math.abs(f1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  x1  =  Math.abs(f1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	x1  =  Math.abs(f1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  f1  =  f0;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  f0;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  f0;	  f1    =    fTol;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  f1  =  f;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  f;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  f;	  f1    =    fTol;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  f1  =  x  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  x  +  1;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  x  +  1;	  f1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
10	[BUG]  [BUGGY]  f1  =  f0  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  f0  +  1;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  f0  +  1;	  f1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  f1  =  ftol  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  ftol  +  1;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  ftol  +  1;	  f1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  computeFunctionValue(x1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  computeFunctionValue(x1);	      fx    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  fx  =  computeIntegerValue(x1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  computeIntegerValue(x1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  computeIntegerValue(x1);	      fx    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  inverted);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  inverted);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  inverted);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  fx);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  fx);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f0),  fx);	      fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  fx);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  fx);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(FastMath.abs(f1),  fx);	      fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  ftol);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  ftol);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f1),  ftol);	      fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  f1  =  x0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  x0;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  x0;	  f1    =    x;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1));	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
21	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x0));	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
22	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  relativeAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  relativeAccuracy);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
24	[BUG]  [BUGGY]  f1  =  Math.max(f0,  f1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  Math.max(f0,  f1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.max(f0,  f1);	  f1    =    Math.max(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  f1  =  Math.max(f1,  f2);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  Math.max(f1,  f2);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.max(f1,  f2);	  f1    =    Math.max(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  f1  =  Math.min(f0,  f1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  Math.min(f0,  f1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.min(f0,  f1);	  f1    =    Math.min(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  f1  =  Math.min(f1,  f2);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  Math.min(f1,  f2);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.min(f1,  f2);	  f1    =    Math.min(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  computeFunctionValue(x0);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  computeFunctionValue(x0);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  fx  =  computeIntegerValue(x0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  computeIntegerValue(x0);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  computeIntegerValue(x0);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  fx  =  Math.abs(fx0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.abs(fx0);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.abs(fx0);	      fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  fx  =  Math.abs(fx  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.abs(fx  +  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.abs(fx  +  1);	      fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  fx  =  Math.abs(fx1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.abs(fx1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.abs(fx1);	      fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  fx  =  Math.min(max,  fx.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(max,  fx.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(max,  fx.length);	      fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  max  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(fx.length,  max  +  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(fx.length,  max  +  1);	      fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  fx  =  Math.max(max,  fx.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(max,  fx.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(max,  fx.length);	      fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  max);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(fx),  max);	      fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max  +  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f1),  max  +  1);	      fx    =    Math.min(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  max);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  max);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f0),  max);	      fx    =    Math.min(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  max);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  max);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(FastMath.abs(f1),  max);	      fx    =    Math.min(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(FastMath.abs(f1));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(FastMath.abs(f1));	      fx    =    Math.min(FastMath.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f0));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f0));	      fx    =    Math.min(FastMath.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(FastMath.abs(f0));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(FastMath.abs(f0));	      fx    =    Math.min(FastMath.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fTol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fTol);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f1),  fTol);	      fx    =    Math.min(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  max);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  max);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f2),  max);	      fx    =    Math.min(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
46	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
47	[BUG]  [BUGGY]  f1  =  fx  +  2;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  fx  +  2;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  fx  +  2;	  f1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  f1  =  f2;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  f2;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  f2;	  f1    =    ftol;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  fx  =  Math.min(fx,  f1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(fx,  f1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(fx,  f1);	      fx    =    Math.min(fx.length,    f1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f0  =  computeObjectiveValue(x1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f0  =  computeObjectiveValue(x1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  f1  =  Math.min(f1.length(),  f1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  Math.min(f1.length(),  f1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.min(f1.length(),  f1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  f1  =  Math.min(f1.length,  f1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  Math.min(f1.length,  f1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.min(f1.length,  f1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  relativeAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  relativeAccuracy);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
54	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x2);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  computeObjectiveValue(x2);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  computeObjectiveValue(x2);	      fx    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  fx  =  Math.min(fx,  max);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(fx,  max);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(fx,  max);	      fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fx);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fx);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(FastMath.abs(f0),  fx);	      fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  f1  =  fTol  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  fTol  +  1;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  fTol  +  1;	  f1    =    fTol;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  break;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  break;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  break;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  ftol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  ftol);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.max(FastMath.abs(f1),  ftol);	      fx    =    Math.min(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x0,  f1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  computeObjectiveValue(x0,  f1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  computeObjectiveValue(x0,  f1);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fx  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fx  +  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f1),  fx  +  1);	      fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  f1  =  inverted;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  inverted;  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  inverted;	  f1    =    ftol;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  inverted);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  inverted);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  inverted);	      fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
66	[BUG]  [BUGGY]  f1  =  Math.max(FastMath.abs(f1),  f1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  f1  =  Math.max(FastMath.abs(f1),  f1);  [BUGGY]        if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.max(FastMath.abs(f1),  f1);	  f1    =    Math.max(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1)-  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;    [BUGGY]  fx  =  Math.min(FastMath.abs(f1)-  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	fx  =  Math.min(FastMath.abs(f1)-  1);	      fx    =    Math.min(FastMath.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
