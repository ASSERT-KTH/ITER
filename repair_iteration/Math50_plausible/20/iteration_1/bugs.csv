bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  f1  =  ftol;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]  f1  =  ftol;  [BUGGY]      if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  ftol;	f1  =  fx;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
2	[BUG]  [BUGGY]  f1  =  Math.max(f1,  f1);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]  f1  =  Math.max(f1,  f1);  [BUGGY]      if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.max(f1,  f1);	f1  =  fx;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
3	[BUG]  [BUGGY]  f1  =  x;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]  f1  =  x;  [BUGGY]      if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  x;	f1  =  fx;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
4	[BUG]  [BUGGY]  f1  =  Math.min(f1,  f1);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]  f1  =  Math.min(f1,  f1);  [BUGGY]      if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  Math.min(f1,  f1);	f1  =  fx;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    [BUGGY]      if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	  	f1  =  fx;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
6	[BUG]  [BUGGY]    fx  =  Math.min(FastMath.abs(f1),  fx);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(FastMath.abs(f1),  fx);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(FastMath.abs(f1),  fx);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
7	[BUG]  [BUGGY]    fx  =  Math.min(FastMath.abs(f1),  max);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(FastMath.abs(f1),  max);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(FastMath.abs(f1),  max);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
8	[BUG]  [BUGGY]    fx  =  Math.abs(fx);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.abs(fx);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.abs(fx);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
9	[BUG]  [BUGGY]    fx  =  Math.min(FastMath.abs(f1));  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(FastMath.abs(f1));  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(FastMath.abs(f1));		non-compiled	[CE]  illegal  start  of  expression	40	None	add
10	[BUG]  [BUGGY]    fx  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  computeObjectiveValue(x0);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  computeObjectiveValue(x0);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
11	[BUG]  [BUGGY]    fx  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  computeObjectiveValue(x1);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  computeObjectiveValue(x1);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
12	[BUG]  [BUGGY]    fx  =  Math.min(fx.length,  f1);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(fx.length,  f1);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(fx.length,  f1);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
13	[BUG]  [BUGGY]    fx  =  Math.min(fx.length,  max);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(fx.length,  max);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(fx.length,  max);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
14	[BUG]  [BUGGY]  f1  =  fx  +  1;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]  f1  =  fx  +  1;  [BUGGY]      if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  fx  +  1;	f1  =  fx;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
15	[BUG]  [BUGGY]  f1  =  fTol;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]  f1  =  fTol;  [BUGGY]      if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	f1  =  fTol;	f1  =  fx;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
16	[BUG]  [BUGGY]    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
17	[BUG]  [BUGGY]    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);		non-compiled	[CE]  illegal  start  of  expression	40	None	add
18	[BUG]  [BUGGY]    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;  [BUGGY]    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1));  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	199	199	1	replace	    fx  =  Math.min(relativeAccuracy  *  Math.abs(x1));		non-compiled	[CE]  illegal  start  of  expression	40	None	add
