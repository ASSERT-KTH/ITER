bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    x0  =  x;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  x;  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  x;		non-compiled	[CE]  illegal  start  of  expression	38	None	add
2	[BUG]  [BUGGY]    x0  =  fx;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  fx;  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  fx;		non-compiled	[CE]  illegal  start  of  expression	38	None	add
3	[BUG]  [BUGGY]    x0  =  x;  f1  =  fx;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  x;  f1  =  fx;  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  x;  f1  =  fx;		non-compiled	[CE]  illegal  start  of  expression	38	None	add
4	[BUG]  [BUGGY]    x1  =  x0;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x1  =  x0;  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x1  =  x0;		non-compiled	[CE]  illegal  start  of  expression	38	None	add
5	[BUG]  [BUGGY]    x0  =  fx;  f1  =  fx;  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  fx;  f1  =  fx;  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  fx;  f1  =  fx;		non-compiled	[CE]  illegal  start  of  expression	38	None	add
6	[BUG]  [BUGGY]  x1  =  fx;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]  x1  =  fx;  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	x1  =  fx;	x1  =  x;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
7	[BUG]  [BUGGY]  x1  =  f0;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]  x1  =  f0;  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	x1  =  f0;	x1  =  x;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
8	[BUG]  [BUGGY]  x1  =  rtol;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]  x1  =  rtol;  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	x1  =  rtol;	x1  =  x;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
9	[BUG]  [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    if(allowed)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
10	[BUG]  [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    if(allowed)  {  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
11	[BUG]  [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    if(allowed)  {  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
12	[BUG]  [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  f0  =  computeObjectiveValue(x0);  }  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    if(allowed)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  f0  =  computeObjectiveValue(x0);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
13	[BUG]  [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    if(allowed)  {  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  f0  =  computeObjectiveValue(x0);  }  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    if(allowed)  {  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  f0  =  computeObjectiveValue(x0);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
14	[BUG]  [BUGGY]  x1  =  0.5  *(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]  x1  =  0.5  *(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	x1  =  0.5  *(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	x1  =  x;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
15	[BUG]  [BUGGY]  x1  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]  x1  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	x1  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	x1  =  x;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol);		non-compiled	[CE]  illegal  start  of  expression	38	None	add
17	[BUG]  [BUGGY]    x0  =  x1  *(x0  +  f1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  x1  *(x0  +  f1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  x1  *(x0  +  f1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol));		non-compiled	[CE]  illegal  start  of  expression	38	None	add
18	[BUG]  [BUGGY]    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol));		non-compiled	[CE]  illegal  start  of  expression	38	None	add
19	[BUG]  [BUGGY]    x0  =  x1  *(x0  +  f1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  x1  *(x0  +  f1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  x1  *(x0  +  f1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol);		non-compiled	[CE]  illegal  start  of  expression	38	None	add
20	[BUG]  [BUGGY]    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol)+  1;  [BUGGY]  x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	    x0  =  x1  *(x0  +  f1)/  FastMath.max(rtol  *  FastMath.abs(x1),  atol)+  1;		non-compiled	[CE]  illegal  start  of  expression	38	None	add
21	[BUG]  [BUGGY]  x1  =  0.5  *(x0  +  x1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }    [BUGGY]  x1  =  0.5  *(x0  +  x1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	x1  =  0.5  *(x0  +  x1)-  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	x1  =  x;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
