bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  32;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  32;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  32;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  hash  +=(hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
5	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  1;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
6	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
7	[BUG]  [BUGGY]  int  hash  =  _hashArea.hashCode();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.hashCode();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.hashCode();	  int    hash    =    q1.hashCode();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
8	[BUG]  [BUGGY]  int  hash  =  q2.hashCode();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q2.hashCode();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q2.hashCode();	  int    hash    =    q1.hashCode();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
9	[BUG]  [BUGGY]  int  hash  =  q1!=  _seed.hashCode();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1!=  _seed.hashCode();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1!=  _seed.hashCode();	  int    hash    =    q1.hashCode();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
10	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  hash  =  _hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  =  _hashArea.calcHash(q1);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  =  _hashArea.calcHash(q1);	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  =  _hashArea.length;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  =  _hashArea.length;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  =  _hashArea.length;  }	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash!=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
14	[BUG]  [BUGGY]  int  hash  =  q1  ==  0;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1  ==  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1  ==  0;	  int    hash    =    q1    ==    _seed;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  int  hash  =  _seed  ==  q1;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _seed  ==  q1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _seed  ==  q1;	  int    hash    =    q1    ==    _seed;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  int  hash  =  q1  ==  _seed  +  1;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1  ==  _seed  +  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1  ==  _seed  +  1;	  int    hash    =    q1    ==    _seed;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  int  hash  =  q2  ==  _seed;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q2  ==  _seed;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q2  ==  _seed;	  int    hash    =    q1    ==    _seed;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    0;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
19	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    0;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
20	[BUG]  [BUGGY]  int  hash  =  _hashArea.size()  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.size()  +  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.size()  +  1;	  int    hash    =    _hashArea.size();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
21	[BUG]  [BUGGY]  int  hash  =  _hashArea.size()  -  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.size()  -  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.size()  -  1;	  int    hash    =    _hashArea.size();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
22	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
23	[BUG]  [BUGGY]  if(_hashShared)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(_hashShared)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(_hashShared)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashShared)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  hash  =  _hashShared;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  =  _hashShared;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  =  _hashShared;	  if(q1    ==    0)    {    if(_hashShared)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    0;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
26	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    0;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
27	[BUG]  [BUGGY]  hash  +=(hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
28	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
29	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
30	[BUG]  [BUGGY]  int  hash  =  q1.length;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1.length;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1.length;	  int    hash    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
31	[BUG]  [BUGGY]  int  hash  =  _hashArea.length  -  1;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.length  -  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.length  -  1;	  int    hash    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
32	[BUG]  [BUGGY]  int  hash  =  _hashArea.length  +  1;  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.length  +  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.length  +  1;	  int    hash    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
33	[BUG]  [BUGGY]  int  hash  =  q1.calcHash(_hashArea);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1.calcHash(_hashArea);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1.calcHash(_hashArea);	  int    hash    =    _hashArea.calcHash(q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
34	[BUG]  [BUGGY]  int  hash  =  _hashArea.calcHash(q1,  q1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.calcHash(q1,  q1);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.calcHash(q1,  q1);	  int    hash    =    _hashArea.calcHash(q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
35	[BUG]  [BUGGY]  int  hash  =  Math.min(_hashArea.length,  q1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  Math.min(_hashArea.length,  q1);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  Math.min(_hashArea.length,  q1);	  int    hash    =    Math.min(_hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
36	[BUG]  [BUGGY]  int  hash  =  Math.max(_hash,  q1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  Math.max(_hash,  q1);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  Math.max(_hash,  q1);	  int    hash    =    Math.min(_hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
37	[BUG]  [BUGGY]  int  hash  =  Math.min(_hash,  q1,  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  Math.min(_hash,  q1,  _secondaryStart);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  Math.min(_hash,  q1,  _secondaryStart);	  int    hash    =    Math.min(_hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
38	[BUG]  [BUGGY]  hash  =  q1  ==  _seed;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  =  q1  ==  _seed;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  =  q1  ==  _seed;	  if(q1    ==    0)    {    hash    =    0;    }    else    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  hash  +=(hash  >=  >  32);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >=  >  32);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >=  >  32);	  hash    +=(hash    >>    >    32);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
40	[BUG]  [BUGGY]  hash  +=(hash  <  <  16);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  <  <  16);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  <  <  16);	  if(q1    ==    0)    {    hash    +=    (hash    <    <    16);    }    else    {    hash    +=    1;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
41	[BUG]  [BUGGY]  int  hash  =  _hashArea.hash();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.hash();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.hash();	  int    hash    =    q1.hash();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
42	[BUG]  [BUGGY]  int  hash  =  _seed.hash();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _seed.hash();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _seed.hash();	  int    hash    =    q1.hash();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
43	[BUG]  [BUGGY]  int  hash  =  q2.hash();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q2.hash();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q2.hash();	  int    hash    =    q1.hash();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
44	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;	  if(q2    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
45	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
46	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
47	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }	  if(q2    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
48	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }	  if(q2    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
49	[BUG]  [BUGGY]  if(q2  ==  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  if(q1!=  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  if(q1  ==  0)  {  if(_seed!=  null)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  if(_seed!=  null)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  if(_seed!=  null)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash!=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
53	[BUG]  [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash!=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
54	[BUG]  [BUGGY]  hash  +=(hash  >>  >  2);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  2);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  2);	  hash    +=(hash    >>    >    8);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
55	[BUG]  [BUGGY]  int  hash  =  Math.min(_hashArea,  q1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  Math.min(_hashArea,  q1);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  Math.min(_hashArea,  q1);	  int    hash    =    Math.min(_hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
56	[BUG]  [BUGGY]  int  hash  =  Math.min(_hash,  q1)+  1;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  Math.min(_hash,  q1)+  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  Math.min(_hash,  q1)+  1;	  int    hash    =    Math.min(_hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
57	[BUG]  [BUGGY]  hash  +=(hash  >>  >  32)+  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  32)+  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  32)+  1;	  hash    +=(hash    >>    >    32);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
58	[BUG]  [BUGGY]  hash  +=(q1  <  <  16);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(q1  <  <  16);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(q1  <  <  16);	  if(q1    ==    0)    {    hash    +=    (hash    <    <    16);    }    else    {    hash    +=    1;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
59	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  <  <  8);  }  else  {  hash  +=  1;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  <  <  8);  }  else  {  hash  +=  1;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  <  <  8);  }  else  {  hash  +=  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    <    <    16);    }    else    {    hash    +=    1;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
60	[BUG]  [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
61	[BUG]  [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    0;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
62	[BUG]  [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
63	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    0;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
64	[BUG]  [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
65	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
66	[BUG]  [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  if(q2  ==  0)  {  if(_hashShared)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  if(_hashShared)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  if(_hashShared)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashShared)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  if(q1!=  0)  {  if(_hashShared)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1!=  0)  {  if(_hashShared)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  if(_hashShared)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashShared)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  int  hash  =  q1.hash()  +  q2.hash();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1.hash()  +  q2.hash();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1.hash()  +  q2.hash();	  int    hash    =    q1.hash();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
71	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
72	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  2;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  2;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  2;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
73	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  3;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  3;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  3;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  int  hash  =  q1.hashCode()  +  q2.hashCode();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1.hashCode()  +  q2.hashCode();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1.hashCode()  +  q2.hashCode();	  int    hash    =    q1.hashCode();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
75	[BUG]  [BUGGY]  int  hash  =  q1  <  <  8?  _hashArea.calcHash(q1):  0;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1  <  <  8?  _hashArea.calcHash(q1):  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1  <  <  8?  _hashArea.calcHash(q1):  0;	  int    hash    =    _hashArea.calcHash(q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
76	[BUG]  [BUGGY]  int  hash  =  q1  <  <  8?  _hashArea.calcHash(q1):  _hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1  <  <  8?  _hashArea.calcHash(q1):  _hashArea.calcHash(q1);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1  <  <  8?  _hashArea.calcHash(q1):  _hashArea.calcHash(q1);	  int    hash    =    _hashArea.calcHash(q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
77	[BUG]  [BUGGY]  hash  =  q1  ==  0;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  =  q1  ==  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  =  q1  ==  0;	  if(q1    ==    0)    {    hash    =    0;    }    else    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  =  1;  }  else  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0)  {  hash  =  1;  }  else  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  =  1;  }  else  {  hash  =  0;  }	  if(q1    ==    0)    {    hash    =    0;    }    else    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
79	[BUG]  [BUGGY]  int  hash  =  _hashArea.getHeight();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.getHeight();  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.getHeight();	  int    hash    =    _hashArea.size();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
80	[BUG]  [BUGGY]  int  hash  =  Math.min(_hash,  q2);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  Math.min(_hash,  q2);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  Math.min(_hash,  q2);	  int    hash    =    Math.min(_hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
81	[BUG]  [BUGGY]  if(q2!=  0)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2!=  0)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2!=  0)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  if(q1  >=  0)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  >=  0)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  >=  0)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashArea!=    null)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  =  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  =  1;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  =  1;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  0;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  0;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
85	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash!=    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
86	[BUG]  [BUGGY]  if(q2  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }	  if(q1    >=    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
87	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  3;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  3;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  3;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
88	[BUG]  [BUGGY]  int  hash  =  q1!=  _hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  q1!=  _hashArea.calcHash(q1);  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1!=  _hashArea.calcHash(q1);	  int    hash    =    _hashArea.calcHash(q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
89	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }	  if(q1    ==    0)    {    hash    =    0;    }    else    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  if(q1  ==  0  ||  q2  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0  ||  q2  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0  ||  q2  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }	  if(q1    ==    0)    {    hash    =    0;    }    else    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
93	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  =  32;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  =  32;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  ==  =  32;	  hash    +=(hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >=    0;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
95	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >=    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
96	[BUG]  [BUGGY]  int  hash  =  _hashArea.length  -  2;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  int  hash  =  _hashArea.length  -  2;  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.length  -  2;	  int    hash    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
97	[BUG]  [BUGGY]  if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
98	[BUG]  [BUGGY]  if(q2!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }	  if(q1!=    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
99	[BUG]  [BUGGY]  if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
100	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q2  ==  0)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashShared)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
101	[BUG]  [BUGGY]  if(q1  ==  0  ||  _hashShared)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  ==  0  ||  _hashShared)  {  hash  =  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0  ||  _hashShared)  {  hash  =  0;  }	  if(q1    ==    0)    {    if(_hashShared)    {    hash    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
102	[BUG]  [BUGGY]  if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;            [BUGGY]  if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [BUGGY]      hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  <  =  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    0;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
