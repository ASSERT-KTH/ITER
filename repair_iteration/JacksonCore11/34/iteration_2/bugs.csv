bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hash  +=(hash  >>  >  3);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  3);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  3);	  hash    +=(hash    >>    >    16);    //    shuffle    back    a    bit    hash    +=(hash    >>    >    12);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  hash  +=(hash  >>  >  12);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  12);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  12);	  hash    +=(hash    >>    >    16);    //    shuffle    back    a    bit    hash    +=(hash    >>    >    12);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  hash  +=(hash  >>  >  4);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  4);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  4);	  hash    +=(hash    >>    >    16);    //    shuffle    back    a    bit    hash    +=(hash    >>    >    12);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  hash  +=(hash  >=  >  12);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >=  >  12);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >=  >  12);	  hash    +=(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  }  else  {  hash  +=  1;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  }  else  {  hash  +=  1;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  }  else  {  hash  +=  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    }    else    {    hash    +=    1;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  =  0;  }  else  {  hash  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  int  hash  =  q1  ==  _seed;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  int  hash  =  q1  ==  _seed;  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1  ==  _seed;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  if(q1  ==  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  if(_hashArea!=  null)  {  hash  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  if(q1  ==  0)  {  if(_hashShared)  {  hash  =  0;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  if(_hashShared)  {  hash  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  if(_hashShared)  {  hash  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;	  if(q1    ==    _secondaryStart)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  if(q1  ==  _secondaryStart)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  _secondaryStart)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  _secondaryStart)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  32;  }	  if(q1    ==    _secondaryStart)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;	  if(q1    ==    _secondaryStart)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  if(q1  ==  _secondaryStart)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  _secondaryStart)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  _secondaryStart)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  3;  }	  if(q1    ==    _secondaryStart)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >=  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  hash  +=(hash  >>  >  32);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  32);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  32);	  hash    +=(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  hash  +=(hash  >>  >  8);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  8);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  8);	  hash    +=(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  32;  }	  if(q1    ==    _secondaryStart)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    32;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  3;  }	  if(q1    ==    _secondaryStart)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    3;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash!=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  <  <  16);  }  else  {  hash  +=  1;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  <  <  16);  }  else  {  hash  +=  1;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  <  <  16);  }  else  {  hash  +=  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    }    else    {    hash    +=    1;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  int  hash  =  _hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  int  hash  =  _hashArea.calcHash(q1);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.calcHash(q1);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  int  hash  =  Math.min(_hash,  q1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  int  hash  =  Math.min(_hash,  q1);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  Math.min(_hash,  q1);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  int  hash  =  q1.hash();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  int  hash  =  q1.hash();  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1.hash();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  int  hash  =  _hashArea.length;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  int  hash  =  _hashArea.length;  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.length;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1!=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  0;	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q2  ==  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >=  =  0;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  hash  +=(hash  >>  >  11);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  11);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  11);	  hash    +=(hash    >=    >    16);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	if(q1  >=  0)  {  hash  +=  (hash  >>  >  16);  //  to  xor  hi-  and  low-  16-bits  hash  >>  =  1;  }	  if(q1    ==    0)    {    hash    +=    (hash    >>    >    16);    //    to    xor    hi-    and    low-    16-bits    hash    >>    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  hash  +=(hash  >>  >  13);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  hash  +=(hash  >>  >  13);  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	hash  +=(hash  >>  >  13);	  hash    +=(hash    >>    >    16);    //    shuffle    back    a    bit    hash    +=(hash    >>    >    12);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
39	[BUG]  [BUGGY]  int  hash  =  _hashArea.size();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  int  hash  =  _hashArea.size();  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  _hashArea.size();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  int  hash  =  q1.hashCode();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;          [BUGGY]  int  hash  =  q1.hashCode();  [BUGGY]    hash  ^=  (hash  <<  3);  //  shuffle  back  a  bit  hash  +=  (hash  >>>  12);  //  and  bit  more  return  hash;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	int  hash  =  q1.hashCode();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
