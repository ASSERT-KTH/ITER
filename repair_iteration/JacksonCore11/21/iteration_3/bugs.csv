bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&(q2    ==    hashArea[offset+3])))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1])))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1])))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1])))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&(q2    ==    hashArea[offset+3])))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3])))  {  return  _names[offset  >>  1];  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3])))  {  return  _names[offset  >>  1];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3])))  {  return  _names[offset  >>  1];  }	  ((    q1    ==    hashArea[offset])&&(q2    ==    hashArea[offset+3])))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+1])&&((    q1    ==    hashArea[offset+1])&&(q1    ==    hashArea[offset+1])    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
5	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+1])&&((    q1    ==    hashArea[offset+1])&&(q1    ==    hashArea[offset+1])    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
6	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1!=  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1!=  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1!=  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+1])&&((    q1    ==    hashArea[offset+1])&&(q1    ==    hashArea[offset+1])    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
7	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+1])&&((    q1    ==    hashArea[offset+1])&&(q1    ==    hashArea[offset+1])    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
8	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
9	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
10	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+2])&&(  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+2])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+2])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[i];  }	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if(q1    ==    hashArea[i])    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
12	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[i];  }	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if(q1    ==    hashArea[i])    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[offset];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[offset];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[offset];  }	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if(q1    ==    hashArea[i])    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
14	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset])||(q1  ==  hashArea[offset]))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset])||(q1  ==  hashArea[offset]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset])||(q1  ==  hashArea[offset]))  {	  if(q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
15	[BUG]  [BUGGY]  if(_names!=  null  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null  ||  q1  ==  hashArea[offset])  {	  if(q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
16	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset])||(q1  ==  hashArea[offset]))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset])||(q1  ==  hashArea[offset]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset])||(q1  ==  hashArea[offset]))  {	  if(q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
17	[BUG]  [BUGGY]  if(_names  ==  null  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  q1  ==  hashArea[offset])  {	  if(q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
18	[BUG]  [BUGGY]  if(len  ==  1)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  1)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  1)  {	  if(len!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
19	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }	  if(_names    ==    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]!=    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }	  if(_names    ==    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]!=    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  if(_spilloverStart)  {  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }	  if(_names    ==    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]!=    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
22	[BUG]  [BUGGY]  if(_spilloverStart)  {  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  }	  if(_names    ==    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]!=    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if((    q1    ==    hashArea[i])&&((    q2    ==    hashArea[i])&&(i    <    len)    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  _names.length  -  1;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  _names.length  -  1;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  _names.length  -  1;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if((    q1    ==    hashArea[i])&&((    q2    ==    hashArea[i])&&(i    <    len)    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  hashArea[i].length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  hashArea[i].length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  hashArea[i].length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if((    q1    ==    hashArea[i])&&((    q2    ==    hashArea[i])&&(i    <    len)    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
26	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  if(offset  <  =  0  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  <  =  0  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  <  =  0  ||  q1  ==  hashArea[offset])  {	  if(len    <    =    0    ||    q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
29	[BUG]  [BUGGY]  if(len  <  0  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  0  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  0  ||  q1  ==  hashArea[offset])  {	  if(len    <    =    0    ||    q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
30	[BUG]  [BUGGY]  if(_names  ==  null  ||  q1  ==  hashArea[offset]  ||  len  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  q1  ==  hashArea[offset]  ||  len  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  q1  ==  hashArea[offset]  ||  len  ==  hashArea[offset])  {	  if(q1    ==    hashArea[offset]    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
31	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  ==  hashArea[offset]))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  ==  hashArea[offset]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  ==  hashArea[offset]))  {	  if(q1    ==    hashArea[offset]    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
32	[BUG]  [BUGGY]  if(hashArea[offset]  ==  hashArea[offset]  ||  len  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(hashArea[offset]  ==  hashArea[offset]  ||  len  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(hashArea[offset]  ==  hashArea[offset]  ||  len  ==  hashArea[offset])  {	  if(q1    ==    hashArea[offset]    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
33	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
34	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
35	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
36	[BUG]  [BUGGY]  if(len  ==  1  ||  len  ==  2)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  1  ||  len  ==  2)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  1  ||  len  ==  2)  {	  if(len    ==    2)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
37	[BUG]  [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[off  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1!=    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
38	[BUG]  [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1!=  hashArea[off  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1!=  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1!=  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1!=    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
39	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
40	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
41	[BUG]  [BUGGY]  if((  _names[offset]  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names[offset]  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names[offset]  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {	  if((    q1    ==    hashArea[offset])    ||(q1    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
42	[BUG]  [BUGGY]  if((  _hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {	  if((    q1    ==    hashArea[offset])    ||(q1    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
43	[BUG]  [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0,    len    =    _names.length;    i    <    len;    ++i)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
44	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  ++i)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  ++i)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0,  len  =  hashArea.length;  i  <  len;  ++i)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0,    len    =    _names.length;    i    <    len;    ++i)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
45	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[offset];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[offset];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[offset];  }	  if(_names!=    null)    {    for(int    i    =    0,    len    =    _names.length;    i    <    len;    ++i)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
46	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
49	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
50	[BUG]  [BUGGY]  if(offset  ==  0  ||  len  ==  hashArea[offset+1])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  ==  0  ||  len  ==  hashArea[offset+1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  ==  0  ||  len  ==  hashArea[offset+1])  {	  if(offset    ==    0    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  if(len  ==  0  ||  offset  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||  offset  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||  offset  ==  hashArea[offset])  {	  if(offset    ==    0    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
52	[BUG]  [BUGGY]  if(offset  ==  0  ||  len!=  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  ==  0  ||  len!=  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  ==  0  ||  len!=  hashArea[offset])  {	  if(offset    ==    0    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
53	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+4])&    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
54	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+2])))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+2])))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+2])))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&    (1    ==    hashArea[offset+3])))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+1])))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+1])))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+1])))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&    (1    ==    hashArea[offset+3])))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  ((  q2  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3])))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q2  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3])))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q2  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3])))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&    (1    ==    hashArea[offset+3])))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2]))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2]))  {	  if((    q2    ==    hashArea[offset])    &&(q1    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
61	[BUG]  [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
62	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
63	[BUG]  [BUGGY]  ||  _names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ||  _names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	||  _names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
64	[BUG]  [BUGGY]  if(offset  ==  0  ||  q1  ==  hashArea[offset+1])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  ==  0  ||  q1  ==  hashArea[offset+1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  ==  0  ||  q1  ==  hashArea[offset+1])  {	  if(len    ==    0    ||    q1    ==    hashArea[offset+1])    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  if(_names  ==  null  ||  q1  ==  hashArea[offset+1])  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  q1  ==  hashArea[offset+1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  q1  ==  hashArea[offset+1])  {	  if(len    ==    0    ||    q1    ==    hashArea[offset+1])    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
66	[BUG]  [BUGGY]  if((  _hashArea[offset])&&(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&(q1  ==  hashArea[offset+1]))  {	  if((    q2    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&&(    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[offset+3])&&(  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[offset+3])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[offset+3])&&(	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&&(    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    >=    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
71	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    >=    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
72	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    >=    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
73	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    >=    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
74	[BUG]  [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
75	[BUG]  [BUGGY]  if(_spilloverEnd!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverEnd!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverEnd!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
76	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
78	[BUG]  [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
79	[BUG]  [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
80	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(q2    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
81	[BUG]  [BUGGY]  if((  _hashArea[offset])&&(q2  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&(q2  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&(q2  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(q2    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
82	[BUG]  [BUGGY]  if((  _names[offset]  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names[offset]  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names[offset]  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
83	[BUG]  [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
84	[BUG]  [BUGGY]  if(_spilloverEnd!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverEnd!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverEnd!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
85	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
86	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+4])&&(    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
87	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+4])&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+4])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+4])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+4])&&(    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
88	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])  ||(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])  ||(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])  ||(q1  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
89	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset]  ||  q2  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset]  ||  q2  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset]  ||  q2  ==  hashArea[offset])  {	  if(len    ==    0    ||    q2    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
90	[BUG]  [BUGGY]  if(offset  ==  0  ||  q2  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  ==  0  ||  q2  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  ==  0  ||  q2  ==  hashArea[offset])  {	  if(len    ==    0    ||    q2    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
91	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])))  {  return  _names[off  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])))  {  return  _names[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])))  {  return  _names[off	  ((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+3])))    {    return    _names[off    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
92	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])))  {  return  _names[off  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])))  {  return  _names[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])))  {  return  _names[off	  ((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+3])))    {    return    _names[off    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
93	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])||(q1  ==  hashArea[offset+3])))  {  return  _names[off  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])||(q1  ==  hashArea[offset+3])))  {  return  _names[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])||(q1  ==  hashArea[offset+3])))  {  return  _names[off	  ((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+3])))    {    return    _names[off    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
94	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+1])&&(q1    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
95	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  2)||(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  2)||(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  2)||(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+1])&&(q1    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
96	[BUG]  [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[off  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
97	[BUG]  [BUGGY]  if(offset  <  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  <  0)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  <  0)  {	  if(len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
98	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+2]))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+2]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+2]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+2]))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
99	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  2)||(q1  ==  hashArea[offset+2]))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  2)||(q1  ==  hashArea[offset+2]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  2)||(q1  ==  hashArea[offset+2]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+2]))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
100	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  4)||(q1  ==  hashArea[offset+2]))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  4)||(q1  ==  hashArea[offset+2]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  4)||(q1  ==  hashArea[offset+2]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+2]))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
101	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  1)||(q1  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+2]))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
102	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+2]))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+2]))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+2]))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&    (1    ==    hashArea[offset+3]))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
103	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+1]))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+1]))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+1]))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&    (1    ==    hashArea[offset+3]))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
104	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset]  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset]  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset]  ||  q1  ==  hashArea[offset])  {	  if(offset    ==    0    ||    q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
105	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&&(    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
106	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&&(    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
107	[BUG]  [BUGGY]  if(offset  >=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  >=  0)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  >=  0)  {	  if(len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
108	[BUG]  [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[off  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
109	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(	  if((    q2    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&&(    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
110	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&(	  if((    q2    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&&(    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
111	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
112	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
113	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
114	[BUG]  [BUGGY]  if((  _names[offset]  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names[offset]  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names[offset]  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
115	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1!=  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
116	[BUG]  [BUGGY]  if(_names  ==  null  ||  len!=  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  len!=  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  len!=  hashArea[offset])  {	  if(_names    ==    null    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
117	[BUG]  [BUGGY]  if(_names  ==  null  ||  len  ==  hashArea[offset+1])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  len  ==  hashArea[offset+1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  len  ==  hashArea[offset+1])  {	  if(_names    ==    null    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
118	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
119	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
120	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
121	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  >=  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
122	[BUG]  [BUGGY]  if(q2  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q2  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q2  ==  hashArea[offset])  {	  if(len    ==    0    ||    q2    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
123	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&(q3  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&(q3  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&(q3  ==  hashArea[offset+3]))  {	  if((    q2    ==    hashArea[offset])    &&(q1    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q2  ==  hashArea[i])  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q2  ==  hashArea[i])  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q2  ==  hashArea[i])  {  return  _names[i];  }	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if(q1    ==    hashArea[i])    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[0];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[0];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q1  ==  hashArea[i])  {  return  _names[0];  }	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if(q1    ==    hashArea[i])    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
126	[BUG]  [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
127	[BUG]  [BUGGY]  if(len  >=  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[off  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  >=  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  >=  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1!=  hashArea[offset+2])||(q1  ==  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1!=    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
128	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q2  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q2  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q2  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
129	[BUG]  [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[off  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
130	[BUG]  [BUGGY]  if(len  >=  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[off  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  >=  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  >=  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
131	[BUG]  [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
133	[BUG]  [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
134	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
135	[BUG]  [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  >=  hashArea[offset+2])||(q1!=  hashArea[off  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  >=  hashArea[offset+2])||(q1!=  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  >=  hashArea[offset+2])||(q1!=  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1!=    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
136	[BUG]  [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1!=  hashArea[off  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1!=  hashArea[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  =  0  ||(q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1!=  hashArea[off	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1!=    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
137	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset])  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset])  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset])  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }	  if(_names    ==    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]!=    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
138	[BUG]  [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }	  if(_names    ==    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]!=    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
139	[BUG]  [BUGGY]  if(len  ==  hashArea[offset]  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  hashArea[offset]  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  hashArea[offset]  ||  q1  ==  hashArea[offset])  {	  if(q1    ==    hashArea[offset]    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
140	[BUG]  [BUGGY]  if(hashArea  ==  [offset]  ||  len  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(hashArea  ==  [offset]  ||  len  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(hashArea  ==  [offset]  ||  len  ==  hashArea[offset])  {	  if(q1    ==    hashArea[offset]    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
141	[BUG]  [BUGGY]  if((  _names!=  null)||(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names!=  null)||(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names!=  null)||(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
142	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3]))  {	  if(q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
143	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset])||(q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset])||(q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset])||(q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(	  if(q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
145	[BUG]  [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
146	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0,    len    =    _names.length;    i    <    len;    ++i)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
148	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0,    len    =    _names.length;    i    <    len;    ++i)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
149	[BUG]  [BUGGY]  if(len  ==  0  ||  _names  ==  null  ||  len  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||  _names  ==  null  ||  len  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||  _names  ==  null  ||  len  ==  hashArea[offset])  {	  if(_names    ==    null    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
150	[BUG]  [BUGGY]  if(len  ==  null  ||  _names  ==  null)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  null  ||  _names  ==  null)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  null  ||  _names  ==  null)  {	  if(_names    ==    null    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
151	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
152	[BUG]  [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
153	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  names.length;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0;  i  <  names.length;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0;  i  <  names.length;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
154	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
155	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
156	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
157	[BUG]  [BUGGY]  if((  _names!=  null)&&(q1  ==  hashArea[offset])||(q1  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names!=  null)&&(q1  ==  hashArea[offset])||(q1  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names!=  null)&&(q1  ==  hashArea[offset])||(q1  ==  hashArea[offset+3]))  {	  if((    q1    ==    hashArea[offset])    ||(q1    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
158	[BUG]  [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
159	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset])  {  if(_names!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
160	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset+1])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset+1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset+1])  {	  if(len    ==    0    ||    q1    ==    hashArea[offset+1])    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
161	[BUG]  [BUGGY]  if(len  ==  0  &&  q1  ==  hashArea[offset+1])  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  &&  q1  ==  hashArea[offset+1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  &&  q1  ==  hashArea[offset+1])  {	  if(len    ==    0    ||    q1    ==    hashArea[offset+1])    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
162	[BUG]  [BUGGY]  if(len  ==  0  ||  q1  ==  hashArea[offset+2])  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||  q1  ==  hashArea[offset+2])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||  q1  ==  hashArea[offset+2])  {	  if(len    ==    0    ||    q1    ==    hashArea[offset+1])    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
163	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
164	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >=  hashArea[offset+3])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
165	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  =  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
166	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
167	[BUG]  [BUGGY]  ((  q2  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q2  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q2  ==  hashArea[offset])&&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&    (1    ==    hashArea[offset+3]))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
168	[BUG]  [BUGGY]  if((  _names  ==  null)||(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names  ==  null)||(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names  ==  null)||(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
169	[BUG]  [BUGGY]  if((  _names!=  null)&&(q1  ==  hashArea[offset])||(q2  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names!=  null)&&(q1  ==  hashArea[offset])||(q2  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names!=  null)&&(q1  ==  hashArea[offset])||(q2  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
170	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+2]))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
171	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len!=  0)||(q1  ==  hashArea[offset+2]))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len!=  0)||(q1  ==  hashArea[offset+2]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len!=  0)||(q1  ==  hashArea[offset+2]))  {	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+2]))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
172	[BUG]  [BUGGY]  if(_spilloverStart!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart!=  0)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart!=  0)  {	  if(len!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
173	[BUG]  [BUGGY]  if(offset  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  ==  0)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  ==  0)  {	  if(len!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
174	[BUG]  [BUGGY]  if(q1  ==  hashArea[offset]  ||  offset  ==  0  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(q1  ==  hashArea[offset]  ||  offset  ==  0  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(q1  ==  hashArea[offset]  ||  offset  ==  0  ||  q1  ==  hashArea[offset])  {	  if(offset    ==    0    ||    q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
175	[BUG]  [BUGGY]  ((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+2])))  {  return  _names[offset  >>  2];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+2])))  {  return  _names[offset  >>  2];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+2])))  {  return  _names[offset  >>  2];  }	  ((    q1    ==    hashArea[offset])&&(q2    ==    hashArea[offset+3])))    {    return    _names[offset    >>    2];    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
176	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&	  if((    q2    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&&(    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
177	[BUG]  [BUGGY]  if(offset  <  0  ||  len  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(offset  <  0  ||  len  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(offset  <  0  ||  len  ==  hashArea[offset])  {	  if(offset    ==    0    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  >=  len)  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  >=  len)  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  >=  len)	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if((    q1    ==    hashArea[i])&&((    q2    ==    hashArea[i])&&(i    <    len)    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
179	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+3])&	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
180	[BUG]  [BUGGY]  if(_names  ==  null  ||  len  <  hashArea.length)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  len  <  hashArea.length)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  len  <  hashArea.length)  {	  if(_names    ==    null    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
181	[BUG]  [BUGGY]  if(_names  ==  null  ||  len  ==  hashArea[offset-1])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  len  ==  hashArea[offset-1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  len  ==  hashArea[offset-1])  {	  if(_names    ==    null    ||    len    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
182	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  <  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  <  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  <  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+2])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&&(    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
183	[BUG]  [BUGGY]  if(_names  ==  null  ||  _names  ==  null)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  _names  ==  null)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  _names  ==  null)  {	  if(offset    ==    0    ||    q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
184	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  <  =  0))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  <  =  0))  {	  if(len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
185	[BUG]  [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
186	[BUG]  [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
187	[BUG]  [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]!=  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
188	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+4])&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+4])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+4])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+4])&    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
189	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+4])&&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+4])&    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
190	[BUG]  [BUGGY]  if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+3]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
191	[BUG]  [BUGGY]  ((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])))  {  return  _names[off  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  ((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])))  {  return  _names[off  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])))  {  return  _names[off	  ((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+3])))    {    return    _names[off    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
192	[BUG]  [BUGGY]  if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
193	[BUG]  [BUGGY]  if((  _hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&(q2  ==  hashArea[offset+1]))  {	  if((    q1    ==    hashArea[offset])    ||(q2    ==    hashArea[offset+1]))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
194	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
195	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q2  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q2  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q2  ==  hashArea[offset+1]))  {	  if((    q2    ==    hashArea[offset])    &&(q1    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
196	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[offset+1]))  {	  if(len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
197	[BUG]  [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  names[i];  }	  if(_names    ==    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]!=    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
198	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  ==  0))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  ==  0))  {	  if(len!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
199	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  ==  _secondaryStart))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&(len  ==  _secondaryStart))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&(len  ==  _secondaryStart))  {	  if(len!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
200	[BUG]  [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
201	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&(len  <  =  0)||(q1  ==  hashArea[offset+1])  &&((  q1  ==  hashArea[offset+1])&&(q1  ==  hashArea[	  if((    q1    ==    hashArea[offset])&&(len    <    =    0)||(q1    ==    hashArea[offset+1])&&((    q1    ==    hashArea[offset+1])&&(q1    ==    hashArea[offset+1])    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
202	[BUG]  [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])  &&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])  &&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  =  0  ||(q1  ==  hashArea[offset])  &&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1!=  hashArea[	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1!=    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q0  ==  hashArea[i])  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q0  ==  hashArea[i])  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  0,  len  =  _names.length;  i  <  len;  i++)  {  if(q0  ==  hashArea[i])  {  return  _names[i];  }	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if(q1    ==    hashArea[i])    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
204	[BUG]  [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(_names[i]  ==  null)  {  return  names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    i++)    {    if(_names[i]    ==    null)    {    return    names[i];    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  _names.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  for(int  i  =  1,  len  =  _names.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	for(int  i  =  1,  len  =  _names.length;  i  <  len;  i++)  {  if((  q1  ==  hashArea[i])&&((  q2  ==  hashArea[i])&&(i  <  len)	  for(int    i    =    0,    len    =    _names.length;    i    <    len;    i++)    {    if((    q1    ==    hashArea[i])&&((    q2    ==    hashArea[i])&&(i    <    len)    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
206	[BUG]  [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])  &&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  =  0  ||(q1  ==  hashArea[offset])  &&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  =  0  ||(q1  ==  hashArea[offset])  &&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[	  if(len    <    =    0    ||(q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[off    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
207	[BUG]  [BUGGY]  if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _names  ==  null)&&(q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3]))  {	  if((    q1    ==    hashArea[offset])    ||(q1    ==    hashArea[offset+3]))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
208	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[0];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[0];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names!=  null)  {  for(int  i  =  0,  len  =  _names.length;  i  <  len;  ++i)  {  return  _names[0];  }	  if(_names!=    null)    {    for(int    i    =    0,    len    =    _names.length;    i    <    len;    ++i)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
209	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&&(	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&&(    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
210	[BUG]  [BUGGY]  if(len  ==  0  ||  q2  ==  hashArea[offset+1])  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  ==  0  ||  q2  ==  hashArea[offset+1])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  ==  0  ||  q2  ==  hashArea[offset+1])  {	  if(len    ==    0    ||    q1    ==    hashArea[offset+1])    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
211	[BUG]  [BUGGY]  if((  _spilloverStart)  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _spilloverStart)  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _spilloverStart)  ==  hashArea[offset])  {	  if(q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
212	[BUG]  [BUGGY]  if(len  <  2)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(len  <  2)  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(len  <  2)  {	  if(len    ==    2)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
213	[BUG]  [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
214	[BUG]  [BUGGY]  if(_spilloverEnd!=  _hashArea.length)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverEnd!=  _hashArea.length)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverEnd!=  _hashArea.length)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]  ==  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
215	[BUG]  [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  _names[i];  }  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_spilloverStart)  {  for(int  i  =  0;  i  <  len;  ++i)  {  if(_names[i]!=  null)  {  return  _names[i];  }	  if(_names!=    null)    {    for(int    i    =    0;    i    <    len;    ++i)    {    if(_names[i]    ==    null)    {    return    _names[i];    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
216	[BUG]  [BUGGY]  if(_names  ==  null  ||  len  <  =  0  ||  q1  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  len  <  =  0  ||  q1  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  len  <  =  0  ||  q1  ==  hashArea[offset])  {	  if(len    <    =    0    ||    q1    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
217	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >  hashArea[offset+3])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >  hashArea[offset+3])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  >  hashArea[offset+3])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    >=    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
218	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+3])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
219	[BUG]  [BUGGY]  if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q2  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+1])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+1])||(q1    ==    hashArea[offset+1])&    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
220	[BUG]  [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  _hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  ==  hashArea[offset+2])||(q1  ==  hashArea[offset+3])&&	  if((    _hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    ==    hashArea[offset+2])||(q1    ==    hashArea[offset+3])&    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
221	[BUG]  [BUGGY]  if(_names  ==  null  ||  q2  ==  hashArea[offset])  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if(_names  ==  null  ||  q2  ==  hashArea[offset])  {  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if(_names  ==  null  ||  q2  ==  hashArea[offset])  {	  if(len    ==    0    ||    q2    ==    hashArea[offset])    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
222	[BUG]  [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]        int  offset  =  _tertiaryStart  +  ((origOffset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int[]  hashArea  =  _hashArea;  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset  +  bucketSize;  offset  <  end;  offset  +=  4)  {  int  len  =  hashArea[offset+3];  if  ((q1  ==  hashArea[offset])  &&  (1  ==  len))  {  return  _names[offset  >>  2];  }      [BUGGY]  if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&  [BUGGY]      return  null;  }  }    for  (offset  =  _spilloverStart();  offset  <  _spilloverEnd;  offset  +=  4)  {  if  ((q1  ==  hashArea[offset])  &&  (1  ==  hashArea[offset+3]))  {  return  _names[offset  >>  2];  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findSecondary  [RETURN_TYPE]  String  int  origOffset  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	if((  q1  ==  hashArea[offset])&&((  q1  ==  hashArea[offset])&&(q1  <  hashArea[offset+2])||(q1  ==  hashArea[offset+1])&	  if((    q1    ==    hashArea[offset])&&((    q1    ==    hashArea[offset])&&(q1    <    hashArea[offset+2])||(q1    ==    hashArea[offset+2])&    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
