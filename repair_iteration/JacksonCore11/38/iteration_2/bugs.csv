bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_hashSize  <  100)  {  //  would  have  spill-over  area  of  128  entries;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  100)  {  //  would  have  spill-over  area  of  128  entries;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  100)  {  //  would  have  spill-over  area  of  128  entries;  }	  if(_hashSize    <    100)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(_hashSize  >=  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  >=  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  >=  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }	  if(_hashSize    <    100)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(_hashSize  <  100)  {  //  would  have  spill-over  area  of  128  entries.length;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  100)  {  //  would  have  spill-over  area  of  128  entries.length;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  100)  {  //  would  have  spill-over  area  of  128  entries.length;  }	  if(_hashSize    <    100)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  _reportError( "TooManyCollisions. ");  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportError( "TooManyCollisions. ");  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportError( "TooManyCollisions. ");	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportUnsupportedOperation();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  _reportError( "TooManyCollisions:  was  expecting  a  bug. ");  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportError( "TooManyCollisions:  was  expecting  a  bug. ");  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportError( "TooManyCollisions:  was  expecting  a  bug. ");	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  _reportError( "TooManyCollisions:  was  expecting  a  problem. ");  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportError( "TooManyCollisions:  was  expecting  a  problem. ");  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportError( "TooManyCollisions:  was  expecting  a  problem. ");	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  if(_hashSize  <  100)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  100)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  100)  {	  if(_hashSize    <    1024)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  if(_hashSize  >  1024)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  >  1024)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  >  1024)  {	  if(_hashSize    <    1024)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  if(_hashSize  <  1024  ||  _hashSize  >  MAX_ENTRIES_FOR_REUSE)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  1024  ||  _hashSize  >  MAX_ENTRIES_FOR_REUSE)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  1024  ||  _hashSize  >  MAX_ENTRIES_FOR_REUSE)  {	  if(_hashSize    <    1024)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  if(_hashSize  >=  1024)  {  //  would  have  spill-over  area  of  128  entries;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  >=  1024)  {  //  would  have  spill-over  area  of  128  entries;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  >=  1024)  {  //  would  have  spill-over  area  of  128  entries;  }	  if(_hashSize    <    1024)    {    //    would    have    spill-over    area    of    128    entries;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  if(_hashSize  <  1000)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  1000)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  1000)  {  //  would  have  spill-over  area  of  128  entries  return;  }	  if(_hashSize    <    1024)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(_hashSize  >  1024)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  >  1024)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  >  1024)  {  //  would  have  spill-over  area  of  128  entries  return;  }	  if(_hashSize    >=    1024)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  if(_hashSize  >=  1024)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  >=  1024)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  >=  1024)  {	  if(_hashSize    >=    1024)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  if(_hashSize  >  1024)  {  //  would  have  spill-over  area  of  128  entries;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  >  1024)  {  //  would  have  spill-over  area  of  128  entries;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  >  1024)  {  //  would  have  spill-over  area  of  128  entries;  }	  if(_hashSize    <    1024)    {    //    would    have    spill-over    area    of    128    entries;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  _reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >>  3)+ "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >>  3)+ "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >>  3)+ "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  _reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >>  3)+ "  slots  --  suspect  a  DoS  attack  based  on  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >>  3)+ "  slots  --  suspect  a  DoS  attack  based  on  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >>  3)+ "  slots  --  suspect  a  DoS  attack  based  on	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  _reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >=  3)+ "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >=  3)+ "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportError( "TooManyCollisions  in  the  table  with   "+_count  + "  entries,  hash  area  of "+_hashSize+ "  slots  is  now  full  (all "  +(_hashSize  >=  3)+ "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  if(_hashSize  <  =  1024)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  =  1024)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  =  1024)  {  //  would  have  spill-over  area  of  128  entries  return;  }	  if(_hashSize    <    1024)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  if(_count  <  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_count  <  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_count  <  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }	  if(_hashSize    <    100)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  if(_hashSize  >  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  >  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  >  100)  {  //  would  have  spill-over  area  of  128  entries  return;  }	  if(_hashSize    <    100)    {    //    would    have    spill-over    area    of    128    entries    return;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  if(_hashSize  ==  1024)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  ==  1024)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  ==  1024)  {	  if(_hashSize    <    1024)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  if(_hashSize  <  =  1024)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  =  1024)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  =  1024)  {	  if(_hashSize    <    1024)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  if(_hashSize  <  1024  ||  _count  >  oldHashArea.length)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_hashSize  <  1024  ||  _count  >  oldHashArea.length)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_hashSize  <  1024  ||  _count  >  oldHashArea.length)  {	  if(_hashSize    <    1024)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  if(_count  <  1024)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  if(_count  <  1024)  {  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	if(_count  <  1024)  {	  if(_hashSize    <    1024)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  Integer[]  slots  =  _hashArea.getValues();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  Integer[]  slots  =  _hashArea.getValues();  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	Integer[]  slots  =  _hashArea.getValues();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  Integer[]  slots  =  _hashArea.getSize();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  Integer[]  slots  =  _hashArea.getSize();  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	Integer[]  slots  =  _hashArea.getSize();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  _reportError( "Too  few  slots  available. ");  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    protected  void  _reportTooManyCollisions()  {      [BUGGY]  _reportError( "Too  few  slots  available. ");  [BUGGY]    return;  }  throw  new  IllegalStateException(   "Spill-over  slots  in  symbol  table  with     "+_count  +   "  entries,  hash  area  of     "+_hashSize+   "  slots  is  now  full  (all     "  +(_hashSize  >>  3)+   "  slots  --  suspect  a  DoS  attack  based  on  hash  collisions.   "  +   "  You  can  disable  the  check  via  `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`   ");  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _reportTooManyCollisions  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  fill  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	_reportError( "Too  few  slots  available. ");	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
