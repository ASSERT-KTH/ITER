bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
77	[BUG] [BUGGY] return; [FE] ArrayIndexOutOfBoundsException [CONTEXT] protected void _reportTooManyCollisions() {  if (_hashSize <= 1024) { // would have spill-over area of 128 entries [BUGGY] return; [BUGGY] } throw new IllegalStateException("Spill-over slots in symbol table with "+_count +" entries, hash area of "+_hashSize+" slots is now full (all " +(_hashSize >> 3)+" slots -- suspect a DoS attack based on hash collisions." +" You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`"); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _reportTooManyCollisions [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1184	1184	1	replace	
