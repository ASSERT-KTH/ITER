bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] int offset = _calcOffset(calcHash(q1)); [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] int offset = _calcOffset(calcHash(q1)); [BUGGY]  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	470	470	1	replace	
2	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] [BUGGY] int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	470	470	1	add	
3	[BUG] [BUGGY] final int[] hashArea = _hashArea; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  [BUGGY] final int[] hashArea = _hashArea; [BUGGY]  int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	472	472	1	replace	
4	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  [BUGGY] [BUGGY] final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	472	472	1	add	
5	[BUG] [BUGGY] int len = hashArea[offset+3]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; [BUGGY] int len = hashArea[offset+3]; [BUGGY]  if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	474	474	1	replace	
6	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; [BUGGY] [BUGGY] int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	474	474	1	add	
7	[BUG] [BUGGY] if (len == 1) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; [BUGGY] if (len == 1) { [BUGGY] if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	476	476	1	replace	
8	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; [BUGGY] [BUGGY] if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	476	476	1	add	
9	[BUG] [BUGGY] if (hashArea[offset] == q1) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { [BUGGY] if (hashArea[offset] == q1) { [BUGGY] return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3];  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	477	477	1	replace	
10	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { [BUGGY] [BUGGY] if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3];  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	477	477	1	add	
11	[BUG] [BUGGY] } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; [FE] ArrayIndexOutOfBoundsException [CONTEXT] int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } [BUGGY] } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so   return null; [BUGGY] return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	480	481	1	replace	
12	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] int offset = _calcOffset(calcHash(q1));  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } [BUGGY] [BUGGY] } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so   return null; return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	480	481	1	add	
13	[BUG] [BUGGY] return null; [FE] ArrayIndexOutOfBoundsException [CONTEXT]  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so [BUGGY] return null; [BUGGY] }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	481	481	1	replace	
14	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]  final int[] hashArea = _hashArea; int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so [BUGGY] [BUGGY] return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	481	481	1	add	
15	[BUG] [BUGGY] int offset2 = _secondaryStart + ((offset >> 3) << 2); [FE] ArrayIndexOutOfBoundsException [CONTEXT] int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  [BUGGY] int offset2 = _secondaryStart + ((offset >> 3) << 2); [BUGGY]  len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	484	484	1	replace	
16	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] int len = hashArea[offset+3]; if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  [BUGGY] [BUGGY] int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	484	484	1	add	
17	[BUG] [BUGGY] len = hashArea[offset2+3]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); [BUGGY] len = hashArea[offset2+3]; [BUGGY]  if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	486	486	1	replace	
18	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (len == 1) { if (hashArea[offset] == q1) { return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); [BUGGY] [BUGGY] len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	486	486	1	add	
19	[BUG] [BUGGY] if (len == 1) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; [BUGGY] if (len == 1) { [BUGGY] if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	488	488	1	replace	
20	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] return _names[offset >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; [BUGGY] [BUGGY] if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	488	488	1	add	
21	[BUG] [BUGGY] if (hashArea[offset2] == q1) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { [BUGGY] if (hashArea[offset2] == q1) { [BUGGY] return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	489	489	1	replace	
22	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { [BUGGY] [BUGGY] if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	489	489	1	add	
23	[BUG] [BUGGY] } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; [FE] ArrayIndexOutOfBoundsException [CONTEXT] }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } [BUGGY] } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so   return null; [BUGGY] return null; }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	492	493	1	replace	
24	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] }  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } [BUGGY] [BUGGY] } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so   return null; return null; }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	492	493	1	add	
25	[BUG] [BUGGY] return null; [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so [BUGGY] return null; [BUGGY] }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	493	493	1	replace	
26	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int offset2 = _secondaryStart + ((offset >> 3) << 2); len = hashArea[offset2+3]; if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so [BUGGY] [BUGGY] return null; }  return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	493	493	1	add	
27	[BUG] [BUGGY] return _findSecondary(offset, q1); [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  [BUGGY] return _findSecondary(offset, q1); [BUGGY] } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	497	497	1	replace	
28	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (len == 1) { if (hashArea[offset2] == q1) { return _names[offset2 >> 2]; } } else if (len == 0) { // empty slot; unlikely but avoid further lookups if so return null; }  [BUGGY] [BUGGY] return _findSecondary(offset, q1); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] findName [RETURN_TYPE] String  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr end flags len longNameOffset offset offset2 pri q1 sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	497	497	1	add	
29	[BUG] [BUGGY] int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     [BUGGY] int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); [BUGGY] final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	626	626	1	replace	
30	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     [BUGGY] [BUGGY] int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	626	626	1	add	
31	[BUG] [BUGGY] final int[] hashArea = _hashArea; [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); [BUGGY] final int[] hashArea = _hashArea; [BUGGY] final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	627	627	1	replace	
32	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); [BUGGY] [BUGGY] final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	627	627	1	add	
33	[BUG] [BUGGY] final int bucketSize = (1 << _tertiaryShift); [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; [BUGGY] final int bucketSize = (1 << _tertiaryShift); [BUGGY] for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	628	628	1	replace	
34	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; [BUGGY] [BUGGY] final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	628	628	1	add	
35	[BUG] [BUGGY] for (int end = offset + bucketSize; offset < end; offset += 4) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); [BUGGY] for (int end = offset + bucketSize; offset < end; offset += 4) { [BUGGY] int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	629	629	1	replace	
36	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); [BUGGY] [BUGGY] for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	629	629	1	add	
37	[BUG] [BUGGY] int len = hashArea[offset+3]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { [BUGGY] int len = hashArea[offset+3]; [BUGGY] if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }    [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	630	630	1	replace	
38	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { [BUGGY] [BUGGY] int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }    [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	630	630	1	add	
39	[BUG] [BUGGY] if ((q1 == hashArea[offset]) && (1 == len)) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; [BUGGY] if ((q1 == hashArea[offset]) && (1 == len)) { [BUGGY] return _names[offset >> 2]; } if (len == 0) { return null; } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	631	631	1	replace	
40	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] {     int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; [BUGGY] [BUGGY] if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	631	631	1	add	
41	[BUG] [BUGGY] if (len == 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT]   int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } [BUGGY] if (len == 0) { [BUGGY] return null; } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	replace	
42	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]   int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } [BUGGY] [BUGGY] if (len == 0) { return null; } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	634	634	1	add	
43	[BUG] [BUGGY] return null; [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { [BUGGY] return null; [BUGGY] } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	635	635	1	replace	
44	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int offset = _tertiaryStart + ((origOffset >> (_tertiaryShift + 2)) << _tertiaryShift); final int[] hashArea = _hashArea; final int bucketSize = (1 << _tertiaryShift); for (int end = offset + bucketSize; offset < end; offset += 4) { int len = hashArea[offset+3]; if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { [BUGGY] [BUGGY] return null; } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	635	635	1	add	
45	[BUG] [BUGGY] for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }    [BUGGY] for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { [BUGGY] if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } } return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	641	641	1	replace	
46	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if ((q1 == hashArea[offset]) && (1 == len)) { return _names[offset >> 2]; } if (len == 0) { return null; } }    [BUGGY] [BUGGY] for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } } return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	641	641	1	add	
47	[BUG] [BUGGY] if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] return _names[offset >> 2]; } if (len == 0) { return null; } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { [BUGGY] if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { [BUGGY] return _names[offset >> 2]; } } return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	642	642	1	replace	
48	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] return _names[offset >> 2]; } if (len == 0) { return null; } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { [BUGGY] [BUGGY] if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } } return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	642	642	1	add	
49	[BUG] [BUGGY] return null; [FE] ArrayIndexOutOfBoundsException [CONTEXT] } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } } [BUGGY] return null; [BUGGY] } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	646	646	1	replace	
50	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] } }    for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) { if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) { return _names[offset >> 2]; } } [BUGGY] [BUGGY] return null; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findSecondary [RETURN_TYPE] String  int origOffset int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	646	646	1	add	
51	[BUG] [BUGGY] offset = _findOffsetForAdd(calcHash(q[0])); [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { [BUGGY] offset = _findOffsetForAdd(calcHash(q[0])); [BUGGY] _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	823	823	1	replace	
52	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { [BUGGY] [BUGGY] offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	823	823	1	add	
53	[BUG] [BUGGY] _hashArea[offset] = q[0]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); [BUGGY] _hashArea[offset] = q[0]; [BUGGY] _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	824	824	1	replace	
54	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); [BUGGY] [BUGGY] _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	824	824	1	add	
55	[BUG] [BUGGY] _hashArea[offset+3] = 1; [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; [BUGGY] _hashArea[offset+3] = 1; [BUGGY] } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	825	825	1	replace	
56	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; [BUGGY] [BUGGY] _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	825	825	1	add	
57	[BUG] [BUGGY] break; [FE] ArrayIndexOutOfBoundsException [CONTEXT] } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } [BUGGY] break; [BUGGY] case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; case 3: { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	827	827	1	replace	
58	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } [BUGGY] [BUGGY] break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; case 3: { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	827	827	1	add	
59	[BUG] [BUGGY] if (_failOnDoS) { [FE] ArrayIndexOutOfBoundsException [CONTEXT]        final int end = (_hashSize << 3); if (_spilloverEnd >= end) { [BUGGY] if (_failOnDoS) { [BUGGY] _reportTooManyCollisions(); }   _needRehash = true; } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	931	931	1	replace	
60	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]        final int end = (_hashSize << 3); if (_spilloverEnd >= end) { [BUGGY] [BUGGY] if (_failOnDoS) { _reportTooManyCollisions(); }   _needRehash = true; } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	931	931	1	add	
61	[BUG] [BUGGY] _reportTooManyCollisions(); [FE] ArrayIndexOutOfBoundsException [CONTEXT]       final int end = (_hashSize << 3); if (_spilloverEnd >= end) { if (_failOnDoS) { [BUGGY] _reportTooManyCollisions(); [BUGGY] }   _needRehash = true; } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	932	932	1	replace	
62	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]       final int end = (_hashSize << 3); if (_spilloverEnd >= end) { if (_failOnDoS) { [BUGGY] [BUGGY] _reportTooManyCollisions(); }   _needRehash = true; } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	932	932	1	add	
63	[BUG] [BUGGY] _needRehash = true; [FE] ArrayIndexOutOfBoundsException [CONTEXT]    final int end = (_hashSize << 3); if (_spilloverEnd >= end) { if (_failOnDoS) { _reportTooManyCollisions(); }   [BUGGY] _needRehash = true; [BUGGY] } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	936	936	1	replace	
64	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]    final int end = (_hashSize << 3); if (_spilloverEnd >= end) { if (_failOnDoS) { _reportTooManyCollisions(); }   [BUGGY] [BUGGY] _needRehash = true; } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	936	936	1	add	
65	[BUG] [BUGGY] int hash = q1 ^ _seed; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { [BUGGY] int hash = q1 ^ _seed; [BUGGY]      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	982	982	1	replace	
66	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { [BUGGY] [BUGGY] int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	982	982	1	add	
67	[BUG] [BUGGY] hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      [BUGGY] hash += (hash >>> 16); // to xor hi- and low- 16-bits  hash ^= (hash << 3); // shuffle back a bit    hash += (hash >>> 12); // and bit more [BUGGY] hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	replace	
68	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      [BUGGY] [BUGGY] hash += (hash >>> 16); // to xor hi- and low- 16-bits  hash ^= (hash << 3); // shuffle back a bit    hash += (hash >>> 12); // and bit more hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	988	990	1	add	
69	[BUG] [BUGGY] hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more return hash; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits [BUGGY] hash ^= (hash << 3); // shuffle back a bit  hash += (hash >>> 12); // and bit more    return hash; [BUGGY] hash += (hash >>> 12); // and bit more return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	989	991	1	replace	
70	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits [BUGGY] [BUGGY] hash ^= (hash << 3); // shuffle back a bit  hash += (hash >>> 12); // and bit more    return hash; hash += (hash >>> 12); // and bit more return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	989	991	1	add	
71	[BUG] [BUGGY] hash += (hash >>> 12); // and bit more return hash; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash << 3); // shuffle back a bit [BUGGY] hash += (hash >>> 12); // and bit more  return hash; [BUGGY] return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	990	991	1	replace	
72	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash << 3); // shuffle back a bit [BUGGY] [BUGGY] hash += (hash >>> 12); // and bit more  return hash; return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	990	991	1	add	
73	[BUG] [BUGGY] return hash; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more [BUGGY] return hash; [BUGGY] } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	991	991	1	replace	
74	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash << 3); // shuffle back a bit hash += (hash >>> 12); // and bit more [BUGGY] [BUGGY] return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	991	991	1	add	
75	[BUG] [BUGGY] if (_hashSize <= 1024) { // would have spill-over area of 128 entries return; [FE] ArrayIndexOutOfBoundsException [CONTEXT] protected void _reportTooManyCollisions() {  [BUGGY] if (_hashSize <= 1024) { // would have spill-over area of 128 entries   return; [BUGGY] return; } throw new IllegalStateException("Spill-over slots in symbol table with "+_count +" entries, hash area of "+_hashSize+" slots is now full (all " +(_hashSize >> 3)+" slots -- suspect a DoS attack based on hash collisions." +" You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`"); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _reportTooManyCollisions [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	replace	
76	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] protected void _reportTooManyCollisions() {  [BUGGY] [BUGGY] if (_hashSize <= 1024) { // would have spill-over area of 128 entries   return; return; } throw new IllegalStateException("Spill-over slots in symbol table with "+_count +" entries, hash area of "+_hashSize+" slots is now full (all " +(_hashSize >> 3)+" slots -- suspect a DoS attack based on hash collisions." +" You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`"); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _reportTooManyCollisions [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1183	1184	1	add	
77	[BUG] [BUGGY] return; [FE] ArrayIndexOutOfBoundsException [CONTEXT] protected void _reportTooManyCollisions() {  if (_hashSize <= 1024) { // would have spill-over area of 128 entries [BUGGY] return; [BUGGY] } throw new IllegalStateException("Spill-over slots in symbol table with "+_count +" entries, hash area of "+_hashSize+" slots is now full (all " +(_hashSize >> 3)+" slots -- suspect a DoS attack based on hash collisions." +" You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`"); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _reportTooManyCollisions [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1184	1184	1	replace	
78	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] protected void _reportTooManyCollisions() {  if (_hashSize <= 1024) { // would have spill-over area of 128 entries [BUGGY] [BUGGY] return; } throw new IllegalStateException("Spill-over slots in symbol table with "+_count +" entries, hash area of "+_hashSize+" slots is now full (all " +(_hashSize >> 3)+" slots -- suspect a DoS attack based on hash collisions." +" You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`"); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _reportTooManyCollisions [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	1.0	1184	1184	1	add	
79	[BUG] [BUGGY] { [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) [BUGGY] { [BUGGY] _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	249	249	1	replace	
80	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) [BUGGY] [BUGGY] { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	249	249	1	add	
81	[BUG] [BUGGY] _parent = parent; [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { [BUGGY] _parent = parent; [BUGGY] _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	250	250	1	replace	
82	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { [BUGGY] [BUGGY] _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	250	250	1	add	
83	[BUG] [BUGGY] _seed = seed; [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; [BUGGY] _seed = seed; [BUGGY] _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	251	251	1	replace	
84	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; [BUGGY] [BUGGY] _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	251	251	1	add	
85	[BUG] [BUGGY] _intern = intern; [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; [BUGGY] _intern = intern; [BUGGY] _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	252	252	1	replace	
86	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; [BUGGY] [BUGGY] _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	252	252	1	add	
87	[BUG] [BUGGY] _failOnDoS = failOnDoS; [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; [BUGGY] _failOnDoS = failOnDoS; [BUGGY] _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	253	253	1	replace	
88	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; [BUGGY] [BUGGY] _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	253	253	1	add	
89	[BUG] [BUGGY] _tableInfo = null; // not used by child tables // Then copy shared state [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; [BUGGY] _tableInfo = null; // not used by child tables    // Then copy shared state [BUGGY]   _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	254	256	1	replace	
90	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; [BUGGY] [BUGGY] _tableInfo = null; // not used by child tables    // Then copy shared state  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	254	256	1	add	
91	[BUG] [BUGGY] _count = state.count; [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  [BUGGY] _count = state.count; [BUGGY] _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	257	257	1	replace	
92	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  [BUGGY] [BUGGY] _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	257	257	1	add	
93	[BUG] [BUGGY] _hashSize = state.size; [FE] ArrayIndexOutOfBoundsException [CONTEXT] int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; [BUGGY] _hashSize = state.size; [BUGGY] _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	258	258	1	replace	
94	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] int seed, boolean failOnDoS, TableInfo state) { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; [BUGGY] [BUGGY] _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	258	258	1	add	
95	[BUG] [BUGGY] _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; [BUGGY] _secondaryStart = _hashSize << 2; // right after primary area  _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary    _tertiaryShift = state.tertiaryShift; [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	259	261	1	replace	
96	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; [BUGGY] [BUGGY] _secondaryStart = _hashSize << 2; // right after primary area  _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary    _tertiaryShift = state.tertiaryShift; _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	259	261	1	add	
97	[BUG] [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = state.tertiaryShift; [FE] ArrayIndexOutOfBoundsException [CONTEXT] _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary  _tertiaryShift = state.tertiaryShift; [BUGGY] _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;  _needRehash = false; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	260	261	1	replace	
98	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _parent = parent; _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area [BUGGY] [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary  _tertiaryShift = state.tertiaryShift; _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;  _needRehash = false; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	260	261	1	add	
99	[BUG] [BUGGY] _tertiaryShift = state.tertiaryShift; [FE] ArrayIndexOutOfBoundsException [CONTEXT] _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary [BUGGY] _tertiaryShift = state.tertiaryShift; [BUGGY]  _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;  _needRehash = false; _hashShared = true; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	261	261	1	replace	
100	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _seed = seed; _intern = intern; _failOnDoS = failOnDoS; _tableInfo = null; // not used by child tables  _count = state.count; _hashSize = state.size; _secondaryStart = _hashSize << 2; // right after primary area _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary [BUGGY] [BUGGY] _tertiaryShift = state.tertiaryShift; _hashArea = state.mainHash; _names = state.names; _spilloverEnd = state.spilloverEnd; _longNameOffset = state.longNameOffset;  _needRehash = false; _hashShared = true; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] <init> [RETURN_TYPE] ByteQuadsCanonicalizer$TableInfo)  ByteQuadsCanonicalizer parent boolean intern int seed boolean failOnDoS TableInfo state [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent AtomicReference _tableInfo int[] _hashArea mainHash TableInfo state String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart count curr longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	261	261	1	add	
