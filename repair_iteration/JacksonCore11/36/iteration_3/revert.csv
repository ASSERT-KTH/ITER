projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash>>>12);//andbitmorereturnhash;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash>>>16);//andbitmorereturnhash;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash>=>16);//andbitmorereturnhash;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash>>>16);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash[Delete]>16);//andbitmorereturnhash;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(q1>>>16);//andbitmorereturnhash;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990int[]quads=_tableInfo.getQualifiedNames();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==0){hash=0;}else{hash=0;}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=q1.length();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==0){hash=0;}else{hash+=1;}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash>=>16);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash[Delete]>16);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(q1>>>16);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==0){hash=Math.min(hash,q1);hash+=Math.max(hash,q1);}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==0){hash=Math.min(hash,q1);hash=Math.min(hash,q2);}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==0){hash=Math.min(hash,q1);hash+=Math.min(hash,q1);}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==0){hash=Math.min(hash,q1);hash=Math.max(hash,q1);}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash==>16);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?q1:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?0:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?q1:q2;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(q1<<1)?0:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?0:q1+1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?0:_seed;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,q1);hash=Math.min(hash,q2);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_seed);hash=Math.min(hash,q2);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(q1<<1)?q1:q2;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?q1:q3;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(q2<<1)?q1:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=q1==0;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=0;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,q1);hash+=Math.max(hash,q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_seed);hash+=Math.max(hash,_seed);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(q1>=>16);//andbitmorereturnhash;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(q1>=>16);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990int[]quads=_tableInfo.getQualifiedNames(q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990int[]quads=_tableInfo.getQualifiedNames(q1,hash);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990int[]quads=_tableInfo.getQualifiedPaths();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,q1);hash+=Math.min(hash,q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_seed);hash+=Math.min(hash,q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,q1);hash=Math.max(hash,q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_seed);hash=Math.max(hash,_seed);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(q1<<1)?q1:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?_seed:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?q2:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=_hashArea.length();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=q1.length()+1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=_seed.length();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990int[]quads=_tableInfo.calcHash(hash);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990int[]quads=_hashArea.getQualifiedNames();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990Hash<N,V>hash=Math.min(hash,q1);hash+=Math.max(hash,q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=_hashArea.length;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(q1==>16);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash+=(hash>>>16);//andbitmorereturnq1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_seed);hash=Math.min(hash,_seed);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?0:_hashArea.length;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?1:0;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990Hash<N,V>hash=Math.min(hash,q1);hash=Math.max(hash,q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_seed);hash+=Math.min(hash,_seed);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==_seed){hash=0;}else{hash=0;}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990if(q1==0){hash+=4;}else{hash+=4;}
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=q1.hash();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_secondaryStart);hash+=Math.min(hash,_secondaryStart);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_count);hash+=Math.min(hash,q1);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_count);hash+=Math.min(hash,_count);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_secondaryStart);hash=Math.max(hash,_secondaryStart);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_count);hash=Math.max(hash,_count);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?_count:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_secondaryStart);hash=Math.min(hash,_secondaryStart);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_count);hash=Math.min(hash,q2);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_count);hash=Math.min(hash,_count);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990int[]quads=_tableInfo.getQualifiedPath();
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_secondaryStart);hash+=Math.max(hash,_secondaryStart);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990hash=Math.min(hash,_count);hash+=Math.max(hash,_count);
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<2)?q1:q2;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=(hash<<1)?1:q1;
projects/JacksonCore11/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java990inthash=q2.length();
