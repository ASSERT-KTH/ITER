bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
2	[BUG]  [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
3	[BUG]  [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri.0;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri.0;  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri.0;	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
5	[BUG]  [BUGGY]  tz  =  tz.getDisplayName(Daylight,  daylight,  style,  locale);  [CE]  cannot  find  symbol  Daylight  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  tz.getDisplayName(Daylight,  daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  tz.getDisplayName(Daylight,  daylight,  style,  locale);	  tz    =    tz.getDisplayName(daylight,    style,    locale,    value);    	non-compiled	[CE]  cannot  find  symbol  Daylight	12	None	replace
6	[BUG]  [BUGGY]  value  =  this.timeZoneDisplayCache.get(key);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  this.timeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  this.timeZoneDisplayCache.get(key);	          value    =    cTimeZoneDisplayCache.get(key);    value    =    this.timeZoneDisplayCache.get(key);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	52	None	replace
7	[BUG]  [BUGGY]  TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(key,  daylight);  [CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(key,  daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(key,  daylight);	  TimeZone    tz    =(TimeZone)cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	54	None	replace
8	[BUG]  [BUGGY]  TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(value);  [CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(value);	  TimeZone    tz    =(TimeZone)cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	54	None	replace
9	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);	  String    key    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	36	None	replace
10	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  daylight,  style);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  daylight,  style);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.get(key,  daylight,  style);	  String    key    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	36	None	replace
11	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.get(key,  style,  locale);	  String    key    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	36	None	replace
12	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  style);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.get(key,  style);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.get(key,  style);	  String    key    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	36	None	replace
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    	compilable	  [FE]  NullPointerException  	80	4	replace
14	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    	compilable	  [FE]  NullPointerException  	80	4	replace
15	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    	compilable	  [FE]  NullPointerException  	80	4	replace
16	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    	compilable	  [FE]  NullPointerException  	80	4	replace
17	[BUG]  [BUGGY]  value  =  this.cTimeZoneDisplayCache.getDisplayValue(tz,  daylight,  style,  locale);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  this.cTimeZoneDisplayCache.getDisplayValue(tz,  daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  this.cTimeZoneDisplayCache.getDisplayValue(tz,  daylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayValue(tz,    daylight,    style,    locale);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	16	None	replace
18	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  daylight,  style);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  daylight,  style);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  daylight,  style);	  value    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    color);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
19	[BUG]  [BUGGY]  nisip  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  nisip  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  nisip  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	nisip  =  cTimeZoneDisplayCache.get(key);	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    1)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  cannot  find  symbol  nisip	77	None	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  value  =  key.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    key.toString();    value  =  key.toString();	  	compilable	  [FE]  ComparisonFailure  	21	2	add
21	[BUG]  [BUGGY]  value  =  key.toString();  value  =  key.toString();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  value  =  key.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    value  =  key.toString();	  	compilable	  [FE]  ComparisonFailure  	21	2	add
22	[BUG]  [BUGGY]  value  =  key.toString();  Value  value  =  key.toString();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  Value  value  =  key.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    Value  value  =  key.toString();	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
23	[BUG]  [BUGGY]  value  =  key.toString();  value  =  key.toString();  mDaylight  =  tz.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  mDaylight  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  value  =  key.toString();  mDaylight  =  tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    value  =  key.toString();  mDaylight  =  tz.getDisplayName(daylight,  style,  locale);	  	non-compiled	[CE]  cannot  find  symbol  mDaylight	21	None	add
24	[BUG]  [BUGGY]  value  =  key.toString();  value  =  key.toString();  this.daylight  =  tz.getDisplayName(daylight,  style,  locale);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  value  =  key.toString();  this.daylight  =  tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    value  =  key.toString();  this.daylight  =  tz.getDisplayName(daylight,  style,  locale);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	add
25	[BUG]  [BUGGY]  value  =  key.toString();  value  =  key.toString();  mRule  =  tz.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  mRule  [FE]            ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  value  =  key.toString();  mRule  =  tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    value  =  key.toString();  mRule  =  tz.getDisplayName(daylight,  style,  locale);	  	non-compiled	[CE]  cannot  find  symbol  mRule	21	None	add
26	[BUG]  [BUGGY]  |judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  |judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	|judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  |judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  |judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	|judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  ||judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  ||judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	||judeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  |judeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  |judeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	|judeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(tz);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(tz);    value  =  cTimeZoneDisplayCache.get(tz);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
31	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(tz);  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(tz);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(tz);    value  =  cTimeZoneDisplayCache.get(tz);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
32	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  Value  value  =  cTimeZoneDisplayCache.get(tz);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  Value  value  =  cTimeZoneDisplayCache.get(tz);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(tz);    Value  value  =  cTimeZoneDisplayCache.get(tz);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
33	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(tz).getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(tz).getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(tz);    value  =  cTimeZoneDisplayCache.get(tz).getDisplayName(daylight,  style,  locale);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
34	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  Value  v  =  cTimeZoneDisplayCache.get(tz);  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  Value  v  =  cTimeZoneDisplayCache.get(tz);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(tz);    Value  v  =  cTimeZoneDisplayCache.get(tz);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	25	2	add
36	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	25	2	add
37	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  Value  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  Value  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    Value  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  tz.getDisplayName(daylight,  style,  locale);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    value  =  tz.getDisplayName(daylight,  style,  locale);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	25	2	add
39	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  tz.getDisplayName(daylight,  style,  locale);  value  =  cTimeZoneDisplayCache.get(key);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  tz.getDisplayName(daylight,  style,  locale);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    value  =  tz.getDisplayName(daylight,  style,  locale);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	25	2	add
40	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  NullPointerException  	25	4	add
41	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [FE]  NullPointerException  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  NullPointerException  	25	4	add
42	[BUG]  [BUGGY]  return  tz.getDisplayName(daylight,  style,  locale);  [CE]  unreachable  statement  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  return  tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	return  tz.getDisplayName(daylight,  style,  locale);	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    4)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  unreachable  statement	78	None	replace
43	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);	  String    value    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	7	None	replace
44	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  style);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  style);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  style);	  String    value    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	7	None	replace
45	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(key,  style,  locale);	  String    value    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	7	None	replace
46	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  style);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  style);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(key,  style);	  String    value    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	7	None	replace
47	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(value);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(value);	  value    =    cTimeZoneDisplayCache.get(value);    String    value    =    cTimeZoneDisplayCache.get(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	41	None	replace
48	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(mStandard);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]              NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(mStandard);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(mStandard);	  value    =    cTimeZoneDisplayCache.get(value);    String    value    =    cTimeZoneDisplayCache.get(value);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	41	None	replace
49	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  daylight);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  daylight);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  daylight);	  String    key    =    cTimeZoneDisplayCache.getIfAbsent(key,    value);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	48	None	replace
50	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]          NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  locale);	  String    key    =    cTimeZoneDisplayCache.getIfAbsent(key,    value);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	48	None	replace
51	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  style);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  style);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getIfAbsent(key,  value,  style);	  String    key    =    cTimeZoneDisplayCache.getIfAbsent(key,    value);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	48	None	replace
52	[BUG]  [BUGGY]  Value[]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
53	[BUG]  [BUGGY]  Value[]  value  =  daylight.getDisplayName(tz,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  daylight.getDisplayName(tz,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  daylight.getDisplayName(tz,  style,  locale);	  Value[]    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
54	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  value);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  value);	  tz    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
55	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  value,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  value,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  value,  locale);	  tz    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
56	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);	  tz    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	34	None	replace
57	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  daylight,  style);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  daylight,  style);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  daylight,  style);	  tz    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	34	None	replace
58	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  style,  daylight);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  style,  daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  style,  daylight);	  tz    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	34	None	replace
59	[BUG]  [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
60	[BUG]  [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayName(tz,  daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayName(tz,  daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  cTimeZoneDisplayCache.getDisplayName(tz,  daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    	compilable	  [FE]  NullPointerException  	84	4	replace
62	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    	compilable	  [FE]  NullPointerException  	84	4	replace
63	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  String    key    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	74	None	replace
64	[BUG]  [BUGGY]  Value  value  =  this.tzDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  this.tzDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  this.tzDisplayCache.get(key);	  Value    value    =    tzDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
65	[BUG]  [BUGGY]  Value  value  =  key.get(tzDisplayCache);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  key.get(tzDisplayCache);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  key.get(tzDisplayCache);	  Value    value    =    tzDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
66	[BUG]  [BUGGY]  Value  value  =  tz.cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tz.cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tz.cTimeZoneDisplayCache.get(key);	  Value    value    =    this.cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
67	[BUG]  [BUGGY]  Value  value  =  tz.getCTimeZoneDisplayCache().get(key);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tz.getCTimeZoneDisplayCache().get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tz.getCTimeZoneDisplayCache().get(key);	  Value    value    =    this.cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
68	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.getDisplayName(light,  style,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.getDisplayName(light,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.getDisplayName(light,  style,  locale);	  String    value    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	24	None	replace
69	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(Daylight,  style,  locale);  [CE]  cannot  find  symbol  Daylight  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(Daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(Daylight,  style,  locale);	  value    =    mTimeZoneDisplayCache.getDisplayValue(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol  Daylight	17	None	replace
70	[BUG]  [BUGGY]  value  =  this.timeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  this.timeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  this.timeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);	  value    =    mTimeZoneDisplayCache.getDisplayValue(daylight,    style,    locale);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	17	None	replace
71	[BUG]  [BUGGY]  value  =  this.mTimeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  this.mTimeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  this.mTimeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);	  value    =    mTimeZoneDisplayCache.getDisplayValue(daylight,    style,    locale);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	17	None	replace
72	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(mPattern);  [CE]  non-static  variable  mPattern  cannot  be  referenced  from  a  static  context  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(mPattern);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(mPattern);	  value    =    cTimeZoneDisplayCache.get(mDaylight);    	non-compiled	[CE]  non-static  variable  mPattern  cannot  be  referenced  from  a  static  context	85	None	replace
73	[BUG]  [BUGGY]  Value  key  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  key  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  key  =  cTimeZoneDisplayCache.get(key);	          value    =    cTimeZoneDisplayCache.get(key);    Value    key    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
74	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(key);  Value  key  =  tzDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key);  Value  key  =  tzDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(key);  Value  key  =  tzDisplayCache.get(key);	          value    =    cTimeZoneDisplayCache.get(key);    Value    key    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
75	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(key);  Value  key  =  cTimeZoneDisplayCache.get(value);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key);  Value  key  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(key);  Value  key  =  cTimeZoneDisplayCache.get(value);	          value    =    cTimeZoneDisplayCache.get(key);    Value    key    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
76	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(mDaylight,  daylight,  style,  locale);  [CE]  cannot  find  symbol  mDaylight  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(mDaylight,  daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(mDaylight,  daylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayName(mStandard,    daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol  mDaylight	68	None	replace
77	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(mPattern,  daylight,  style,  locale);  [CE]  non-static  variable  mPattern  cannot  be  referenced  from  a  static  context  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(mPattern,  daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(mPattern,  daylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayName(mStandard,    daylight,    style,    locale);    	non-compiled	[CE]  non-static  variable  mPattern  cannot  be  referenced  from  a  static  context	68	None	replace
78	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(key  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key  +  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(key  +  1);	  value    =    cTimeZoneDisplayCache.get(value    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	60	None	replace
79	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  *  1);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  *  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(value  *  1);	  value    =    cTimeZoneDisplayCache.get(value    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	60	None	replace
80	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	compilable	  [FE]  NullPointerException  	70	4	add
81	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	compilable	  [FE]  NullPointerException  	70	4	add
82	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  Value  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  Value  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    Value  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
83	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  String  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  String  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    String  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	70	None	add
84	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
85	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  Value[]  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  Value[]  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    Value[]  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
86	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue();  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue();	          value    =    tz.getDisplayValue();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
87	[BUG]  [BUGGY]  value  =  mTimeZoneDisplayCache.getDisplayValue();  [CE]  cannot  find  symbol  mTimeZoneDisplayCache  [FE]          NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  mTimeZoneDisplayCache.getDisplayValue();  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  mTimeZoneDisplayCache.getDisplayValue();	          value    =    tz.getDisplayValue();    	non-compiled	[CE]  cannot  find  symbol  mTimeZoneDisplayCache	69	None	replace
88	[BUG]  [BUGGY]  value  =  tz.getDisplayKey();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  tz.getDisplayKey();  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  tz.getDisplayKey();	          value    =    tz.getDisplayValue();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
89	[BUG]  [BUGGY]  Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
90	[BUG]  [BUGGY]  Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
91	[BUG]  [BUGGY]  dtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  dtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	dtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
92	[BUG]  [BUGGY]  Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Sädtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
93	[BUG]  [BUGGY]  TimeZone  tz  =  getTimeZone(light,  style,  locale);  [CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  tz  =  getTimeZone(light,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  tz  =  getTimeZone(light,  style,  locale);	  TimeZone    tz    =    getTimeZone(daylight,    style,    locale);    	non-compiled	[CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	56	None	replace
94	[BUG]  [BUGGY]  TimeZone  tz  =  getTimeZone(daylight,  style,  locale,  daylight);  [CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  tz  =  getTimeZone(daylight,  style,  locale,  daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  tz  =  getTimeZone(daylight,  style,  locale,  daylight);	  TimeZone    tz    =    getTimeZone(daylight,    style,    locale);    	non-compiled	[CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	56	None	replace
95	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(key,  daylight);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key,  daylight);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(key,  daylight);	  value    =    cTimeZoneDisplayCache.get(value,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	30	None	replace
96	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value,  daylight,  locale);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value,  daylight,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(value,  daylight,  locale);	  value    =    cTimeZoneDisplayCache.get(value,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	30	None	replace
97	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value,  style,  daylight);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value,  style,  daylight);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(value,  style,  daylight);	  value    =    cTimeZoneDisplayCache.get(value,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	30	None	replace
98	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz,  daylight);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz,  daylight);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(tz,  daylight);	  value    =    cTimeZoneDisplayCache.get(value,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	30	None	replace
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	compilable	  [FE]  ComparisonFailure  	79	2	add
100	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	compilable	  [FE]  ComparisonFailure  	79	2	add
101	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
102	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale	  	non-compiled	[CE]  ')'  expected	79	None	add
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	compilable	  [FE]  ComparisonFailure  	79	2	add
104	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	compilable	  [FE]  ComparisonFailure  	79	2	add
105	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
106	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  Value    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
107	[BUG]  [BUGGY]  Value  value  =  mTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  mTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  mTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  Value    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
108	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(daylight);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getValue(daylight);	  String    key    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	37	None	replace
109	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(daylight,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getValue(daylight,  locale);	  String    key    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	37	None	replace
110	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);	  	compilable	  [FE]  NullPointerException  	38	4	add
111	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);	  	compilable	  [FE]  NullPointerException  	38	4	add
112	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  Value  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  Value  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    Value  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
113	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  String  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  String  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    String  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	38	None	add
114	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(0);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(0);  value  =  cTimeZoneDisplayCache.get(value);	  	compilable	  [FE]  NullPointerException  	38	4	add
115	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(0);  value  =  cTimeZoneDisplayCache.get(value);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(0);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(0);  value  =  cTimeZoneDisplayCache.get(value);	  	compilable	  [FE]  NullPointerException  	38	4	add
116	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight,  locale);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(daylight,  locale);	  value    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	45	None	replace
117	[BUG]  [BUGGY]  if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	2	None	replace
118	[BUG]  [BUGGY]  if(tz.getLocale()  ==  locale)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz.getLocale()  ==  locale)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz.getLocale()  ==  locale)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	2	None	replace
119	[BUG]  [BUGGY]  if(tz.getLocale()!=  locale)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz.getLocale()!=  locale)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz.getLocale()!=  locale)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	2	None	replace
120	[BUG]  [BUGGY]  if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	2	None	replace
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	83	2	add
122	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	83	2	add
123	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  cannot  find  symbol	83	None	add
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	83	2	add
125	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	83	2	add
126	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  cannot  find  symbol	83	None	add
127	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  String  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  String  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    String  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	83	None	add
128	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  style,  locale);	  Value    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
129	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  daylight,  locale);	  Value    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
130	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  color,  locale);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  color,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  color,  locale);	  Value    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
131	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  style);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  style);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  style);	  Value    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
132	[BUG]  [BUGGY]  String  value  =  tz.getDisplayName(Daylight,  style,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  tz.getDisplayName(Daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  tz.getDisplayName(Daylight,  style,  locale);	  String    value    =    tz.getDisplayName(light,    style,    locale);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	57	None	replace
133	[BUG]  [BUGGY]  tz  =  tz.getDisplayName(daylight,  style,  value,  locale,  null);  [CE]  no  suitable  method  found  for  getDisplayName(boolean,int,String,Locale,<null>)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  tz.getDisplayName(daylight,  style,  value,  locale,  null);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  tz.getDisplayName(daylight,  style,  value,  locale,  null);	  tz    =    tz.getDisplayName(daylight,    style,    value,    locale);    	non-compiled	[CE]  no  suitable  method  found  for  getDisplayName(boolean,int,String,Locale,<null>)	14	None	replace
134	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(key);    	compilable	  [FE]  NullPointerException  	43	4	replace
135	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(key);    	compilable	  [FE]  NullPointerException  	43	4	replace
136	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(key);    	compilable	  [FE]  NullPointerException  	43	4	replace
137	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(key);    	compilable	  [FE]  NullPointerException  	43	4	replace
138	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(key,  value,  locale);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key,  value,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(key,  value,  locale);	  value    =    cTimeZoneDisplayCache.get(key,    value);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	64	None	replace
139	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(key,  value,  daylight);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(key,  value,  daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(key,  value,  daylight);	  value    =    cTimeZoneDisplayCache.get(key,    value);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	64	None	replace
140	[BUG]  [BUGGY]  Value  value  =  tz.getValue(key);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tz.getValue(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tz.getValue(key);	  Value    value    =    tz.get(key);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
141	[BUG]  [BUGGY]  [FE]  org.junit.ComparisonFailure:  expected:<7:13PM  [ICT]>  but  was:<7:13PM  [sun.util.calendar.ZoneInfo[id= "Europe/Stockholm "  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  tz.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value  =  tz.toString();	  value    =    key.toString();    	compilable	  [FE]  org.junit.ComparisonFailure:  expected:<7:13PM  [ICT]>  but  was:<7:13PM  [sun.util.calendar.ZoneInfo[id= "Europe/Stockholm "  	22	4	replace
142	[BUG]  [BUGGY]  value  =  tz.toString();  [FE]  org.junit.ComparisonFailure:  expected:<7:13PM  [ICT]>  but  was:<7:13PM  [sun.util.calendar.ZoneInfo[id= "Europe/Stockholm "  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  tz.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  tz.toString();	  value    =    key.toString();    	compilable	  [FE]  org.junit.ComparisonFailure:  expected:<7:13PM  [ICT]>  but  was:<7:13PM  [sun.util.calendar.ZoneInfo[id= "Europe/Stockholm "  	22	4	replace
143	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  value  =  cTimeZoneDisplayCache.get(value  +  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(value    +    1);    value  =  cTimeZoneDisplayCache.get(value  +  1);	  	compilable	  [FE]  ComparisonFailure  	59	2	add
144	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  value  =  cTimeZoneDisplayCache.get(value  +  1);  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  value  =  cTimeZoneDisplayCache.get(value  +  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(value    +    1);    value  =  cTimeZoneDisplayCache.get(value  +  1);	  	compilable	  [FE]  ComparisonFailure  	59	2	add
145	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  Value  value  =  cTimeZoneDisplayCache.get(value  +  1);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  Value  value  =  cTimeZoneDisplayCache.get(value  +  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(value    +    1);    Value  value  =  cTimeZoneDisplayCache.get(value  +  1);	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
146	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  String  value  =  cTimeZoneDisplayCache.get(value  +  1);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  String  value  =  cTimeZoneDisplayCache.get(value  +  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(value    +    1);    String  value  =  cTimeZoneDisplayCache.get(value  +  1);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	59	None	add
147	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  =  cTimeZoneDisplayCache.get(value  +  1);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  =  cTimeZoneDisplayCache.get(value  +  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(value    +    1);    =  cTimeZoneDisplayCache.get(value  +  1);	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(daylight);    value  =  cTimeZoneDisplayCache.get(daylight);	  	compilable	  [FE]  ComparisonFailure  	44	2	add
149	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(daylight);  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(daylight);    value  =  cTimeZoneDisplayCache.get(daylight);	  	compilable	  [FE]  ComparisonFailure  	44	2	add
150	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  Value  value  =  cTimeZoneDisplayCache.get(daylight);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  Value  value  =  cTimeZoneDisplayCache.get(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(daylight);    Value  value  =  cTimeZoneDisplayCache.get(daylight);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
151	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(daylight,  locale);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(daylight);    value  =  cTimeZoneDisplayCache.get(daylight,  locale);	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	44	None	add
152	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(monthlight);  [CE]  cannot  find  symbol  monthlight  [FE]          NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(monthlight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(daylight);    value  =  cTimeZoneDisplayCache.get(monthlight);	  	non-compiled	[CE]  cannot  find  symbol  monthlight	44	None	add
153	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(Daylight,  style,  locale);  [CE]  cannot  find  symbol  Daylight  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(Daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.getDisplayName(Daylight,  style,  locale);	  tz    =    mTimeZoneDisplayCache.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol  Daylight	58	None	replace
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	81	2	add
155	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	81	2	add
156	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
157	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  String  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  String  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    String  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	81	None	add
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value  ==  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value  ==  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	81	2	add
159	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value  ==  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value  ==  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value  ==  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	81	2	add
160	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    Value  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
161	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(value,  daylight);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(value,  daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(value,  daylight);	  Value    value    =    cTimeZoneDisplayCache.get(value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
162	[BUG]  [BUGGY]  String  daylight  =  cTimeZoneDisplayCache.getDisplayName(light,  style,  locale);  [CE]  variable  daylight  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  daylight  =  cTimeZoneDisplayCache.getDisplayName(light,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  daylight  =  cTimeZoneDisplayCache.getDisplayName(light,  style,  locale);	  String    daylight    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  daylight  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	65	None	replace
163	[BUG]  [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  cTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
164	[BUG]  [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayNames(tz,  daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  cTimeZoneDisplayCache.getDisplayNames(tz,  daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  cTimeZoneDisplayCache.getDisplayNames(tz,  daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
165	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(value);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getValue(value);	          String    key    =    cTimeZoneDisplayCache.getValue(key);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	53	None	replace
166	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(key,  style);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]          NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(key,  style);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getValue(key,  style);	          String    key    =    cTimeZoneDisplayCache.getValue(key);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	53	None	replace
167	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(key,  daylight);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(key,  daylight);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getValue(key,  daylight);	          String    key    =    cTimeZoneDisplayCache.getValue(key);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	53	None	replace
168	[BUG]  [BUGGY]  Value  value  =  this.cTimeZoneDisplayCache.get(value);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  this.cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  this.cTimeZoneDisplayCache.get(value);	  value    =    cTimeZoneDisplayCache.get(value);    Value    value    =    cTimeZoneDisplayCache.get(value);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
169	[BUG]  [BUGGY]  Value  value  =  tz.get(cTimeZoneDisplayCache);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tz.get(cTimeZoneDisplayCache);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tz.get(cTimeZoneDisplayCache);	  Value    value    =    cTimeZoneDisplayCache.get(tz);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
170	[BUG]  [BUGGY]  Value  value  =  tz.get(key,  cTimeZoneDisplayCache);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tz.get(key,  cTimeZoneDisplayCache);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tz.get(key,  cTimeZoneDisplayCache);	  Value    value    =    cTimeZoneDisplayCache.get(key,    tz);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
171	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  value);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  value);	  Value    value    =    cTimeZoneDisplayCache.get(key,    tz);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
172	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  tz,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  tz,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  tz,  locale);	  Value    value    =    cTimeZoneDisplayCache.get(key,    tz);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
173	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(daylight,  locale);	  String    value    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	8	None	replace
174	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  style);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  style);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(daylight,  style);	  String    value    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	8	None	replace
175	[BUG]  [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.get(key,  daylight);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.get(key,  daylight);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String[]  value  =  cTimeZoneDisplayCache.get(key,  daylight);	          String[]    value    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	23	None	replace
176	[BUG]  [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.get(key,  style);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]          NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.get(key,  style);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String[]  value  =  cTimeZoneDisplayCache.get(key,  style);	          String[]    value    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	23	None	replace
177	[BUG]  [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.getValue(key);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.getValue(key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String[]  value  =  cTimeZoneDisplayCache.getValue(key);	          String[]    value    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	23	None	replace
178	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(tz,  style,  locale);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(tz,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(tz,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayValue(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
179	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  style,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(daylight,  style,  locale);	  String    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	61	None	replace
180	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  style,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(key,  daylight,  style,  locale);	  String    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	61	None	replace
181	[BUG]  [BUGGY]  value  =  this.cTimeZoneDisplayCache.get(key);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  this.cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  this.cTimeZoneDisplayCache.get(key);	          value    =    cTimeZoneDisplayCache.get(key);    value    =    this.cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	28	None	replace
182	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  NullPointerException  	42	4	add
183	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  NullPointerException  	42	4	add
184	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  Value  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  Value  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    Value  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
185	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  String  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  String  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    String  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	42	None	add
186	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(mDaylight,  style,  locale);  [CE]  cannot  find  symbol  mDaylight  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(mDaylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(mDaylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayName(light,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol  mDaylight	32	None	replace
187	[BUG]  [BUGGY]  Value[]  value  =  cTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  cTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  cTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
188	[BUG]  [BUGGY]  Value[]  value  =  cTimeZoneDisplayCache.getDisplayNames(tz,  daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  cTimeZoneDisplayCache.getDisplayNames(tz,  daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  cTimeZoneDisplayCache.getDisplayNames(tz,  daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
189	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  value,  locale);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  value,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  value,  locale);	  tz    =    cTimeZoneDisplayCache.get(key,    value);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	35	None	replace
190	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  value,  daylight);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  value,  daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  value,  daylight);	  tz    =    cTimeZoneDisplayCache.get(key,    value);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	35	None	replace
191	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  daylight,  value);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  daylight,  value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  daylight,  value);	  tz    =    cTimeZoneDisplayCache.get(key,    value);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	35	None	replace
192	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  NullPointerException  	42	4	add
193	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  NullPointerException  	42	4	add
194	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.getValue(value);  value  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.getValue(value);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.getValue(value);  value  =  cTimeZoneDisplayCache.get(key);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
195	[BUG]  [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
196	[BUG]  [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeul  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeul  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeul	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
197	[BUG]  [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
198	[BUG]  [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u00F8)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
199	[BUG]  [BUGGY]  Value  value  =  tzDisplayCache.get(value);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tzDisplayCache.get(value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tzDisplayCache.get(value);	  Value    value    =    cTimeZoneDisplayCache.get(value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
200	[BUG]  [BUGGY]  Value  value  =  tz.get(value);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tz.get(value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tz.get(value);	  Value    value    =    cTimeZoneDisplayCache.get(value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
201	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(tz);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(tz);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(tz);	          value    =    tz.getDisplayValue();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
202	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	compilable	  [FE]  NullPointerException  	70	4	add
203	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	compilable	  [FE]  NullPointerException  	70	4	add
204	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  String  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  String  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    String  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	70	None	add
205	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    Value  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
206	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  Value  v  =  cTimeZoneDisplayCache.get(daylight);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  Value  v  =  cTimeZoneDisplayCache.get(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(daylight);    Value  v  =  cTimeZoneDisplayCache.get(daylight);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
207	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  local);  [CE]  cannot  find  symbol  local  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  local);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  local);	  value    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    color);    	non-compiled	[CE]  cannot  find  symbol  local	31	None	replace
208	[BUG]  [BUGGY]  value  =  tz.get(key);  Value  key  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  tz.get(key);  Value  key  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  tz.get(key);  Value  key  =  cTimeZoneDisplayCache.get(key);	          value    =    cTimeZoneDisplayCache.get(key);    Value    key    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
209	[BUG]  [BUGGY]  TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(key  +  1);  [CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(key  +  1);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  tz  =(TimeZone)cTimeZoneDisplayCache.get(key  +  1);	  TimeZone    tz    =(TimeZone)cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	54	None	replace
210	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale,  value);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale,  value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale,  value);	  tz    =    tz.getDisplayName(daylight,    style,    locale,    value);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
211	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.getDisplayName(tz,  daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.getDisplayName(tz,  daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.getDisplayName(tz,  daylight,  style,  locale);	  Value    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
212	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(daylight);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(daylight);	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
213	[BUG]  [BUGGY]  if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz!=  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	2	None	replace
214	[BUG]  [BUGGY]  if(tz  ==  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz  ==  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz  ==  null)  {  Stdtenjudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	2	None	replace
215	[BUG]  [BUGGY]  nisip  =  cTimeZoneDisplayCache.get(daylight);  [CE]  cannot  find  symbol  nisip  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  nisip  =  cTimeZoneDisplayCache.get(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	nisip  =  cTimeZoneDisplayCache.get(daylight);	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    1)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  cannot  find  symbol  nisip	77	None	replace
216	[BUG]  [BUGGY]  nisip  =  cTimeZoneDisplayCache.get(value);  [CE]  cannot  find  symbol  nisip  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  nisip  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	nisip  =  cTimeZoneDisplayCache.get(value);	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    1)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  cannot  find  symbol  nisip	77	None	replace
217	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  Value  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  Value  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    Value  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
218	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  String  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  String  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    String  key  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	79	None	add
219	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
220	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  value    =    cTimeZoneDisplayCache.get(value);    String    value    =    cTimeZoneDisplayCache.get(value);    	compilable	  [FE]  NullPointerException  	41	4	replace
221	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }	  value    =    cTimeZoneDisplayCache.get(value);    String    value    =    cTimeZoneDisplayCache.get(value);    	compilable	  [FE]  NullPointerException  	41	4	replace
222	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getKey(key);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getKey(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getKey(key);	  String    key    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	37	None	replace
223	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    Value  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  cannot  find  symbol	83	None	add
224	[BUG]  [BUGGY]  Value  value  =  bTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  bTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  bTimeZoneDisplayCache.get(key);	  Value    value    =    tzDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
225	[BUG]  [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
226	[BUG]  [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
227	[BUG]  [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
228	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(tz,  style,  locale);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(tz,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(tz,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayName(light,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
229	[BUG]  [BUGGY]  Value  value  =  tzDisplayCache.get(key,  cTimeZoneDisplayCache);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tzDisplayCache.get(key,  cTimeZoneDisplayCache);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tzDisplayCache.get(key,  cTimeZoneDisplayCache);	  Value    value    =    cTimeZoneDisplayCache.get(key,    tz);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
230	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getDisplayName(key,  daylight,  style,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getDisplayName(key,  daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getDisplayName(key,  daylight,  style,  locale);	  String    key    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	74	None	replace
231	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getDisplayName(key,  style,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getDisplayName(key,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getDisplayName(key,  style,  locale);	  String    key    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	74	None	replace
232	[BUG]  [BUGGY]  TimeZone  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  TimeZone    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	55	None	replace
233	[BUG]  [BUGGY]  TimeZone  value  =  cTimeZoneDisplayCache.get(key);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  value  =  cTimeZoneDisplayCache.get(key);	  TimeZone    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	55	None	replace
234	[BUG]  [BUGGY]  TimeZone  value  =  tz.getDisplayName(light,  style,  locale);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  value  =  tz.getDisplayName(light,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  value  =  tz.getDisplayName(light,  style,  locale);	  TimeZone    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	55	None	replace
235	[BUG]  [BUGGY]  value  =  key.toString();  String  key  =  key.toString();  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  String  key  =  key.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    String  key  =  key.toString();	  	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	21	None	add
236	[BUG]  [BUGGY]  value  =  key.toString();  Value  key  =  key.toString();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  Value  key  =  key.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    Value  key  =  key.toString();	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
237	[BUG]  [BUGGY]  value  =  key.toString();  String  value  =  key.toString();  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  String  value  =  key.toString();  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    String  value  =  key.toString();	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	21	None	add
238	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(key,  value);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getValue(key,  value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getValue(key,  value);	          String    key    =    cTimeZoneDisplayCache.getValue(key);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	53	None	replace
239	[BUG]  [BUGGY]  tz  =  this.timeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  this.timeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  this.timeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  tz    =    mTimeZoneDisplayCache.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	58	None	replace
240	[BUG]  [BUGGY]  tz  =  this.cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  this.cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  this.cTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  tz    =    mTimeZoneDisplayCache.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	58	None	replace
241	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);	  	compilable	  [FE]  NullPointerException  	38	4	add
242	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);	  	compilable	  [FE]  NullPointerException  	38	4	add
243	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.getValue(value);  value  =  cTimeZoneDisplayCache.get(value);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.getValue(value);  value  =  cTimeZoneDisplayCache.get(value);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.getValue(value);  value  =  cTimeZoneDisplayCache.get(value);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
244	[BUG]  [BUGGY]  Value  value  =  tzDisplayCache.get(key,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  tzDisplayCache.get(key,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  tzDisplayCache.get(key,  locale);	  Value    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
245	[BUG]  [BUGGY]  Value[]  values  =  daylight.getDisplayName(tz,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  daylight.getDisplayName(tz,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  daylight.getDisplayName(tz,  style,  locale);	  Value[]    values    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
246	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(key,  style,  locale);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(key,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(key,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayValue(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
247	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight,  value);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight,  value);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(daylight,  value);	  value    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	45	None	replace
248	[BUG]  [BUGGY]  value  =  tz.get(key);  Value  value  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  tz.get(key);  Value  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  tz.get(key);  Value  value  =  cTimeZoneDisplayCache.get(key);	          value    =    cTimeZoneDisplayCache.get(key);    Value    value    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
249	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(key);    	compilable	  [FE]  NullPointerException  	43	4	replace
250	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(key);    	compilable	  [FE]  NullPointerException  	43	4	replace
251	[BUG]  [BUGGY]  Value[]  values  =  mRules.getDisplayNames(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  mRules.getDisplayNames(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  mRules.getDisplayNames(daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
252	[BUG]  [BUGGY]  Value[]  value  =  mTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  mTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  mTimeZoneDisplayCache.getDisplayNames(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
253	[BUG]  [BUGGY]  TimeZone  tz  =  getTimeZone(Daylight,  style,  locale);  [CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  tz  =  getTimeZone(Daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  tz  =  getTimeZone(Daylight,  style,  locale);	  TimeZone    tz    =    getTimeZone(daylight,    style,    locale);    	non-compiled	[CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	56	None	replace
254	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(value);    	compilable	  [FE]  NullPointerException  	39	4	replace
255	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(value);    	compilable	  [FE]  NullPointerException  	39	4	replace
256	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(value);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(value);    	compilable	  [FE]  NullPointerException  	39	4	replace
257	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  else  {  value  =  cTimeZoneDisplayCache.get(value);  }	  value    =    cTimeZoneDisplayCache.get(value);    value    =    cTimeZoneDisplayCache.get(value);    	compilable	  [FE]  NullPointerException  	39	4	replace
258	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  value,  local);  [CE]  cannot  find  symbol  local  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  value,  local);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  value,  local);	  tz    =    cTimeZoneDisplayCache.get(key,    value);    	non-compiled	[CE]  cannot  find  symbol  local	35	None	replace
259	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(key,  daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(key,  daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(key,  daylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayValue(tz,    daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
260	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(value,  daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(value,  daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(value,  daylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayValue(tz,    daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
261	[BUG]  [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
262	[BUG]  [BUGGY]  Neighbormunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Neighbormunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Neighbormunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
263	[BUG]  [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultip  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultip  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultip	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
264	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(light,  style,  locale);  [CE]  cannot  find  symbol  light  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(light,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(light,  style,  locale);	  value    =    mTimeZoneDisplayCache.getDisplayValue(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol  light	17	None	replace
265	[BUG]  [BUGGY]  Value[]  value  =  mTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  mTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  mTimeZoneDisplayCache.getDisplayName(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
266	[BUG]  [BUGGY]  Value[]  value  =  this.daylight.getDisplayName(tz,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  this.daylight.getDisplayName(tz,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  this.daylight.getDisplayName(tz,  style,  locale);	  Value[]    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
267	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  Value  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    Value  value  =  cTimeZoneDisplayCache.get(daylight);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
268	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(key,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(key,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(key,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayName(key,    daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(value    +    1);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }	  	compilable	  [FE]  ComparisonFailure  	59	2	add
270	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(value    +    1);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }	  	compilable	  [FE]  ComparisonFailure  	59	2	add
271	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  /  1);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  /  1);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(value  /  1);	  value    =    cTimeZoneDisplayCache.get(value    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	60	None	replace
272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(daylight);    value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	44	2	add
273	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(key);  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(daylight);    value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	44	2	add
274	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  ValueRule  v  =  cTimeZoneDisplayCache.get(daylight);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(daylight);  ValueRule  v  =  cTimeZoneDisplayCache.get(daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(daylight);    ValueRule  v  =  cTimeZoneDisplayCache.get(daylight);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
275	[BUG]  [BUGGY]  tz  =  tz.getDisplayName(daylight,  style,  locale,  value,  locale);  [CE]  no  suitable  method  found  for  getDisplayName(boolean,int,Locale,String,Locale)  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  tz.getDisplayName(daylight,  style,  locale,  value,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  tz.getDisplayName(daylight,  style,  locale,  value,  locale);	  tz    =    tz.getDisplayName(daylight,    style,    locale,    value);    	non-compiled	[CE]  no  suitable  method  found  for  getDisplayName(boolean,int,Locale,String,Locale)	12	None	replace
276	[BUG]  [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
277	[BUG]  [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	uljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	1	None	replace
278	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  tz.getDisplayName(daylight,  style,  locale	  	non-compiled	[CE]  ')'  expected	79	None	add
279	[BUG]  [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultiptip  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultiptip  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultiptip	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
280	[BUG]  [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultiptiptip  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultiptiptip  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	municipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiultiptiptip	  Städtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiulmunicipiul    	non-compiled	[CE]  ';'  expected	3	None	replace
281	[BUG]  [BUGGY]  Value[]  value  =  this.tz.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  this.tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  this.tz.getDisplayName(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
282	[BUG]  [BUGGY]  Value[]  value  =  mRules.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  mRules.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  mRules.getDisplayName(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
283	[BUG]  [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.get(tz);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String[]  value  =  cTimeZoneDisplayCache.get(tz);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String[]  value  =  cTimeZoneDisplayCache.get(tz);	          String[]    value    =    cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	23	None	replace
284	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    	compilable	  [FE]  NullPointerException  	82	4	replace
285	[BUG]  [BUGGY]  if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    	compilable	  [FE]  NullPointerException  	82	4	replace
286	[BUG]  [BUGGY]  if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  value;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  value;  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  value;  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
287	[BUG]  [BUGGY]  Value[]  values  =  this.tz.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  this.tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  this.tz.getDisplayName(daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
288	[BUG]  [BUGGY]  Value[]  values  =  mRules.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  mRules.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  mRules.getDisplayName(daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
289	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  else  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
290	[BUG]  [BUGGY]  nisip  =  tz.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  nisip  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  nisip  =  tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	nisip  =  tz.getDisplayName(daylight,  style,  locale);	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    0)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  cannot  find  symbol  nisip	76	None	replace
291	[BUG]  [BUGGY]  Value  value  =  this.tz.getDisplayName(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  this.tz.getDisplayName(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  this.tz.getDisplayName(daylight,  style,  locale);	  Value    value    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
292	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(value    +    1);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }	  	compilable	  [FE]  ComparisonFailure  	59	2	add
293	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(value    +    1);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }	  	compilable	  [FE]  ComparisonFailure  	59	2	add
294	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(value    +    1);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	59	4	add
295	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value  +  1);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(value    +    1);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	59	4	add
296	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  daylight);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  daylight);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  daylight);	  Value    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
297	[BUG]  [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  this.daylight,  locale);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  cTimeZoneDisplayCache.get(key,  this.daylight,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  cTimeZoneDisplayCache.get(key,  this.daylight,  locale);	  Value    value    =    cTimeZoneDisplayCache.get(key,    locale);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
298	[BUG]  [BUGGY]  value  =  this.cTimeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  this.cTimeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  this.cTimeZoneDisplayCache.getDisplayValue(daylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayValue(daylight,    style,    locale);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	15	None	replace
299	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(value,  tz);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(value,  tz);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(value,  tz);	  value    =    cTimeZoneDisplayCache.get(value,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	30	None	replace
300	[BUG]  [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
301	[BUG]  [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeul  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeul  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeul	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
302	[BUG]  [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljud	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
303	[BUG]  [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(u000)  {  Stdtenjudeujudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljudeuljude	  StädtenjudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețulUTF8    ||județuljudețuljudețuljudețuljudețuljudețuljudețuljudețuljudețul    	non-compiled	[CE]  ';'  expected	4	None	replace
304	[BUG]  [BUGGY]  Value[]  values  =  this.tz.getDisplayNames(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  values  =  this.tz.getDisplayNames(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  values  =  this.tz.getDisplayNames(daylight,  style,  locale);	  Value[]    values    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
305	[BUG]  [BUGGY]  Value  value  =  standardDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  standardDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  standardDisplayCache.get(key);	  Value    value    =    tzDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
306	[BUG]  [BUGGY]  else  if(daylight!=  null)  {  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  else  if(daylight!=  null)  {  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	else  if(daylight!=  null)  {  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    4)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
307	[BUG]  [BUGGY]  else  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  else  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	else  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    4)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
308	[BUG]  [BUGGY]  value  =  key.toString();  ValueUtils.setValue(value,  key.toString());  [CE]  cannot  find  symbol  ValueUtils  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  ValueUtils.setValue(value,  key.toString());  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    ValueUtils.setValue(value,  key.toString());	  	non-compiled	[CE]  cannot  find  symbol  ValueUtils	21	None	add
309	[BUG]  [BUGGY]  value  =  key.toString();  ValueUtils.setValue(key.toString());  [CE]  cannot  find  symbol  ValueUtils  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  key.toString();  ValueUtils.setValue(key.toString());  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    key.toString();    ValueUtils.setValue(key.toString());	  	non-compiled	[CE]  cannot  find  symbol  ValueUtils	21	None	add
310	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  location);  [CE]  cannot  find  symbol  location  [FE]            ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  location);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  location);	  value    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    color);    	non-compiled	[CE]  cannot  find  symbol  location	31	None	replace
311	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  null);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayName(daylight,  style,  null);	  value    =    cTimeZoneDisplayCache.getDisplayName(daylight,    style,    color);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
312	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }	  	compilable	  [FE]  NullPointerException  	38	4	add
313	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  value  =  cTimeZoneDisplayCache.get(value);  }	  	compilable	  [FE]  NullPointerException  	38	4	add
314	[BUG]  [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  key);  [CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  value  =  cTimeZoneDisplayCache.get(daylight,  key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  value  =  cTimeZoneDisplayCache.get(daylight,  key);	  String    value    =    cTimeZoneDisplayCache.get(daylight);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	8	None	replace
315	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  this.timeZoneDisplayCache.get(value);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  this.timeZoneDisplayCache.get(value);  }  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(value);    }    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(value);  if(value!=  null)  {  value  =  this.timeZoneDisplayCache.get(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
316	[BUG]  [BUGGY]  Value[]  value  =  mValues.getDisplayNames(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  mValues.getDisplayNames(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  mValues.getDisplayNames(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
317	[BUG]  [BUGGY]  Value[]  value  =  this.tz.getDisplayNames(daylight,  style,  locale);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value[]  value  =  this.tz.getDisplayNames(daylight,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value[]  value  =  this.tz.getDisplayNames(daylight,  style,  locale);	  Value[]    value    =    tz.getDisplayNames(daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
318	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(mStandard,  daylight,  style,  locale);  [CE]  cannot  find  symbol  mStandard  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.getDisplayValue(mStandard,  daylight,  style,  locale);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.getDisplayValue(mStandard,  daylight,  style,  locale);	  value    =    cTimeZoneDisplayCache.getDisplayValue(tz,    daylight,    style,    locale);    	non-compiled	[CE]  cannot  find  symbol  mStandard	16	None	replace
319	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	25	2	add
320	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	25	2	add
321	[BUG]  [BUGGY]  TimeZone  tz  =  getTimeZone(daylight,  style,  locale,  locale);  [CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  TimeZone  tz  =  getTimeZone(daylight,  style,  locale,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	TimeZone  tz  =  getTimeZone(daylight,  style,  locale,  locale);	  TimeZone    tz    =    getTimeZone(daylight,    style,    locale);    	non-compiled	[CE]  variable  tz  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	56	None	replace
322	[BUG]  [BUGGY]  String  key  =  tz.getDisplayName(light,  style,  locale);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  tz.getDisplayName(light,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  tz.getDisplayName(light,  style,  locale);	  String    key    =    tz.getDisplayName(daylight,    style,    locale);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	74	None	replace
323	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(timeZone);  [CE]  cannot  find  symbol  timeZone  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(timeZone);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value  =  cTimeZoneDisplayCache.get(timeZone);	  value    =    cTimeZoneDisplayCache.get(mDaylight);    	non-compiled	[CE]  cannot  find  symbol  timeZone	85	None	replace
324	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(daylight!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(daylight!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    if(daylight!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
325	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    if(tz!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	81	2	add
327	[BUG]  [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]          value    =    cTimeZoneDisplayCache.get(key);    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	                value        =        cTimeZoneDisplayCache.get(key);        if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	  	compilable	  [FE]  ComparisonFailure  	81	2	add
328	[BUG]  [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  tz  =  cTimeZoneDisplayCache.get(key,  style,  locale);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	tz  =  cTimeZoneDisplayCache.get(key,  style,  locale);	  tz    =    cTimeZoneDisplayCache.get(key,    daylight);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	34	None	replace
329	[BUG]  [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  this.timeZoneDisplayCache.get(key);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value    =    cTimeZoneDisplayCache.get(value);    value  =  cTimeZoneDisplayCache.get(key);  value  =  cTimeZoneDisplayCache.get(value);  value  =  this.timeZoneDisplayCache.get(key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value        =        cTimeZoneDisplayCache.get(value);        value    =    cTimeZoneDisplayCache.get(key);    value  =  cTimeZoneDisplayCache.get(value);  value  =  this.timeZoneDisplayCache.get(key);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	42	None	add
330	[BUG]  [BUGGY]  if(daylight!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(daylight!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(daylight!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  cTimeZoneDisplayCache.get(key);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    cTimeZoneDisplayCache.get(key);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
331	[BUG]  [BUGGY]  else  if(value!=  null)  {  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  else  if(value!=  null)  {  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	else  if(value!=  null)  {  if(value.length()  ==  0)  {  return  tz.getDisplayName(daylight,  style,  locale);  }	  [Delete]    else    if(daylight!=    null)    {    if(value.length()    ==    1)    {    return    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
332	[BUG]  [BUGGY]  if(daylight)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  if(daylight)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	if(daylight)  {  value  =  cTimeZoneDisplayCache.get(key);  if(value!=  null)  {  value  =  tz.getDisplayName(daylight,  style,  locale);  }	          value    =    cTimeZoneDisplayCache.get(key);    if(value!=    null)    {    value    =    cTimeZoneDisplayCache.get(key);    }    else    {    value    =    tz.getDisplayName(daylight,    style,    locale);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
333	[BUG]  [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(value,  key);  [CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)  [FE]        NullPointerException      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  String  key  =  cTimeZoneDisplayCache.getIfAbsent(value,  key);  [BUGGY]      String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	String  key  =  cTimeZoneDisplayCache.getIfAbsent(value,  key);	  String    key    =    cTimeZoneDisplayCache.getIfAbsent(key,    value);    	non-compiled	[CE]  variable  key  is  already  defined  in  method  getTimeZoneDisplay(TimeZone,boolean,int,Locale)	48	None	replace
334	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	add	value    =    cTimeZoneDisplayCache.get(tz);    value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
335	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(key);  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  value  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(tz);    value  =  cTimeZoneDisplayCache.get(key);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
336	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  ValueRule  v  =  cTimeZoneDisplayCache.get(tz);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  ValueRule  v  =  cTimeZoneDisplayCache.get(tz);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(tz);    ValueRule  v  =  cTimeZoneDisplayCache.get(tz);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
337	[BUG]  [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  ValueRule  v  =  cTimeZoneDisplayCache.get(key);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  value  =  cTimeZoneDisplayCache.get(tz);  ValueRule  v  =  cTimeZoneDisplayCache.get(key);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	value    =    cTimeZoneDisplayCache.get(tz);    ValueRule  v  =  cTimeZoneDisplayCache.get(key);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
338	[BUG]  [BUGGY]  Value  value  =  this.cTimeZoneDisplayCache.get(tz);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  String  getTimeZoneDisplay(TimeZone  tz,  boolean  daylight,  int  style,  Locale  locale)  {  TimeZoneDisplayKey  key  =  new  TimeZoneDisplayKey(tz,  daylight,  style,  locale);  String  value  =  cTimeZoneDisplayCache.get(key);  if  (value  ==  null)  {        [BUGGY]  Value  value  =  this.cTimeZoneDisplayCache.get(tz);  [BUGGY]      value  =  tz.getDisplayName(daylight,  style,  locale);  String  prior  =  cTimeZoneDisplayCache.putIfAbsent(key,  value);  if  (prior  !=  null)  {  value=  prior;  }  }  return  value;  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  getTimeZoneDisplay  [RETURN_TYPE]  String  TimeZone  tz  boolean  daylight  int  style  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TimeZoneDisplayKey  key  TwoDigitYearField  INSTANCE  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  millis  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  digits  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  max  padding  size  style  tokenLen  value  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  zone  boolean  colon  daylight  inLiteral  mColon  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.7071067811865475	1083	1083	2	replace	Value  value  =  this.cTimeZoneDisplayCache.get(tz);	  Value    value    =    this.cTimeZoneDisplayCache.get(key);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
