bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(2));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(2));	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	41	None	replace
2	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  token.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.charAt(0),  token.charAt(1));	  rule    =    new    StringLiteral(sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	61	None	replace
3	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(1),  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(1),  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(1),  value);	  rule    =    new    StringLiteral(sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  cannot  find  symbol  value	61	None	replace
4	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(2));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(2));	  rule    =    new    StringLiteral(sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	61	None	replace
5	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
6	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
7	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
8	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
9	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
10	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
11	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
12	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
13	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  3);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  3);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  3);	  rule    =    new    CharacterLiteral(sub.charAt(0),    3);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	79	None	replace
14	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
15	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
16	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
17	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
18	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
19	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
20	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
21	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	26	add
22	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(1));	          rule    =    new    CharacterLiteral(sub.charAt(1));    rule    =    new    CharacterLiteral(sub.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	30	None	replace
23	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token,  value);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token,  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token,  value);	  Rule[]    rules    =    mRules.get(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	7	None	replace
24	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token,  tokenLen);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token,  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token,  tokenLen);	  Rule[]    rules    =    mRules.get(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	7	None	replace
25	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token,  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token,  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token,  1);	  Rule[]    rules    =    mRules.get(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	7	None	replace
26	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub,  token.length());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub,  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  sub,  token.length());	  Rule[]    rules    =    mRules.get(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	7	None	replace
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
28	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
29	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
30	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
31	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  Rule[]  rules  =  new  CharacterLiteral(sub.charAt(2));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  Rule[]  rules  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    Rule[]  rules  =  new  CharacterLiteral(sub.charAt(2));	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	22	None	add
32	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
33	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
34	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
35	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	26	add
36	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(0));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(0));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(0));	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	1	None	replace
37	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  value);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  value);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.charAt(0));    	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
38	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(0,  token.length());  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(0,  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(0,  token.length());	  CharacterLiteral    sub    =    token.charAt(0,    token.length()    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	74	None	replace
39	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(0,  token.length()  +  1);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(0,  token.length()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(0,  token.length()  +  1);	  CharacterLiteral    sub    =    token.charAt(0,    token.length()    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	74	None	replace
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  rule  =  new  StringLiteral(token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    StringLiteral(token);    rule  =  new  StringLiteral(token);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
41	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  rule  =  new  StringLiteral(token);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  rule  =  new  StringLiteral(token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    rule  =  new  StringLiteral(token);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
42	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  new  Rule[token.length()  ];  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  new  Rule[token.length()  ];  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  new  Rule[token.length()  ];	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
43	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(sub);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.toArray(sub);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
44	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.values();  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]          ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.values();  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.values();	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
45	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.get(sub);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]            ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.get(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.get(sub);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
46	[BUG]  [BUGGY]  rule  =  new  LongLiteral(sub,  token);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  LongLiteral(sub,  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  LongLiteral(sub,  token);	  rule    =    new    LongLiteral(sub);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
47	[BUG]  [BUGGY]  rule  =  new  LongLiteral(sub,  token.length());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  LongLiteral(sub,  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  LongLiteral(sub,  token.length());	  rule    =    new    LongLiteral(sub);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
48	[BUG]  [BUGGY]  rule  =  new  LongLiteral(sub.length());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  LongLiteral(sub.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  LongLiteral(sub.length());	  rule    =    new    LongLiteral(sub);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
49	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  -  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  -  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.length()    -    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	19	None	replace
50	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
51	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
52	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
53	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
54	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(5));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(5));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
55	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(5));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(5));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(5));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
56	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
57	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
58	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(6));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(6));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
59	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(6));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(6));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(6));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
60	[BUG]  [BUGGY]  rule  =  mRules.get(sub,  token);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  mRules.get(sub,  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  mRules.get(sub,  token);	  rule    =    mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
61	[BUG]  [BUGGY]  rule  =  mRules.get(sub,  tokenLen);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  mRules.get(sub,  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  mRules.get(sub,  tokenLen);	  rule    =    mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
62	[BUG]  [BUGGY]  rule  =  mRules.get(token);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  mRules.get(token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  mRules.get(token);	  rule    =    mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
63	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  '''  +  1);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  '''  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  '''  +  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    '''    +    1);    	non-compiled	[CE]  empty  character  literal	42	None	replace
64	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  '''  +  2);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  '''  +  2);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  '''  +  2);	  rule    =    new    CharacterLiteral(sub.charAt(0),    '''    +    1);    	non-compiled	[CE]  empty  character  literal	42	None	replace
65	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  value);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  value);	  rule    =    new    CharacterLiteral(sub.charAt(0),    mStandard);    	non-compiled	[CE]  cannot  find  symbol  value	78	None	replace
66	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(0),    mStandard);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	78	None	replace
67	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  token);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  token);	  rule    =    new    CharacterLiteral(sub.charAt(0),    mStandard);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	78	None	replace
68	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  2);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  2);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  2);	  rule    =    new    CharacterLiteral(sub.charAt(0),    2);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	77	None	replace
69	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  value);  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  value);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  value	82	None	replace
70	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  value);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  value	82	None	replace
71	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    tokenLen);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	82	None	replace
72	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    tokenLen);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	82	None	replace
73	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  sub,  token);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  sub,  token);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[0],  sub,  token);	  Rule[]    rules    =    mRules.toArray(new    Rule[0],    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	15	None	replace
74	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1],  token);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1],  token);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[1],  token);	  Rule[]    rules    =    mRules.toArray(new    Rule[0],    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	15	None	replace
75	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  token,  sub);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  token,  sub);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[0],  token,  sub);	  Rule[]    rules    =    mRules.toArray(new    Rule[0],    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	15	None	replace
76	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  rule  =  new  StringLiteral(sub);  break;  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  rule  =  new  StringLiteral(sub);  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    rule  =  new  StringLiteral(sub);  break;	  	non-compiled	[CE]  unreachable  statement	85	None	add
77	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	85	None	add
78	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  break;  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  break;	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	85	None	add
79	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]          ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	85	None	add
80	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  break;  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]            ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  break;	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	85	None	add
81	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token);	  rule    =    new    StringLiteral(token);    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	47	None	replace
82	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.length()  -  1);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.length()  -  1);	  rule    =    new    StringLiteral(token);    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	47	None	replace
83	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub);	  rule    =    new    StringLiteral(token);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	47	None	replace
84	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length());  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  token.length());	  CharacterLiteral    sub    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	4	None	replace
85	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length()  +  1);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  token.length()  +  1);	  CharacterLiteral    sub    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	4	None	replace
86	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  sub);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  sub);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    token);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	64	None	replace
87	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token,  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token,  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token,  value);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    token);    	non-compiled	[CE]  cannot  find  symbol  value	64	None	replace
88	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  token);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  token);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    token);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	64	None	replace
89	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  token.charAt(1));	          rule    =    new    CharacterLiteral(sub.charAt(1));    Rule    rule    =    new    CharacterLiteral(sub.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	69	None	replace
90	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  sub.charAt(0));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  sub.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  sub.charAt(0));	  rule    =    new    StringLiteral(sub,    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	56	None	replace
91	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  token.length());  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.charAt(0),  token.length());	  rule    =    new    StringLiteral(sub,    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	56	None	replace
92	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  value);  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.charAt(0),  value);	  rule    =    new    StringLiteral(sub,    token.charAt(0));    	non-compiled	[CE]  cannot  find  symbol  value	56	None	replace
93	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  sub.length());  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  sub.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.charAt(0),  sub.length());	  rule    =    new    StringLiteral(sub,    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	56	None	replace
94	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.length()  -  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.length()  -  1);	  Rule[]    rules    =    mRules.get(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	8	None	replace
95	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.length()  -  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  sub.length()  -  1);	  Rule[]    rules    =    mRules.get(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	8	None	replace
96	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.length()  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.length()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.length()  +  1);	  Rule[]    rules    =    mRules.get(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	8	None	replace
97	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  tokenLen,  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  tokenLen,  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  tokenLen,  value);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
98	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    tokenLen);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	83	None	replace
99	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  tokenLen,  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  tokenLen,  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  tokenLen,  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    tokenLen);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	83	None	replace
100	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.length()  -  1);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token.length()  -  1);	  rule    =    new    StringLiteral(sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	54	None	replace
101	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.length()  +  1);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.length()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token.length()  +  1);	  rule    =    new    StringLiteral(sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	54	None	replace
102	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token,  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token,  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token,  value);	  rule    =    new    StringLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  cannot  find  symbol  value	62	None	replace
103	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token,  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token,  mStandard);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token,  mStandard);	  rule    =    new    StringLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  cannot  find  symbol  mStandard	62	None	replace
104	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token,  tokenLen);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token,  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token,  tokenLen);	  rule    =    new    StringLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	62	None	replace
105	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  value,  token);  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  value,  token);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  value,  token);	  rule    =    new    StringLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  cannot  find  symbol  value	62	None	replace
106	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(0));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(0));	  rule    =    new    StringLiteral(sub.charAt(1),    sub.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	73	None	replace
107	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  1).toLowerCase();  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  1).toLowerCase();  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  1).toLowerCase();	  CharacterLiteral    sub    =    token.substring(0,    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	6	None	replace
108	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  2);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  2);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  2);	  CharacterLiteral    sub    =    token.substring(0,    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	6	None	replace
109	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  1).trim();  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  1).trim();  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  1).trim();	  CharacterLiteral    sub    =    token.substring(0,    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	6	None	replace
110	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  sub.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  sub.charAt(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  sub.charAt(1));	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	11	None	replace
111	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(0),  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(0),  token.charAt(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(0),  token.charAt(1));	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	11	None	replace
112	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(2));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(2));	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	11	None	replace
113	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mStandard);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mStandard);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(1),    value);    	non-compiled	[CE]  cannot  find  symbol  mStandard	40	None	replace
114	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  color);  [CE]  cannot  find  symbol  color  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  color);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  color);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(1),    value);    	non-compiled	[CE]  cannot  find  symbol  color	40	None	replace
115	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  size);  [CE]  cannot  find  symbol  size  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  size);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  size);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(1),    value);    	non-compiled	[CE]  cannot  find  symbol  size	40	None	replace
116	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(0));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(0));	  rule    =    new    CharacterLiteral(sub.charAt(1),    sub.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	80	None	replace
117	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length()  -  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token.length()  -  1);	  Rule[]    rules    =    mRules.toArray(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	52	None	replace
118	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length()  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token.length()  +  1);	  Rule[]    rules    =    mRules.toArray(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	52	None	replace
119	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  sub.length()  -  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                          ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  sub.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  sub.length()  -  1);	  Rule[]    rules    =    mRules.toArray(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	52	None	replace
120	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length()  -  2);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length()  -  2);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token.length()  -  2);	  Rule[]    rules    =    mRules.toArray(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	52	None	replace
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule  =  new  StringLiteral(sub.substring(1));	  rule    =    new    StringLiteral(token.substring(1));    	compilable	  [FE]  ComparisonFailure  	49	14	replace
122	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.substring(1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.substring(1));	  rule    =    new    StringLiteral(token.substring(1));    	compilable	  [FE]  ComparisonFailure  	49	14	replace
123	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.substring(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule  =  new  StringLiteral(sub.substring(2));	  rule    =    new    StringLiteral(token.substring(1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	49	26	replace
124	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.substring(2));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.substring(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.substring(2));	  rule    =    new    StringLiteral(token.substring(1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	49	26	replace
125	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.substring(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.substring(1));	  rule    =    new    StringLiteral(token.substring(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	49	None	replace
126	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  mStandard);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  mStandard);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    value);    	non-compiled	[CE]  cannot  find  symbol  mStandard	3	None	replace
127	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  color);  [CE]  cannot  find  symbol  color  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  color);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  color);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    value);    	non-compiled	[CE]  cannot  find  symbol  color	3	None	replace
128	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  size);  [CE]  cannot  find  symbol  size  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  size);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  size);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    value);    	non-compiled	[CE]  cannot  find  symbol  size	3	None	replace
129	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token,  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token,  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token,  value);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  cannot  find  symbol  value	68	None	replace
130	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  value,  token);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  value,  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  value,  token);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  cannot  find  symbol  value	68	None	replace
131	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub,  token);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub,  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub,  token);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	68	None	replace
132	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token,  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token,  mStandard);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token,  mStandard);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  cannot  find  symbol  mStandard	68	None	replace
133	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(2),  token);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(2),  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(2),  token);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	10	None	replace
134	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.charAt(2));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.charAt(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.charAt(2));	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	10	None	replace
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(token.substring(1));	  	compilable	  [FE]  ComparisonFailure  	48	2	add
136	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(token.substring(1));	  	compilable	  [FE]  ComparisonFailure  	48	2	add
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(token.substring(2));	  	compilable	  [FE]  ComparisonFailure  	48	2	add
138	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(2));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(token.substring(2));	  	compilable	  [FE]  ComparisonFailure  	48	2	add
139	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(sub.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(sub.substring(1));	  	compilable	  [FE]  ComparisonFailure  	48	2	add
140	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(sub.substring(1));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(sub.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(sub.substring(1));	  	compilable	  [FE]  ComparisonFailure  	48	2	add
141	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(Token.substring(1));  [CE]  cannot  find  symbol  Token  [FE]          ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(Token.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(Token.substring(1));	  	non-compiled	[CE]  cannot  find  symbol  Token	48	None	add
142	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(3));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(token.substring(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	26	add
143	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(3));  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  rule  =  new  StringLiteral(token.substring(3));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token.substring(1));    rule  =  new  StringLiteral(token.substring(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	26	add
144	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.length  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.length  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.length  +  1);	  Rule[]    rules    =    mRules.get(sub    +    1);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	67	None	replace
145	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  sub  +  1);	  Rule[]    rules    =    mRules.get(sub    +    1);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	67	None	replace
146	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token  +  1);	  Rule[]    rules    =    mRules.get(sub    +    1);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	67	None	replace
147	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
148	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(0));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
149	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
150	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
151	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
152	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
153	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
154	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
155	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
156	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	26	add
157	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.length()  -  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.length()  -  1);	  Rule[]    rules    =    mRules.get(sub.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	71	None	replace
158	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.length()  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.length()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.length()  +  1);	  Rule[]    rules    =    mRules.get(sub.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	71	None	replace
159	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString()  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.toString()  +  1);	  Rule[]    rules    =    mRules.get(sub.toString());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	70	None	replace
160	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  token.length());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.toString(),  token.length());	  Rule[]    rules    =    mRules.get(sub.toString());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	70	None	replace
161	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  token.charAt(0));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.toString(),  token.charAt(0));	  Rule[]    rules    =    mRules.get(sub.toString());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	70	None	replace
162	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  token);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  token);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.toString(),  token);	  Rule[]    rules    =    mRules.get(sub.toString());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	70	None	replace
163	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.length()  -  1);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.length()  -  1);	  rule    =    new    StringLiteral(sub.charAt(0),    sub.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	57	None	replace
164	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.length()  +  1);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.length()  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.length()  +  1);	  rule    =    new    StringLiteral(sub.charAt(0),    sub.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	57	None	replace
165	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(2),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	23	None	replace
166	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(2),  token.charAt(1));	  rule    =    new    CharacterLiteral(sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	23	None	replace
167	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  mStandard);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  mStandard);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    1);    	non-compiled	[CE]  cannot  find  symbol  mStandard	37	None	replace
168	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value,  1);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value,  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value,  1);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    1);    	non-compiled	[CE]  cannot  find  symbol  value	37	None	replace
169	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length()  -  2);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length()  -  2);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  token.length()  -  2);	  CharacterLiteral    sub    =    token.substring(2);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	5	None	replace
170	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(sub.length  -  1);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(sub.length  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(sub.length  -  1);	  CharacterLiteral    sub    =    token.charAt(tokenLen    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	75	None	replace
171	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(i  -  1);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(i  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(i  -  1);	  CharacterLiteral    sub    =    token.charAt(tokenLen    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	75	None	replace
172	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.charAt(1));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  sub.charAt(1));	  Rule[]    rules    =    mRules.get(sub,    token.charAt(0));    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	9	None	replace
173	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.charAt(0));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  sub.charAt(0));	  Rule[]    rules    =    mRules.get(sub,    token.charAt(0));    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	9	None	replace
174	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  sub.length());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  sub.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  sub.length());	  Rule[]    rules    =    mRules.get(sub,    token.charAt(0));    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	9	None	replace
175	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  value);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  value);	  Rule[]    rules    =    mRules.get(sub,    token.charAt(0));    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	9	None	replace
176	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1],  sub);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1],  sub);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[1],  sub);	  Rule[]    rules    =    mRules.toArray(new    Rule[1]);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	13	None	replace
177	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1  +  token.length()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1  +  token.length()  ]);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[1  +  token.length()  ]);	  Rule[]    rules    =    mRules.toArray(new    Rule[1]);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	13	None	replace
178	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1  +  1]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1  +  1]);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[1  +  1]);	  Rule[]    rules    =    mRules.toArray(new    Rule[1]);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	13	None	replace
179	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  tokenLen  +  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  tokenLen  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  tokenLen  +  1);	  Rule[]    rules    =    mRules.toArray(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	51	None	replace
180	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  tokenLen,  value);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  tokenLen,  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  tokenLen,  value);	  Rule[]    rules    =    mRules.toArray(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	51	None	replace
181	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.length);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token.length);	  Rule[]    rules    =    mRules.toArray(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	51	None	replace
182	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                          ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  1);	  Rule[]    rules    =    mRules.toArray(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	51	None	replace
183	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  -  1,  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  -  1,  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  -  1,  token.length());	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	20	None	replace
184	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  +  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  +  1);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	20	None	replace
185	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  +  1,  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  +  1,  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length()  +  1,  token.length());	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	20	None	replace
186	[BUG]  [BUGGY]  rule  =(String)mRules.get(sub,  token);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =(String)mRules.get(sub,  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =(String)mRules.get(sub,  token);	  rule    =(String)mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
187	[BUG]  [BUGGY]  rule  =(Rule)mRules.get(sub);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =(Rule)mRules.get(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =(Rule)mRules.get(sub);	  rule    =(String)mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
188	[BUG]  [BUGGY]  rule  =(String)mRules.get(sub  +  1);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =(String)mRules.get(sub  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =(String)mRules.get(sub  +  1);	  rule    =(String)mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
189	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  sub.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  sub.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  sub.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	84	None	replace
190	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  token.length()  -  1,  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  token.length()  -  1,  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  token.length()  -  1,  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	84	None	replace
191	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  token.length()  -  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  token.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  token.length()  -  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	84	None	replace
192	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length(),  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length(),  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length(),  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.length(),    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	38	None	replace
193	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.length(),  3);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.length(),  3);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.length(),  3);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.length(),    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	38	None	replace
194	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.length(),  2);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.length(),  2);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.length(),  2);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.length(),    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	38	None	replace
195	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.length());  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.length());	  rule    =    new    StringLiteral(sub);    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	44	None	replace
196	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.length()  -  1);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.length()  -  1);	  rule    =    new    StringLiteral(sub);    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	44	None	replace
197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule  =  new  StringLiteral(sub  +  1);	  rule    =    new    StringLiteral(sub);    	compilable	  [FE]  ComparisonFailure  	44	14	replace
198	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub  +  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub  +  1);	  rule    =    new    StringLiteral(sub);    	compilable	  [FE]  ComparisonFailure  	44	14	replace
199	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.length());  break;  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.length());  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.length());  break;	  rule    =    new    StringLiteral(sub);    break;    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	86	None	replace
200	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.length()  -  1);  break;  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.length()  -  1);  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.length()  -  1);  break;	  rule    =    new    StringLiteral(sub);    break;    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	86	None	replace
201	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.length);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.length);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.length);	  Rule[]    rules    =    mRules.get(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	65	None	replace
202	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  value);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  value);	  Rule[]    rules    =    mRules.get(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	65	None	replace
203	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  sub,  tokenLen);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  sub,  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[0],  sub,  tokenLen);	  Rule[]    rules    =    mRules.toArray(new    Rule[0],    sub);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	14	None	replace
204	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  tokenLen);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token,  tokenLen);	  Rule[]    rules    =    mRules.toArray(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	50	None	replace
205	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  value);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token,  value);	  Rule[]    rules    =    mRules.toArray(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	50	None	replace
206	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  sub,  token.length());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  sub,  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  sub,  token.length());	  Rule[]    rules    =    mRules.toArray(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	50	None	replace
207	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token,  1);	  Rule[]    rules    =    mRules.toArray(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	50	None	replace
208	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
209	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
210	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
211	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
212	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
213	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  rule  =  new  StringLiteral(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule    =    new    StringLiteral(sub);    rule  =  new  StringLiteral(sub);	  	compilable	  [FE]  ComparisonFailure  	43	2	add
215	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  rule  =  new  StringLiteral(sub);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  rule  =  new  StringLiteral(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    rule  =  new  StringLiteral(sub);	  	compilable	  [FE]  ComparisonFailure  	43	2	add
216	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	43	None	add
217	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	43	None	add
218	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]          ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	43	None	add
219	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]            ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	43	None	add
220	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.length()  +  1);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.length()  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.length()  +  1);	  rule    =    new    StringLiteral(sub.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	87	None	replace
221	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.length(),  token.length());  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.length(),  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.length(),  token.length());	  rule    =    new    StringLiteral(sub.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	87	None	replace
222	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.length()  +  1,  token.length());  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.length()  +  1,  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.length()  +  1,  token.length());	  rule    =    new    StringLiteral(sub.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	87	None	replace
223	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(1),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(1),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(1),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(1),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	24	None	replace
224	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  sub.length());	  rule    =    new    CharacterLiteral(sub.charAt(1),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	24	None	replace
225	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  sub.charAt(1),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  sub.charAt(1),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  sub.charAt(1),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(1),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	24	None	replace
226	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.charAt(0));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.charAt(0));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.charAt(0));	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	2	None	replace
227	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(1),  token.charAt(0));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(1),  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(1),  token.charAt(0));	  rule    =    new    CharacterLiteral(sub.charAt(1),    token.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	58	None	replace
228	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(tokenLen,  sub,  token.length());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(tokenLen,  sub,  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(tokenLen,  sub,  token.length());	  Rule[]    rules    =    mRules.get(tokenLen,    sub);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	66	None	replace
229	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  +  1]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                        ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  +  1]);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  +  1]);	  Rule[]    rules    =    mRules.toArray(new    Rule[sub.length()    ]);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	53	None	replace
230	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  -  1]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                          ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  -  1]);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  -  1]);	  Rule[]    rules    =    mRules.toArray(new    Rule[sub.length()    ]);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	53	None	replace
231	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(2));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(2));	  rule    =    new    StringLiteral(sub.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	72	None	replace
232	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token);	  rule    =    new    StringLiteral(sub.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	72	None	replace
233	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(2));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(2));	  rule    =    new    StringLiteral(sub.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	72	None	replace
234	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  sub.charAt(0),  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  sub.charAt(0),  token.charAt(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  sub.charAt(0),  token.charAt(1));	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	12	None	replace
235	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(2));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(2));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(2));	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	12	None	replace
236	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  value);  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  value);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  cannot  find  symbol  value	12	None	replace
237	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  mStandard);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  mStandard);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  cannot  find  symbol  mStandard	12	None	replace
238	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub,  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub,  token.charAt(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub,  token.charAt(1));	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	39	None	replace
239	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(1),  sub.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(1),  sub.charAt(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(1),  sub.charAt(1));	  rule    =    new    CharacterLiteral(sub.charAt(1),    sub.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	81	None	replace
240	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  -  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  -  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.length()    -    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	17	None	replace
241	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(0),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(0),  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(0),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
242	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.length()  -  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.length()  -  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
243	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.length()  +  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.length()  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  token.length()  +  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
244	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(sub.length()  -  1);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(sub.length()  -  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(sub.length()  -  1);	  CharacterLiteral    sub    =    token.charAt(tokenLen);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	26	None	replace
245	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(tokenLen  +  1);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(tokenLen  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(tokenLen  +  1);	  CharacterLiteral    sub    =    token.charAt(tokenLen);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	26	None	replace
246	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(i);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(i);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(i);	  CharacterLiteral    sub    =    token.charAt(tokenLen);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	26	None	replace
247	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value.length());  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value.length());	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.length());    	non-compiled	[CE]  cannot  find  symbol  value	16	None	replace
248	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  sub.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  sub.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(token.charAt(0),  sub.length());	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	16	None	replace
249	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  -  1,  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  -  1,  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  -  1,  token.length());	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	16	None	replace
250	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(1),  token.charAt(0));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(1),  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.charAt(1),  token.charAt(0));	  rule    =    new    StringLiteral(sub.charAt(1),    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	55	None	replace
251	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(0));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(0));	  rule    =    new    StringLiteral(sub.charAt(1),    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	55	None	replace
252	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(0));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(0));    Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
253	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.toArray(new  Rule[values.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
254	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
255	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  new  Rule[token.split( "' ")];  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  new  Rule[token.split( "' ")];  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  new  Rule[token.split( "' ")];	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
256	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  tokenLen);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(0),  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.charAt(0),  tokenLen);	  rule    =    new    StringLiteral(sub,    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	56	None	replace
257	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(1),  value);  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token.charAt(1),  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token.charAt(1),  value);	  rule    =    new    StringLiteral(sub,    token.charAt(0));    	non-compiled	[CE]  cannot  find  symbol  value	56	None	replace
258	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(1),  value);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(1),  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.charAt(1),  value);	  Rule[]    rules    =    mRules.get(sub,    token.charAt(0));    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	9	None	replace
259	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  value);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  value);	  Rule[]    rules    =    mRules.toArray(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	50	None	replace
260	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  '''  +  1);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  '''  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(0),  '''  +  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    '''    +    1);    	non-compiled	[CE]  empty  character  literal	42	None	replace
261	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  '''  +  1);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  '''  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  '''  +  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    '''    +    1);    	non-compiled	[CE]  empty  character  literal	42	None	replace
262	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.length()  -  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.length()  -  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
263	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
264	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  sub.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  sub.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  sub.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
265	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
266	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  tokenLen);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.toString(),  tokenLen);	  Rule[]    rules    =    mRules.get(sub.toString());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	70	None	replace
267	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
268	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1));	  rule    =    new    StringLiteral(sub.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	72	None	replace
269	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    Rule[]  rules  =  mRules.toArray(new  Rule[ref.length()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	85	None	add
270	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  3);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  3);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  3);	  CharacterLiteral    sub    =    token.substring(0,    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	6	None	replace
271	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  style);  [CE]  cannot  find  symbol  style  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  style);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  style);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  style	83	None	replace
272	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  size);  [CE]  cannot  find  symbol  size  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  size);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  size);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  size	83	None	replace
273	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  token);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  token);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    token);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	64	None	replace
274	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length())+  1;  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length())+  1;  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  token.length())+  1;	  CharacterLiteral    sub    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	4	None	replace
275	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(1));	  rule    =    new    StringLiteral(sub.charAt(1),    sub.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	73	None	replace
276	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(2),  sub.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(2),  sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(2),  sub.charAt(1));	  rule    =    new    StringLiteral(sub.charAt(1),    sub.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	73	None	replace
277	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(2),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(2),  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(2),  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	10	None	replace
278	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[0]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[0]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    Rule[]  rules  =  mRules.toArray(new  Rule[0]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	43	None	add
279	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  size);  [CE]  cannot  find  symbol  size  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  size);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.charAt(1),  size);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  cannot  find  symbol  size	12	None	replace
280	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mPattern);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mPattern);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mPattern);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(1),    value);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	40	None	replace
281	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mValue);  [CE]  cannot  find  symbol  mValue  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mValue);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  mValue);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(1),    value);    	non-compiled	[CE]  cannot  find  symbol  mValue	40	None	replace
282	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  token.charAt(0));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(2),  token.charAt(0));	  rule    =    new    CharacterLiteral(sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	23	None	replace
283	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.charAt(0));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                      ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token.charAt(0));	  Rule[]    rules    =    mRules.toArray(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	52	None	replace
284	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(1),  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(1),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(1),  value);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.charAt(0));    	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
285	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(1),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(1),  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(1),  tokenLen);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	1	None	replace
286	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(1),  token.charAt(1));	  rule    =    new    CharacterLiteral(sub.charAt(1),    sub.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	80	None	replace
287	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
288	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(1));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(1));    Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(1));	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	27	None	add
289	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  token,  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[0],  token,  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[0],  token,  1);	  Rule[]    rules    =    mRules.toArray(new    Rule[0],    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	15	None	replace
290	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  token.length()  -  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  token.length()  -  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(1),  token.length()  -  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	84	None	replace
291	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  value);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    1);    	non-compiled	[CE]  cannot  find  symbol  value	37	None	replace
292	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  ''');  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  ''');  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  ''');	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    1);    	non-compiled	[CE]  empty  character  literal	37	None	replace
293	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  +  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  +  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.length()  +  1);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	16	None	replace
294	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(2),  value);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(2),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  token.charAt(2),  value);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(2));    	non-compiled	[CE]  cannot  find  symbol  value	41	None	replace
295	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(i),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(1),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	24	None	replace
296	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  token.charAt(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  token.charAt(1));	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	11	None	replace
297	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  Rule  rule  =  new  StringLiteral(token.substring(1));  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token.substring(1));  Rule  rule  =  new  StringLiteral(token.substring(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token.substring(1));    Rule  rule  =  new  StringLiteral(token.substring(1));	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	48	None	add
298	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(2),  token.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(2),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(2),  token.charAt(1));	  rule    =    new    StringLiteral(sub.charAt(1),    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	55	None	replace
299	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
300	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  RuleRule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  RuleRule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    RuleRule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
301	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	33	None	add
302	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1  +  tokenLen]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[1  +  tokenLen]);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[1  +  tokenLen]);	  Rule[]    rules    =    mRules.toArray(new    Rule[1]);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	13	None	replace
303	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    Ruler  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
304	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	31	None	add
305	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  token.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  token.charAt(1));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(token.charAt(0),  token.charAt(1));	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	39	None	replace
306	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  RuleRule  rule  =  new  CharacterLiteral(sub.charAt(2));  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  RuleRule  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    RuleRule  rule  =  new  CharacterLiteral(sub.charAt(2));	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
307	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(2));  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  Ruler  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    Ruler  rule  =  new  CharacterLiteral(sub.charAt(2));	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
308	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  Rule  rule  =  new  CharacterLiteral(sub.charAt(2));  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2));  Rule  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    CharacterLiteral(sub.charAt(2));    Rule  rule  =  new  CharacterLiteral(sub.charAt(2));	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	22	None	add
309	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(tokenLen  -  1  +  1);  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(tokenLen  -  1  +  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(tokenLen  -  1  +  1);	  CharacterLiteral    sub    =    token.charAt(tokenLen    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	75	None	replace
310	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(1),  token.length());  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(1),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  token.charAt(1),  token.length());	  rule    =    new    StringLiteral(sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	54	None	replace
311	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  token);  break;  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  token);  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  token);  break;	  rule    =    new    StringLiteral(sub);    break;    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	86	None	replace
312	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub  +  1);  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	rule  =  new  StringLiteral(sub  +  1);  break;	  rule    =    new    StringLiteral(sub);    break;    	compilable	  [FE]  ComparisonFailure  	86	14	replace
313	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub  +  1);  break;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub  +  1);  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub  +  1);  break;	  rule    =    new    StringLiteral(sub);    break;    	compilable	  [FE]  ComparisonFailure  	86	14	replace
314	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0));  break;  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0));  break;  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0));  break;	  rule    =    new    StringLiteral(sub);    break;    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	86	None	replace
315	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(tokenLen,  sub.length());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(tokenLen,  sub.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(tokenLen,  sub.length());	  Rule[]    rules    =    mRules.get(tokenLen,    sub);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	66	None	replace
316	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(tokenLen,  sub,  1);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(tokenLen,  sub,  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(tokenLen,  sub,  1);	  Rule[]    rules    =    mRules.get(tokenLen,    sub);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	66	None	replace
317	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  value);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  value);	  rule    =    new    StringLiteral(sub.charAt(0),    token);    	non-compiled	[CE]  cannot  find  symbol  value	62	None	replace
318	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(i),  sub.charAt(i),  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    tokenLen);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	82	None	replace
319	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  key.length());  [CE]  cannot  find  symbol  key  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  key.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  key.length());	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.length());    	non-compiled	[CE]  cannot  find  symbol  key	20	None	replace
320	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(1));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.charAt(1));	  Rule[]    rules    =    mRules.get(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	65	None	replace
321	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  0,  tokenLen);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  0,  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  0,  tokenLen);	  Rule[]    rules    =    mRules.toArray(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	51	None	replace
322	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  token.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(1),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(1),  token.charAt(1));	  rule    =    new    StringLiteral(sub.charAt(0),    sub.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	57	None	replace
323	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(3));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(3));  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(3));	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.charAt(1));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	11	None	replace
324	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(0),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(0),  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(0),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	76	None	replace
325	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(token.charAt(0),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.length()    +    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	18	None	replace
326	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  mValue);  [CE]  cannot  find  symbol  mValue  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  mValue);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  mValue);	  rule    =    new    CharacterLiteral(sub.charAt(0),    mStandard);    	non-compiled	[CE]  cannot  find  symbol  mValue	78	None	replace
327	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  mPattern);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  mPattern);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  mPattern);	  rule    =    new    CharacterLiteral(sub.charAt(0),    mStandard);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	78	None	replace
328	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  tokenLen);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  tokenLen);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    token.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	1	None	replace
329	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  ],  token);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  ],  token);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(new  Rule[sub.length()  ],  token);	  Rule[]    rules    =    mRules.toArray(new    Rule[0],    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	15	None	replace
330	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	85	None	add
331	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  break;  Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    break;    Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	85	None	add
332	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.tokenLen());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.tokenLen());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.tokenLen());	  Rule[]    rules    =    mRules.get(sub.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	71	None	replace
333	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  sub.length());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.toString(),  sub.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.toString(),  sub.length());	  Rule[]    rules    =    mRules.get(sub.toString());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	70	None	replace
334	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen);  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen);	  rule    =    new    StringLiteral(sub.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	72	None	replace
335	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.charAt(1));	  rule    =    new    StringLiteral(sub.charAt(0),    sub.charAt(1));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	72	None	replace
336	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(0),  tokenLen);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(0),  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(1),  sub.charAt(0),  tokenLen);	  rule    =    new    CharacterLiteral(sub.charAt(1),    sub.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	80	None	replace
337	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.toString());  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.toString());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.toString());	  Rule[]    rules    =    mRules.get(sub,    token.length());    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	8	None	replace
338	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.length(),  1);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.length(),  1);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.length(),  1);	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.length(),    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	38	None	replace
339	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.length);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.length);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  sub.length);	  Rule[]    rules    =    mRules.get(sub,    tokenLen);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	65	None	replace
340	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  sub.charAt(1));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(2),  sub.charAt(1));	  rule    =    new    CharacterLiteral(sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	23	None	replace
341	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  sub.charAt(0));  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(2),  sub.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(2),  sub.charAt(0));	  rule    =    new    CharacterLiteral(sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	23	None	replace
342	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  mDaylight);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.toArray(sub,  token,  mDaylight);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.toArray(sub,  token,  mDaylight);	  Rule[]    rules    =    mRules.toArray(sub,    token);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	50	None	replace
343	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length()  1);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.substring(0,  token.length()  1);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.substring(0,  token.length()  1);	  CharacterLiteral    sub    =    token.substring(0,    token.length()    -    1);    	non-compiled	[CE]  ')'  expected	4	None	replace
344	[BUG]  [BUGGY]  rule  =(StringRule)mRules.get(sub);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =(StringRule)mRules.get(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =(StringRule)mRules.get(sub);	  rule    =(String)mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
345	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
346	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(3));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(3));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(3));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	26	add
347	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.length());  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.length());  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(1),  token.length());	  rule    =    new    StringLiteral(sub.charAt(0),    token.length());    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	54	None	replace
348	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub,  sub.charAt(1));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub,  sub.charAt(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub,  sub.charAt(1));	  rule    =    new    StringLiteral(sub,    token.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	56	None	replace
349	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
350	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(2));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(2));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(2));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	26	add
351	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.toArray(new  Rule[rules.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
352	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]      ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.toArray(new  Rule[ref.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
353	[BUG]  [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]        ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(token);  Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(token);    Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	46	None	add
354	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  mStandard);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  mStandard);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  mStandard	82	None	replace
355	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  token);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  token);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  token);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    tokenLen);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	82	None	replace
356	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token,  true);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token,  true);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  token,  true);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(1),    token);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	64	None	replace
357	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  token.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  token.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  token.charAt(0),  token.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	84	None	replace
358	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  token.charAt(0),  sub.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(token.charAt(0),  token.charAt(0),  sub.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(token.charAt(0),  token.charAt(0),  sub.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    token.charAt(0),    token.length());    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	84	None	replace
359	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  mStandard);  [CE]  cannot  find  symbol  mStandard  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  mStandard);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  tokenLen,  mStandard);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0),    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  mStandard	83	None	replace
360	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  2);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  2);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  2);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	10	None	replace
361	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  3);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  3);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(0),  3);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(2));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	10	None	replace
362	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  tokenLen);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  tokenLen);  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  token.charAt(0),  tokenLen);	  Rule[]    rules    =    mRules.get(sub,    token.charAt(0));    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	9	None	replace
363	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.length(1));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub,  sub.length(1));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub,  sub.length(1));	  Rule[]    rules    =    mRules.get(sub,    token.charAt(0));    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	9	None	replace
364	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  true);  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  true);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub.charAt(0),  sub.charAt(1),  true);	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.charAt(0));    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	2	None	replace
365	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    Rule  rule  =  new  CharacterLiteral(sub.charAt(1));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	35	None	add
366	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	add	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
367	[BUG]  [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(4));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]          rule    =    new    CharacterLiteral(sub.charAt(1));    rule  =  new  CharacterLiteral(sub.charAt(4));  rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(4));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	                rule        =        new        CharacterLiteral(sub.charAt(1));        rule    =    new    CharacterLiteral(sub.charAt(4));    rule  =  new  CharacterLiteral(sub.charAt(0));  rule  =  new  CharacterLiteral(sub.charAt(4));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	35	26	add
368	[BUG]  [BUGGY]  CharacterLiteral  sub  =  token.charAt(0,  token.length())+  1;  [CE]  variable  sub  is  already  defined  in  method  parsePattern()  [FE]                ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  CharacterLiteral  sub  =  token.charAt(0,  token.length())+  1;  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	CharacterLiteral  sub  =  token.charAt(0,  token.length())+  1;	  CharacterLiteral    sub    =    token.charAt(0,    token.length()    -    1);    	non-compiled	[CE]  variable  sub  is  already  defined  in  method  parsePattern()	74	None	replace
369	[BUG]  [BUGGY]  rule  =  mRules.remove(sub);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  mRules.remove(sub);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  mRules.remove(sub);	  rule    =    mRules.get(sub);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
370	[BUG]  [BUGGY]  Rule[]  rules  =  mRules.get(sub.charAt(0));  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  Rule[]  rules  =  mRules.get(sub.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	Rule[]  rules  =  mRules.get(sub.charAt(0));	  Rule[]    rules    =    mRules.get(sub    +    1);    	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	67	None	replace
371	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(0));  [CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(0));  [BUGGY]      rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  StringLiteral(sub.charAt(0),  sub.charAt(0));	  rule    =    new    StringLiteral(sub.charAt(1),    sub.charAt(0));    	non-compiled	[CE]  constructor  StringLiteral  in  class  StringLiteral  cannot  be  applied  to  given  types;	73	None	replace
372	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  sub.charAt(0),  sub.length());  [CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  sub.charAt(0),  sub.length());  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  sub.charAt(0),  sub.length());	  rule    =    new    CharacterLiteral(sub.charAt(0),    sub.length()    +    1);    	non-compiled	[CE]  constructor  CharacterLiteral  in  class  CharacterLiteral  cannot  be  applied  to  given  types;	21	None	replace
373	[BUG]  [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length(),  value);  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length(),  value);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule  =  new  CharacterLiteral(sub,  token.charAt(0),  sub.length(),  value);	  rule    =    new    CharacterLiteral(sub,    token.charAt(0),    sub.length());    	non-compiled	[CE]  cannot  find  symbol  value	20	None	replace
374	[BUG]  [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);  [CE]  variable  rules  is  already  defined  in  method  parsePattern()  [FE]    ComparisonFailure    [CONTEXT]      case  'Z':  //  time  zone  (value)  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {      [BUGGY]  rule  =  new  StringLiteral(sub);  Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);  [BUGGY]      }  else  {  rule  =  new  StringLiteral(sub);  }  break;  default:  throw  new  IllegalArgumentException(     "Illegal  pattern  component:       "  +  token);  }  rules.add(rule);  }  [CLASS]  FastDatePrinter  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  zone  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java	0.2773500981126146	275	275	2	replace	rule    =    new    StringLiteral(sub);    Rule[]  rules  =  mRules.toArray(new  Rule[references.size()  ]);	  	non-compiled	[CE]  variable  rules  is  already  defined  in  method  parsePattern()	43	None	add
