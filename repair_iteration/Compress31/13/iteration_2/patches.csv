bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (offset  <  start  &&  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  &&  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  &&  end  >  buffer.length)  {	  while    (start    <    offset    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  while  (offset  <  offset  &&  end  >=  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  &&  end  >=  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  &&  end  >=  buffer.length)  {	  while    (start    <    offset    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  while  (start  <  length  &&  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  length  &&  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (start  <  length  &&  end  >  buffer.length)  {	  while    (start    <    offset    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  while  (offset  <  offset  &&  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  &&  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  &&  end  >  buffer.length)  {	  while    (start    <    offset    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
5	[BUG]  [BUGGY]  while  (offset  <  0  ||  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  0  ||  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  0  ||  end  >  buffer.length)  {	  while    (offset    <    start    ||    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
6	[BUG]  [BUGGY]  while(start  <  end  &&  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  &&  buffer[start]  ==  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  &&  buffer[start]  ==  '.')  {	  while(start    <    =    end    &&    buffer[start]    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
7	[BUG]  [BUGGY]  while(offset  <  =  end  &&  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  =  end  &&  buffer[start]  ==  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  =  end  &&  buffer[start]  ==  '.')  {	  while(start    <    =    end    &&    buffer[start]    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
8	[BUG]  [BUGGY]  while(start  <  =  length  &&  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  length  &&  buffer[start]  ==  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  length  &&  buffer[start]  ==  '.')  {	  while(start    <    =    end    &&    buffer[start]    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
9	[BUG]  [BUGGY]  while(start  <  =  end  &&  buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  end  &&  buffer[start]!=  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  end  &&  buffer[start]!=  '.')  {	  while(start    <    =    end    &&    buffer[start]    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
10	[BUG]  [BUGGY]  while(start  <  =  offset  &&  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  offset  &&  buffer[start]  ==  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  offset  &&  buffer[start]  ==  '.')  {	  while(start    <    =    end    &&    buffer[start]    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
11	[BUG]  [BUGGY]  atch(0L)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  atch(0L)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	atch(0L)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
12	[BUG]  [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
13	[BUG]  [BUGGY]  aughtException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsSertionError( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsSertionError( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
15	[BUG]  [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.length.length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.length.length "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsSertionError( "msg.length.length "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
17	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  <  offset)  {	  while    (offset    <    offset    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
18	[BUG]  [BUGGY]  while  (offset  <  offset  &&  end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  &&  end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  &&  end  <  length)  {	  while    (offset    <    offset    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
19	[BUG]  [BUGGY]  while  (offset  <  end  &&  end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  end  <  length)  {	  while    (offset    <    offset    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
20	[BUG]  [BUGGY]  int  start  =  offset  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  int  start  =  offset  +  length  -  1;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	int  start  =  offset  +  length  -  1;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
21	[BUG]  [BUGGY]  int  start  =  offset  +  length  -  2;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  int  start  =  offset  +  length  -  2;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	int  start  =  offset  +  length  -  2;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
22	[BUG]  [BUGGY]  int  start  =  offset  +  length  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  int  start  =  offset  +  length  /  BYTE_MASK;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	int  start  =  offset  +  length  /  BYTE_MASK;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  int  start  =  offset  +  length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  int  start  =  offset  +  length  *  BYTE_MASK;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	int  start  =  offset  +  length  *  BYTE_MASK;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
24	[BUG]  [BUGGY]  int  start  =  offset  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  int  start  =  offset  +  length  +  1;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	int  start  =  offset  +  length  +  1;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  int  start  =  buffer.length  +  offset;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  int  start  =  buffer.length  +  offset;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	int  start  =  buffer.length  +  offset;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
26	[BUG]  [BUGGY]  int  start  =  offset  +  length  *  2;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  int  start  =  offset  +  length  *  2;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	int  start  =  offset  +  length  *  2;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
27	[BUG]  [BUGGY]  while  (offset  <  offset  +  length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  +  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  +  length)  {	  while    (start    <    offset    +    length)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
28	[BUG]  [BUGGY]  while  (offset  <  start  +  length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  +  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  +  length)  {	  while    (start    <    offset    +    length)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
29	[BUG]  [BUGGY]  while  (start  <  offset  +  length  -  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  +  length  -  1)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (start  <  offset  +  length  -  1)  {	  while    (start    <    offset    +    length)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
30	[BUG]  [BUGGY]  while  (offset  <  end  +  length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  +  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  +  length)  {	  while    (start    <    offset    +    length)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
31	[BUG]  [BUGGY]  while(start  <  offset  ||  end  >=  length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  offset  ||  end  >=  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  offset  ||  end  >=  length)  {	  while(start    >=    end)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
32	[BUG]  [BUGGY]  while(offset  <  end  &&  buffer[start]  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  end  &&  buffer[start]  ==  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  end  &&  buffer[start]  ==  'n')  {	  while(start    <    end    &&    buffer[start]    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
33	[BUG]  [BUGGY]  while(start  <  length  &&  buffer[start]  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  buffer[start]  ==  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  buffer[start]  ==  'n')  {	  while(start    <    end    &&    buffer[start]    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
34	[BUG]  [BUGGY]  while(offset  <  end  &&  buffer[start]!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  end  &&  buffer[start]!=  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  end  &&  buffer[start]!=  'n')  {	  while(start    <    end    &&    buffer[start]    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
35	[BUG]  [BUGGY]  while(start  <  length  &&  buffer[start]!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  buffer[start]!=  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  buffer[start]!=  'n')  {	  while(start    <    end    &&    buffer[start]    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
36	[BUG]  [BUGGY]  while(start  <  offset  &&  buffer[start]  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  offset  &&  buffer[start]  ==  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  offset  &&  buffer[start]  ==  'n')  {	  while(start    <    end    &&    buffer[start]    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
37	[BUG]  [BUGGY]  while(start  <  end  &&  start  <  length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  &&  start  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  &&  start  <  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
38	[BUG]  [BUGGY]  while(start  <  length  &&  start  <  =  end)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  start  <  =  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  start  <  =  end)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  while(offset  <  end  &&  start  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  end  &&  start  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  end  &&  start  <  =  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
40	[BUG]  [BUGGY]  while(start  <  end  &&  offset  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  &&  offset  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  &&  offset  <  =  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  while(start  <  =  end  &&  start  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  end  &&  start  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  end  &&  start  <  =  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  while(start  <  end  ||  start  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  ||  start  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  ||  start  <  =  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
43	[BUG]  [BUGGY]  while(start  <  offset  &&  start  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  offset  &&  start  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  offset  &&  start  <  =  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  while  (offset  <  length  &&  offset  <  end)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  offset  <  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  offset  <  end)  {	  while    (offset    <    end    &&    offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  while  (offset  <  start  &&  offset  <  length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  &&  offset  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  &&  offset  <  length)  {	  while    (offset    <    end    &&    offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  while  (offset  <  end  &&  offset  <  length  -  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  offset  <  length  -  1)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  offset  <  length  -  1)  {	  while    (offset    <    end    &&    offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  while  (offset  <  =  end  &&  offset  <  length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  =  end  &&  offset  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  =  end  &&  offset  <  length)  {	  while    (offset    <    end    &&    offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  while  (offset  <  end  ||  offset  <  length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  ||  offset  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  ||  offset  <  length)  {	  while    (offset    <    end    &&    offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  while  (offset  <  end  ||  end  >  length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  ||  end  >  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  ||  end  >  length)  {	  while    (offset    <    end    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
50	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  <  end)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  <  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  <  end)  {	  while    (offset    <    end    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
51	[BUG]  [BUGGY]  while  (offset  <  length  &&  offset  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  offset  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  offset  <  buffer.length)  {	  while    (offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  while  (offset  <  length  &&  buffer[start]  >=  end)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  buffer[start]  >=  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  buffer[start]  >=  end)  {	  while    (offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  while  (offset  <  length  &&  buffer[start]  ==  end)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  buffer[start]  ==  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  buffer[start]  ==  end)  {	  while    (offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  while  (offset  <  length  &&  buffer[start]  >='')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  buffer[start]  >='')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  buffer[start]  >='')  {	  while    (offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  while  (offset  <  length  &&  buffer[start]  ==  start)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  buffer[start]  ==  start)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  buffer[start]  ==  start)  {	  while    (offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  while  (offset  <  length  &&  buffer[start]!=  end)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  buffer[start]!=  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  buffer[start]!=  end)  {	  while    (offset    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  while  (offset  <  length  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  buffer[start]!=  '')  {	  while    (start    <    offset    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  while  (offset  >=  length  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  >=  length  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  >=  length  &&  buffer[start]!=  '')  {	  while    (start    <    offset    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
59	[BUG]  [BUGGY]  while  (offset  >=  offset  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  >=  offset  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  >=  offset  &&  buffer[start]!=  '')  {	  while    (start    <    offset    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
60	[BUG]  [BUGGY]  while  (offset  <  len  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  len  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  len  &&  buffer[start]!=  '')  {	  while    (offset    <    end    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
61	[BUG]  [BUGGY]  while  (offset  >=  end  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  >=  end  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  >=  end  &&  buffer[start]!=  '')  {	  while    (offset    <    end    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
62	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  <  length)  {	  while    (offset    <    length    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
63	[BUG]  [BUGGY]  while  (start  <  length  ||  end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  length  ||  end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (start  <  length  ||  end  <  length)  {	  while    (offset    <    length    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
64	[BUG]  [BUGGY]  while  (offset  <  start  &&  end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  &&  end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  &&  end  <  length)  {	  while    (start    <    offset    &&    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
65	[BUG]  [BUGGY]  while  (start  <  length  &&  end  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  length  &&  end  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (start  <  length  &&  end  <  offset)  {	  while    (start    <    offset    &&    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
66	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  while  (end  <  start  ||  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  while  (end  <  start  ||  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    while  (end  <  start  ||  end  >  buffer.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
67	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[i]  =='')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[i]  =='')  {  start++;  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[i]  =='')  {  start++;  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
68	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[start]  =='')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[start]  =='')  {  start++;  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[start]  =='')  {  start++;  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
69	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  if(buffer[i]  =='')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  if(buffer[i]  =='')  {  start++;  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    for(int  i  =  start;  i  <  end;  ++i)  {  if(buffer[i]  =='')  {  start++;  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
70	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[i]!='')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[i]!='')  {  start++;  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    for(int  i  =  start;  i  <  end;  i++)  {  if(buffer[i]!='')  {  start++;  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
71	[BUG]  [BUGGY]  while  (offset  <  length  ||  end  >  offset)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  ||  end  >  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  ||  end  >  offset)  {	  while    (offset    <    offset    ||    end    >    length)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
72	[BUG]  [BUGGY]  while  (offset  <  start  ||  end  >  length)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  ||  end  >  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  ||  end  >  length)  {	  while    (offset    <    offset    ||    end    >    length)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
73	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  >  offset)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  >  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  >  offset)  {	  while    (offset    <    offset    ||    end    >    length)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
74	[BUG]  [BUGGY]  while  (offset  <  offset  &&  end  >  length)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  &&  end  >  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  &&  end  >  length)  {	  while    (offset    <    offset    ||    end    >    length)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
75	[BUG]  [BUGGY]  while  (offset  <  end  &&  end  >  length)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  end  >  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  end  >  length)  {	  while    (offset    <    offset    ||    end    >    length)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
76	[BUG]  [BUGGY]  while  (length  <  length  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (length  <  length  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (length  <  length  &&  buffer[start]!=  '')  {	  while    (start    <    length    &&    buffer[start]    >='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  offset,  length);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  +  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  0,  length  +  1);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  -  start);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  0,  length  -  start);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  offset);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  offset);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  0,  offset);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  +  2);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  0,  length  +  2);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
83	[BUG]  [BUGGY]  while  (length  <  start  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (length  <  start  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (length  <  start  &&  buffer[start]!=  '')  {	  while    (start    <    length    &&    buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  length);	  System.arraycopy(buffer,    start,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(buffer,  end,  buffer,  start,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  end,  buffer,  start,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  end,  buffer,  start,  length);	  System.arraycopy(buffer,    start,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  end,  length);	  System.arraycopy(buffer,    start,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  while  (offset  <  length  ||  offset  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  ||  offset  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  ||  offset  >  buffer.length)  {	  while    (offset    <    end    ||    offset    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
88	[BUG]  [BUGGY]  while  (offset  <  end  &&  offset  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  offset  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  offset  >  buffer.length)  {	  while    (offset    <    end    ||    offset    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
89	[BUG]  [BUGGY]  while  (offset  <  length  &&  offset  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  offset  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  offset  >  buffer.length)  {	  while    (offset    <    end    ||    offset    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
90	[BUG]  [BUGGY]  while  (offset  <  start  +  length  ||  end  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  +  length  ||  end  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  +  length  ||  end  <  offset)  {	  while    (offset    <    start    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
91	[BUG]  [BUGGY]  while  (offset  <  start  ||  end  >=  length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  ||  end  >=  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  ||  end  >=  length)  {	  while    (offset    <    start    ||    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
92	[BUG]  [BUGGY]  while(start  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
94	[BUG]  [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
95	[BUG]  [BUGGY]  while(offset  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  =  length)  {	  while(start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
96	[BUG]  [BUGGY]  while(length  <  =  start)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(length  <  =  start)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(length  <  =  start)  {	  while(start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
97	[BUG]  [BUGGY]  while(start  <  length  &&  length  <  =  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  length  <  =  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  length  <  =  buffer.length)  {	  while(start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
98	[BUG]  [BUGGY]  while(start  <  =  length  &&  buffer[start]!='')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  length  &&  buffer[start]!='')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  length  &&  buffer[start]!='')  {	  while(start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
99	[BUG]  [BUGGY]  while(start  <  =  length  &&  buffer[start]  >='')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  length  &&  buffer[start]  >='')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  length  &&  buffer[start]  >='')  {	  while(start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
100	[BUG]  [BUGGY]  while(start  <  =  length  &&  buffer[start]  =='')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  length  &&  buffer[start]  =='')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  length  &&  buffer[start]  =='')  {	  while(start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
101	[BUG]  [BUGGY]  while  (offset  >=  length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  >=  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  >=  length)  {	  while    (offset    <    offset)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
102	[BUG]  [BUGGY]  while  (offset  <  length  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  buffer[start]  ==  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  buffer[start]  ==  '')  {	  while    (offset    <    end    &&    buffer[start]    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
103	[BUG]  [BUGGY]  while  (offset  >=  length  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  >=  length  &&  buffer[start]  ==  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  >=  length  &&  buffer[start]  ==  '')  {	  while    (offset    <    end    &&    buffer[start]    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
104	[BUG]  [BUGGY]  while  (offset  >=  end  -  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  >=  end  -  1)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  >=  end  -  1)  {	  while    (offset    >=    end)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  while  (offset  <  length  &&  length  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  length  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  length  <  buffer.length)  {	  while    (start    <    offset    &&    length    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
106	[BUG]  [BUGGY]  while  (offset  <  offset  &&  length  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  &&  length  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  &&  length  <  buffer.length)  {	  while    (start    <    offset    &&    length    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
107	[BUG]  [BUGGY]  while  (offset  <  start  &&  length  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  &&  length  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  &&  length  <  buffer.length)  {	  while    (start    <    offset    &&    length    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
108	[BUG]  [BUGGY]  while  (offset  <  offset  ||  length  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  ||  length  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  ||  length  <  buffer.length)  {	  while    (start    <    offset    &&    length    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
109	[BUG]  [BUGGY]  while  (offset  <  end  &&  length  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  length  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  length  <  buffer.length)  {	  while    (start    <    offset    &&    length    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
110	[BUG]  [BUGGY]  while  (offset  <  end  &&  end  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  end  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  end  <  buffer.length)  {	  while    (offset    <    end    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
111	[BUG]  [BUGGY]  while  (offset  <  end  &&  end  <  =  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  end  <  =  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  end  <  =  buffer.length)  {	  while    (offset    <    end    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
117	[BUG]  [BUGGY]  while  (offset  >=  offset  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  >=  offset  &&  buffer[start]  ==  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  >=  offset  &&  buffer[start]  ==  '')  {	  while    (start    <    offset    &&    buffer[start]    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
118	[BUG]  [BUGGY]  while(start  <  =  offset  &&  end  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  offset  &&  end  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  offset  &&  end  <  buffer.length)  {	  while(start    <    =    end    &&    end    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
119	[BUG]  [BUGGY]  while(start  <  end  &&  end  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  &&  end  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  &&  end  <  buffer.length)  {	  while(start    <    =    end    &&    end    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
120	[BUG]  [BUGGY]  while(offset  <  =  end  &&  end  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  =  end  &&  end  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  =  end  &&  end  <  buffer.length)  {	  while(start    <    =    end    &&    end    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
121	[BUG]  [BUGGY]  while(end  <  =  start  &&  end  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  =  start  &&  end  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  =  start  &&  end  <  buffer.length)  {	  while(start    <    =    end    &&    end    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
122	[BUG]  [BUGGY]  while(start  <  =  length  &&  end  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  length  &&  end  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  length  &&  end  <  buffer.length)  {	  while(start    <    =    end    &&    end    <    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
123	[BUG]  [BUGGY]  while(offset  <  end  &&  buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  end  &&  buffer[start]!=  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  end  &&  buffer[start]!=  '.')  {	  while(start    <    end    &&    buffer[start]!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
124	[BUG]  [BUGGY]  while(start  <  length  &&  buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  buffer[start]!=  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  buffer[start]!=  '.')  {	  while(start    <    end    &&    buffer[start]!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
125	[BUG]  [BUGGY]  while(start  <  offset  &&  buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  offset  &&  buffer[start]!=  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  offset  &&  buffer[start]!=  '.')  {	  while(start    <    end    &&    buffer[start]!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
126	[BUG]  [BUGGY]  while(start  <  end  ||  buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  ||  buffer[start]!=  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  ||  buffer[start]!=  '.')  {	  while(start    <    end    &&    buffer[start]!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
127	[BUG]  [BUGGY]  while  (length  <  start  ||  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (length  <  start  ||  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (length  <  start  ||  end  >  buffer.length)  {	  while    (start    <    length    ||    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
128	[BUG]  [BUGGY]  while  (length  <  length  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (length  <  length  &&  buffer[start]  ==  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (length  <  length  &&  buffer[start]  ==  '')  {	  while    (start    <    length    &&    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
129	[BUG]  [BUGGY]  atch(0L)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  atch(0L)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	atch(0L)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
130	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwInternal();	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
131	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSortedException( " ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsSortedException( " ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsSortedException( " ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
132	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
133	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSurrogate( "msg.invalid.length ");  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsSurrogate( "msg.invalid.length ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsSurrogate( "msg.invalid.length ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
134	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSurrogate( "msg.no.length ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsSurrogate( "msg.no.length ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsSurrogate( "msg.no.length ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
135	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSwitchException( " ");  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsSwitchException( " ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsSwitchException( " ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
136	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  <  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  <  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  <  buffer.length)  {	  while    (offset    <    length    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
137	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  <  =  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  <  =  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  <  =  buffer.length)  {	  while    (offset    <    length    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
138	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  >=  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  >=  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  >=  buffer.length)  {	  while    (offset    <    length    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
139	[BUG]  [BUGGY]  while  (offset  <  length  &&  end  ==  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  end  ==  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  end  ==  buffer.length)  {	  while    (offset    <    length    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
140	[BUG]  [BUGGY]  while  (length  <  start  ||  end  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (length  <  start  ||  end  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (length  <  start  ||  end  <  offset)  {	  while    (start    <    length    ||    end    <    offset)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
141	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  while  (start  <  offset  &&  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  while  (start  <  offset  &&  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    while  (start  <  offset  &&  end  >  buffer.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
142	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length  +  1);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length  +  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  e  =  new  AssertionError(length  +  1);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
143	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length,  buffer[start]);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length,  buffer[start]);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  e  =  new  AssertionError(length,  buffer[start]);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
144	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  t  =  new  AssertionError(length,  buffer[start]);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  t  =  new  AssertionError(length,  buffer[start]);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  t  =  new  AssertionError(length,  buffer[start]);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
145	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  e  =  new  AssertionError(length);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
146	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  byte[]  buffer  =(byte[])buffer.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  byte[]  buffer  =(byte[])buffer.clone();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    byte[]  buffer  =(byte[])buffer.clone();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
147	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  e  =  new  AssertionError(length,  buffer.length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  e  =  new  AssertionError(length,  buffer.length);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
148	[BUG]  [BUGGY]  while  (length  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (length  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (length  <  offset)  {	  while    (offset    <    start)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
149	[BUG]  [BUGGY]  while(start  <  offset  &&  buffer[start]!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  offset  &&  buffer[start]!=  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  offset  &&  buffer[start]!=  'n')  {	  while(start    <    end    &&    buffer[start]!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
150	[BUG]  [BUGGY]  while(start  <  =  end  &&  buffer[start]!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  end  &&  buffer[start]!=  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  end  &&  buffer[start]!=  'n')  {	  while(start    <    end    &&    buffer[start]!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
151	[BUG]  [BUGGY]  while(start  <  end  ||  buffer[start]!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  ||  buffer[start]!=  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  ||  buffer[start]!=  'n')  {	  while(start    <    end    &&    buffer[start]!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
152	[BUG]  [BUGGY]  while(end  <  start)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  start)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  start)  {	  while(end    <    =    start)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
153	[BUG]  [BUGGY]  while(end  <  =  offset)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  =  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  =  offset)  {	  while(end    <    =    start)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
154	[BUG]  [BUGGY]  while(end  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  =  length)  {	  while(end    <    =    start)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
155	[BUG]  [BUGGY]  while(end  <  end)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  end)  {	  while(end    <    =    start)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
156	[BUG]  [BUGGY]  while(end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  length)  {	  while(end    <    =    start)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
157	[BUG]  [BUGGY]  while(start  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
158	[BUG]  [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
159	[BUG]  [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of   "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of   "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of   "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
160	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "Length  of "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  aughtExceptionHandler.throwAsSertionError( "Length  of "+length+ "  must  be  at  least  2 ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	aughtExceptionHandler.throwAsSertionError( "Length  of "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset  +  1,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset  +  1,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  offset  +  1,  length);	  System.arraycopy(buffer,    offset,    buffer,    start    +    1,    length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
162	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start  +  1,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start  +  1,  length  -  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start  +  1,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start    +    1,    length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1,  length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1,  length);	  System.arraycopy(buffer,    offset,    buffer,    start    +    1,    length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start  +  1,  length);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start  +  1,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  start  +  1,  length);	  System.arraycopy(buffer,    offset,    buffer,    start    +    1,    length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start  +  1,  length  -  2);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start  +  1,  length  -  2);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start  +  1,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    start    +    1,    length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
166	[BUG]  [BUGGY]  while  (length  <  offset  ||  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (length  <  offset  ||  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (length  <  offset  ||  end  >  buffer.length)  {	  while    (offset    <    length    ||    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
167	[BUG]  [BUGGY]  while(offset  ==  end)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  ==  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  ==  end)  {	  while(offset    <    =    end)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  while(offset!=  end)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset!=  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset!=  end)  {	  while(offset    <    =    end)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
169	[BUG]  [BUGGY]  while  (start  <  end  ||  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  end  ||  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (start  <  end  ||  buffer[start]!=  '')  {	  while    (start    <    end    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
170	[BUG]  [BUGGY]  while  (offset  <  start  ||  offset  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  ||  offset  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  ||  offset  >  buffer.length)  {	  while    (end    <    start    ||    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
171	[BUG]  [BUGGY]  while  (end  <  offset  ||  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  offset  ||  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (end  <  offset  ||  end  >  buffer.length)  {	  while    (end    <    start    ||    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
172	[BUG]  [BUGGY]  while  (end  <  buffer.length  ||  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  buffer.length  ||  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (end  <  buffer.length  ||  end  >  buffer.length)  {	  while    (end    <    start    ||    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
173	[BUG]  [BUGGY]  while(start  <  length  &&  end  <  end)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  end  <  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  end  <  end)  {	  while(start    <    end    &&    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
174	[BUG]  [BUGGY]  while(start  <  end  &&  end  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  &&  end  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  &&  end  <  offset)  {	  while(start    <    end    &&    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
175	[BUG]  [BUGGY]  while(start  <  =  end  &&  end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  end  &&  end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  end  &&  end  <  length)  {	  while(start    <    end    &&    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
176	[BUG]  [BUGGY]  while(end  <  start  &&  end  <  length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  start  &&  end  <  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  start  &&  end  <  length)  {	  while(start    <    end    &&    end    <    length)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
177	[BUG]  [BUGGY]  while  (offset  <  end  &&  end  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  end  &&  end  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  end  &&  end  <  offset)  {	  while    (offset    <    length    ||    end    <    offset)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
178	[BUG]  [BUGGY]  while  (offset  <  start  ||  end  <  offset)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  ||  end  <  offset)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  ||  end  <  offset)  {	  while    (offset    <    length    ||    end    <    offset)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
179	[BUG]  [BUGGY]  while  (offset  <  length  ||  length  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  ||  length  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  ||  length  >  buffer.length)  {	  while    (start    <    offset    ||    length    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
180	[BUG]  [BUGGY]  while  (offset  <  length  &&  length  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  length  &&  length  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  length  &&  length  >  buffer.length)  {	  while    (start    <    offset    ||    length    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
181	[BUG]  [BUGGY]  while  (offset  <  offset  ||  length  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  ||  length  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  ||  length  >  buffer.length)  {	  while    (start    <    offset    ||    length    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
182	[BUG]  [BUGGY]  while  (offset  <  start  ||  length  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  ||  length  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  ||  length  >  buffer.length)  {	  while    (start    <    offset    ||    length    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
183	[BUG]  [BUGGY]  while  (start  <  offset  &&  length  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  length  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (start  <  offset  &&  length  >  buffer.length)  {	  while    (start    <    offset    ||    length    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
184	[BUG]  [BUGGY]  while  (offset  <  offset  &&  length  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  &&  length  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  &&  length  >  buffer.length)  {	  while    (start    <    offset    ||    length    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
185	[BUG]  [BUGGY]  while(offset  <  =  end  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  =  end  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  =  end  &&  buffer[start]!=  '')  {	  while(start    <    =    end    &&    buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
186	[BUG]  [BUGGY]  while(end  <  =  end  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  =  end  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  =  end  &&  buffer[start]!=  '')  {	  while(start    <    =    end    &&    buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
187	[BUG]  [BUGGY]  while(start  <  =  offset  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  offset  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  offset  &&  buffer[start]!=  '')  {	  while(start    <    =    end    &&    buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
188	[BUG]  [BUGGY]  while  (end  <  start  &&  end  >  buffer.length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  &&  end  >  buffer.length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (end  <  start  &&  end  >  buffer.length)  {	  while    (start    <    end    &&    end    >    buffer.length)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
189	[BUG]  [BUGGY]  while(offset  <  end  &&  end  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  end  &&  end  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  end  &&  end  <  =  length)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
190	[BUG]  [BUGGY]  while(start  <  length  &&  end  <  =  end)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  end  <  =  end)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  end  <  =  end)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
191	[BUG]  [BUGGY]  while(end  <  start  &&  end  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  start  &&  end  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  start  &&  end  <  =  length)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
192	[BUG]  [BUGGY]  while(start  <  =  end  &&  end  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  end  &&  end  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  end  &&  end  <  =  length)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
193	[BUG]  [BUGGY]  while(start  <  offset  &&  end  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  offset  &&  end  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  offset  &&  end  <  =  length)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
194	[BUG]  [BUGGY]  while(length  <  end  &&  end  <  =  start)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(length  <  end  &&  end  <  =  start)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(length  <  end  &&  end  <  =  start)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
195	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length);	  System.arraycopy(buffer,    0,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
196	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  offset,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  start,  offset,  length);	  System.arraycopy(buffer,    0,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
197	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  start,  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  start,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  start,  length);	  System.arraycopy(buffer,    0,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
198	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length  +  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    0,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
199	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length  -  1);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    0,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
200	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length,  length);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  start,  length,  length);	  System.arraycopy(buffer,    0,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
201	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length  +  2);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  0,  buffer,  start,  length  +  2);	  System.arraycopy(buffer,    0,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
202	[BUG]  [BUGGY]  while(offset  <  =  end  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  =  end  &&  buffer[start]  ==  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  =  end  &&  buffer[start]  ==  '')  {	  while(start    <    =    end    &&    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
203	[BUG]  [BUGGY]  while(start  <  =  offset  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  =  offset  &&  buffer[start]  ==  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  =  offset  &&  buffer[start]  ==  '')  {	  while(start    <    =    end    &&    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
204	[BUG]  [BUGGY]  while(start  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
205	[BUG]  [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
206	[BUG]  [BUGGY]  while(offset  <  =  start)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  =  start)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  =  start)  {	  while(end    <    =    start)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
207	[BUG]  [BUGGY]  nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
208	[BUG]  [BUGGY]  nisipToInt(offset)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  nisipToInt(offset)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	nisipToInt(offset)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
209	[BUG]  [BUGGY]  nisipToInt(offset)  ==  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  nisipToInt(offset)  ==  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	nisipToInt(offset)  ==  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
210	[BUG]  [BUGGY]  nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
211	[BUG]  [BUGGY]  safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
212	[BUG]  [BUGGY]  nisipToInt(offset)  ==  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  nisipToInt(offset)  ==  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	nisipToInt(offset)  ==  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
213	[BUG]  [BUGGY]  nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	nisipToInt(offset)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
214	[BUG]  [BUGGY]  nisipToInt(offset)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  nisipToInt(offset)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	nisipToInt(offset)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
215	[BUG]  [BUGGY]  safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
216	[BUG]  [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
217	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
218	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  buffer.length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  parent  ==  null  &&  parent  ==  buffer.length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	parent  ==  null  &&  parent  ==  buffer.length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
219	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ ",  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ ",  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ ",  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
220	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	safeThan  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length   "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
221	[BUG]  [BUGGY]  while(start  <  length  &&  end  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  end  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  end  <  =  length)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
222	[BUG]  [BUGGY]  while(start  <  length  &&  end  <  =  start)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  length  &&  end  <  =  start)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  length  &&  end  <  =  start)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
223	[BUG]  [BUGGY]  while(start  <  start  &&  end  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  start  &&  end  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  start  &&  end  <  =  length)  {	  while(start    <    end    &&    end    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
224	[BUG]  [BUGGY]  while(start  >=  length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  >=  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  >=  length)  {	  while(start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
225	[BUG]  [BUGGY]  while(offset  <  end  &&  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(offset  <  end  &&  buffer[start]  ==  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(offset  <  end  &&  buffer[start]  ==  '.')  {	  while(start    <    =    end    &&    buffer[start]    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
226	[BUG]  [BUGGY]  while(end  <  =  end  &&  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  =  end  &&  buffer[start]  ==  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  =  end  &&  buffer[start]  ==  '.')  {	  while(start    <    =    end    &&    buffer[start]    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
227	[BUG]  [BUGGY]  while  (offset  <  offset  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  offset  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  offset  &&  buffer[start]!=  '')  {	  while    (start    <    offset    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
228	[BUG]  [BUGGY]  while  (offset  <  start  &&  buffer[start]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (offset  <  start  &&  buffer[start]!=  '')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while  (offset  <  start  &&  buffer[start]!=  '')  {	  while    (start    <    offset    &&    buffer[start]!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
229	[BUG]  [BUGGY]  safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	safeGet(buffer,  start,  length))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
230	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  start);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
231	[BUG]  [BUGGY]  while(start  >=  end  &&  buffer[start]!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  >=  end  &&  buffer[start]!=  'n')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  >=  end  &&  buffer[start]!=  'n')  {	  while(start    <    end    &&    buffer[start]!=    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset+length  +  1,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset+length  +  1,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  start,  buffer,  offset+length  +  1,  length);	  System.arraycopy(buffer,    offset,    buffer,    start    +    1,    length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(buffer,  end,  buffer,  start  +  1,  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  System.arraycopy(buffer,  end,  buffer,  start  +  1,  length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	System.arraycopy(buffer,  end,  buffer,  start  +  1,  length);	  System.arraycopy(buffer,    offset,    buffer,    start    +    1,    length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
234	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <?>  start  =  new  AssertionError(length);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <?>  start  =  new  AssertionError(length);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  <?>  start  =  new  AssertionError(length);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
235	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.currentTimeMillis();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  <?>  start  =  System.currentTimeMillis();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
236	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  getCurrentToken();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  getCurrentToken();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  <  Object>  start  =  getCurrentToken();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
237	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  System.currentTimeMillis();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  <  Object>  start  =  System.currentTimeMillis();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
238	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  int  end  =  buffer.length;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  int  end  =  buffer.length;  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    int  end  =  buffer.length;	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
239	[BUG]  [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.identityHashCode(buffer);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (start  <  offset  &&  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.identityHashCode(buffer);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (start    <    offset    &&    end    >    buffer.length)    {    AssertionError  <?>  start  =  System.identityHashCode(buffer);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
240	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.currentTimeMillis();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    AssertionError  <?>  start  =  System.currentTimeMillis();	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
241	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  getCurrentToken();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  getCurrentToken();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    AssertionError  <  Object>  start  =  getCurrentToken();	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
242	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  getCurrentToken();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  getCurrentToken();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    AssertionError  <?>  start  =  getCurrentToken();	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
243	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.err.println(buffer[start]);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  System.err.println(buffer[start]);  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    AssertionError  <?>  start  =  System.err.println(buffer[start]);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
244	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  getCurrentSegment();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <?>  start  =  getCurrentSegment();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    AssertionError  <?>  start  =  getCurrentSegment();	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
245	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  getOffset();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while  (end  <  start  ||  end  >  buffer.length)  {  AssertionError  <  Object>  start  =  getOffset();  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while    (end    <    start    ||    end    >    buffer.length)    {    AssertionError  <  Object>  start  =  getOffset();	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
246	[BUG]  [BUGGY]  while(start  >=  end  &&  buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  >=  end  &&  buffer[start]!=  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  >=  end  &&  buffer[start]!=  '.')  {	  while(start    <    end    &&    buffer[start]!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
247	[BUG]  [BUGGY]  while(end  <  end  &&  buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(end  <  end  &&  buffer[start]!=  '.')  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(end  <  end  &&  buffer[start]!=  '.')  {	  while(start    <    end    &&    buffer[start]!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
248	[BUG]  [BUGGY]  while(start  <  end  &&  start  >=  length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  end  &&  start  >=  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  end  &&  start  >=  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
249	[BUG]  [BUGGY]  while(start  <  start  &&  start  <  =  length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }        [BUGGY]  while(start  <  start  &&  start  <  =  length)  {  [BUGGY]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }      [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	115	115	2	replace	while(start  <  start  &&  start  <  =  length)  {	  while(start    <    end    &&    start    <    =    length)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
