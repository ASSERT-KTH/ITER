1	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ");	break;  	plausible		1	0
3	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  can  not  be  deprecated. ");	break;  	plausible		1	0
3	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  is  null. ");	break;  	plausible		1	0
3	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  can  not  be  null. ");	break;  	plausible		1	0
3	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	  	break;  	plausible		1	0
3	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  currentByte  + "' ");	break;  	plausible		1	0
4	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  currentByte  + "'. ");	break;  	plausible		1	0
4	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  currentByte  + "'  for  ' "  +  buffer.length  + "' ");	break;  	plausible		1	0
4	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  currentByte  + "'  or  '0' ");	break;  	plausible		1	0
5	[BUG]  [BUGGY]  break;  [FE]  AssertionError  [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {  [BUGGY]  break;  [BUGGY]  }    if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII    }    [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long    final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer    	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  currentByte  + "] ");	break;  	plausible		1	0
