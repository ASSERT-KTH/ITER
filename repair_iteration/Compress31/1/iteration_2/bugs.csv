bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  continue;  continue;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  continue;  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    continue;	  	non-compiled	[CE]  unreachable  statement	1	None	add
2	[BUG]  [BUGGY]  continue;  result  =(result  <  <  3)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  result  =(result  <  <  3)+(currentByte  -  '0');  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    result  =(result  <  <  3)+(currentByte  -  '0');	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
3	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
4	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  buffer[start];  [CE]  variable  currentByte  is  already  defined  in  method  parseOctal(byte[],int,int)  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  final  byte  currentByte  =  buffer[start];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    final  byte  currentByte  =  buffer[start];	  	non-compiled	[CE]  variable  currentByte  is  already  defined  in  method  parseOctal(byte[],int,int)	1	None	add
5	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
7	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte));  [CE]  byte  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte));  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  byte  cannot  be  dereferenced	3	None	replace
10	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.equals(currentByte));  [CE]  byte  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.equals(currentByte));  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.equals(currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  byte  cannot  be  dereferenced	3	None	replace
11	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte));  [CE]  unclosed  string  literal  [FE]              AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte));  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
12	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer));  [CE]  no  suitable  method  found  for  equals(byte,byte)  [FE]                AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer));  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  no  suitable  method  found  for  equals(byte,byte)	3	None	replace
13	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [CE]  byte  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  byte  cannot  be  dereferenced	4	None	replace
14	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");  [CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context	4	None	replace
15	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [CE]  byte  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  byte  cannot  be  dereferenced	4	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + "] ");  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + "] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0');	  continue;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  -  '7');  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  -  '7');	  continue;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  continue;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ");  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ");	  continue;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ");  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ");	  continue;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  end  [ "  +  start  + "] ");  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  end  [ "  +  start  + "] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  end  [ "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  currentByte));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  currentByte));  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte,  currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte),  currentByte);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte),  currentByte);  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte),  currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)+ ", ");  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)+ ", ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte)+ ", ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte  =='')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]    AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte  =='')  {  trailer  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(trailer  >=  end  &&  currentByte  =='')  {  trailer  =  buffer[end  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
30	[BUG]  [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte!='')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]      AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte!='')  {  trailer  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(trailer  >=  end  &&  currentByte!='')  {  trailer  =  buffer[end  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
31	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
32	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
33	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  final  byte  currentByte  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    final  byte  currentByte  =  buffer[end  -  1];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
34	[BUG]  [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte  =='')  {  trailer  =  buffer[start  -  1];  [CE]  empty  character  literal  [FE]              AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte  =='')  {  trailer  =  buffer[start  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(trailer  >=  end  &&  currentByte  =='')  {  trailer  =  buffer[start  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
35	[BUG]  [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  =='')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]    AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  =='')  {  trailer  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(trailer  <  end  &&  currentByte  =='')  {  trailer  =  buffer[end  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
36	[BUG]  [BUGGY]  continue;  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]      AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  empty  character  literal	1	None	add
37	[BUG]  [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  >='')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]        AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  >='')  {  trailer  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(trailer  <  end  &&  currentByte  >='')  {  trailer  =  buffer[end  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
38	[BUG]  [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  =='')  {  trailer  =  buffer[start  -  1];  [CE]  empty  character  literal  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  =='')  {  trailer  =  buffer[start  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(trailer  <  end  &&  currentByte  =='')  {  trailer  =  buffer[start  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
39	[BUG]  [BUGGY]  continue;  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
40	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]              AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
41	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];  [CE]  empty  character  literal  [FE]                AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;    while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];	  	non-compiled	[CE]  empty  character  literal	1	None	add
42	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( " ");	  continue;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");	  continue;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte);  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").equals(currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.equals(trailer));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.equals(trailer));  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.equals(trailer));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [BUGGY]    }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
